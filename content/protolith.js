/* jshint node: true */
"use strict";

var fs = require("fs");
var shell = require('child_process');

var read_file = function(){
	fs.readFile("./index.html", on_read_file);
};

var on_read_file = function(err, data){
	if( err ){
		console.error("ERROR "+err);
		return;
	}

	parse_file( data.toString() );
};

var parse_file = function( file ){
	var lines = file.split("\n");
	var scriptlinestart = '<script type="text/javascript" src="';
	var scriptlineend = '"></script>';

	var _is_script = function(line){
		return line.search( scriptlinestart ) === 0;
	};

	var _get_url = function(line){
		if( _is_script(line) ){
			return line.slice( 
				scriptlinestart.length, line.length - scriptlineend.length - 1
			);
		} else {
			return "";
		}
	};

	var urls = [];
	for( var i in lines ){
		urls.push( _get_url( lines[i] ) );
	}

	jshintfiles( urls.filter( function(url){ return url.length > 0; } ) );
};

var jshintfiles = function( urls ){
	var urls = urls.slice(0);
	var ctr = 0;

	console.log("LINT", urls);

	var _nextfile = function(){
		var url = urls.shift();
		if( url ){
			ctr++;
			_jshintfile( url );
		} else {
			clearTimeout( timeoutid );
			console.log("Done linting", ctr, "files.");
		}
	};

	var _jshintfile = function(url){
		console.log( url );
		shell.execFile(
			"makejs.bat", 
			[url], _onjshintfile
		);
	};

	var _onjshintfile = function(error, stdout, stderr){
	    console.log(stdout);
	    if( stderr ){
	    	console.log(stderr);
	    }
	    if( error !== null ){
	    	console.log('exec error: ' + error);
	    }
	};

	_nextfile();
};

var timeoutid = setTimeout(function(){}, 10000);
read_file(); 
/* jshint browser: true */
/* global window */

/* jshint ignore:start */
var oref;
window.keybutton = function(ev){
    oref.handleKeyDown(ev);
};

window.keybuttonup = function(ev){
    oref.handleKeyUp(ev);
};
/* jshint ignore:end */

(function(){
"use strict";
var app = window.app = {
	cutscenes:{},
	display:{},
	game:{},
	maps:{},
	save:{},
	sound:{},
	ui:{
		overlays:{},
		modals:{},
	},
	world:{
		actor:{},
		mode:{},
	}
};

Function.prototype.inherits = function( parentClassOrObject ){ 
	if( parentClassOrObject.constructor == Function ){ 
		//Normal Inheritance 
		/* jshint ignore:start */
		this.prototype = new parentClassOrObject;
		/* jshint ignore:end */
		this.prototype.constructor = this;
		this.prototype.parent = parentClassOrObject.prototype;
	} else { 
		//Pure Virtual Inheritance 
		this.prototype = parentClassOrObject;
		this.prototype.constructor = this;
		this.prototype.parent = parentClassOrObject;
	} 
	return this;
} ;

app.extend = function(superType) {
    var IntermediateConstructor = function() {};
    IntermediateConstructor.prototype = superType.prototype;
    return new IntermediateConstructor();
};

app.random_id = function(len){
    var text = "";
    var possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghigklmnopqrstufwxyz1234567890";
    for( var i = 0; i < len; i++){
        text += possible.charAt(Math.floor(Math.random() * possible.length));
    }
    return text;
};

app.normalize = function(x, A, B, C, D){
    return C + (x-A)*(D-C)/(B-A);
};

app.inArr = function(x, arr){
    for( var i in arr ){
        if( x == arr[i]){
            return true;
        }
    }
    return false;
};

})(); 
//chat.js by Benjamin Brown

chat = new chat();
function chat(){
	var magus = this;

	magus.init = init;
	magus.all_chat = all_chat;
	magus.toggle_chat = toggle_chat;
	magus.toggle_debug = toggle_debug;

	//chat ui elements
	magus.ui_actxt;//ac = all chat
	magus.ui_aclog;

	function init(){
		events();
	}

	//private for initialization only
	function events(){
		$("#all_chat_text").keypress(function(e){
			if(e.which == 13){
				all_chat( $(this).val())
				$(this).val("");
			}
		})		
	}

	function all_chat(msg){
		var div = "<b>"+ userLogin+"</b>: "+msg;
		log( div, "all_chat");
	}

	function toggle_chat(){
		var chbox = $("#ac_container");

		if( chbox.is(":visible") ){
			chbox.hide();
		} else {
			chbox.show();
		}
	}

	function toggle_debug(){
		var chbox = $("#debug_container");

		if( chbox.is(":visible") ){
			chbox.hide();
		} else {
			chbox.show();
		}
	}
} 
/* jshint browser: true */
/* global app */

(function(){
"use strict";

app.cutscenes = {};

var CutsceneLoader = app.cutscenes.CutsceneLoader = function(display){
	this.display = display;
	this.loaded = 0;
	this.loading = 0;
	
	this.cutscenes = [
		"test"
	];
};

CutsceneLoader.prototype.is_ready = function(){
	var isready = (this.loaded === this.loading && this.loaded !== 0);
	return {is_ready:isready,max:this.loading,curr:this.loaded};
};

CutsceneLoader.prototype.load_cutscene_meta = function(){
	var head = document.getElementsByTagName('head')[0];
	var scenes = this.cutscenes;
	for( var i in scenes ){
		this.loading++;
		var script= document.createElement('script');
		script.type= 'text/javascript';
		script.onload = function(){
			this.loaded++;
			if( this.loaded===this.loading ){
				this.load_cutscene_pics();
				this.load_cutscene_listfiles();
			}
		}.bind(this);
		script.src= './cutscenes/'+scenes[i]+"/"+scenes[i]+".js";
		head.appendChild(script);
	}
};

CutsceneLoader.prototype.load_cutscene_pics = function(){
	for( var i = 0; i < this.cutscenes.length; ++i ){
		var scene = window["CUTSCENE"+this.cutscenes[i]];
		var urlbegin = "./cutscenes/"+scene.name+"/layer";
		for( var j = 0; j < scene.numframes; j++ ){
			var url = urlbegin+(j+2)+".png";
			this.display.load_picture("CUTS"+scene.name+j,url);
		}
	}
};

CutsceneLoader.prototype.load_cutscene_listfiles = function(){
	var read_file = function(file, scene){
		this.loading++;
	    var rawFile = new XMLHttpRequest();
	    rawFile.open("GET", file, true);
	    rawFile.onreadystatechange = function (){
	        if(rawFile.readyState === 4){
                var t = rawFile.responseText;
				t = t.substr(t.search("{")).replace(/=/g,":")
					.replace(/( -- )[a-zA-z0-9 ]*/g,"")
					.replace(/pos/g,"\"pos\"")
					.replace(/size/g,"\"size\"")
					.replace(/\s/g,"")
					.replace(/\{([0-9]+),([0-9]+)\}/g, "[\"$1\",\"$2\"]");         
                scene.meta = JSON.parse(t.slice(0, t.length-2)+"}");
                this.loaded++;
	        }
	    }.bind(this);
	    rawFile.send(null);
	}.bind(this);

	for( var i = 0; i < this.cutscenes.length; ++i ){
		var scene = window["CUTSCENE"+this.cutscenes[i]];
		var url = "./cutscenes/"+scene.name+"/list.txt";
		read_file(url, scene);
	}
};

})(); 
var CUTSCENEtest = {
	name:"test",
	numframes:10,
	frames:{
		0:{
			transition:"fade",
			text:"\"Hey you!\" The man on the right seems rather angry. \"You didn't pay for you dinner back there!\""
		},
		1:{
			transition:"anim",
			fs:3,
			toframe:8,
			text:"\"Come on man, chill out,\" says the man on the left. \"There's no need to be so upset, I just forgot.\""
		},
		8:{
			transition:"fade",
			text:"\"*POW*\""
		},
		9:{
			transition:"fade",
			text:"\"Don't you even think about coming around these parts again.\""
		},
	}
} 
/* jshint browser: true */
/* global app, console, window */

(function(){
"use strict";

var Sprite = function(img_name, X, Y, W, H){
    this.x = X;
    this.y = Y;
    this.w = W;
    this.h = H;
    this.name = img_name;
};

var jsonjoin = function( obj, val ){
    var ret = "";
    for( var i in obj ){
        ret += obj[i]+val;
    }
    return ret.slice( 0, ret.length - val.length );
};

var Display = app.display.Display = function(canvas_name){

    this.bxSize = 252;
    this.bySize = 288;
    this.boffset = 110;

    this.dimx = 472;
    this.dimy = 288;

    this.id = canvas_name;
    this.canvas = document.createElement("canvas");
    this.canvas.width = this.dimx;
    this.canvas.height = this.dimy; 
    this.canvas.retinaResolutionEnabled = false;
    this.canvas.id = this.id;
    this.context = this.canvas.getContext("2d");
    this.canvas.onselectstart = function () { return false; };
    var wrap = document.getElementById("canvas_wrapper");
    if( wrap ){
        wrap.appendChild(this.canvas);
    } else {
        document.body.appendChild( this.canvas );
    }

    this.OnResizeCalled = function(){
        this.canvas.width = window.innerWidth;
        this.canvas.height = window.innerHeight;
        this.dimx = window.innerWidth;
        this.dimy = window.innerHeight;

        for( var i in this.textimages ){
            delete this.sprites[ this.textimages[i] ];
            delete this.images[ this.textimages[i] ];
        }

        this.textimages = [];

        if( window.oref ){
            window.oref.remake_ui();
        } 
    }.bind(this);

    this.OnResizeCalled();
    window.addEventListener("resize", this.OnResizeCalled, false);

    this.canvas.style.position = "absolute";
    this.canvas.style.top = "0px";
    this.canvas.style.left = "0px";

    this.images = {};
    this.textimages = [];

    this.sprites = {};
    this.num_sprites = 0;
    this.loaded_sprites = 0;

    this.spritesheets = {};
    this.num_spritesheets = 0;
    this.loaded_spritesheets = 0;

    this.anims = [
	    "male_lancer", 
	    "male_archer", 
	    "male_legionaire", 
	    "female_legionaire", 
	    "female_archer", 
	    "female_lancer", 
	    "female_magician", 
	    "male_magician"
    ];

    this.init();
};

Display.prototype.resize_canvas = function(x, y){
    this.canvas.width = x;
    this.canvas.height = y;
};

Display.prototype.get_dims = function(){
    var canv_wid = parseInt(this.canvas.width);
    var canv_hgt = parseInt(this.canvas.height);
    var css_wid = parseFloat(this.canvas.style.width);
    var css_hgt = parseFloat(this.canvas.style.height);

    if( isNaN(css_wid) ){ css_wid = canv_wid; }
    if( isNaN(css_hgt) ){ css_hgt = canv_hgt; }

    return {canv_wid:canv_wid, canv_hgt:canv_hgt, css_wid:css_wid, css_hgt:css_hgt};
};

Display.prototype.load_terrain = function(num_tiles){
    var x = 0;
    var y = 0;

    for( var i = 0; i < num_tiles; i++){
        this.load_sprite_from_spritesheet("tile_"+(i+1), "terrain1", x, y, 28, 32);
        x++;
        if( x == 11 ){
            x = 0;
            y++;
        }
    }

    this.load_sprite_from_spritesheet("tile_"+(i+1), "terrain1", x, y, 28, 32);
};

Display.prototype.is_ready = function(){

    if( this.num_sprites == this.loaded_sprites && this.num_spritesheets == this.loaded_spritesheets ){
        
        if( this.avg_loaded ){
            return {is_ready:true, max: this.loaded_sprites+this.num_spritesheets, curr: this.loaded_sprites+this.loaded_spritesheets};
        } else {
            for( var i in this.sprites ){
                var spr = this.sprites[i];
                this.sprites[i].avg = this.calc_avg_rgb( this.images[spr.name], spr.x, spr.y, spr.w, spr.h );
            }
            this.avg_loaded = true;
            return {is_ready:true, max: this.loaded_sprites+this.num_spritesheets, curr: this.loaded_sprites+this.loaded_spritesheets};
        }
    } else {
        //console.log(this.num_sprites, this.loaded_sprites, this.num_spritesheets, this.loaded_spritesheets);
        return {is_ready:false, max: this.loaded_sprites+this.num_spritesheets, curr: this.loaded_sprites+this.loaded_spritesheets};
    }
};

//Clear the screen a color 'color'
Display.prototype.clear = function(color){
    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);
    this.context.fillStyle = color;
    this.context.lineWidth = 0;        
    this.context.fill();        
};

Display.prototype.clear_area = function(x, y, w, h){
    this.context.clearRect(x, y, w, h);
};

Display.prototype.draw_rect_sprite = function( x, y, w, h, col ){
	var sprite = "";
	if( col === app.ui.CleanUIElem.prototype.VERYDARKCOLOR ){
		sprite = "cleanverydarkcolor";
	} else if( col === app.ui.CleanUIElem.prototype.NEUTRALCOLOR )  {
		sprite = "cleanneutralcolor";
	} else if( col === app.ui.CleanUIElem.prototype.LIGHTCOLOR )  {
		sprite = "cleanlightcolor";
	} else if( col === "lightneutral" )  {
		sprite = "cleangradientlightneutral";
	} else if( col === app.ui.CleanUIElem.prototype.SELECTEDCOLOR )  {
		sprite = "cleanselectedcolor";
	} else {
		return;
	}

	this.draw_sprite_scaled( sprite, x, y, w, h );
};

//Draw a rectangle with width and height w, h at position (x,y)
Display.prototype.draw = function(x, y, w, h, col){
    if( col ) {
        this.context.fillStyle = col;
    } else {
        this.context.fillStyle = "black";
    }
    this.context.lineWidth = 1;        
    this.context.fillRect(x,y,w,h);   
};

Display.prototype.draw_rect_params = function( params ){
    this.context.beginPath();
    this.context.rect( params.x, params.y, params.width, params.height );
    this.context.fillStyle = params.color || "black";
    this.context.fill();
    if( params.bordercolor || params.borderwidth ){
        this.context.lineWidth = params.borderwidth || 2;
        this.context.strokeStyle = params.bordercolor || "black";
        this.context.stroke();
    }
};

Display.prototype.draw_horiz_gradient = function(x, y, w, h, col1, col2){
    var yval = y + y/2;
    var grd = this.context.createLinearGradient(x, yval, x + w, yval);
    grd.addColorStop(0, col1);
    grd.addColorStop(1, col2);
    this.context.fillStyle = grd;
    this.context.fillRect( x, y, w, h );
};

Display.prototype.draw_line = function(x1, y1, x2, y2, wid, color){
    if( wid ){
        this.context.lineWidth = 1; 
    } else {
        this.context.lineWidth = 1;
    }

    if( color ){
        this.context.strokeStyle=color;
    } else {
        this.context.strokeStyle='#111111';
    }

    this.context.lineWidth = 1;
    this.context.beginPath();
    this.context.moveTo((x1),(y1));
    this.context.lineTo((x2),(y2)); 
    this.context.stroke();       
};

Display.prototype.load_picture = function(name, url, w, h){
    this.num_sprites++;
    var imageObj = new Image();
    imageObj.onload = function() {
        this.loaded_sprites++;
        var s;
        if( w !== undefined ){
            s = new Sprite(name, 0, 0, w, h);
        }else{
            s = new Sprite(name, 0, 0, imageObj.width, imageObj.height);
        }
        this.sprites[name] = s;
        this.images[name] = imageObj;
    }.bind(this);   
    imageObj.src = url; 
};

Display.prototype.load_dataurl = function( name, canv, w, h ){
    this.textimages.push( name );
    var imageObj = canv;

    var s;
    if( w !== undefined ){
        s = new Sprite(name, 0, 0, w, h);
    }else{
        s = new Sprite(name, 0, 0, imageObj.width, imageObj.height);
    }

    this.sprites[name] = s;
    this.images[name] = imageObj;
};

Display.prototype.load_spritesheet = function(name, url){
    this.num_spritesheets++;
    var imageObj = new Image();
    imageObj.onload = function() {
        this.loaded_spritesheets++;
        this.images[name] = imageObj;
    }.bind(this);   
    imageObj.src = url; 
};

Display.prototype.load_sprite_from_spritesheet = function(name, ss_name, x, y, w, h){
    var spr = new Sprite(ss_name, x*w, y*h, w, h);
    this.sprites[name] = spr;            
};      

Display.prototype.load_actor_sprites = function(name, ss_name, x, y, w, h){
    var app = "";
    var yoff = 0;
    this.load_sprite_from_spritesheet(name, ss_name, x, y, w, h);
    for( var i = 0; i < 4; i++){
        switch(i){
            case 0: app = "dr"; break;
            case 1: app = "dl"; break;
            case 2: app = "ar"; break;
            case 3: app = "al"; break;
        }
        if( x+i > 10 ){
            yoff=1;
            x = -i;
        }
        this.load_sprite_from_spritesheet(name+"_"+app, ss_name, x+i, y+yoff, w, h);
    }
};

Display.prototype.load_actor_anim_sprites = function(name, ss_name, x, y, w, h){
    var yoff = 0;
    var postfixes = ["r0", "r1", "l0", "l1", "d0", "d1", "u0", "u1", "ra0", "ra1", "ra2",
                    "la0", "la1", "la2", "da0", "da1", "da2", "ua0", "ua1", "ua2",
                    "lvl0","lvl1","lvl2","lvl3"];
    for( var i = 0; i < postfixes.length;  ++i){
        var postfix = postfixes[i];
        if( x+i > 10 ){
            yoff++;
            x = -i;
        }

        this.load_sprite_from_spritesheet(name+"_"+postfix, ss_name, x+i, y+yoff, w, h);
        if( postfix == "d0"){
            this.load_sprite_from_spritesheet(name, ss_name, x+i, y+yoff, w, h);
        }
    }
};

Display.prototype.load_overlay_sprites = function(name, ss_name, x, y, w, h){
    var yoff = 0;
    this.load_sprite_from_spritesheet(name, ss_name, x, y, w, h);

    for( var i = 0; i < 4; i++){
        var app = "";
        switch(i){
            case 0: app = "u"; break;
            case 1: app = "r"; break;
            case 2: app = "d"; break;
            case 3: app = "l"; break;
        }
        if( x+i > 10 ){
            yoff=1;
            x = -i;
        }
        this.load_sprite_from_spritesheet(name+"_"+app, ss_name, x+i, y+yoff, w, h);
    }
};

Display.prototype.load_animoverlay_sprites = function(name, ss_name, x, y, w, h){
    this.load_sprite_from_spritesheet(name, ss_name, x, y, w, h);
    for( var i = 0; i < 9; i++){
        this.load_sprite_from_spritesheet(name+i, ss_name, x+i, y, w, h);
    }
};

Display.prototype.load_proj_sprites = function(name, ss_name, x, y, w, h){
    for( var i = 0; i < 4; i++ ){
        this.load_sprite_from_spritesheet(name+i, ss_name, x+i, y, w, h);
    }        
};

Display.prototype.is_sprite_animated = function(name){
	return app.inArr(name, this.anims);
};

Display.prototype.draw_sprite = function( name, x, y ){
    var spr;
    var img;

    spr = this.sprites[name];
    if( spr ) {
        img = this.images[spr.name];
    } else {
        console.error("ERROR sprite "+name+" has not been loaded!");
        return;
    }

    this.context.drawImage(img,spr.x,spr.y,spr.w,spr.h,(x),(y),spr.w,spr.h);
};

Display.prototype.draw_sprite_scaled = function( name, x, y, w, h ){
    var spr;
    var img;

    spr = this.sprites[name];
    if( spr ){
        img = this.images[spr.name];
    } else {
        console.log("ERROR sprite "+name);
        return;
    }
         
    this.context.drawImage(img, spr.x,spr.y,spr.w,spr.h,(x), (y), w, h); 
};

Display.prototype.draw_sprite_scaled_centered = function(name, x, y, w, h){
    this.draw_sprite_scaled( name, (x)-w/2,(y)-h/2, w, h );  
};

Display.prototype.draw_sprite_centered = function(name, x, y){
    var spr = this.sprites[name];
    if( !spr ){
        console.log("ERROR sprite "+name);
        return;
    }
    var w = spr.w;
    var h = spr.h;
    this.draw_sprite( name, (x)-w/2,(y)-h/2 );  
};

Display.prototype.calc_avg_rgb = function(imgEl, x, y, w, h) {
    var blockSize = 5, // only visit every 5 pixels
        defaultRGB = {r:0,g:0,b:0}, // for non-supporting envs
        canvas = document.createElement('canvas'),
        context = canvas.getContext && canvas.getContext('2d'),
        data, width, height,
        i = -4,
        length,
        rgb = {r:0,g:0,b:0},
        count = 0;

    if (!context) {
        return defaultRGB;
    }

    height = canvas.height = h;
    width = canvas.width = w;

    context.drawImage(imgEl, x, y, w, h, 0, 0, w, h);
    data = context.getImageData(0, 0, width, height);
    length = data.data.length;

    while ( (i += blockSize * 4) < length ) {
        ++count;
        rgb.r += data.data[i];
        rgb.g += data.data[i+1];
        rgb.b += data.data[i+2];
    }

    // ~~ used to floor values
    rgb.r = ~~(rgb.r/count);
    rgb.g = ~~(rgb.g/count);
    rgb.b = ~~(rgb.b/count);

    return rgb;
};

Display.prototype.get_text_pos = function(text, x, y, maxWidth, lineHeight, font){
    var words = text.split(' ');
    var line = '';

    this.context.textAlign = 'left';

    if( font !== undefined ){
        this.context.font  = font;
    } else {
        this.context.font = "normal 12px Georgia";
    }
    this.context.fillStyle = "#121212";

    var origx = x;

    var tmpx = x;
    var tmpy = y;

    var ret = [];

    var lines = 1;
    for(var n = 0; n < words.length; n++) {
        tmpy = y;
        var testLine = line + words[n] + ' ';
        var metrics = this.context.measureText(testLine);
        var testWidth = metrics.width;

        if(testWidth > maxWidth) {
            line = words[n] + ' ';
            y += lineHeight;
            lines++;
            tmpy = y;
            tmpx = origx;

            testLine = line;
            metrics = this.context.measureText(testLine);
            testWidth = metrics.width;            
        } else {
           line = testLine;
        }

        ret.push({word:words[n], x:tmpx, y:tmpy});  
        tmpx = origx + testWidth - 3;
      
    }
    return ret;
};

Display.prototype.set_context_params = function( context, params ){
    var align = params.align || "left";
    context.textAlign = align;
    var font = params.font || "Georgia";
    var size = params.size || "12";
    var style = params.style || "normal";
    context.font = style+" "+size+"px "+font;   
    var shadowcolor = params.shadowcolor || false;
    var shadowthickness = params.shadowthickness || 2;
    var color = params.color || "white";

    if( shadowcolor ){
        context.strokeStyle  = shadowcolor;
        context.lineWidth    = shadowthickness;
    } else {
        context.shadowBlur = 0;
        context.lineWidth = 1;
    }
    context.shadowOffsetX = 0;
    context.shadowOffsetY = 0;

    context.fillStyle = color;
};

Display.prototype.wrap_text = function(text, x, y, params) {
    var words = text.split(' ');
    var line = ''; 

    this.set_context_params( this.context, params );

    var maxWidth = params.maxwidth || 100;
    var lineHeight = params.lineheight || 15;

    for(var n = 0; n < words.length; n++) {
        var testLine = line + words[n] + ' ';
        var metrics = this.context.measureText(testLine);
        var testWidth = metrics.width;
        if(testWidth > maxWidth) {
            this.context.fillText(line, x, y);
            line = words[n] + ' ';
            y += lineHeight;
        } else {
           line = testLine;
        }
    }
    this.context.fillText(line, x, y);
};

Display.prototype.draw_text_to_context = function( id, text, params ){
    var canvas = document.createElement('canvas');
    var context = canvas.getContext("2d");
    this.set_context_params( context, params );
    context.textAlign = "left";
    context.textBaseline = "middle";
    var metrics = context.measureText(text);
    canvas.width = metrics.width + (params.size || 12);
    canvas.height = (params.size || 12 )*1.3;
    this.set_context_params( context, params );
    context.textAlign = "left";
    context.textBaseline = "middle";

    if( params.shadowcolor ){
        context.strokeText(text, canvas.width/2, canvas.height/2);
    }

    context.fillText(text, 0, canvas.height/2);
    this.load_dataurl( id, canvas, canvas.width, canvas.height );
};

Display.prototype.draw_text_params = function( text, x, y, params ){
    var id = text + jsonjoin( params, "" );
    if( this.sprites[id] ){
        if( params.align === "left" ){
            this.draw_sprite( id, x, y );
        } else {
            this.draw_sprite_centered( id, x, y );
        }
    } else if( this.sprites[id] !== false ) {
        this.draw_text_to_context( id, text, params );
        this.draw_text_params( text, x, y, params );
    }
};

Display.prototype.init = function(){

    this.avg_loaded = false;

    this.load_picture("inner_border","display/images/inner_border.png", 252, 288);

    //UI Backgrounds
    this.load_picture("pclistpanebackground","display/images/ui/pclistpanebackground.png", 110, 175);
    this.load_picture("lcontrolsbackground","display/images/ui/lcontrolspane.png", 110, 113);
    this.load_picture("minimap","display/images/ui/minimap.png", 110, 113);
    this.load_picture("InventoryPane","display/images/ui/InventoryPanePlain.png", 252, 288);
    this.load_picture("InventoryPanePlain","display/images/ui/InventoryPanePlain.png", 252, 288);
    this.load_picture("DarkMagicPane","display/images/ui/DarkMagicPanePlain.png", 252, 288);
    this.load_picture("LightMagicPane","display/images/ui/LightMagicPanePlain.png", 252, 288);
    this.load_picture("SavePane","display/images/ui/SavePanePlain.png", 252, 288);
    this.load_picture("LoadPane","display/images/ui/LoadPanePlain.png", 252, 288);
    this.load_picture("PickUpPane","display/images/ui/PickUpPanePlain.png", 252, 288);
    this.load_picture("DialoguePane","display/images/ui/dg.png", 252, 288);
    this.load_picture("CreatePartyPane","display/images/ui/createParty.png", 472, 288);
    this.load_picture("MenuPane","display/images/ui/menu4.png", 472, 288);
    this.load_picture("BuyPane","display/images/ui/BuyPane.png", 252, 288);
    this.load_picture("EmptyPane","display/images/ui/menubackground.png", 252, 288);
    this.load_picture("LavaPane","display/images/ui/defaultbg.png", 252, 288);
    this.load_picture("MiniLavaPane","display/images/ui/minidefaultbg.png", 163, 216);

    this.load_picture("statDEF","display/images/ui/statDEF.png", 362, 168);
    this.load_picture("statPOW","display/images/ui/statPOW.png", 362, 168);
    this.load_picture("statEVA","display/images/ui/statEVA.png", 362, 168);
    this.load_picture("statSPD","display/images/ui/statSPD.png", 362, 168);
    this.load_picture("statCON","display/images/ui/statCON.png", 362, 168);
    this.load_picture("statACC","display/images/ui/statACC.png", 362, 168);

    this.load_picture("ProtolithPane","display/images/ui/Protolithlogo2.png", 800, 530);

    this.load_picture("DisabledUI","display/images/ui/disabled_ui_overlay.png", 110, 173);
    this.load_picture("PCStatOver","display/images/ui/pcstatover.png", 76, 140);
    this.load_picture("OnWhoButton","display/images/button/onWhoButton.png", 35, 24);

    this.load_spritesheet("dirbuttons","display/images/button/dirbuttons.png");
    this.load_sprite_from_spritesheet("dleft","dirbuttons", 0, 0, 35, 24);
    this.load_sprite_from_spritesheet("ddown","dirbuttons", 1, 0, 35, 24);
    this.load_sprite_from_spritesheet("dright","dirbuttons", 2, 0, 35, 24);
    this.load_sprite_from_spritesheet("dup","dirbuttons", 3, 0, 35, 24);
    this.load_sprite_from_spritesheet("dupright","dirbuttons", 4, 0, 35, 24);
    this.load_sprite_from_spritesheet("dupleft","dirbuttons", 5, 0, 35, 24);
    this.load_sprite_from_spritesheet("ddownleft","dirbuttons", 6, 0, 35, 24);
    this.load_sprite_from_spritesheet("ddownright","dirbuttons", 7, 0, 35, 24);

    //Button Controls
    this.load_picture("button-left","display/images/button/button-left.png", 38, 39);
    this.load_picture("button-right","display/images/button/button-right.png", 38, 39);
    this.load_picture("button-up","display/images/button/button-up.png", 38, 39);
    this.load_picture("button-down","display/images/button/button-down.png", 38, 39);
    this.load_picture("button-back","display/images/button/button-back.png", 38, 39);
    this.load_picture("button-downright","display/images/button/button-downright.png", 25, 25);
    this.load_picture("button-upright","display/images/button/button-upright.png", 25, 25);
    this.load_picture("button-downleft","display/images/button/button-downleft.png", 25, 25);
    this.load_picture("button-upleft","display/images/button/button-upleft.png", 25, 25);

    //class description images
    this.load_picture("classLegionaire","display/images/LegionaireClass.png", 50, 50);
    this.load_picture("classArcher","display/images/ArcherClass.png", 50, 50);
    this.load_picture("classMagician","display/images/MagicianClass.png", 50, 50);
    this.load_picture("classLancer","display/images/LancerClass.png", 50, 50);

    //gender description icons
    this.load_picture("iconMale","display/images/MaleIcon.png", 50, 50);
    this.load_picture("iconFemale","display/images/FemaleIcon.png", 50, 50);

    //this.load_picture("lcontrolsbackground","display/images/controlsall.png", 110, 113);

    this.load_picture("box","display/images/box.png", 28, 32);

    this.load_spritesheet("portraits","display/images/portraits.png");
    this.load_sprite_from_spritesheet("port_exclaim","portraits", 0, 0, 63, 63);
    this.load_sprite_from_spritesheet("port_girl","portraits", 1, 0, 63, 63);
    this.load_sprite_from_spritesheet("port_soldier","portraits", 2, 0, 63, 63);
    this.load_sprite_from_spritesheet("port_farmer","portraits", 3, 0, 63, 63);
    this.load_sprite_from_spritesheet("port_money","portraits", 4, 0, 63, 63);
    this.load_sprite_from_spritesheet("port_potion","portraits", 0, 1, 63, 63);
    this.load_sprite_from_spritesheet("port_bartender","portraits", 1, 1, 63, 63);
    this.load_sprite_from_spritesheet("port_hooded","portraits", 2, 1, 63, 63);
    this.load_sprite_from_spritesheet("port_tzit","portraits", 3, 1, 63, 63);
    this.load_sprite_from_spritesheet("port_priest","portraits", 4, 1, 63, 63);
    this.load_sprite_from_spritesheet("port_default","portraits", 0, 2, 63, 63);
    this.load_sprite_from_spritesheet("port_locked","portraits", 1, 2, 63, 63);
    this.load_sprite_from_spritesheet("port_sil","portraits", 2, 2, 63, 63);

    //Node icon buttons
    this.load_spritesheet("node_icons","display/images/node_icons.png");
    this.load_sprite_from_spritesheet("node_ChangeMap", "node_icons", 0, 0, 8, 8);
    this.load_sprite_from_spritesheet("node_SecretPassage", "node_icons", 1, 0, 8, 8);
    this.load_sprite_from_spritesheet("node_LockDoor", "node_icons", 2, 0, 8, 8);
    this.load_sprite_from_spritesheet("node_ShowNPC", "node_icons", 3, 0, 8, 8);
    this.load_sprite_from_spritesheet("node_TeleportNPC", "node_icons", 4, 0, 8, 8);
    this.load_sprite_from_spritesheet("node_TeleportTo", "node_icons", 5, 0, 8, 8);
    this.load_sprite_from_spritesheet("node_ChangeTile", "node_icons", 6, 0, 8, 8);
    this.load_sprite_from_spritesheet("node_StuffDone", "node_icons", 7, 0, 8, 8);
    this.load_sprite_from_spritesheet("node_HasItem", "node_icons", 8, 0, 8, 8);
    this.load_sprite_from_spritesheet("node_PlaySound", "node_icons", 9, 0, 8, 8);
    this.load_sprite_from_spritesheet("node_SingleNotification", "node_icons", 10, 0, 8, 8);
    this.load_sprite_from_spritesheet("node_DoubleNotification", "node_icons", 11, 0, 8, 8);
    this.load_sprite_from_spritesheet("node_DisableNode", "node_icons", 13, 0, 8, 8);

    //Inventory Buttons
    this.load_spritesheet("inventory_buttons","display/images/button/InventoryButtons.png");
    this.load_sprite_from_spritesheet("InvInformation", "inventory_buttons", 0, 0, 24, 18);
    this.load_sprite_from_spritesheet("InvDrop", "inventory_buttons", 1, 0, 24, 18);
    this.load_sprite_from_spritesheet("InvUse", "inventory_buttons", 2, 0, 24, 18);
    this.load_sprite_from_spritesheet("InvClose", "inventory_buttons", 3, 0, 24, 18);
    this.load_sprite_from_spritesheet("InvGive", "inventory_buttons", 4, 0, 24, 18);

    this.load_picture("CharacterButton","display/images/button/CharButton.png", 80, 32);
    this.load_picture("SingleNotif","display/images/ui/SingleNotif.png", 360, 247);

    this.load_spritesheet("StandardButtonSS","display/images/button/standard-button.png");
    this.load_sprite_from_spritesheet("StandardButtonUP", "StandardButtonSS", 0, 0, 88, 34);
    this.load_sprite_from_spritesheet("StandardButtonDOWN", "StandardButtonSS", 1, 0, 88, 34);
    this.load_sprite_from_spritesheet("StandardButton2UP", "StandardButtonSS", 2, 0, 112, 34);
    this.load_sprite_from_spritesheet("StandardButton2DOWN", "StandardButtonSS", 3, 0, 112, 34);

    this.load_spritesheet("ToggleButton","display/images/button/button-toggle.png");
    this.load_sprite_from_spritesheet("ToggleOff", "ToggleButton", 0, 0, 64, 32);
    this.load_sprite_from_spritesheet("ToggleOn", "ToggleButton", 1, 0, 64, 32);

    //Magic Screen Tabs
    this.load_spritesheet("mtabsUP","display/images/button/MagicTabUp.png");
    this.load_sprite_from_spritesheet("mtabsIUP", "mtabsUP", 0, 0, 42, 32);
    this.load_sprite_from_spritesheet("mtabsIIUP", "mtabsUP", 1, 0, 42, 32);
    this.load_sprite_from_spritesheet("mtabsIIIUP", "mtabsUP", 2, 0, 42, 32);
    this.load_sprite_from_spritesheet("mtabsIVUP", "mtabsUP", 3, 0, 42, 32);
    this.load_sprite_from_spritesheet("mtabsVUP", "mtabsUP", 4, 0, 42, 32);
    this.load_sprite_from_spritesheet("mtabsVIUP", "mtabsUP", 5, 0, 42, 32);
    this.load_spritesheet("mtabsDN","display/images/button/MagicTabDown.png");
    this.load_sprite_from_spritesheet("mtabsIDN", "mtabsDN", 0, 0, 42, 32);
    this.load_sprite_from_spritesheet("mtabsIIDN", "mtabsDN", 1, 0, 42, 32);
    this.load_sprite_from_spritesheet("mtabsIIIDN", "mtabsDN", 2, 0, 42, 32);
    this.load_sprite_from_spritesheet("mtabsIVDn", "mtabsDN", 3, 0, 42, 32);
    this.load_sprite_from_spritesheet("mtabsVDN", "mtabsDN", 4, 0, 42, 32);
    this.load_sprite_from_spritesheet("mtabsVIDN", "mtabsDN", 5, 0, 42, 32);

    //Fundamental Spell Icons
    this.load_spritesheet("spicons","display/images/button/spellicons.png");
    this.load_sprite_from_spritesheet("lspell0", "spicons", 0, 0, 48, 48);
    this.load_sprite_from_spritesheet("lspell1", "spicons", 1, 0, 48, 48);
    this.load_sprite_from_spritesheet("lspell2", "spicons", 2, 0, 48, 48);
    this.load_sprite_from_spritesheet("lspell3", "spicons", 3, 0, 48, 48);
    this.load_sprite_from_spritesheet("lspell4", "spicons", 4, 0, 48, 48);
    this.load_sprite_from_spritesheet("lspell5", "spicons", 5, 0, 48, 48);
    this.load_sprite_from_spritesheet("lspell6", "spicons", 0, 1, 48, 48);
    this.load_sprite_from_spritesheet("lspell7", "spicons", 1, 1, 48, 48);
    this.load_sprite_from_spritesheet("lspell8", "spicons", 2, 1, 48, 48);
    this.load_sprite_from_spritesheet("lspell9", "spicons", 3, 1, 48, 48);
    this.load_sprite_from_spritesheet("dspell0", "spicons", 4, 1, 48, 48);
    this.load_sprite_from_spritesheet("dspell1", "spicons", 5, 1, 48, 48);
    this.load_sprite_from_spritesheet("dspell2", "spicons", 0, 2, 48, 48);
    this.load_sprite_from_spritesheet("dspell3", "spicons", 1, 2, 48, 48);
    this.load_sprite_from_spritesheet("dspell4", "spicons", 2, 2, 48, 48);
    this.load_sprite_from_spritesheet("dspell5", "spicons", 3, 2, 48, 48);
    this.load_sprite_from_spritesheet("dspell6", "spicons", 4, 2, 48, 48);
    this.load_sprite_from_spritesheet("dspell7", "spicons", 5, 2, 48, 48);
    this.load_sprite_from_spritesheet("dspell8", "spicons", 0, 3, 48, 48);
    this.load_sprite_from_spritesheet("dspell9", "spicons", 1, 3, 48, 48); 
    this.load_sprite_from_spritesheet("spshaded", "spicons", 2, 3, 48, 48);   
    this.load_sprite_from_spritesheet("spselected", "spicons", 3, 3, 48, 48);      

    //First terrain images
    this.load_spritesheet("terrain1","display/images/Terrain1.png");
    this.load_terrain(121); 

    //Right side upper ui buttons
    this.load_spritesheet("ui_box_buttons","display/images/button/side_buttons.png");
    this.load_sprite_from_spritesheet("BDarkMagicU", "ui_box_buttons", 0, 0, 50, 50);
    this.load_sprite_from_spritesheet("BDarkMagicD", "ui_box_buttons", 1, 0, 50, 50);    
    this.load_sprite_from_spritesheet("BLightMagicU", "ui_box_buttons", 2, 0, 50, 50);
    this.load_sprite_from_spritesheet("BLightMagicD", "ui_box_buttons", 3, 0, 50, 50);    
    this.load_sprite_from_spritesheet("BTalkU", "ui_box_buttons", 4, 0, 50, 50);
    this.load_sprite_from_spritesheet("BTalkD", "ui_box_buttons", 5, 0, 50, 50); 
    this.load_sprite_from_spritesheet("BLookU", "ui_box_buttons", 0, 1, 50, 50);
    this.load_sprite_from_spritesheet("BLookD", "ui_box_buttons", 1, 1, 50, 50);
    this.load_sprite_from_spritesheet("BInvenU", "ui_box_buttons", 2, 1, 50, 50);
    this.load_sprite_from_spritesheet("BInvenD", "ui_box_buttons", 3, 1, 50, 50);      
    this.load_sprite_from_spritesheet("BPartyManU", "ui_box_buttons", 4, 1, 50, 50);
    this.load_sprite_from_spritesheet("BPartyManD", "ui_box_buttons", 5, 1, 50, 50);  
    this.load_sprite_from_spritesheet("BSaveU", "ui_box_buttons", 0, 2, 50, 50);
    this.load_sprite_from_spritesheet("BSaveD", "ui_box_buttons", 1, 2, 50, 50); 
    this.load_sprite_from_spritesheet("BLogoutU", "ui_box_buttons", 2, 2, 50, 50);
    this.load_sprite_from_spritesheet("BLogoutD", "ui_box_buttons", 3, 2, 50, 50);  
 
    // Node highlight borders
    this.load_spritesheet("nodes","display/images/node_bg.png"); 
    this.load_sprite_from_spritesheet("node_red", "nodes", 0, 0, 28, 32);
    this.load_sprite_from_spritesheet("node_orange", "nodes", 1, 0, 28, 32);
    this.load_sprite_from_spritesheet("node_yellow", "nodes", 2, 0, 28, 32);
    this.load_sprite_from_spritesheet("node_green", "nodes", 3, 0, 28, 32);
    this.load_sprite_from_spritesheet("node_blue", "nodes", 4, 0, 28, 32);
    this.load_sprite_from_spritesheet("node_purple", "nodes", 5, 0, 28, 32);
    this.load_sprite_from_spritesheet("node_rose", "nodes", 6, 0, 28, 32);
    this.load_sprite_from_spritesheet("node_lgreen", "nodes", 7, 0, 28, 32);

    this.load_spritesheet("p1","display/images/npc1.png");
    this.load_actor_sprites("electro_mage", "p1", 0, 0, 28, 32);
    this.load_actor_sprites("db_scout", "p1", 4, 0, 28, 32);
    this.load_actor_sprites("green_shirt", "p1", 8, 0, 28, 32);
    this.load_actor_sprites("old_woman", "p1", 1, 1, 28, 32);
    this.load_actor_sprites("the_lady", "p1", 5, 1, 28, 32);
    this.load_actor_sprites("rock_monster", "p1", 9, 1, 28, 32);
    this.load_actor_sprites("db_hammer", "p1", 2, 2, 28, 32);
    this.load_actor_sprites("mayor", "p1", 6, 2, 28, 32);
    this.load_actor_sprites("purple_chick", "p1", 10, 2, 28, 32);
    this.load_actor_sprites("db_bow", "p1", 3, 3, 28, 32);
    this.load_actor_sprites("db_commander", "p1", 7, 3, 28, 32);
    this.load_actor_sprites("db_doctor", "p1", 0, 4, 28, 32);
    this.load_actor_sprites("small_farmer", "p1", 4, 4, 28, 32);
    this.load_actor_sprites("musky_traveler", "p1", 8, 4, 28, 32);
    this.load_actor_sprites("large_farmer", "p1", 1, 5, 28, 32);
    this.load_actor_sprites("lcyan_chick", "p1", 5, 5, 28, 32);
    this.load_actor_sprites("db_dagger", "p1", 9, 5, 28, 32);
    this.load_actor_sprites("shame", "p1", 2, 6, 28, 32);
    this.load_actor_sprites("tzit_fighter", "p1", 6, 6, 28, 32);
    this.load_actor_sprites("tzit_mage", "p1", 10, 6, 28, 32);

    this.load_spritesheet("pcs","display/images/pcs.png");
    this.load_actor_sprites("green_fella", "pcs", 0, 0, 28, 32);
    this.load_actor_sprites("male_bowman", "pcs", 4, 0, 28, 32);
    this.load_actor_sprites("mr_stud", "pcs", 8, 0, 28, 32);
    this.load_actor_sprites("purple_dress", "pcs", 1, 1, 28, 32);
    this.load_actor_sprites("archerette", "pcs", 5, 1, 28, 32);
    this.load_actor_sprites("gunther", "pcs", 9, 1, 28, 32);
    this.load_actor_sprites("big_mage", "pcs", 2, 2, 28, 32);
    this.load_actor_sprites("javy", "pcs", 6, 2, 28, 32);
    this.load_actor_sprites("black_knight", "pcs", 10, 2, 28, 32);
    this.load_actor_sprites("rebecca", "pcs", 3, 3, 28, 32);
    this.load_actor_sprites("blood_priest", "pcs", 7, 3, 28, 32);

    this.load_spritesheet("pcs2","display/images/Players.png");
    this.load_actor_anim_sprites("male_lancer", "pcs2", 0, 0, 28, 32);
    this.load_actor_anim_sprites("male_archer", "pcs2", 2, 2, 28, 32);
    this.load_actor_anim_sprites("male_legionaire", "pcs2", 4, 4, 28, 32);
    this.load_actor_anim_sprites("female_legionaire", "pcs2", 6, 6, 28, 32);
    this.load_actor_anim_sprites("female_archer", "pcs2", 8, 8, 28, 32);
    this.load_actor_anim_sprites("female_lancer", "pcs2", 10, 10, 28, 32);
    this.load_actor_anim_sprites("female_magician", "pcs2", 1, 13, 28, 32);
    this.load_actor_anim_sprites("male_magician", "pcs2", 3, 15, 28, 32);

    //inventory item icons
    this.load_spritesheet("items1", "display/images/items1.png");
    this.load_sprite_from_spritesheet("knife",    "items1", 0, 0, 14, 14);
    this.load_sprite_from_spritesheet("sword",    "items1", 1, 0, 14, 14);
    this.load_sprite_from_spritesheet("shield",   "items1", 2, 0, 14, 14);
    this.load_sprite_from_spritesheet("shirt",    "items1", 3, 0, 14, 14);
    this.load_sprite_from_spritesheet("spear",    "items1", 4, 0, 14, 14);
    this.load_sprite_from_spritesheet("potion",   "items1", 5, 0, 14, 14);
    this.load_sprite_from_spritesheet("emerald",  "items1", 6, 0, 14, 14);
    this.load_sprite_from_spritesheet("wand",     "items1", 7, 0, 14, 14);
    this.load_sprite_from_spritesheet("rock",     "items1", 8, 0, 14, 14);
    this.load_sprite_from_spritesheet("pants",    "items1", 9, 0, 14, 14);
    this.load_sprite_from_spritesheet("gloves",   "items1",10, 0, 14, 14);
    this.load_sprite_from_spritesheet("boots",    "items1",11, 0, 14, 14);
    this.load_sprite_from_spritesheet("goldbag",  "items1",12, 0, 14, 14);
    this.load_sprite_from_spritesheet("axe",      "items1",13, 0, 14, 14);

    this.load_spritesheet("status", "display/images/status.png");
    this.load_sprite_from_spritesheet("se_poison_w","status", 0, 0, 10, 10);
    this.load_sprite_from_spritesheet("se_poison_s","status", 1, 0, 10, 10);
    this.load_sprite_from_spritesheet("se_burning_w","status", 2, 0, 10, 10);
    this.load_sprite_from_spritesheet("se_burning_s","status", 3, 0, 10, 10);
    this.load_sprite_from_spritesheet("se_feared_w","status", 4, 0, 10, 10);
    this.load_sprite_from_spritesheet("se_feared_s","status", 5, 0, 10, 10);
    this.load_sprite_from_spritesheet("se_bound_w","status", 6, 0, 10, 10);
    this.load_sprite_from_spritesheet("se_bound_s","status", 7, 0, 10, 10);
    this.load_sprite_from_spritesheet("se_frozen_w","status", 8, 0, 10, 10);
    this.load_sprite_from_spritesheet("se_frozen_s","status", 9, 0, 10, 10);
    this.load_sprite_from_spritesheet("se_hasted_w","status", 10, 0, 10, 10);
    this.load_sprite_from_spritesheet("se_hasted_s","status", 11, 0, 10, 10);
    this.load_sprite_from_spritesheet("se_shielded_w","status", 12, 0, 10, 10);
    this.load_sprite_from_spritesheet("se_shielded_s","status", 13, 0, 10, 10);
    this.load_sprite_from_spritesheet("se_cursed_w","status", 14, 0, 10, 10);
    this.load_sprite_from_spritesheet("se_cursed_s","status", 15, 0, 10, 10);
    this.load_sprite_from_spritesheet("se_blessed_w","status", 16, 0, 10, 10);
    this.load_sprite_from_spritesheet("se_blessed_s","status", 17, 0, 10, 10);

    this.load_spritesheet("damages","display/images/damaged.png");
    this.load_sprite_from_spritesheet("physd","damages", 0, 0, 28, 32);
    this.load_sprite_from_spritesheet("ranged","damages", 1, 0, 28, 32);
    this.load_sprite_from_spritesheet("poisond","damages", 2, 0, 28, 32);
    this.load_sprite_from_spritesheet("chaind","damages", 3, 0, 28, 32);
    this.load_sprite_from_spritesheet("fired","damages", 4, 0, 28, 32);
    this.load_sprite_from_spritesheet("death0","damages", 5, 0, 28, 32);
    this.load_sprite_from_spritesheet("death1","damages", 6, 0, 28, 32);
    this.load_sprite_from_spritesheet("death2","damages", 7, 0, 28, 32);
    this.load_sprite_from_spritesheet("death3","damages", 8, 0, 28, 32);
    this.load_sprite_from_spritesheet("blessd","damages", 9, 0, 28, 32);
    this.load_sprite_from_spritesheet("iced","damages", 10, 0, 28, 32);

    this.load_spritesheet("spells1", "display/images/spellanimations.png");
    this.load_animoverlay_sprites("fir","spells1", 0, 0, 28, 32);
    this.load_animoverlay_sprites("icy","spells1", 0, 1, 28, 32);
    this.load_animoverlay_sprites("mag","spells1", 0, 2, 28, 32);

    this.load_spritesheet("pj1", "display/images/projectiles.png");
    this.load_overlay_sprites("icyproj","pj1", 0, 0, 28, 32);
    this.load_overlay_sprites("firproj","pj1", 4, 0, 28, 32);
    this.load_overlay_sprites("zapproj","pj1", 8, 0, 28, 32);
    this.load_overlay_sprites("rotproj","pj1", 1, 1, 28, 32);
    this.load_overlay_sprites("bowproj","pj1", 5, 1, 28, 32);

    this.load_picture("cleanstatpill","display/images/cleanui/statpill.png", 68, 24);
    this.load_picture("cleanstatdecreasemod","display/images/cleanui/statdecreasemodifier.png", 40, 13);
    this.load_picture("cleanstatincreasemod","display/images/cleanui/statincreasemodifier.png", 40, 13);
    this.load_picture("cleanclosebutton","display/images/cleanui/closebutton.png", 48, 18);
    this.load_picture("cleanclosebuttonselected","display/images/cleanui/closebuttonselected.png", 48, 18);
    this.load_picture("cleangradientlightneutral","display/images/cleanui/gradientlightneutral.png", 64, 64);
    this.load_picture("cleanlightcolor","display/images/cleanui/lightcolor.png", 64, 64);
    this.load_picture("cleanverydarkcolor","display/images/cleanui/verydarkcolor.png", 64, 64);
    this.load_picture("cleanneutralcolor","display/images/cleanui/neutralcolor.png", 64, 64);
    this.load_picture("cleanselectedcolor","display/images/cleanui/selectedcolor.png", 64, 64);
    this.load_picture("cleancirclecontrol","display/images/cleanui/circlecontrol.png", 26, 26);
    this.load_picture("cleansquarecontrol","display/images/cleanui/squarecontrol.png", 26, 26);

    this.draw_rect = this.draw;
};

})(); 
/* jshint browser: true */
/* global app */

(function(){
"use strict";

var ParticleSystem = app.display.ParticleSystem = function(params){
    this.params = params;
};

ParticleSystem.prototype.draw = function(){

};

ParticleSystem.prototype.update = function(){

};

})(); 
/* jshint browser: true */
/* global app */

(function(){
"use strict";
var AbstractState = app.game.AbstractState = function(game){
	this.game = game;
	this.INTERVAL_ID = 0;
	this.FLAG_stateFinished = false;

	this.isRunning = false;
};
AbstractState.prototype.change_state = function( game, state ){
	game.state = state;
};
AbstractState.prototype.init = function(){};
AbstractState.prototype.begin = function(){};
AbstractState.prototype.pause = function(){};
AbstractState.prototype.resume = function(){};
AbstractState.prototype.destroy = function(){};
AbstractState.prototype.handleKeyPress = function(){};
AbstractState.prototype.handleMouseClick = function(){};
AbstractState.prototype.handleMouseUnclick = function(){};
AbstractState.prototype.handleMouseMove = function(){};
})();
 
/* jshint browser: true */
/* global app */

(function(){
"use strict";

var CreatePartyState = app.game.CreatePartyState = function( game, new_world_params ){
	app.game.AbstractState.call(this, game);

    this.new_world_params = new_world_params;
    this.uiElements = [];
    this.isOn = "pizza";
};

CreatePartyState.prototype = app.extend(app.game.AbstractState); 

CreatePartyState.prototype.init = function(){

    this.uiElements.push( 
        new app.ui.CreateOverlay(
            0, 0, "CreatePartyPane", "CreatePartyPane",
            this.game.display, this.game
        )
    ); 


    this.begin();
};

CreatePartyState.prototype.begin = function(){
    this.isOn = "pizza";
    this.resume();
};

CreatePartyState.prototype.pause = function(){

};

CreatePartyState.prototype.resume = function(){
	this.update(true);
};

CreatePartyState.prototype.update = function(force){
    if( force ){
        this.draw();
        if( this.isOn === "pizza"){
            setTimeout(function(){
                this.update(true);
            }.bind(this), 25);
        }
    }
};

CreatePartyState.prototype.draw = function(){
    for( var i in this.uiElements ){
        this.uiElements[i].draw();
    } 

    if( app.game.Game.prototype.keyboard !== null ){
    	app.game.Game.prototype.keyboard.draw();
    }     
};

CreatePartyState.prototype.handleKeyPress = function(ev){
    if( app.game.Game.prototype.keyboard !== null ){
    	app.game.Game.prototype.keyboard.keydown(ev);
    }
};

CreatePartyState.prototype.handleKeyUp = function(ev){
    if( app.game.Game.prototype.keyboard !== null ){
    	app.game.Game.prototype.keyboard.keyup(ev);
    }
};

CreatePartyState.prototype.handleMouseClick = function(ev){
    var mouseX = ev.clientX;// - off.x - 17;
    var mouseY = ev.clientY;// - off.y - 19;    

    if( app.game.Game.prototype.keyboard !== null ){
    	app.game.Game.prototype.keyboard.contains(mouseX, mouseY);
    	return;
    }

    for( var i in this.uiElements ){
    	var elem = this.uiElements[i];
    	if( elem.contains( mouseX, mouseY) ){
    	}
    }
};

})(); 
/* jshint browser: true */
/* global app, console, window */

(function(){
"use strict";

var CutsceneState = app.game.CutsceneState = function( game, params ){
	app.game.AbstractState.call(this, game);
	var captain = this;
	var display = game.display;

	this.params = params;
	this.cutscene = window["CUTSCENE"+params.cutscene];
	this.nextstateparams = params.nextstateparams; 
	this.currentframe = this.cutscene.frames[0];

    this.uiElements = [];
    this.nextbutton = new app.ui.cButton(
    	372, 213, "StandardButtonUP", "donebutton", display,
        80, 30, "Next", 
        function(){ 
        	captain.set_frame(captain.currentframeind+1);
        }, 
        game
    ); 
    this.skipbutton = new app.ui.cButton(
    	372, 248, "StandardButtonUP", "skipbutton", display,
        80, 30, "Skip", 
	    function(){	
	    	captain.next_state();
	    }, 
        game
    ); 

	this.description = new app.ui.TextareaW(
		20,230, "sidk", "didk2", display, "Once upon a ti"+
		"me there was a man who sat next to a tree.  He had a book with him and he opene"+
		"d up the tome and read from it...", 335, 16, "Bedrock"
	);

	this.uiElements.push( this.nextbutton, this.description, this.skipbutton );

	this.currentframeind = 0;
	this.transitionstate = "none";

	this.fs = 5;
	this.animframe = 0;

	this.fadectr = 0;
	this.maxfadectr = 15;

    this.running = false;
};

CutsceneState.prototype = app.extend(app.game.AbstractState); 

CutsceneState.prototype.init = function(){
	//this.currentframeind = -1;
	this.transitionstate = "fade";
	this.description.text = this.currentframe.text;
    this.begin();
};

CutsceneState.prototype.begin = function(){
    this.resume();
};

CutsceneState.prototype.pause = function(){

};

CutsceneState.prototype.resume = function(){
    var captain = this;
    if( !captain.running ){
    	this.running = true;
	    (function step(){
	    	if( captain.running === true ){
		    	window.requestAnimationFrame(step); 
		    	captain.update(false); 
		    }
	    })();
	}
};

CutsceneState.prototype.update = function(){
    this.game.display.clear_area(0, 0, 472, 288);    
    if( this.transitionstate === "anim" ){
    	this.animate();
    } else if( this.transitionstate === "fade"){
    	this.fade();
    } else if( this.transitionstate === "dontdraw") {
    	this.game.display.draw(0, 0, 472, 288, "black");
    } else {
    	this.game.display.draw(0, 0, 472, 288, "white");
    	if( this.currentframeind >= 0 ){
    		this.draw_frame( this.currentframeind );
    	}
    }

    var d = this.description;
	this.game.display.draw(d.x-5, d.y-15, d.wid+5, 60, "#DEDEDE");

    for( var i in this.uiElements){
    	this.uiElements[i].draw();
    }
};

CutsceneState.prototype.draw_frame = function(ind){
	try{
	var meta = this.cutscene.meta;
	var imgstr = "CUTS"+this.cutscene.name+ind;
	var x = 0;
	var y = 0;
	x += parseInt(meta["layer"+(ind+2)].pos[0]);
	y += parseInt(meta["layer"+(ind+2)].pos[1]);
    this.game.display.draw_sprite(imgstr, x, y);
	} catch(e){
		console.error("ERROR: ind",ind,e.stack);
		this.running = false;
	}
};

CutsceneState.prototype.fade = function(){
	this.game.display.draw(0, 0, 472, 288, "white");

	var alpha = this.fadectr/this.maxfadectr;
	this.game.display.context.globalAlpha = 1.0-alpha;

	if( this.currentframeind !== 0 ){
		this.draw_frame(this.currentframeind-1);
	} else {
		this.game.display.draw(0, 0, 472, 288, "black");
	}
	this.game.display.context.globalAlpha = alpha;
	if( this.currentframeind < this.cutscene.numframes ){
		this.draw_frame(this.currentframeind);
	} else {
		this.game.display.draw(0, 0, 472, 288, "black");
	}

	this.game.display.context.globalAlpha = 1.0;

	this.fadectr++;
	if( this.fadectr > this.maxfadectr ){
		this.fadectr = this.maxfadectr;
		this.transitionstate = "none";
		if(this.currentframeind === -1){
			this.currentframeind = 0;
		}
	}
};

CutsceneState.prototype.animate = function(){
	this.game.display.draw(0, 0, 472, 288, "white");
	this.draw_frame(this.currentframeind);
    if( this.animframe >= this.fs ){
    	this.set_up_next_image();
    } else {
    	this.animframe++;
    }
} ;

CutsceneState.prototype.set_up_next_image = function(){
	var maxframeind = this.currentframe.toframe;
	this.animframe = 0;
	if( this.currentframeind >= maxframeind ){
		this.set_frame(maxframeind);
		this.transitionstate = "none";
	} else {
		this.currentframeind++;
	}
};

CutsceneState.prototype.destroy = function(){
	this.running = false;
}; 

CutsceneState.prototype.handleMouseClick = function(ev){
    var mouseX = ev.clientX;
    var mouseY = ev.clientY;

    for( var i in this.uiElements ){
    	var elem = this.uiElements[i];
    	if( elem.contains( mouseX, mouseY) ){
    		elem.click(mouseX, mouseY);
    	}
    }
};

CutsceneState.prototype.set_frame = function(i){
	if( i < 0 ){
		i = 0;
	}

	this.currentframeind = i;
	var prevframe = this.currentframe;
	this.currentframe = this.cutscene.frames[i];
	if( this.currentframeind >= this.cutscene.numframes ){
		this.next_state();
	} else if( this.currentframe === undefined ){
		this.currentframe = prevframe;
		if( this.currentframe.transition === "anim" ){
			this.transitionstate = "anim";
		}
	} else {
		this.description.text = this.currentframe.text;
		this.transitionstate = prevframe.transition;
		if( prevframe.transition === "anim"){
			this.animframe = 0;
		} else if( prevframe.transition === "fade" ){
			this.fadectr = 0;
		}
	}
};

CutsceneState.prototype.next_state = function(){
	console.log("NEXT STATE");
	this.description.text = "END SCENE";
	this.transitionstate = "dontdraw";

	this.game.change_state("WorldState", this.nextstateparams);
};

})();
 

function closeThis( saveThis ){
	$("#fm").hide()
    if( saveThis ){
   		document.onkeydown({ type : 'keypress', keyCode : 17, which : 17, preventDefault:function(){} });
   	} else {
   		document.onkeydown({ type : 'keypress', keyCode : 18, which : 18, preventDefault:function(){} });
   	}
   	//$(document).focus();
}

String.prototype.insert = function (index, string) {
  if (index > 0)
    return this.substring(0, index) + string + this.substring(index, this.length);
  else
    return string + this;
};

String.prototype.splice = function( index, howManyToDelete, stringToInsert ){
    var characterArray = this.split( "" );
    Array.prototype.splice.apply(
        characterArray,
        arguments
    );
     
    return( characterArray.join( "" ));
};

function WriteZip(data, filename){
    // var zip = new JSZip();

    // for( var i in data ){
    //     var obj = data[i];
    //     zip.file(obj.filename, obj.filedata);
    // }

    //WriteFile_generic( zip.generate(), "MYZIP.zip");

    var zip = new JSZip();
    zip.file("hello1.txt", "Hello First World\n");
    zip.file("hello2.txt", "Hello Second World\n");
    content = zip.generate();

    //zip.add("Hello.", "hello.txt");
    location.href="data:application/zip;base64," + content;

}

function LoadZip(filename){

    console.log("LOADZIP");

    var captain = this;
    var request = new XMLHttpRequest();
    request.open("GET", filename, true);

    request.onreadystatechange = function() {
        if (request.readyState == 4) {

            var zip = new JSZip(request.responseText);
            console.log("BEEF");
            console.log(zip);
            console.log(zip.file("hello1.txt"));
        //captain.handle_loaded_npclist(request.responseText);
        }
    }
    request.send(); 
}

var NODE_STR = "";
var NODE_NAME = "ChangeMap";

/**
	/class EditState
	/brief Abstract class for an game state
*/
var EditState = function(game, state_params){
	AbstractState.call(this, game);	

	this.display = this.game.display;
    this.display.resize_canvas(784, 576)
    this.tsqx = 28;
    this.tsqy = 18; 

    this.state_params = state_params;

	this.params;
    this.map_name;

    this.active_node = "";
    this.active_npc = "";

	this.tiles = [];
	this.pc_list = ["da"];

	this.isRunning = false;

	this.mx = 0;
	this.my = 0;

	this.hovX = 0;
	this.hovY = 0;

    this.ctr = 1;
    this.ctr2 = 1;

    this.fm_id = "fm";

    this.ui = new esUI(this);
}

EditState.prototype.init = function(){
	this.game.display.set_background('http://muftah.org/wp-content/uploads/2012/04/NileSatellite.jpg');

	var captain = this;

    //custom params so using this tool isnt really obnoxious
    this.change_map("TestWorld"); 
    $("#show_npcedit_button").click();

    this.ui.init();

	this.draw_place();
}

EditState.prototype.change_state = function( game, state ){
	game.State = state;
}

EditState.prototype.change_map = function( map ){
	this.params = this.game.map_loader.get_map_params( map );
    this.map_name = map;
	this.world = new World(this.game.display, this.game.map_loader.get_map_params( map ) );
	this.world.init(this);
    for( var i = 0; i < this.params.width; i++ ){
        for( var j = 0; j < this.params.height; j++){
            var t = new Tile(i, j, "tile_"+this.params.terrain[i][j], this.params.terrain[i][j]+"", this.game.display, this.world);
        	this.tiles.push(t);
        }
    }

    this.active_node = "";
    //$("#node_sel").html(sel_str);
    this.set_node_selector();

    console.log(this.game.map_loader.get_map_params( map ));
    this.set_node_summary();

    this.draw_place();
}

EditState.prototype.draw_place = function(){
	this.game.display.boffset = 0;
	for( var i in this.world.squares ){
		var t = this.world.squares[i];
		t.tsqx = this.tsqx;
		t.tsqy = this.tsqy; 
		t.draw();
	}

    var node_counts = {};
	for( var i in this.world.nodes ){
		var n = this.world.nodes[i];
        var str = n.name;

        if( str != "null" && str.search("_") < 0 ){ 
            if( node_counts[n.x+" "+n.y] == undefined ){
                node_counts[n.x+" "+n.y] = 0;
                this.game.display.draw_sprite ("node_lgreen", 
                    this.world.grid_to_pixw(n.x), 
                    this.world.grid_to_pixh(n.y));
            }          
            var node_icon_y_offset = 0;
            var node_icon_x_offset = 0;
            for( var j = 0; j < node_counts[n.x+" "+n.y]; j++ ){
                node_icon_y_offset++;
                if( node_icon_y_offset%4 == 0 && node_icon_y_offset != 0 ){
                    node_icon_y_offset = 0;
                    node_icon_x_offset++;
                }
            }
            this.game.display.draw_sprite ("node_"+n.type, 
                this.world.grid_to_pixw(n.x) + 8*node_icon_x_offset, 
                this.world.grid_to_pixh(n.y) + 8*node_icon_y_offset);  
            node_counts[n.x+" "+n.y] = node_counts[n.x+" "+n.y] + 1;          
        }
	}

    for( var i in this.world.characters ){
        if( this.world.characters[i].allegiance != "player" ){
            this.world.characters[i].tsqx = this.tsqx;
            this.world.characters[i].tsqy = this.tsqy;
            this.world.characters[i].draw();
            if( this.world.characters[i].name === this.active_npc ){
                this.game.display.draw_sprite ("node_red", 
                    this.world.grid_to_pixw(this.world.characters[i].x), 
                    this.world.grid_to_pixh(this.world.characters[i].y));                
            }
        }
    }

    this.game.display.draw_text("( "+this.hovX+", "+this.hovY+" )" , 30, 20, "Verdanda", "white", "14", "normal", true);
    this.game.display.draw_text("( "+this.mx+", "+this.my+" )" , 90, 20, "Verdanda", "#BB7777", "14", "normal", true);

	this.game.display.draw_sprite ("node_blue", 
        this.world.grid_to_pixw(this.mx), 
        this.world.grid_to_pixh(this.my));

	this.game.display.draw_sprite ("node_rose", 
        this.world.grid_to_pixw(this.hovX), 
        this.world.grid_to_pixh(this.hovY));        	
}

EditState.prototype.get_max_node_number = function(){
    var max = 0;
    for( var i in this.world.nodes ){
        var node = this.world.nodes[i];
        var node_name = this.world.snp.inverse_parse_node(node).name;
        var node_num = parseInt( node_name.split("#")[1] );
        if( node_num > max ){
            max = node_num;
        }
    }
    return max;
}

EditState.prototype.add_node = function(){
    NODE_NAME += "#"+(this.get_max_node_number()+1);
	var props = this.params.tree.map.layer.properties;
	if( !("properties" in this.params.tree.map.layer) ){
		this.params.tree.map.layer.properties = {property:[]};
	}
	props = this.params.tree.map.layer.properties;

	var obj = {};
	obj["-name"] = NODE_NAME;
	obj["-value"] = NODE_STR;
	props.property.push(obj);

	var str = '\n<property name="'+NODE_NAME+'" value="'+NODE_STR+'"/>';
	var start_index = this.params.xml.search('<property name="ANODE#0" value="false#0#0#0#0#none#none#none#none"/>') + 68;

    if( start_index < 50 ){
        console.log("ERROR! Could not find node adding starting point, no ANODE");
        return;
    }

    console.log("Node added", NODE_NAME, NODE_STR);

    this.game.map_loader.add_node_to_map(this.map_name, NODE_NAME, NODE_STR);

	this.params.xml = this.params.xml.insert(start_index, str);
    this.world.add_node( this.game.map_loader.parse_node( NODE_NAME, NODE_STR ), this );
    this.set_node_selector();
    //this.print_nodes();
}

EditState.prototype.delete_node = function(node){
    var info = this.world.snp.inverse_parse_node( node );
    var query_str = '<property name="'+info.name+'" value="'+info.str+'"/>';

    var ind = this.params.xml.search( query_str );

    if( ind < 50 ){
        console.log("ERROR: No node found to delete: ", query_str );
        this.print_nodes();
        return;
    }

    for( var i in this.world.nodes ){
        //console.log("comparing", this.world.nodes[
        if( this.world.nodes[i].name == info.name ){
            this.world.nodes.splice(i,1);
        }
    }

    if( this.world.nodes.length > 0 ){
        this.active_node = this.world.nodes[1];
    } else {
        this.active_node = "none";
    }

    this.params.xml = this.params.xml.splice(ind, query_str.length );
    this.game.map_loader.delete_node_from_map(this.map_name, node.name);

    this.set_node_selector();

    console.log("Node deleted", node.name);
    //this.print_nodes();
}

EditState.prototype.replace_node_name = function(node_name, new_node_name){
    node_name = node_name.replace("#","_");
    new_node_name = new_node_name.replace("#","_");
    for( var i in this.world.nodes ){
        var node = this.world.nodes[i];
        var node_str = this.world.snp.inverse_parse_node(node).str;
        if( node_str.search(node_name) > -1 ){
            for( var j in node ){
                if( typeof node[j] == "string" ){
                    node[j] = node[j].replace(node_name, new_node_name);
                }
            }
        }
    }

    this.params.xml.replace(node_name, new_node_name);
}

EditState.prototype.add_npc = function(npc, x, y){

    var npc_xml_str = '\n<object name="'+npc.name+'" type="NPC" gid="122" x="'+x+'" y="'+y+'"></object>';
    var start_index = this.params.xml.search('<objectgroup name="NPCS"') + 48;
    this.params.xml = this.params.xml.insert(start_index, npc_xml_str);

    this.world.add_npc( npc, npc.name, x, y );

    this.set_node_selector();
    this.active_npc = npc.name;
    this.set_npc_summary();
    $("#npc_sel").val(this.active_npc);
    this.draw_place();
}

EditState.prototype.move_npc = function(npcname, oldx, oldy, x, y){
    var npc = "none";
    var npcerr = "none";
    for( var i in this.params.npcs ){
        if( this.params.npcs[i].name == npcname &&
            this.params.npcs[i].x == oldx &&
            this.params.npcs[i].y == oldy){
            npc = this.params.npcs[i];
        }
        if( this.params.npcs[i].name == npcname ){
            npcerr = this.params.npcs[i];
        }
    }

    if( npc === "none" ){
        console.log("WARNING: No npc of name and pos '"+npcname+"' ("+oldx+","+oldy+") found to move.");
        
        if( !(npcerr === "none") ){
            console.log(" However an npc was found with the same name: ", npcerr); 
        }
        return;
    }

    npc.x = x;
    npc.y = y;

    var npc_xml_str = '<object name="'+npc.name+'" type="NPC" x="'+oldx+'" y="'+oldy+'"/>';
    var npc_xml_str2 ='<object name="'+npc.name+'" type="NPC" x="'+x+'" y="'+y+'"/>'; 
    var start_index = this.params.xml.search(npc_xml_str);

    if( start_index < 2 ){
        console.log("WARNING: Somehow the npc you are moving is not in the xml params.", npc_xml_str);
        console.log(this.params.xml);
        return;
    }

    this.params.xml = this.params.xml.replace(npc_xml_str, "\n"+npc_xml_str2);
}

EditState.prototype.delete_npc = function(npc, name, x, y){

    var npc_xml_str = '\n<object name="'+name+'" type="NPC" gid="122" x="'+x+'" y="'+y+'"></object>';
    var ind = this.params.xml.search(npc_xml_str);

    if( ind > -1 ){
        this.params.xml = this.params.xml.splice(ind, npc_xml_str.length );
        this.set_node_selector();

        for( var i in this.world.characters ){
            var act = this.world.characters[i];
            if( act.name == name && act.x == x && act.y == y ){
                this.world.characters.splice(i, 1);
                console.log("Npc deleted: ", name);
            }
        }
    } else {
        console.log("ERROR: No NPC found to delete.", npc_xml_str);
    }

    this.set_node_selector();
    this.draw_place();
}

EditState.prototype.set_node_selector = function(){
    var sel_str = "";
    for( var name in this.world.nodes ){
        if( (this.world.nodes[name].name != "null") ){
            sel_str += "<option value='"+name+"'>"+this.world.nodes[name].name+"</option>";
            if( this.active_node === "" ){
                this.active_node = this.world.nodes[name];
                this.ctr++;
            }
        }
    }
    $("#node_sel").html(sel_str);

    sel_str = "";
    var act;
    for( var name in this.world.characters ){
        act = this.world.characters[name]; 
        if( act.allegiance != "player" ){
            sel_str += "<option value='"+act.name+"'>"+act.name+"</option>";
            if( this.active_npc === "" ){
                this.active_npc = act.name;
                this.ctr2++;
            }
        }
    }
    $("#npc_sel").html(sel_str);

    this.set_node_summary();

}

EditState.prototype.set_node_summary = function(){
    if( this.active_node == "" ){
        this.active_node = {name:"None", pers:"false", newx:"None", newy: "None", xpos:"None", ypos:"None", val1:"None", val2:"None", val3:"None", next:"None"}
    } 

    $("#name").html(this.active_node.name);
    $("#pers").html(this.active_node.pers);
    $("#newx").html(this.active_node.newx);
    $("#newy").html(this.active_node.newy);
    $("#xpos").html(this.active_node.xpos);
    $("#ypos").html(this.active_node.ypos);
    $("#val1").html(this.active_node.val1);
    $("#val2").html(this.active_node.val2);
    $("#val3").html(this.active_node.val3);
    $("#next").html(this.active_node.next);
}

EditState.prototype.set_npc_summary = function(){
    var npc = "none";
    var captain = this;
    for( var i in captain.game.map_loader.npclist){
        var tmp = captain.game.map_loader.npclist[i];
        if( tmp.name == this.world.fix_actor_name(this.active_npc) ){
            npc = tmp;
            break;
        }
    }

    if( this.active_npc == "" || npc == undefined || npc == "none"  ){
        npc = {"name":"Mr. Generic","sprite":"none","dialogue":{},"ai_combat":"none","ai_town":"none","inventory":[],"dspells":[],"lspells":[],"stats":{"POW":1,"ACC":1,"FOR":1,"CON":1,"RES":1,"SPD":1,"EVA":1}}
    }     

    $("#iname").val( npc.name );
    $("#isprite").val( npc.sprite );
    $("#idialogue").val( npc.dialogue );
    $("#iai_combat").val( npc.ai_combat );
    $("#iai_town").val( npc.ai_town );
    $("#iinventory").val( npc.inventory );
    $("#iallegiance").val( npc.allegiance );

    $("#iPOWinp").val( npc.stats.POW );
    $("#iACCinp").val( npc.stats.ACC );
    $("#iFORinp").val( npc.stats.FOR );
    $("#iCONinp").val( npc.stats.CON );
    $("#iRESinp").val( npc.stats.RES );
    $("#iSPDinp").val( npc.stats.SPD );
    $("#iEVAinp").val( npc.stats.EVA );

    $("#info_pane").show();
}
/**
    Get a random id of letters, numbers, and symbols of the length specified
    @param len The lenght of the id
*/
EditState.prototype.random_id = function(len){
    var text = "";
    var possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghigklmnopqrstufwxyz1234567890";
    for( var i = 0; i < len; i++){
        text += possible.charAt(Math.floor(Math.random() * possible.length));
    }
    return text;
}

EditState.prototype.hide_window = function(window_id){
    $("#"+window_id).hide();
}

EditState.prototype.print_nodes = function(){
    var start_index = this.params.xml.search('<property name="ANODE#0" value="0#0#0#0#none#none#none#none"/>') + 62;
    var end_index   = this.params.xml.search('<property name="ZNODE#0" value="0#0#0#0#none#none#none#none"/>');

    console.log("NODES", start_index, end_index, this.params.xml.substring(start_index, end_index) );
}

EditState.prototype.begin = function(){
	this.draw_map();
}

EditState.prototype.pause = function(){

}

EditState.prototype.resume = function(){
	this.draw_place();
}

EditState.prototype.destroy = function(){

}

EditState.prototype.handleKeyPress = function(ev){

    var cpk = [];
    cpk[ev.keyCode] = true;

    if (cpk[38]) {
        // UP ARROW
        this.world.camY--;
        ev.preventDefault();
    }
    if (cpk[40]) {
        // DOWN ARROW
        this.world.camY++;
        ev.preventDefault();
    } 
    if (cpk[37]) {
        // LEFT ARROW
		this.world.camX--;
        ev.preventDefault();
    } 
    if (cpk[39]) {
        // RIGHT ARROW
		this.world.camX++;
        ev.preventDefault();
    }
    if(cpk[17]) {
    	//RIGHT CTRL
    	this.add_node(NODE_STR);
    	//ev.preventDefault();
    }
    if(cpk[18]) {
    	//RIGHT CTRL
    	//ev.preventDefault();
    }

    if( this.world.camY < 0 )
        this.world.camY = 0;

    if( this.world.camX < 0 )
        this.world.camX = 0;

    if( this.world.camY > this.params.height-9 )
        this.world.camY = this.params.height-9;

    if( this.world.camX > this.params.width-16 )
        this.world.camX = this.params.width-16;

    this.draw_place();
}

EditState.prototype.handleMouseClick = function(ev, off){
    var mouseX = ev.clientX;
    var mouseY = ev.clientY;

    prevMouseX = mouseX;
    prevMouseY = mouseY;

    this.mx = this.world.pix_to_gridw(mouseX);
    this.my = this.world.pix_to_gridh(mouseY);

    this.ocamx = this.world.camX;
    this.ocamy = this.world.camY;

    var frame = document.getElementById(this.fm_id).contentWindow;
    frame.setDefault("xpos", this.mx);
    frame.setDefault("ypos", this.my);    

    var node = this.world.get_node_by_position(this.mx, this.my);
    if( node != "none" ){
        this.active_node = node;
        $("node_sel").val(node.name);
        this.set_node_summary();
        $("#show_nedit_button").click();
    }

    var act = this.world.get_character_by_position(this.mx, this.my);
    if( act != "none" ){
        this.active_npc = act.name;
        this.set_npc_summary();
        $("npc_sel").val(node.name);
        $("#npc_sel").val(this.active_npc);
        $("#show_npcedit_button").click();
    }

    this.draw_place();
}

var mctr = 1;
var prevMouseX = 0;
var prevMouseY = 0;
EditState.prototype.handleMouseMove = function(ev, off){
    var mouseX = ev.clientX;
    var mouseY = ev.clientY;

    this.hovX = this.world.pix_to_gridw(mouseX);
    this.hovY = this.world.pix_to_gridh(mouseY);

    if( this.game.mouseDown ){
    	if(mctr %2 == 0){
            this.diffX = Math.round((prevMouseX-mouseX)/this.world.gridw);
            this.diffY = Math.round((prevMouseY-mouseY)/this.world.gridh);
    		this.world.set_camera(this.ocamx + this.diffX, this.ocamy + this.diffY);
    		mctr = 1;
    	} else {
    		mctr++;
    	}

	    if( this.world.camY < 0 )
	        this.world.camY = 0;

	    if( this.world.camX < 0 )
	        this.world.camX = 0;

	    if( this.world.camY > this.params.height-this.tsqy )
	        this.world.camY = this.params.height-this.tsqy;

	    if( this.world.camX > this.params.width-this.tsqx )
	        this.world.camX = this.params.width-this.tsqx;
    }

    this.draw_place();
}


//Swell things are good Brad


 
/* jshint browser: true */
/* global app */

(function(){
"use strict";

var FadeState = app.game.FadeState = function( game, params ){
	app.game.AbstractState.call(this, game);

    this.state1 = params.state1;
    this.state2 = params.state2;

    clearInterval(this.state1.interval);
    this.state1.isOn = false;   

    clearInterval(this.state2.interval);
    this.state2.isOn = false;   

    this.fadeframes = 20;      
};

FadeState.prototype = app.extend(app.game.AbstractState); 

FadeState.prototype.init = function(){
    this.frame = 0;
    this.resume();
};

FadeState.prototype.resume = function(){
    this.interval = setInterval(function(){
        this.update(false);
    }.bind(this),50);
};

FadeState.prototype.update = function(){
    var alpha = app.normalize( this.frame, 0, this.fadeframes, 0, 1);
    this.game.display.context.globalAlpha = 1.0-alpha;
    this.state1.draw();

    this.game.display.context.globalAlpha = alpha;
    this.state2.draw();

    if( alpha > 0.95 ){
        this.game.display.context.globalAlpha = 1.0;
        clearInterval( this.interval );
        this.state2.isOn = true;
        this.game.State = this.state2;
        this.state2.begin();
    }

    this.game.display.context.globalAlpha = 1.0;

    this.frame++; 
};

})(); 
/* jshint browser: true */
/* global app, console */

(function(){
"use strict";

app.game = {};

var draw_loading = app.game.draw_loading = function(game, ratio){
    var context = {display:game.display};
    var bgx = 0;
    var bgy = 0;
    var bgw = app.ui.CleanUIElem.prototype.to_x_ratio.call( context, 472 );
    var bgh = app.ui.CleanUIElem.prototype.to_y_ratio.call( context, 288 );

    var textx = app.ui.CleanUIElem.prototype.to_x_ratio.call( context, 472/2 );
    var texty = app.ui.CleanUIElem.prototype.to_y_ratio.call( context, 288/3 );

    var lbgx = app.ui.CleanUIElem.prototype.to_x_ratio.call( context, 10 );
    var lbgy = app.ui.CleanUIElem.prototype.to_y_ratio.call( context, 130 );
    var lbgw = app.ui.CleanUIElem.prototype.to_x_ratio.call( context, 472-20 );
    var lbgh = app.ui.CleanUIElem.prototype.to_y_ratio.call( context, 40 );

    var lx = app.ui.CleanUIElem.prototype.to_x_ratio.call( context, 15 );
    var ly = app.ui.CleanUIElem.prototype.to_y_ratio.call( context, 140 );
    var lw = app.ui.CleanUIElem.prototype.to_x_ratio.call( context, ratio );
    var lh = app.ui.CleanUIElem.prototype.to_y_ratio.call( context, 40 - 20 );
    game.display.draw(bgx, bgy, bgw, bgh, "black");
    game.display.draw_text_params( "Loading...", textx, texty, {
        font:"Verdana",
        color:"red",
        size:"16",
        align:"center"
    });
    game.display.draw(lbgx, lbgy, lbgw, lbgh, "white");
    game.display.draw(lx, ly, lw, lh, "grey");
};

function load_game(game) { 
    var running = true;
    (function ld(){
        if( running === false ){
            return;
        }

        window.requestAnimationFrame(ld); 
        var rdy = game.is_ready();
        var ratio = app.normalize(rdy.curr, 0, rdy.max, 10, 472-30);
        if(rdy.is_ready){
            running = false;
            game.change_state("TEST_IngameState", {});
        } else {
            app.game.draw_loading(game, ratio);
        }
    })();
}

// function load_game(game) { 
//     var running = true;
//     console.log("LOAD THE GAME");
//     (function ld(){
//     	if( running === false ){
//             return;
//         }

//         window.requestAnimationFrame(ld); 
//         var rdy = game.is_ready();

// 	    if(rdy.is_ready){
// 	        console.log("BEGIN");
// 	        running = false;
// 	        //game.change_state("MenuState", {});
// 	    } else {
//             draw_loading();
// 	    }
// 	})();
// }

var Game = app.game.Game = function(){

    /* jshint ignore:start */
    window.oref = this;
    /* jshint ignore:end */

    this.options = {
        enableSounds:true,
        enableMusic:false,
        hardMode:false
    };

    this.map_loader = new app.maps.MapLoader();
    this.display = new app.display.Display("benj");

    draw_loading(this, 0);

    this.state = new app.game.LoadingState( this );
    this.Save = new app.save.SaveGame();   
    this.soundCache = new app.sound.SoundCache(this);
    this.CutsLoader = new app.cutscenes.CutsceneLoader(this.display);
    this.CutsLoader.load_cutscene_meta();
    load_game(this);

    app.ui.UIElement.prototype.soundCache = this.soundCache;
    
    this.mouseDown = false;

	Game.prototype.keyboard = null;

    this.initEventHandlers();
    this.keys = {};
};

Game.prototype.load_save = function(src){
    this.change_state("LoadingState");
    this.Save.load_save_disk(src, this);
};

Game.prototype.stop_sound = function(){
    this.soundCache.stop_all();
};

Game.prototype.enable_music = function(){
    this.soundCache.loop_sound("protoliththeme");
};

Game.prototype.initEventHandlers = function(){
    document.onkeydown = function(ev){
        this.handleKeyDown(ev);

        if( ev.keyCode === 82 && ev.ctrlKey || ev.keyCode === 116){
        	console.log("CTRL R PRESSED");
            return;
        }        

        if( ev.which !== 187 && ev.which !== 189 && ev.which !== 17 ){
            ev.preventDefault();
        }
    }.bind(this);

    document.onkeyup = function(ev){
        this.handleKeyUp(ev);
    }.bind(this);

    this.display.canvas.onmousemove = function(ev){  
        this.handleMouseMove(ev);
        return false;
    }.bind(this);

    this.display.canvas.onmousedown = function(ev){
        this.mouseDown = true;
        this.handleMouseClick( ev );   

        return false;
    }.bind(this);    

    this.display.canvas.onmouseup = function(ev){
        this.mouseDown = false;
        this.handleMouseUnclick(ev);
        return false;
    }.bind(this); 

    document.addEventListener('touchstart', function(e) {
        var touch = e.touches[0];
        var ev = {clientX:touch.pageX, clientY:touch.pageY};
        this.handleMouseClick(ev);        
    }.bind(this), false); 

    document.addEventListener('touchstart', function(e) {
        var touch = e.touches[0];
        var ev = {clientX:touch.pageX, clientY:touch.pageY};
        this.handleMouseMove(ev);        
    }.bind(this), false); 

    document.addEventListener('touchend', function() {
        this.handleMouseUnclick();
    }.bind(this), false); 
};

Game.prototype.handleKeyDown = function(ev){

    if( ev.which == 112 ){  //p
        if( this.state.isRunning ){
            this.state.pause();
        } else {
            this.state.resume();
        }
    }

    this.keys[ev.which] = true;

    this.state.handleKeyPress(ev);
};

Game.prototype.handleKeyUp = function(ev){
    this.keys[ev.which] = false;
    if( "handleKeyUp" in this.state ){
    	this.state.handleKeyUp(ev);
    }
};

Game.prototype.handleMouseClick = function(ev) {
    this.state.handleMouseClick(ev);
};

Game.prototype.handleMouseUnclick = function(ev) {
    this.state.handleMouseUnclick(ev);
};

Game.prototype.handleMouseMove = function(ev) {
    this.state.handleMouseMove(ev);
};

Game.prototype.is_ready = function(){
    var disp = this.display.is_ready();
    var mapl = /*//this.map_loader.is_ready();*/{is_ready:true,max:1,curr:1};
    var soun = {is_ready:true,max:1,curr:1};//this.soundCache.is_ready();

    return {
        is_ready:disp.is_ready && mapl.is_ready && soun.is_ready,
        max:disp.max+mapl.max+soun.max,
        curr:disp.curr+mapl.curr+soun.curr
    };
};

Game.prototype.get_dummy_party = function(){
    var ids = ["POW", "ACC", "FOR", "CON", "RES", "SPD", "EVA"];
    var ret = {
        pc0:{stats:{}},
        pc1:{stats:{}},
        pc2:{stats:{}}
    };

    for( var i in ids ){
        ret.pc0.stats[ids[i]] = 1;
        ret.pc1.stats[ids[i]] = 1;
        ret.pc2.stats[ids[i]] = 1;
    }

    ret.pc0.name = "actor0";
    ret.pc1.name = "actor1";
    ret.pc2.name = "actor2";

    ret.pc0.sprite = "black_knight";
    ret.pc1.sprite = "black_knight";
    ret.pc2.sprite = "black_knight";

    return ret;    
};

Game.prototype.change_state = function(state_name, state_params){
	if( this.state !== undefined ){
		if( this.state.intervalid ){
            clearInterval( this.state.intervalid );
        }

		this.state.destroy();
	}

    var _set_state_by_name = function(){
        if( app.game[ state_name ] === undefined ){
            console.error("No state instance of the name '"+state_name+"' exists.");
            this.state = new app.game.MenuState(this);
            return;
        }

        this.state = new app.game[ state_name ]( this, state_params );
    };

    switch( state_name ){
        case "CreatePartyState": 
            this.state = new app.game.CreatePartyState(this, state_params ); 
            break;
        case "WorldState": 
            this.state = new app.game.WorldState(this, state_params ); 
            break;
        case "EditState": 
            this.state = new app.game.EditState(
                this, this.Save.create_new_game(this.get_dummy_party(), this )
            ); 
            break;
        case "LoadingState": 
            this.state = new app.game.LoadingState(this); 
            break;
        case "MenuState": 
            this.state = new app.game.MenuState(this); 
            break;
        case "TransitionState": 
            this.state = new app.game.TransitionState(this, state_params); 
            break;
        case "FadeState": 
            this.state = new app.game.FadeState(this, state_params); 
            break;
        case "CutsceneState": 
            this.state = new app.game.CutsceneState(this, state_params); 
            break;
        default: _set_state_by_name.call(this);
    }

    this.start();
};

Game.prototype.create = function(state_params){
    this.change_state( "CreatePartyState", state_params );
};

Game.prototype.start = function(){
    this.state.init();
};

Game.prototype.remake_ui = function(){
    if( this.state && this.state.remake_ui ){
        this.state.remake_ui();
    }
};

})(); 
/* jshint browser: true */
/* global app */

(function(){
"use strict";

var LoadingState = app.game.LoadingState = function( game, next_state ){
	app.game.AbstractState.call(this, game);
    this.next_state = next_state;
    this.init();
};

LoadingState.prototype = app.extend(app.game.AbstractState); 

LoadingState.prototype.init = function(){
    this.begin();
};

})(); 
/* jshint browser: true */
/* global app */

(function(){
"use strict";

var MenuState = function( game ){
	app.game.AbstractState.call(this, game);

    this.uiElements = [];
    this.parts = [];

    this.running = false;
};

MenuState.prototype = app.extend(app.game.AbstractState); 

MenuState.prototype.init = function(){

    this.uiElements.push( 
        new app.ui.MenuOverlay(
            0, 0, "MenuPane", "MenuPane", this.game.display, this.game
        )
    ); 

    this.game.display.canvas.style.position = "absolute";
    this.game.display.canvas.style.top = "0px";
    this.game.display.canvas.style.left = "0px";

    this.game.soundCache.stop_all();
    this.game.soundCache.loop_sound("protoliththeme");

    this.begin();
};

MenuState.prototype.begin = function(){
	this.running = true;
    this.resume();
};

MenuState.prototype.resume = function(){
	//this.update(false);
    var captain = this;

    (function step(){
    	if( captain.running === true ){
	    	window.requestAnimationFrame(step); 
	    	captain.update(false); 
	    }
    })();
};

MenuState.prototype.update = function(){
    this.game.display.clear_area(0, 0, 472, 288);    

    for( var i in this.uiElements ){
        this.uiElements[i].draw();
    }      
};

MenuState.prototype.destroy = function(){
	this.running = false;
};

MenuState.prototype.handleMouseClick = function(ev){
    var mouseX = ev.clientX;
    var mouseY = ev.clientY;

    for( var i in this.uiElements ){
    	var elem = this.uiElements[i];
    	if( elem.contains( mouseX, mouseY) ){

    	}
    }
};

})(); 
/* jshint browser: true */
/* global app  */

(function(){
"use strict";

var Timer = app.game.Timer = function(){
	this.timers = {};
};

Timer.prototype.time = function(id){
	this.timers[ id ] = +(new Date() );
};

Timer.prototype.timeEnd = function(id){
	var ret = this.timers[ id ] ? (+(new Date())) -  this.timers[ id ] : 0;
	delete this.timers[ id ];
	return ret;
};

})(); 
/* jshint browser: true */
/* global app */

(function(){
"use strict";

var TransitionState = app.game.TransitionState = function( game, oncomplete){
	app.game.AbstractState.call(this, game);

    this.onfinish = oncomplete;

    this.notifs = [
        "Loading images...",
        "Setting objects...",
        "Enabling handlers...",
        "Writing to disk space...",
        "Creating rand tables...",
        "Analyzing productivity...",
        "Clearing memory...",
        "Initializing ui...",
        "Finishing..."
    ];
};

TransitionState.prototype = app.extend(app.game.AbstractState); 

TransitionState.prototype.init = function(){
    this.onfinish();
    // this.loadx = Math.floor(472/3);
    // this.loady = Math.floor(288*4/5);

    // this.eloadx = Math.floor(472/3 + 472/3);
    // this.vx = 30;

    // this.cloadx = 0;

    // this.frame = 0;
    // this.fs = 2;

    // this.begin();
};

TransitionState.prototype.begin = function(){
    this.resume();
};

TransitionState.prototype.resume = function(){
    this.interval = setInterval(function(){
        this.update(false);
    }.bind(this),50);
};

TransitionState.prototype.update = function(){
    var notif_ind = Math.floor(
        app.normalize( this.cloadx, 0, this.eloadx-this.loadx, 0, this.notifs.length)
    );

    this.game.display.clear_area(0, 0, 472, 288);

    this.game.display.draw_sprite_scaled("ProtolithPane", 0, 0, 472, 288 );
    this.game.display.draw(
        this.loadx-2, this.loady-2, this.eloadx-this.loadx+2, 14, "#343434"
    );
    this.game.display.draw(
        this.loadx, this.loady, this.cloadx, 10, "black"
    );
    this.game.display.draw_text(
        this.notifs[notif_ind], this.loadx*3/2, this.loady-5, 
        "Calibri", "#FFFFFF", "14", "Normal", false
    );

    if( this.frame == this.fs ){
        this.cloadx += this.vx;
        this.frame = 0;
    }

    if( this.loadx + this.cloadx >= this.eloadx ){
        clearInterval( this.interval );
        this.onfinish();
        //this.game.change_state(this.new_state, this.new_state_params);
    }

    this.frame++; 
};

})(); 
/* jshint browser: true */
/* global app, console */

(function(){
"use strict";

var WorldState = app.game.WorldState = function( game, stateparams ){
	app.game.AbstractState.call(this, game);

    this.stateparams = stateparams;
    this.params = stateparams;

    this.isOn = true;
    this.forceQuit = false;
    this.intervalid = -1;

    this.player = new app.world.Player( this );
    this.timer = new app.game.Timer();
    this.fpsframe = 0;
    this.fps = 0;

    this.load_state_from_params(stateparams);

    this.disableMove = false;
    this.pausecombat = false;

    this.mx = 0;
    this.my = 0;

    this.constkeys = {
        38:true,
        40:true,
        37:true,
        39:true,
        97:true,
        98:true,
        99:true,
        100:true,
        102:true,
        103:true,
        104:true,
        105:true
    };

    this.cleanuielems = [];

    this.uistore = {
        animating: false, //if the menu is currently animating
        pcselected: 0, //the index of the currently selected pc on the pclist
        menustate: "none", //the current menustate
        prevstate: "none", //the previous menustate (for animation logic)
        currentitem: null, //a ref to the current item for modals
        currentitemname: "none", //what the current item name for modals is
        currentspell: null,
        currentnpc: null,
        select:{
        	visible: false,
        	onselect: function(){},
            x:0,
            y:0
        },
        menus: {
            pickup:{
                nearbyitems: []
            },
            dark:{
                tab: 0
            },
            light:{
                tab: 0
            }
        },
        control: false, //which control is active 'n', 'ne', 'e', etc...
        actionbuttons:{
            a:{
                action: "none",
                pressed: false,
                disabled: false
            },
            b:{
                action: "none",
                pressed: false,
                disabled: false,
            }
        },
        clickedelem: false, //true if an element was clicked during 1 ev propogation,
        notification:{
            frames:0,
            message:"none"
        },
        mouse:{ 
            down:false,
            x:0,
            y:0,
        },
        modals: {
            reorder:{
                visible: false,
                disabled: false,
                animating: false
            },
            iteminfo:{
                visible: false,
                disabled: false,
                animating: false
            },
            equip:{
                visible: false,
                disabled: false,
                animating: false
            },
            give:{
                visible: false,
                disabled: false,
                animating: false
            },
            drop:{
                visible: false,
                disabled: false,
                animating: false
            },
            spellinfo:{
                visible: false,
                disabled: false,
                animating: false
            }
        }
    };

    this.inter = new app.world.Interface( this );

    this.actionfuncs = {};
    for( var i in app.world.Interface.prototype.actionfuncs ){
    	var func = app.world.Interface.prototype.actionfuncs[i];
    	this.actionfuncs[i] = func.bind(this.inter);
    }
};

WorldState.prototype = app.extend(app.game.AbstractState); 

WorldState.prototype.remake_ui = function(){
    this.cleanuielems = [];

    var list = [
        app.ui.overlays.CleanPCListOverlay,
        app.ui.overlays.CleanMovementOverlay,
        app.ui.overlays.CleanMenuOverlay,
        app.ui.overlays.CleanActionOverlay,
        app.ui.overlays.CleanStatusOverlay,
        app.ui.overlays.CleanInventoryOverlay,
        app.ui.overlays.CleanDarkMagicOverlay,
        app.ui.overlays.CleanLightMagicOverlay,
        app.ui.overlays.CleanPickupOverlay,
        app.ui.overlays.CleanDialogueOverlay,
        app.ui.CleanNotification,
        app.ui.CleanSelector
    ];

    for( var i in list ){
        this.cleanuielems.push( 
            new list[i]( this.game, this, this.game.display )
        );
    }
 
    this.world.recalculate_dims();
};

WorldState.prototype.load_state_from_params = function(stateparams){

    //transfer the data on dead npcs into each map's current state 
    for( var map_name in stateparams.maps_deadnpcs){
        var dead_npc_list = stateparams.maps_deadnpcs[map_name];
        var map_npcs = [];
        for( var j in dead_npc_list){
            if( dead_npc_list[j] !== null ){
                map_npcs.push(dead_npc_list[j]);
            }
        }
        this.game.map_loader.get_map_by_name(map_name).dead_npcs = map_npcs;
    }

    //transfer the data on executed nodes into each map's current state
    for( var map_name in stateparams.maps_nodesexecuted ){
        var nodes_exec = stateparams.maps_nodesexecuted[map_name];
        var map_nodes = [];
        for( var j in nodes_exec ){
            map_nodes.push(nodes_exec[j]);
        }
        this.game.map_loader.get_map_by_name(map_name).nodes_executed = map_nodes;
    }

    //transfer the data on visible tiles into each map's current state
    for( var map_name in stateparams.maps_visibletiles ){
        var loaded_vis_tiles = stateparams.maps_visibletiles[map_name];
        var map = this.game.map_loader.get_map_by_name(map_name);
        var mem_vis_tiles = this.game.map_loader.get_empty_MET(map);

        for( var x = 0; x < map.width; x++ ){
            for( var y = 0; y < map.height; y++){
                mem_vis_tiles[x][y] = loaded_vis_tiles[x][y]; 
            }      
        } 

        map.map_explored_table = mem_vis_tiles;
    }

    var worldparams = this.game.map_loader.get_map_params( stateparams.currentmap );

    this.world = new app.world.World(this.game.display, worldparams );

    this.player.load_pcs( stateparams.party );
    this.player.load_settings( stateparams.settings );
};

WorldState.prototype.init = function(dontstart){
    this.active_pc = this.player.get_first();
    this.world.init(this);  

    this.set_wmode();

    if( dontstart === false ){
	    this.begin();
    }

    //Must be created AFTER the ui
    //this.Shortcut = new WorldStateShortcut(this);

    this.game.soundCache.stop_all();
    this.game.soundCache.loop_sound("ambient1");
};

WorldState.prototype.begin = function(){
    this.wMode.start();
	var captain = this;

    var keythrottle = 0;
	function wsinterval(){
 		if( captain.forceQuit ){
            return;
        }

        if( captain.fpsframe === 0 ){
            captain.timer.time( "fps" );
        }

		window.requestAnimationFrame(wsinterval); 
		if( keythrottle === 0 ){
		    keythrottle = 5;
            for( var i in captain.game.keys ){
	           if( captain.constkeys[i] === true && captain.game.keys[i] === true){
	           	   captain.handleKeyPress({which:i, keyCode:i});
	           } 
            }
    	} else { 
            keythrottle--;
    	}

		captain.draw();

        captain.game.display.draw_text_params("FPS " + captain.fps, 30, 30, {
            color: "white",
            font: "monospace",
            size: "20",
            align: "center",
            shadowcolor: "black"
        });

        if( captain.fpsframe === 59 ){
            var time = captain.timer.timeEnd( "fps" );
            captain.fps = Math.round( 60 / (time/1000) );
            captain.fpsframe = 0;
        } else {
            captain.fpsframe++;
        }
	} wsinterval();
};

WorldState.prototype.draw = function(){
    this.update();

    if( this.uistore.menustate === "none" ){
        this.world.draw( this.wMode );
    }

    for( var i in this.cleanuielems ){
        this.cleanuielems[i].draw();
    }
};

WorldState.prototype.update = function(){
    this.inter.handle_action();
    this.wMode.handle_control( this.uistore.control );
};

WorldState.prototype.random_id = function(len){
    var text = "";
    var possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghigklmnopqrstufwxyz1234567890";
    for( var i = 0; i < len; i++){
        text += possible.charAt(Math.floor(Math.random() * possible.length));
    }
    return text;
};

WorldState.prototype.change_map = function(map_name, loc_x, loc_y){
    var map_params = this.game.map_loader.get_map_params(map_name);

    var prev_params = this.game.map_loader.get_map_by_name( this.world.name );
    prev_params.map_explored_table = this.world.map_explored_table;

    this.world.params = map_params;
    console.log("Change map to ", this.world.params);

    this.en_list = [];
    if( this.world.params.npcs !== "none" ){
        for( var i in this.world.params.npcs ){
            if( !app.inArr( this.world.params.npcs[i], this.world.params.dead_npcs )) {
                this.en_list.push( this.world.params.npcs[i].name );
            }        
        }  
    }

    this.world.init(this);
    this.params.mode = this.world.params.mode;
    this.set_wmode();
    this.wMode.start();    

    var act = this.world.get_character( this.player.get_first() );

    act.set(parseInt(loc_x), parseInt(loc_y));
    this.world.set_camera( parseInt(loc_x)-4, parseInt(loc_y)-4);   
};

WorldState.prototype.set_wmode = function(mode){
    if( mode === undefined ){
        this.set_wmode( this.params.mode );
        return;
    }
    
    if( mode === "town" ){
        this.wMode = new app.world.mode.TownMode( this, this.world, this.ui );
    } else if( mode === "combat" ){
        this.wMode = new app.world.mode.CombatMode( this, this.world, this.ui );
    } else if( mode === "outside" ){
        this.wMode = new app.world.mode.OutsideMode( this, this.world, this.ui );
    }
    this.wMode.init_actors();
};

WorldState.prototype.toggle_wmode = function(){
    if( this.wMode instanceof app.world.mode.CombatMode ){
        this.game.soundCache.play_sound("exitcombat");
        this.params.mode = "town";
        this.set_wmode();
        this.wMode.start();  
    } else {
        this.game.soundCache.play_sound("startcombat");
        this.params.mode = "combat";
        this.set_wmode();
        this.wMode.start();   
    } 
};

WorldState.prototype.pause_combat = function(){
    this.pausecombat = true;
};

WorldState.prototype.unpause_combat = function(){
    this.pausecombat = false;
};

WorldState.prototype.destroy = function(){
	this.forceQuit = true;
};

WorldState.prototype.handleKeyPress = function(){
};

WorldState.prototype.handleMouseClick = function(ev){
    var mouseX = ev.clientX;
    var mouseY = ev.clientY;

    this.uistore.mouse.down = true;
    this.uistore.mouse.x = mouseX;
    this.uistore.mouse.y = mouseY;

    for( var i in this.cleanuielems ){
        if( this.cleanuielems[ i ].propogate_click( ev.clientX, ev.clientY ) ){
            this.uistore.clickedelem = true;
            this.uistore.mouse.down = false;
            break;
        }
    }

    //this.wMode.click(ev, off);
};

WorldState.prototype.handleMouseUnclick = function(){
    this.uistore.mouse.down = false;

    if( this.uistore.clickedelem ){
        this.uistore.clickedelem = false;
        return;
    }
    for( var i in this.cleanuielems ){
        if( this.cleanuielems[ i ].propogate_unclick() ){
            break;
        }
    }
};

WorldState.prototype.handleMouseMove = function(ev){
    var mouseX = ev.clientX;
    var mouseY = ev.clientY;

    this.uistore.mouse.x = mouseX;
    this.uistore.mouse.y = mouseY;

    //this.wMode.mousemove(ev, off);
};

WorldState.prototype.unpress_all_keys = function(){
    for( var i in this.constkeys ){
        this.game.keys[i] = false;
    }
};

})(); 
/*
	A place to partition the edit state ui
*/

var esUI = function( es ){

	//refrence to the edit state
	this.es = es;
	
}

esUI.prototype.init = function(){
	this.initRight();	
	this.initLeft();

	this.initNodeButtons();
}


esUI.prototype.initLeft = function(){

	var captain = this;

	//INDEX
	//MAP SELECTOR BOX
	//SAVE BUTTON
	//NEW NODE FRAME

	//MAP SELECTOR BOX
	var sel_str = "<select id='map_sel' style='width:98px;float:left'>";
	for( var name in this.es.game.map_loader.maps ){
		sel_str += "<option value='"+name+"'>"+name.substr(9)+"</option>";
	}
	sel_str+="</select>";
	$("#canvas_wrapper").append(sel_str);
	$("#map_sel").change( function(){
		var val = $(this).val();
		val = val.substring(9, val.length-4);

		captain.es.change_map(val);
		captain.es.draw_place(); 
	}); 

	//SAVE BUTTON
	var save_str = "<button id='save_button' style='background-color:#AA6666'>Save</button>";
	$("#canvas_wrapper").append(save_str);
	$("#save_button").live("click",function(){
		WriteFile(captain.es.params.xml, captain.es.params.name);
	});

    //NEW NODE FRAME
    var path = document.location.pathname;
    var dir = path.substring(0, path.lastIndexOf('/'));
    var fm_id = "fm"
    var fm_str = "<iframe width=460 height=385 id='"+fm_id+"' src='file://"+dir+"/game/editStateBin/editNodeFrame.html' style='position:absolute;left:820;top:10;z-index:99'> </iframe>";
	this.es.fm_id = fm_id;    
    $("#canvas_wrapper").append(fm_str);  
    $("#"+fm_id).hide();  
    $("#done_button").live("click",function(){
        $("#"+fm_id).hide();
    });

}

esUI.prototype.on_frame_load = function( func, id ){
	var captain = this;
	var frame = document.getElementById(id);
	if( (frame == null) ){
		setTimeout( function(){captain.on_frame_load( func, id) }, 150 );
	} else {
		console.log("GOt frame", id, frame.contentWindow)
		func(frame.contentWindow);
	}
}

esUI.prototype.initRight = function(){

	//INDEX
	//Node Selector
	//Show Node Edit tab
	//NPC edit button
	//Container holding the NPC and Node edit tabs
	//NPC selector inside NPC edit tab
	//EDIT NODE SELECTOR BOX
	//EDIT NODE BUTTON  
	//DELETE NODE BUTTON 
	//NODE SUMMARY DIV

	var fm_id = "fm";
	var captain = this;

	//Node selector
	$("#canvas_wrapper").append("<div id='nselect'></div>");
	$("#nselect").css({
		// left:'-530px',
		// top:'-44px',
	    borderStyle:'ridge',
	    borderColor:'#DADADA',
	    width:'190px',
	    height:'176px',
        "float":"left"
	});

   $("#canvas_wrapper").css({
        position:"relative",
        // top:"-400px",
        // left:"-1px"
   }); 

	//Show Node Edit tab
    $("#canvas_wrapper").append("<button id='show_nedit_button'> Nodes </button>");
    $("#show_nedit_button").css({
        position:'relative',
        width:'50px',
        height:'20px',
        //float:"left",
        zIndex:9
    });   
    $("#show_nedit_button").live("click", function(){
        $("#show_nedit_button").css({borderColor:'#DA33FF'});
        $("#show_npcedit_button").css({borderColor:'#DADADA'});
        $("#nedit").show(); 
        $("#npcedit").hide();        
    });  

    //Show NPC Edit tab
    $("#canvas_wrapper").append("&nbsp<button id='show_npcedit_button'> NPC </button>");
    $("#show_npcedit_button").css({
        //position:'relative',
        width:'50px',
        height:'20px',
        //float:"left"
    });  
    $("#show_npcedit_button").live("click", function(){
        $("#show_nedit_button").css({borderColor:'#DADADA'});
        $("#show_npcedit_button").css({borderColor:'#DA33FF'});        
        $("#nedit").hide(); 
        $("#npcedit").show();        
    });  
    $("#show_nedit_button").click();  	

    //NPC edit tab (ya its fucked up I don't want to fix it)
    $("#canvas_wrapper").append("<div id='edit_cont'></div>");
    $("#edit_cont").append("<div id='nedit'></div>");
    $("#edit_cont").css({
        // position:'absolute',
        // left:'472px',
        // top:'-3px',
        borderStyle:'ridge',
        borderColor:'#DADADA',
        width:'190px',
        height:'388px',
        "float":"left"
    });  
    $("#edit_cont").append("<div id='npcedit'></div>");
    $("#npcedit").css({
        display:'none',
        "float":"right"
    });  

    //NPC edit tab
    // $("#nedit").css({
    //     // position:'absolute',
    //     // left:'472px',
    //     // top:'-3px',
    //     float:right,
    //     borderStyle:'ridge',
    //     borderColor:'#DADADA',
    //     width:'180px',
    //     height:'288px'
    // });     

    //NPC selector inside NPC edit tab
    var sel_str = "<select id='npc_sel' style='width:98px;float:left'>";
    sel_str+="</select>";
    $("#npcedit").append(sel_str);
    $("#npc_sel").change( function(){
        var ind = $(this).val();
        var node = captain.es.world.get_character(ind);
        captain.es.active_npc = node.name;
        if( node.x >= 0 && node.y >= 0 ){
            captain.es.world.camX = node.x - 8;
            captain.es.world.camY = node.y - 4;
            if( captain.es.world.camX < 0 ){
                captain.es.world.camX = 0
            } else if ( captain.es.world.camY < 0 ){
                captain.es.world.camY = 0;
            }
            captain.es.draw_place();
        }
    });  

    //EDIT NODE SELECTOR BOX
    var sel_str = "<select id='node_sel' style='width:98px;float:left'>";
    sel_str+="</select>";
    $("#nedit").append(sel_str);
    $("#node_sel").change( function(){
        var ind = $(this).val();
        var node = captain.es.world.nodes[ind];
        if( node.x >= 0 && node.y >= 0 ){
            captain.es.world.camX = node.x - 8;
            captain.es.world.camY = node.y - 4;
            if( captain.es.world.camX < 0 ){
                captain.es.world.camX = 0;
            } 
            if( captain.es.world.camY < 0 ){
                captain.es.world.camY = 0;
            }

            captain.es.mx = node.x;
            captain.es.my = node.y;
        }
        captain.es.active_node = node;
        captain.es.set_node_summary();    
        captain.es.draw_place();    
    });  

    //EDIT NODE BUTTON     
    var save_str = "<button id='edit_button' style='background-color:#66AA66'>Edit</button>";
    $("#nedit").append(save_str);
    $("#edit_button").live("click",function(){
        var frame = document.getElementById(fm_id).contentWindow;
        frame.prep();
        var node = captain.es.active_node;

        if( node == "" || node.name == "null" ){
            alert("You did not select a valid node!");
            return;
        }

        $("#"+node.type).click();

        frame.setTitle(node.type);
        frame.setProp(   "pers", "checked",node.pers);
        frame.setDefault("xpos", node.x);
        frame.setDefault("ypos", node.y);
        frame.setDefault("newx", node.newx);
        frame.setDefault("newy", node.newy);
        frame.setDefault("value1", node.val1);
        frame.setDefault("v1sel", node.val1);
        frame.setDefault("value2", node.val2);
        frame.setDefault("v2sel", node.val2);
        frame.setDefault("value3", node.val3);
        frame.setDefault("v3sel", node.val3);        
        frame.setDefault("next_node", node.next);

        frame.setDoneCancel(
            function(){
                var pers = frame.getChecked("pers");

                var xpos = frame.getVal("xpos");
                var ypos = frame.getVal("ypos");

                var newx = frame.getVal("newx");
                var newy = frame.getVal("newy");

                var val1 = frame.getVal("value1");
                var val2 = frame.getVal("value2");
                var val3 = frame.getVal("value3");

                var next = frame.getVal("next_node");

                val1 = val1.replace("#","_");
                val2 = val2.replace("#","_");
                val3 = val3.replace("#","_");
                next = next.replace("#","_");

                var ret = [pers,xpos,ypos,newx,newy,val1,val2,val3,next];
                parent.NODE_STR = ret.join("#");
                parent.NODE_NAME = frame.getHTML("title");

                captain.es.delete_node(node);
                captain.es.add_node();
                captain.es.replace_node_name(node.name, NODE_NAME);
                parent.closeThis( false );
            },
            function(){
                parent.closeThis( false );
            });
    });

    //DELETE NODE BUTTON     
    var save_str = "<button id='del_button' style='width:39px; background-color:#6666AA'>Del</button>";
    $("#nedit").append(save_str);
    $("#del_button").live("click",function(){
        var node = captain.es.active_node;
        if( node.name == "null" ){
            alert("You did not select an active node");
            return;
        }
        var r = confirm("Are you sure you wish to delete this node?\n\n "+node.name);
        if( r )
            captain.es.delete_node(node);
    });

    //NODE SUMMARY DIV
    var container = "<div id='node_summary' style='background-color:white'></div>";
    $("#nedit").append(container);
    var app = "<h3 id='name' style='display:inline'>Header</h3><br>";
    $("#node_summary").append(app);
    app = "Pst?: <div id='pers' style='display:inline'>false</div><br>";
    $("#node_summary").append(app);     
    app = "Xpos: <div id='xpos' style='display:inline'>none</div><br>";
    $("#node_summary").append(app); 
    app = "Ypos: <div id='ypos' style='display:inline'>none</div><br>";
    $("#node_summary").append(app); 
    app = "Newx: <div id='newx' style='display:inline'>none</div><br>";
    $("#node_summary").append(app);  
    app = "Newy: <div id='newy' style='display:inline'>none</div><br>";
    $("#node_summary").append(app);                        
    app = "Val1: <div id='val1' style='display:inline'>none</div><br>";
    $("#node_summary").append(app);
    app = "Val2: <div id='val2' style='display:inline'>none</div><br>";
    $("#node_summary").append(app);  
    app = "Val3: <div id='val3' style='display:inline'>none</div><br>";
    $("#node_summary").append(app);       
    app = "Next: <div id='next' style='display:inline'>none</div><br>";
    $("#node_summary").append(app);       

    this.es.set_node_selector();   

    //NPC EDITOR IFRAME
    var path = document.location.pathname;
    var dir = path.substring(0, path.lastIndexOf('/'));
    var fm_id2 = "fmNPC";
    var fm_str = "<iframe width=460 height=385 id='"+fm_id2+"' src='file://"+dir+"/game/editStateBin/editNPCFrame.html' style='position:absolute;left:820;top:10;z-index:99'> </iframe>";
	this.es.fm_idNPC = fm_id2;    
    $("#nselect").append(fm_str); 
    $("#"+fm_id2).hide();

    this.on_frame_load(function(frame){
    	frame.set_captain_ref(captain.es);
    }, "fnNPC");

    //EDIT NPC BUTTON     
    var editnpc_str = "<button id='editnpc_button' style='background-color:#66AA66'>Edit</button>";
    $("#npcedit").append(editnpc_str);
    $("#editnpc_button").live("click",function(){
        var act_name = captain.es.active_npc;
        if( act_name == "null" ){
            alert("You did not select an active NPC");
            return;
        }
        var act = captain.es.world.get_character( act_name );
        $("#fmNPC").show();
    });

    //NPC CREATE FRAME
    var path = document.location.pathname;
    var dir = path.substring(0, path.lastIndexOf('/'));
    var fm_id3 = "fmNPCCreate";
    var fm_str = "<iframe width=460 height=385 id='"+fm_id3+"' src='file://"+dir+"/game/editStateBin/createNPCFrame.html' style='overflow:hidden;position:absolute;left:820;top:10;z-index:99'> </iframe>";
    $("#nselect").append(fm_str); 
    $("#"+fm_id3).hide();

    this.on_frame_load(function(frame){
    	setTimeout(function(){
	    	var frame = document.getElementById("fmNPCCreate").contentWindow;
	    	frame.set_captain_ref(captain.es);
	        frame.prep();
	    	frame.set_choose_selector();
    	},1000);
    }, "fmNPCCreate");

    //CREATE NPC BUTTON     
    var save_str = "<button width=460 id='createnpc_button' style='width:39px; background-color:#AAAA66'>New</button>";
    $("#npcedit").append(save_str);
    $("#createnpc_button").live("click",function(){
        var frame = document.getElementById("fmNPCCreate").contentWindow;
        frame.show_sel_div();
        frame.setDefault("xpos", captain.es.mx);
        frame.setDefault("ypos", captain.es.my);        
        $("#fmNPCCreate").show();
        frame.prep();
        frame.set_choose_selector();        
    });

    $("#npcedit").append("<div id='npc_info' style=\"height: 263px; background-color:white\"></div>");

    var info_pane = '<div id="tmp_holder" style="position:relative;left:-2px;top:3px;">'+
        '<input disabled="true" size="10" style="margin-top:-5px" id="iname" value="Mr. Generic"> Name </input>'+ 
        '<input disabled="true" size="10" style="margin-top:-5px" id="isprite" value="none"> Sprite </input> '+
        '<input disabled="true" size="10" style="margin-top:-5px" id="idialogue" value=""> Dialogue </input> Edit </button>'+
        '<input disabled="true" size="10" style="margin-top:-5px" id="iai_combat" value="none"> Combat AI </input>'+
        '<input disabled="true" size="10" style="margin-top:-5px" id="iai_town" value="none"> Town AI </input>'+
        '<input disabled="true" size="10" style="margin-top:-5px" id="iinventory" value=""> Inventory </input>'+
        '<input disabled="true" size="10" style="margin-top:-5px" id="iallegiance" value="enemy" > Allegiance </input> </div>'+
        '<input size="2" id="iPOWinp" value="1" style="font-size:8px; display:inline; margin-top:-10px; margin-bottom:-10px " disabled="true"></input> POW <br>'+
        '<input size="2" id="iACCinp" value="1" style="font-size:8px; display:inline; margin-top:-10px; margin-bottom:-10px " disabled="true"></input> ACC <br>'+
        '<input size="2" id="iFORinp" value="1" style="font-size:8px; display:inline; margin-top:-10px; margin-bottom:-10px " disabled="true"></input> FOR <br>'+
        '<input size="2" id="iCONinp" value="1" style="font-size:8px; display:inline; margin-top:-10px; margin-bottom:-10px " disabled="true"></input> CON <br>'+
        '<input size="2" id="iRESinp" value="1" style="font-size:8px; display:inline; margin-top:-10px; margin-bottom:-10px " disabled="true"></input> RES <br>'+
        '<input size="2" id="iSPDinp" value="1" style="font-size:8px; display:inline; margin-top:-10px; margin-bottom:-10px " disabled="true"></input> SPD <br>'+
        '<input size="2" id="iEVAinp" value="1" style="font-size:8px; display:inline; margin-top:-10px; margin-bottom:-10px " disabled="true"></input> EVA <br>'+
        '<button id="mov_npc" style="position:relative;width:70px;left:100px;top:-90px;background-color:#6666AA;padding:8px"> Move   </button>'+
        '<button id="del_npc" style="position:relative;width:70px;left:30px;top:-50px;background-color:#AA6666;padding:8px"> Remove </button>';
    $("#npc_info").append(info_pane);

    $("#del_npc").live("click", function(){
        if( captain.es.active_npc == "" ){
            console.log("WARNING: No active npc to delete.");
            return;
        }
        var npc = captain.es.game.map_loader.get_npc_by_name( captain.es.world.fix_actor_name(captain.es.active_npc));
        var npc_char =  captain.es.world.get_character( captain.es.active_npc );

        var r = confirm("Are you sure you wish to delete this npc from this map?\n\n "+npc_char.name);
        if( r )
            captain.es.delete_npc(npc, npc_char.name, npc_char.x, npc_char.y);
    })

    $("#mov_npc").live("click", function(){
        if( captain.es.active_npc == "" ){
            console.log("WARNING: No active npc to move.");
            return;
        }
        console.log("Moving ", captain.es.active_npc);

        var npc = captain.es.game.map_loader.get_npc_by_name(captain.es.active_npc);
        var npc_char =  captain.es.world.get_character( captain.es.active_npc );

        captain.es.move_npc(npc_char.name, npc_char.x, npc_char.y, captain.es.mx, captain.es.my);
        npc_char.set( captain.es.mx, captain.es.my );

        captain.es.draw_place();
    })

    //$("#"+fm_id).hide();      
}

esUI.prototype.initNodeButtons = function(){

	var fm_id = "fm";
	var captain = this;

	//CHANGEMAP BUTTON
	var cm_str = "<button class='node_button' id='ChangeMap' style='float:left'>ChangeMap</button>";
	$("#nselect").append(cm_str);
	$("#ChangeMap").live("click",function(){
	    $("#fm").show();
        var frame = document.getElementById(fm_id).contentWindow;
        frame.prep();
        frame.setTitle("ChangeMap");
        frame.setDefault("xpos", captain.es.mx);
        frame.setDefault("ypos", captain.es.my);
        var values = [];
		for( var name in captain.es.game.map_loader.maps ){
			values.push(name.substring(9, name.length - 4));
		}
	    frame.setValSel("v1sel", values);
	    frame.setDefault("value1", values[0]);
	    frame.disableElem("value2");
        frame.disableElem("value3");

	    var nodes = captain.es.world.nodes;
	    var napp = [];
        napp.push("none");
	    for( var i in nodes ){
	    	var str = nodes[i].name;
        	if( str != "null" && str.search("_") < 0 )
        		napp.push(str);
	    }
	    frame.setValSel("next_node", napp);	
        frame.setDefault("next_node", "none");  	    
	});

	//STUFFDONE BUTTON
	var cm_str = "<button class='node_button' id='StuffDone' style='float:left'>StuffDone</button>";
	$("#nselect").append(cm_str);
	$("#StuffDone").live("click",function(){
	    $("#fm").show();
        var frame = document.getElementById(fm_id).contentWindow;
        frame.prep();
        frame.setTitle("StuffDone");
        frame.setDefault("xpos", captain.es.mx);
        frame.setDefault("ypos", captain.es.my);
        var values = [];
        values.push("none");
        for( var i in captain.es.world.nodes ){
        	var str = captain.es.world.nodes[i].name;
        	if( str != "null" && str.search("_") < 0 )
        		values.push(captain.es.world.nodes[i].name);
        }
	    frame.setValSel("v1sel", values);
	    frame.setDefault("value1", values[0]);
	    frame.setValSel("v2sel", values);
        frame.setDefault("value2", values[0]);
        frame.setValSel("v3sel", values); 
        frame.setDefault("value3", values[0]);       
	    //frame.disableElem("value2");
        //frame.disableElem("value3");
	    frame.disableElem("newx");
	    frame.disableElem("newy");

	    var nodes = captain.es.world.nodes;
	    var napp = [];
        napp.push("none");
	    for( var i in nodes ){
	    	var str = nodes[i].name;
        	if( str != "null" && str.search("_") < 0 )
        		napp.push(str);
	    }
	    frame.setValSel("next_node", napp);
        frame.setDefault("next_node", "none");           
	    //frame.setValSel("v2sel", ["a","b","c"]);        
	});	

	//SINGLENOTIFICATION BUTTON
	var cm_str = "<button class='node_button' id='SingleNotification' style='float:left'>SingleNotif</button>";
	$("#nselect").append(cm_str);
	$("#SingleNotification").live("click",function(){
	    $("#fm").show();
        var frame = document.getElementById(fm_id).contentWindow;
        frame.prep();
        frame.setTitle("SingleNotification");
        frame.setDefault("xpos", captain.es.mx);
        frame.setDefault("ypos", captain.es.my);
        var values = [];
	    frame.setValSel("v1sel", values);
	    frame.setValSel("v2sel", values);
	    frame.setDefault("value1", "Text goes here.");
	    frame.disableElem("value2");
        frame.disableElem("value3");
	    frame.disableElem("newx");
	    frame.disableElem("newy");

	    var nodes = captain.es.world.nodes;
	    var napp = [];
        napp.push("none");
	    for( var i in nodes ){
	    	var str = nodes[i].name;
        	if( str != "null" && str.search("_") < 0 )
        		napp.push(str);
	    }
	    frame.setValSel("next_node", napp);
        frame.setDefault("next_node", "none");    
	});	

    //DOUBLENOTIFICATION BUTTON
    var cm_str = "<button class='node_button' id='DoubleNotification' style='float:left'>DoubleNotif</button>";
    $("#nselect").append(cm_str);
    $("#DoubleNotification").live("click",function(){
        $("#fm").show();
        var frame = document.getElementById(fm_id).contentWindow;
        frame.prep();
        frame.setTitle("DoubleNotification");
        frame.setDefault("xpos", captain.es.mx);
        frame.setDefault("ypos", captain.es.my);
        var values = [];
        frame.setValSel("v1sel", values);
        frame.setValSel("v2sel", values);
        frame.setDefault("value1", "Text goes here.");
        frame.setDefault("value2", "Other text goes here.");
        frame.disableElem("value3");
        frame.disableElem("newx");
        frame.disableElem("newy");

        var nodes = captain.es.world.nodes;
        var napp = [];
        napp.push("none");
        for( var i in nodes ){
            var str = nodes[i].name;
            if( str != "null" && str.search("_") < 0 )
                napp.push(str);
        }
        frame.setValSel("next_node", napp);
        frame.setDefault("next_node", "none");    
    }); 

    //PLAY SOUND BUTTON
    var cm_str = "<button class='node_button' id='PlaySound' style='float:left'>PlaySound</button>";
    $("#nselect").append(cm_str);
    $("#PlaySound").live("click",function(){
        $("#fm").show();
        var frame = document.getElementById(fm_id).contentWindow;
        frame.prep();
        frame.setTitle("PlaySound");
        frame.setDefault("xpos", captain.es.mx);
        frame.setDefault("ypos", captain.es.my);
        var values = [];
        frame.setValSel("v1sel", values);
        frame.setValSel("v2sel", values);
        frame.setDefault("value1", "default.ogg");
        frame.disableElem("value2");
        frame.disableElem("value3");
        frame.disableElem("newx");
        frame.disableElem("newy");

        var nodes = captain.es.world.nodes;
        var napp = [];
        napp.push("none");
        for( var i in nodes ){
            var str = nodes[i].name;
            if( str != "null" && str.search("_") < 0 )
                napp.push(str);
        }
        frame.setValSel("next_node", napp);
        frame.setDefault("next_node", "none");    
    }); 

    //TELEPORTTO BUTTON
    var cm_str = "<button class='node_button' id='TeleportTo' style='float:left'>TeleportTo</button>";
    $("#nselect").append(cm_str);
    $("#TeleportTo").live("click",function(){
        $("#fm").show();
        var frame = document.getElementById(fm_id).contentWindow;
        frame.prep();
        frame.setTitle("TeleportTo");
        frame.setDefault("xpos", captain.es.mx);
        frame.setDefault("ypos", captain.es.my);
        frame.setDefault("newx", captain.es.mx);
        frame.setDefault("newy", captain.es.my);        
        var values = [];
        frame.setValSel("v1sel", values);
        frame.setValSel("v2sel", values);
        //frame.setDefault("value1", "Text goes here.");
        frame.disableElem("value1");
        frame.disableElem("value2");
        frame.disableElem("value3");
        //frame.disableElem("newx");
        //frame.disableElem("newy");

        var nodes = captain.es.world.nodes;
        var napp = [];
        napp.push("none");
        for( var i in nodes ){
            var str = nodes[i].name;
            if( str != "null" && str.search("_") < 0 )
                napp.push(str);
        }
        frame.setValSel("next_node", napp);
        frame.setDefault("next_node", "none");    
    }); 

    //TELEPORT NPC BUTTON
    var id_name = 'TeleportNPC';
    var cm_str = "<button class='node_button' id='"+id_name+"' style='float:left'>"+id_name+"</button>";
    $("#nselect").append(cm_str);
    $("#"+id_name).live("click",function(){
        var id_name2 = "TeleportNPC";
        $("#fm").show();
        var frame = document.getElementById(fm_id).contentWindow;
        frame.prep();
        frame.setTitle(id_name2);
        frame.setDefault("xpos", captain.es.mx);
        frame.setDefault("ypos", captain.es.my);
        frame.setDefault("newx", captain.es.mx);
        frame.setDefault("newy", captain.es.my);        
        var values = [];
        frame.setValSel("v2sel", values);
        for( var i in captain.es.world.characters ){
            if( captain.es.world.characters[i].allegiance != "player" )
                values.push(captain.es.world.characters[i].name);
        }
        if(values.length == 0 ){
            values.push("!NONPCS!");
        }
        frame.setValSel("v1sel", values);
        frame.setDefault("value1", values[0]);
        //frame.setDefault("value1", "Text goes here.");
        //frame.disableElem("value1");
        frame.disableElem("value2");
        frame.disableElem("value3");
        //frame.disableElem("newx");
        //frame.disableElem("newy");

        var nodes = captain.es.world.nodes;
        var napp = [];
        napp.push("none");
        for( var i in nodes ){
            var str = nodes[i].name;
            if( str != "null" && str.search("_") < 0 )
                napp.push(str);
        }
        frame.setValSel("next_node", napp);
        frame.setDefault("next_node", "none");    
    }); 

    //Create NPC
    var id_name = 'ShowNPC';
    var cm_str = "<button class='node_button' id='"+id_name+"' style='float:left'>"+id_name+"</button>";
    $("#nselect").append(cm_str);
    $("#"+id_name).live("click",function(){
        var id_name2 = "ShowNPC";
        $("#fm").show();
        var frame = document.getElementById(fm_id).contentWindow;
        frame.prep();
        frame.setTitle(id_name2);
        frame.setDefault("xpos", captain.es.mx);
        frame.setDefault("ypos", captain.es.my);
        frame.setDefault("newx", captain.es.mx);
        frame.setDefault("newy", captain.es.my);        
        var values = [];
        frame.setValSel("v2sel", values);
        for( var i in captain.es.world.characters ){
            if( captain.es.world.characters[i].allegiance != "player" )
                values.push(captain.es.world.characters[i].name);
        }
        if(values.length == 0 ){
            values.push("!NONPCS!");
        }
        frame.setValSel("v1sel", values);
        frame.setDefault("value1", values[0]);
        //frame.disableElem("value1");
        frame.disableElem("value2");
        frame.disableElem("value3");
        //frame.disableElem("newx");
        //frame.disableElem("newy");

        var nodes = captain.es.world.nodes;
        var napp = [];
        napp.push("none");
        for( var i in nodes ){
            var str = nodes[i].name;
            if( str != "null" && str.search("_") < 0 )
                napp.push(str);
        }
        frame.setValSel("next_node", napp);
        frame.setDefault("next_node", "none");    
    }); 

    //Change Tile
    var id_name = 'ChangeTile';
    var cm_str = "<button class='node_button' id='"+id_name+"' style='float:left'>"+id_name+"</button>";
    $("#nselect").append(cm_str);
    $("#"+id_name).live("click",function(){
        var id_name2 = "ChangeTile";
        $("#fm").show();
        var frame = document.getElementById(fm_id).contentWindow;
        frame.prep();
        frame.setTitle(id_name2);
        frame.setDefault("xpos", captain.es.mx);
        frame.setDefault("ypos", captain.es.my);
        frame.setDefault("newx", captain.es.mx);
        frame.setDefault("newy", captain.es.my);        
        var values = [];
        var sprites = [];
        frame.setValSel("v2sel", values);
        for( var i in captain.es.game.display.sprites ){
            if(i.substring(0,4) == "tile"){
                var spr = captain.es.game.display.sprites[i];              
                sprites.push(spr);
                values.push(i);
            }
        }
        var src = sprites[0].src;
        frame.addTileSelectorBox( sprites, src);

        frame.setValSel("v1sel", values);
        frame.setDefault("value1", values[0]);
        frame.setOptionHoverEvent("v1sel",function(){
            console.log($(this).val() );
        })
        //frame.disableElem("value1");
        frame.disableElem("value2");
        frame.disableElem("value3");
        //frame.disableElem("newx");
        //frame.disableElem("newy");

        var nodes = captain.es.world.nodes;
        var napp = [];
        napp.push("none");
        for( var i in nodes ){
            var str = nodes[i].name;
            if( str != "null" && str.search("_") < 0 )
                napp.push(str);
        }
        frame.setValSel("next_node", napp);
        frame.setDefault("next_node", "none");    
    }); 

    //SecretPassage
    var id_name = 'SecretPassage';
    var cm_str = "<button class='node_button' id='"+id_name+"' style='float:left'>"+id_name+"</button>";
    $("#nselect").append(cm_str);
    $("#"+id_name).live("click",function(){
        var id_name2 = "SecretPassage";
        $("#fm").show();
        var frame = document.getElementById(fm_id).contentWindow;
        frame.prep();
        frame.setTitle(id_name2);
        frame.setDefault("xpos", captain.es.mx);
        frame.setDefault("ypos", captain.es.my);
        frame.setDefault("newx", captain.es.mx);
        frame.setDefault("newy", captain.es.my);        
        var values = [];
        frame.setValSel("v2sel", values);
        frame.setValSel("v1sel", values);
        //frame.setDefault("value1", values[0]);
        frame.disableElem("value1");
        frame.disableElem("value2");
        frame.disableElem("value3");
        frame.disableElem("newx");
        frame.disableElem("newy");

        var nodes = captain.es.world.nodes;
        var napp = [];
        napp.push("none");
        for( var i in nodes ){
            var str = nodes[i].name;
            if( str != "null" && str.search("_") < 0 )
                napp.push(str);
        }
        frame.setValSel("next_node", napp);
        frame.setDefault("next_node", "none");    
    }); 

    //Character Has Item
    var id_name = 'HasItem';
    var cm_str = "<button class='node_button' id='"+id_name+"' style='float:left'>"+id_name+"</button>";
    $("#nselect").append(cm_str);
    $("#"+id_name).live("click",function(){
        var id_name = 'HasItem';
        var id_name2 = id_name;
        $("#fm").show();
        var frame = document.getElementById(fm_id).contentWindow;
        frame.prep();
        frame.setTitle(id_name2);
        frame.setDefault("xpos", captain.es.mx);
        frame.setDefault("ypos", captain.es.my);
        frame.setDefault("newx", captain.es.mx);
        frame.setDefault("newy", captain.es.my);        
        var values = [];
        frame.setValSel("v2sel", values);
        for( var i in captain.es.world.items ){
            values.push(i);
        }
        frame.setValSel("v1sel", values);
        frame.setDefault("value1", values[0]);
        //frame.disableElem("value1");
        //frame.disableElem("value2");
        frame.disableElem("value3");
        frame.disableElem("newx");
        frame.disableElem("newy");

        var nodes = captain.es.world.nodes;
        var napp = [];
        napp.push("none");
        for( var i in nodes ){
            var str = nodes[i].name;
            if( str != "null" && str.search("_") < 0 )
                napp.push(str);
        }
        frame.setValSel("next_node", napp);
        frame.setDefault("next_node", "none"); 
        frame.setValSel("v2sel", napp);
        frame.setDefault("value2", "none");            
    }); 

    //LockDoor
    var id_name = 'LockDoor';
    var cm_str = "<button class='node_button' id='"+id_name+"' style='float:left'>"+id_name+"</button>";
    $("#nselect").append(cm_str);
    $("#"+id_name).live("click",function(){
        var id_name2 = "LockDoor";
        $("#fm").show();
        var frame = document.getElementById(fm_id).contentWindow;
        frame.prep();
        frame.setTitle(id_name2);
        frame.setDefault("xpos", captain.es.mx);
        frame.setDefault("ypos", captain.es.my);
        frame.setDefault("newx", captain.es.mx);
        frame.setDefault("newy", captain.es.my);        
        var values = [];
        frame.setValSel("v2sel", values);
        for( var i = 0; i < 100; i++ ){
            values.push(i);
        }
        frame.setValSel("v1sel", values);
        frame.setDefault("value1", values[0]);
        //frame.disableElem("value1");
        frame.disableElem("value2");
        frame.disableElem("value3");
        frame.disableElem("newx");
        frame.disableElem("newy");

        var nodes = captain.es.world.nodes;
        var napp = [];
        napp.push("none");
        for( var i in nodes ){
            var str = nodes[i].name;
            if( str != "null" && str.search("_") < 0 ){
                napp.push(str);
            }
        }
        frame.setValSel("next_node", napp);
        frame.setDefault("next_node", "none");          
    }); 

    //Disable Node
    var id_name = 'DisableNode';
    var cm_str = "<button class='node_button' id='"+id_name+"' style='float:left'>"+id_name+"</button>";
    $("#nselect").append(cm_str);
    $("#"+id_name).live("click",function(){
        var id_name2 = "DisableNode";
        $("#fm").show();
        var frame = document.getElementById(fm_id).contentWindow;
        frame.prep();
        frame.setTitle(id_name2);
        frame.setDefault("xpos", captain.es.mx);
        frame.setDefault("ypos", captain.es.my);
        frame.setDefault("newx", captain.es.mx);
        frame.setDefault("newy", captain.es.my);        
        var values = [];
        frame.setValSel("v2sel", values);
        frame.setValSel("v1sel", values);
        //frame.disableElem("value1");
        frame.disableElem("value2");
        frame.disableElem("value3");
        frame.disableElem("newx");
        frame.disableElem("newy");

        var nodes = captain.es.world.nodes;
        var napp = [];
        napp.push("none");
        for( var i in nodes ){
            var str = nodes[i].name;
            if( str != "null" && str.search("_") < 0 ){
                napp.push(str);
            }
        }
        frame.setValSel("v1sel", napp);
        frame.setDefault("value1", napp[0]);
        frame.setValSel("next_node", napp);
        frame.setDefault("next_node", "none");          
    }); 

    //Add Log
    var id_name = 'AddLog';
    var cm_str = "<button class='node_button' id='"+id_name+"' style='float:left'>"+id_name+"</button>";
    $("#nselect").append(cm_str);
    $("#"+id_name).live("click",function(){
        var id_name2 = "AddLog";
        $("#fm").show();
        var frame = document.getElementById(fm_id).contentWindow;
        frame.prep();
        frame.setTitle(id_name2);
        frame.setDefault("xpos", captain.es.mx);
        frame.setDefault("ypos", captain.es.my);
        frame.setDefault("newx", captain.es.mx);
        frame.setDefault("newy", captain.es.my);        
        var values = [];
        frame.setValSel("v2sel", values);
        frame.setValSel("v1sel", values);
        //frame.disableElem("value1");
        frame.disableElem("value2");
        frame.disableElem("value3");
        frame.disableElem("newx");
        frame.disableElem("newy");

        var nodes = captain.es.world.nodes;
        var napp = [];
        napp.push("none");
        for( var i in nodes ){
            var str = nodes[i].name;
            if( str != "null" && str.search("_") < 0 ){
                napp.push(str);
            }
        }
        frame.setValSel("v1sel", []);
        frame.setDefault("value1", "Set text here");
        frame.setValSel("next_node", napp);
        frame.setDefault("next_node", "none");          
    }); 

    $(".node_button").css({
        height:"20px",
        width:"90px",
        backgroundColor:"white"
    })
} 
function WSButtonManager(state){
	this.state = state;
}

WSButtonManager.prototype.aButtonAction = function(){
	var state = this.state;
    var captain = state;
    var btn = state.getElement(AControlButton);
    var tmp;
    if(state.selVisible) {
        btn.msg = "Select";
        btn.action = function(){
            var ch = captain.world.get_character_by_position(captain.mx, captain.my);
            var sq = captain.world.get_square(captain.mx, captain.my);
            captain.onSelect(sq,ch);
            captain.exitSelectMode();            
            captain.redraw = true;    
        };
    } else if( state.allySelVisible ){
        btn.msg = "N/A";
        btn.action = function(){};
    } else if( state.getElement(DialoguePane).FLAG_isVisible ) {
        btn.msg = "Confirm";
        btn.action = function(){   
                var elem = captain.getElement(DialoguePane);
                elem.click(captain.mx, captain.my);
            };
    }  else if ( (tmp=state.world.is_near_tile_type( state.player.get_first().name, [27,33,42] ))
    				 !== false) {
        btn.msg = "Close";
        btn.action = function(){
            tmp.close_door();
            captain.redraw = true;  
        };
    } else if (state.wMode instanceof CombatMode){
    	var act = state.wMode.cactor;
    	var wep_name = act.equipment.rhand;
    	if( wep_name !== "none" ){
    		var tmp;
    		if( (tmp = wep_name.search("_")) != -1 ){
    			wep_name = wep_name.substring(0, tmp);
    		} 
    		var item = state.world.itemCache.get_item(wep_name);
    		if( item.type == "ranged" ){
    			btn.msg = "Shoot";
		        btn.action = function(){
		        	state.Shortcut.enter_archery_mode();
		        }
    		} else {
    			btn.msg = "";
		        btn.action = function(){};
    		}
    	} else {
    		btn.msg = "Punch";
	        btn.action = function(){};
	    }
    } else if( state.getElement(InventoryOverlay).FLAG_isVisible||
    			state.getElement(PickUpPane).FLAG_isVisible ||
    			state.getElement(DarkMagicOverlay).FLAG_isVisible ||
    			state.getElement(LightMagicOverlay).FLAG_isVisible){
        btn.msg = "";
        btn.action = function(){   
            };   	
    } else {
        btn.msg = "Talk";
        btn.action = function(){
			state.Shortcuit.enter_select_conversation_mode(); 
        };
    }

}

WSButtonManager.prototype.bButtonAction = function(){
	var state = this.state;
    var captain = state;
    var btn = state.getElement(AControlButton);

    if(state.selVisible || state.allySelVisible) {
        btn.msg = "Cancel";
        btn.action = function(){ 
            captain.exitSelectMode();
        };
    } else if( state.getElement(DialoguePane).FLAG_isVisible ) {
        btn.msg = "Previous";
        btn.action = function(){   
                var elem = captain.getElement(DialoguePane);
                elem.prev_message();
            };
    } else if( state.getElement(InventoryOverlay).FLAG_isVisible||
    			state.getElement(PickUpPane).FLAG_isVisible ||
    			state.getElement(DarkMagicOverlay).FLAG_isVisible ||
    			state.getElement(LightMagicOverlay).FLAG_isVisible){
        btn.msg = "";
        btn.action = function(){   
            };   	
    } else {
        if( state.wMode instanceof CombatMode )
            btn.msg = "End";
        else
            btn.msg = "Fight";
        btn.action = function(){
            captain.changeWMode();
            captain.resume();
            setTimeout(function(){
                captain.resume();
            }, 100);  
        };
    }    
} 

function WorldStateShortcut(state){
	this.state = state;

	this.set = "ingame";

	this.shortcutset = {
		"ingame":{},
		"selectingenemy":{},
		"selectingally":{},
		"dialogue":{},
		"inventory":{},
		"magic":{},
		"pickup":{}
	};

	for( var i in this.shortcutset ){
		this[i+"_init"]();
	}
}

WorldStateShortcut.prototype.perform_action = function(id, mode){
	this.set = mode;
	var set = this.shortcutset[this.set];
	if( set === undefined ){
		console.error("ERROR: No set '"+this.set+"' exists in shortcuts.");
		return false;
	} else {
		//console.log("KEY", id, "MODE", mode);
	}

	if( id in set ){
		set[id](id);
		set.pfunc(id);
		return true;
	} else {
		return false;
	}
}

WorldStateShortcut.prototype.set_mode = function(name){
	this.set = name;
}

WorldStateShortcut.prototype.dialogue_init = function(){
	var captain = this;
	var state = this.state;
	var set = this.shortcutset.dialogue;	
	var dp = this.state.getElement(DialoguePane);

	set[73] = function(){ //i for inquire
        dp.click(305,256);
        state.game.display.input._value = "";
	}
	set[76] = function(){ //l for leave
        state.UImode = "INGAME";
        dp.hide();
	}
	set[78] = function(){ //n for NAME button in dialogue
		dp.click(184,253);
	}
	set[74] = function(){ //j for JOB button in dialogue
		dp.click(246,256);
	}
	set[66] = function(){ //b for BUY/SELL button in dialogue
		dp.click(309,28);
	}
	set[27] = function(){ //ESC
		dp.click(300,6);
	}
	set.pfunc = function(){};
}

WorldStateShortcut.prototype.selectingenemy_init = function(){
	var captain = this;
	var state = this.state;
	var set = this.shortcutset.selectingenemy;	
	var prevmx = state.mx; var prevmy = state.my;

	set[38] = function(){ //UP arrow
		state.my = state.my - 1;
	}
	set[40] = function(){ //DOWN arrow
		state.my = state.my + 1;
	}
	set[37] = function(){ //LEFT arrow
		state.mx = state.mx - 1;
	}
	set[39] = function(){ //Right arrow
		state.mx = state.mx + 1;
	}
	set[27] = function(){ //ESC
        state.exitSelectMode();
	}
	set[105] = function(){ //NUMPAD 9 UPRIGHT
        state.mx = state.mx + 1;
        state.my = state.my - 1;
	}
	set[99] = function(){ //NUMPAD 3 DOWNRIGHT
        state.mx = state.mx + 1;
        state.my = state.my + 1;
	}
	set[97] = function(){ //NUMPAD 1 DOWNLEFT
        state.mx = state.mx - 1;
        state.my = state.my + 1;
	}
	set[103] = function(){ //NUMPAD 7 UPLEFT
       	state.mx = state.mx - 1;
        state.my = state.my - 1;
	}
	set[104] = function(){ //NUMPAD 8 UP
	    state.my = state.my - 1;
	}
	set[98] = function(){ //NUMPAD 2 DOWN
		state.my = state.my + 1;
	}
	set[100] = function(){ //NUMPAD 4 LEFT
		state.mx = state.mx - 1;
	}
	set[102] = function(){ //NUMPAD 6 RIGHT
		state.mx = state.mx + 1;
	}
	set[13] = function(){ //ENTER
        var ch = state.world.get_character_by_position(state.mx, state.my);
        var sq = state.world.get_square(state.mx, state.my);
        state.onSelect(sq, ch);
        state.exitSelectMode();            
        state.redraw = true;
	}

	set.pfunc = function(){
        var act = state.world.get_character(state.wMode.cActor);
        if( Math.abs(state.mx - act.x) > 4 ){
        	state.mx = prevmx;
        }
        if( Math.abs(state.my - act.y) > 4 ){
        	state.my = prevmy;
        }
	}
}

WorldStateShortcut.prototype.selectingally_init = function(){
	var captain = this;
	var state = this.state;
	var set = this.shortcutset.selectingally;	
	var prevmx = state.mx; var prevmy = state.my;

	function selectally(id){
        var pcnum = id - 49;
        if( pcnum < state.player.get_pcs().length ){
            state.onSelect( "none", state.player.get_pcs()[ pcnum ] );
            state.exitSelectMode();
        } else {
            console.log(pcnum);
            state.warn.add_log("red", "You don't have a character at position "
            	+(pcnum+1)+" in your party at the moment.");
        }
	}

	//1 - 6 on the keyboard
	for( var i = 49; i < 55; ++i ){
		set[i] = function(id){selectally(id)};
	}

	set[27] = function(){ //ESC
	    state.exitSelectMode();
        state.redraw = true;	
	}

	set.pfunc = function(){};
}

WorldStateShortcut.prototype.ingame_init = function(){
	var captain = this;
	var state = this.state;
	var set = this.shortcutset.ingame;	
	var prevmx = state.mx; var prevmy = state.my;

	function highlightpc(id){
        var pcpane = state.getElement(PCListPane);
        var off = (id - 49)*24 + 32;
        pcpane.click(0, off);
	}

	//1 - 6 on the keyboard
	for( var i = 49; i < 55; ++i ){
		set[i] = function(id){highlightpc(id)};
	}

	set[84] = function(){ //t for talk
		captain.enter_select_conversation_mode();
	}	
	set[83] = function(){ //s for shoot
		captain.enter_archery_mode();
	}
	set[73] = function(){ //i for inventory
        state.hideExtraUIExcept( InventoryOverlay);
        state.showElement(InventoryOverlay);  
        state.UImode = "INVENTORY"; 
        var wbp = state.getElement(WorldButtonPane);
        wbp.activeState = "INVENTORY";	
	}
	set[71] = function(){ //g for get
        var pick = state.getElement(PickUpPane);
        state.disableWorldButtons = true;
        state.UImode = "PICKUP";
        pick.show();	
	}
	set[76] = function(){ //l for light magic
        state.hideExtraUIExcept( LightMagicOverlay );
        state.showElement(LightMagicOverlay);  
        state.UImode = "LIGHTMAGIC"; 
        var wbp = state.getElement(WorldButtonPane);
        wbp.activeState = "LIGHTMAGIC";
	}
	set[68] = function(){ //d for dark magic
        state.hideExtraUIExcept( DarkMagicOverlay );
        state.showElement(DarkMagicOverlay);  
        state.UImode = "DARKMAGIC"; 
        var wbp = state.getElement(WorldButtonPane);
        wbp.activeState = "DARKMAGIC";
	}

	set.pfunc = function(){};
}

WorldStateShortcut.prototype.inventory_init = function(){
	var captain = this;
	var state = this.state;
	var set = this.shortcutset.inventory;	

	function highlightpc(id){
        var pcpane = state.getElement(PCListPane);
        var off = (id - 49)*24 + 32;
        pcpane.click(0, off);
	}

	function hideinventory(){
        state.hideElement(InventoryOverlay);  
        state.UImode = "INGAME"; 
        var wbp = state.getElement(WorldButtonPane);
        wbp.activeState = "INGAME";
	}

	set[73] = hideinventory; //I
	set[27] = hideinventory; //ESC

	//1 - 6 on the keyboard
	for( var i = 49; i < 55; ++i ){
		set[i] = function(id){highlightpc(id)};
	}	

	set.pfunc = function(){};
}

WorldStateShortcut.prototype.pickup_init = function(){
	var captain = this;
	var state = this.state;
	var set = this.shortcutset.pickup;
    var pick = state.getElement(PickUpPane);
    var pcpane = state.getElement(PCListPane);

	function hidepickup(){
        state.disableWorldButtons = false;
        state.UImode = "INGAME";
        pick.hide();
	}

	function selectitem(id){
        var off = (id - 65)*16 + 43 + 4;
        pick.contains(200, off);
	}

	function highlightpc(id){
        var pcpane = state.getElement(PCListPane);
        var off = (id - 49)*24 + 32;
        pcpane.click(0, off);
	}

	set[13] = hidepickup; //ENTER
	set[27] = hidepickup; //ESC

	//A - O on the keyboard
	for( var i = 65; i < 79; ++i ){
		set[i] = function(id){selectitem(id)};
	}

	//1 - 6 on the keyboard
	for( var i = 49; i < 55; ++i ){
		set[i] = function(id){highlightpc(id)};
	}

	set.pfunc = function(){};
}

WorldStateShortcut.prototype.magic_init = function(){
	var captain = this;
	var state = this.state;
	var set = this.shortcutset.magic;

	function highlightpc(id){
        var pcpane = state.getElement(PCListPane);
        var off = (id - 49)*24 + 32;
        pcpane.click(0, off);
	}

	function selectspell(id){
		console.log("SELECT SPELL", id);
	    if( state.UImode == "DARKMAGIC"){
	        var pane = state.getElement(DarkMagicOverlay);
	    } else {
	        var pane = state.getElement(LightMagicOverlay);
	    }
        var tid = id-65;
        var xoff = (tid%3)*75+pane.x+25+4;
        var yoff = Math.floor(tid/3)*60+pane.y+53+4;
        pane.click(xoff, yoff);
	}

	set[27] = function(){ //ESC
	    if( state.UImode == "DARKMAGIC"){
	        var pane = state.getElement(DarkMagicOverlay);
	    } else {
	        var pane = state.getElement(LightMagicOverlay);
	    }
        pane.hide();
        state.UImode = "INGAME"; 
        var wbp = state.getElement(WorldButtonPane);
        wbp.activeState = "INGAME";		
	}

	//A - J on the keyboard
	for( var i = 65; i < 74; ++i ){
		set[i] = function(id){selectspell(id)};
	}

	//1 - 6 on the keyboard
	for( var i = 49; i < 55; ++i ){
		set[i] = function(id){highlightpc(id)};
	}

	set.pfunc = function(){};
}

WorldStateShortcut.prototype.enter_archery_mode = function(){
	var state = this.state;

	if( !(state.wMode instanceof CombatMode) ) {
		state.warn.add_log("red", "You must be fighting somebody to shoot.");
		return;
	}

    var act = state.world.get_character( state.wMode.cActor );
    var wep_name = act.equipment.rhand;

    if( wep_name === "none" ){
		state.warn.add_log("red", "You have no weapon equipped.");
		return;
    }

	var tmp;
    if( (tmp = wep_name.search("_")) != -1 ){
        wep_name = wep_name.substring(0, tmp);
    } 
    var item = this.world.itemCache.get_item(wep_name);

    if( item.type !== "ranged" ){
		state.warn.add_log("red", "You do not have a ranged weapon equipped.");
		return;
    }

    state.enterSelectMode(function(sq, ch){
        if( !(ch !== "none" && sq.isInSight && sq.is_on_screen()) ){
        	state.warn.add_log("red", "Nobody is at that position.");
        	return;
        }

        var vic_obj = state.world.get_character(ch.name);
        if( vic_obj.allegiance === act.allegiance  ){   
            state.notif.add_log("WARNING","Somebody already occupies that space!");
            return false;
            //state.warn.add_log("red","You have now angered everyone in state town!");
            //state.world.switch_npc_allegiance_to_enemy();
        }                                   
        act.action_points-=4;
        state.wMode.cAP-=4;
        act.set_attack_sprite();
        state.world.soundCache.play_sound("scratch0");
        PROJ_ICY = state.world.add_projectile( new Projectile(act.name, [sq.x,sq.y], 
        	"bowproj", "bowproj", state.game.display, state.world, 1, function(){
            state.wMode.player_turn(act.name, "ranged", {victim:ch.name} );
        }));                           
            
    }, [[0,0]]);
}

WorldStateShortcut.prototype.enter_select_conversation_mode = function(){
	var state = this.state;

    var act = state.player.get_first();
    var ch2 = state.world.get_act_in_vicinity( act.name );
    if( ch2 != "none" ){
        state.mx = ch2.x;
        state.my = ch2.y;
    } else {
        state.mx = act.x;
        state.my = act.y;
    }

    state.enterSelectMode(function(sq, ch){
        if( ch.allegiance == "enemy"){
            state.warn.add_log("red", "This character is hostile to you!");
            return;
        }

        if( ch !== "none" && sq.isInSight && sq.is_on_screen() ){
            if(ch.isNPC){
                if( "d1" in ch.dialogue ){
                    var diag = state.getElement(DialoguePane);
                    diag.set_npc(ch);                         
                    state.showElement(DialoguePane);                       
                } else {
                    state.warn.add_log("green", "This person has nothing to say.");
                }
            }
        } else {
            state.warn.add_log("red", "Nobody is at that position.");
        }
    }, [[0,0]]);
    state.redraw = true;
}

WorldStateShortcut.prototype.handle_click_ui_elems = function(mouseX, mouseY){
	var ui_click = false;
	for( var i in this.state.uiElements ){
		elem = this.state.uiElements[i];

		//If the ui is disabled and the click is in the ui (not controls) then skip
		//the element
        if( this.state.disableUI && (mouseX < this.state.game.display.boffset 
        	|| (mouseX > 364 && mouseY < 188)) ){
            continue;
        } else if( this.state.disableWorldButtons && ( mouseX > 346) && (mouseY < 188) ){
            //If the world buttons are disabled and you click in that area then skip
            continue;
        }               
		if( elem.contains( mouseX, mouseY ) ){
			ui_click = true;
			if( elem instanceof VisionButtonPane ){ return };
            if( elem instanceof DControlButton || elem instanceof DiagControlButton ){
            	//Make sure the control buttons only work when you are in game
                if( this.state.UImode == "INGAME"){
                    elem.click(mouseX, mouseY);
                }
            } else {
			    elem.click(mouseX, mouseY);
            }
		}
	}
	return ui_click;
}

WorldStateShortcut.prototype.handle_click_world_buttons = function(mouseX, mouseY){
    for( var i in this.state.uiElements ){
        elem = this.state.uiElements[i];
        if( elem instanceof WorldButtonPane ){
            switch( elem.activeState ){
                case "INGAME": 
                	this.state.hideIrreleventUI(); this.state.UImode = "INGAME"; break;
                case "INVENTORY":   
                	this.state.hideExtraUIExcept( InventoryOverlay);
                    this.state.showElement(InventoryOverlay);  
                    this.state.UImode = "INVENTORY"; break;
                case "DARKMAGIC":   
                	this.state.hideExtraUIExcept( DarkMagicOverlay );
                    this.state.showElement(DarkMagicOverlay);  
                    this.state.UImode = "DARKMAGIC"; break;
                case "LIGHTMAGIC":  
                	this.state.hideExtraUIExcept( LightMagicOverlay );
                    this.state.showElement(LightMagicOverlay);
                    this.state.UImode = "LIGHTMAGIC"; break;
                case "SAVE":        
                    this.state.warn.add_log("red", "Saving game is currently disabled.");
                    elem.activeState = "INGAME";
                    elem.contains(mouseX, mouseY); break;                                         
                case "PARTYMAN":    
                	this.state.hideExtraUIExcept( PartyInfoOverlay );
                    this.state.showElement(PartyInfoOverlay);
                    this.state.UImode = "LOADGAME"; break;                           
                default: 
                	this.state.hideIrreleventUI(); this.state.UImode = "INGAME"; 
                    var yes=confirm("Are you certain you want quit to the menu screen?");
                    if( !yes ){
                        this.state.hideIrreleventUI();
                        this.state.UImode = "INGAME"; 
                        elem.contains( mouseX, mouseY ) 
                        elem.click(mouseX, mouseY);
                        return false;
                    }  
                    this.state.forceQuit = true;
                    this.state.wMode.stop = true;                 
                    this.state.game.change_state("MenuState",{});
                break;
            }
        }
    } 
}
 
function WSUIManager(state){
	this.state = state;
}

WSUIManager.prototype.addPersistantUI = function(){

	var state = this.state;
    var chars = this.state.world.characters;
    var pc_list = [];
    var en_list = [];

    for( var i in chars ){
        if( chars[i].isNPC ){
            en_list.push( chars[i].name );
        } else { 
            pc_list.push( chars[i].name );
        }
    }

    //PC list pane on the upper left
    state.uiElements.push( new PCListPane( 0, 0, 
                                        "pcListpane", 
                                        "PCLISTPANE", 
                                        state.game.display, 
                                        state.world,
                                        state,
                                        pc_list ) );

    //Controls on the bottom left
    state.uiElements.push( new CombatButtonsPane( 362, 0, 
                                        "combatButtonsPane",
                                        "COMBATBUTTONSSPANE",
                                        state.game.display,
                                        state.world,
                                        state ) );

    state.uiElements.push( new LeftControlsPane( 0, 175, 
                                        "leftControlsPane",
                                        "LCONTROLSPANE",
                                        state.game.display,
                                        state.world,
                                        state ) );

    state.uiElements.push( new DControlButton(36, 178, 
                                        "up-button",
                                        "UPBUTTON",
                                        state.game.display,
                                        state.world,
                                        state,
                                        "up" ) ); 

    state.uiElements.push( new DControlButton(36, 245, 
                                        "down-button",
                                        "DOWNBUTTON",
                                        state.game.display,
                                        state.world,
                                        state,
                                        "down" ) ); 

    state.uiElements.push( new DControlButton(3, 211, 
                                        "left-button",
                                        "LEFTBUTTON",
                                        state.game.display,
                                        state.world,
                                        state,
                                        "left" ) );  

    state.uiElements.push( new DControlButton(69, 211, 
                                        "right-button",
                                        "RIGHTBUTTON",
                                        state.game.display,
                                        state.world,
                                        state,
                                        "right" ) ); 

    state.uiElements.push( new DiagControlButton(80, 179, 
                                        "upright-button",
                                        "UPRIGHTBUTTON",
                                        state.game.display,
                                        state.world,
                                        state,
                                        "upright" ) );  

    state.uiElements.push( new DiagControlButton(80, 256, 
                                        "downright-button",
                                        "DOWNRIGHTBUTTON",
                                        state.game.display,
                                        state.world,
                                        state,
                                        "downright" ) );  

    state.uiElements.push( new DiagControlButton(5, 256, 
                                        "downleft-button",
                                        "DOWNLEFTBUTTON",
                                        state.game.display,
                                        state.world,
                                        state,
                                        "downleft" ) );  

    state.uiElements.push( new DiagControlButton(5, 179, 
                                        "upleft-button",
                                        "UPLEFTBUTTON",
                                        state.game.display,
                                        state.world,
                                        state,
                                        "upleft" ) );                                                                                                                            


    //A and B buttons on the bottom right

    state.uiElements.push( new RightControlsPane(362, 175, 
                                        "rightControlsPane",
                                        "RCONTROLSPANE",
                                        state.game.display,
                                        state.world,
                                        state ) );   

    state.uiElements.push( new BControlButton(378, 235, 
                                        "back-button",
                                        "BBUTTON",
                                        state.game.display,
                                        state.world,
                                        state) );   

    state.uiElements.push( new AControlButton(422, 192, 
                                        "back-button",
                                        "ABUTTON",
                                        state.game.display,
                                        state.world,
                                        state) );  

    //World Button Pane Background 

    state.uiElements.push( new WorldButtonPane(362, 2, 
                                        "asdf",
                                        "ABUTTONZ",
                                        state.game.display,
                                        state.world,
                                        state) );  

    //HIDDEN UI ELEMENTS

    //Stupid hack that might cost me later
    var wbp = state.uiElements[14];

    //console.log("loading ui", dmag_world_button, lmag_world_button);

    //Inventory Menu
    state.uiElements.push( new InventoryOverlay(0, 0, 
                                        "InventoryPane",
                                        "INVENTORY",
                                        state.game.display,
                                        state.world,
                                        state,
                                        pc_list) );   
    state.uiElements[state.uiElements.length-1].hide();

    state.uiElements.push( new DarkMagicOverlay(0, 0, 
                                        "DarkMagicPane",
                                        "DARKMAGIC",
                                        state.game.display,
                                        state.world,
                                        state,
                                        pc_list[0],
                                        wbp) );   
    state.uiElements[state.uiElements.length-1].hide(); 

    state.uiElements.push( new LightMagicOverlay(0, 0, 
                                        "LightMagicPane",
                                        "LIGHTMAGIC",
                                        state.game.display,
                                        state.world,
                                        state,
                                        pc_list[0],
                                        wbp) );   
    state.uiElements[state.uiElements.length-1].hide();  
   
    //state.uiElements[state.uiElements.length-1].hide(); 

    state.uiElements.push( new Minimap(0, 175,
                                        "minimap", 
                                        "VPANE2",
                                        state.game.display,
                                        state.world,
                                        state,
                                        110,
                                        113) );

    state.uiElements.push( new SingleNotification(55, 20,
                                        "SingleNotif", 
                                        "SINGNOT",
                                        state.game.display,
                                        state.world,
                                        state,
                                        "Just some defualt text. You need not worry. ",
                                        "none") );   
    state.uiElements[state.uiElements.length-1].hide();            

    state.uiElements.push( new LoadOverlay(state.game.display.boffset, 0, 
    	"pclistpanebackground", "name", state.game.display, state.game, state ) );
    state.uiElements[state.uiElements.length-1].hide();

    state.uiElements.push( new SaveOverlay(state.game.display.boffset, 0, 
    	"pclistpanebackground", "name", state.game.display, state.game, state ) );
    state.uiElements[state.uiElements.length-1].hide();

    state.uiElements.push( new DialoguePane(0, 0,
                                        "DialoguePane", 
                                        "DPANE",
                                        state.game.display,
                                        state.world,
                                        state) );   
    state.uiElements[state.uiElements.length-1].hide();  

    state.uiElements.push( new PickUpPane(0, 0,
                                        "PickUpPane", 
                                        "PUPANE",
                                        state.game.display,
                                        state.world,
                                        state) );   
    state.uiElements[state.uiElements.length-1].hide(); 
    state.pickup = state.uiElements[state.uiElements.length-1];

    state.uiElements.push( new PartyInfoOverlay(0, 0,
                                        "EmptyPane", 
                                        "PIPANE",
                                        state.game.display,
                                        state.world,
                                        state) );   
    state.uiElements[state.uiElements.length-1].hide(); 

    state.uiElements.push( new VisionButtonPane(state.game.display.boffset, 0,
                                        "none", 
                                        "VPANE",
                                        state.game.display,
                                        state.world,
                                        state) );   
    state.uiElements[state.uiElements.length-1].hide(); 
    state.pickup = state.uiElements[state.uiElements.length-1];

    state.uiElements.push( new LevelupOverlay( 0, 0, state.game.display, state ) );   
    state.uiElements[state.uiElements.length-1].hide(); 
}

WSUIManager.prototype.getElement = function(elemInstance){
    for( var i in this.state.uiElements ){
        var elem = this.state.uiElements[i];
        if( elem instanceof elemInstance ){
            return elem;
        }
    }  
}

WSUIManager.prototype.showElement = function(elemInstance){
    for( var i in this.state.uiElements ){
        var elem = this.state.uiElements[i];
        if( elem instanceof elemInstance ){
            elem.show();
            break;
        }
    }  
}

WSUIManager.prototype.hideElement = function(elemInstance){
    for( var i in this.state.uiElements ){
        var elem = this.state.uiElements[i];
        if( elem instanceof elemInstance ){
            elem.hide();
            break;
        }
    }  

    var act = this.state.world.get_character( this.state.world.active_char );
    this.state.world.set_camera( act.x-4, act.y-4 );
}

WSUIManager.prototype.hideIrreleventUI = function(){
    for( var i in this.state.uiElements ){
        var elem = this.state.uiElements[i];
        if( elem instanceof InventoryOverlay || 
            elem instanceof DarkMagicOverlay || 
            elem instanceof LightMagicOverlay || 
            elem instanceof LoadOverlay || 
            elem instanceof SaveOverlay ||
            elem instanceof PartyInfoOverlay){
            elem.hide();
        }
    }
}

WSUIManager.prototype.hideExtraUIExcept = function( exception ){
    for( var i in this.state.uiElements ){
        var elem = this.state.uiElements[i];
        if( elem instanceof InventoryOverlay || 
            elem instanceof DarkMagicOverlay || 
            elem instanceof LightMagicOverlay || 
            elem instanceof LoadOverlay || 
            elem instanceof SaveOverlay ||
            elem instanceof PartyInfoOverlay){
            if( !( elem instanceof exception) ){
                elem.hide();
            }
        }
    }
}

WSUIManager.prototype.setUIVariables = function(){
    var elem;
    for( var i in this.state.uiElements ){
        elem = this.state.uiElements[i];
        if( elem instanceof InventoryOverlay ){
            if( elem.active_pc != this.state.active_pc ){
                elem.current_window = "INVENTORY";
                elem.current_item = 0;
                elem.sprite = "InventoryPane";
                elem.active_pc = this.state.active_pc;
            }
        } else if( 	elem instanceof DarkMagicOverlay || 
        			elem instanceof LightMagicOverlay ){
            if( elem.active_pc != this.state.active_pc ){
                elem.active_pc = this.state.active_pc;
            }            
        } else if( elem instanceof PCListPane ) {
            if( this.state.wMode instanceof CombatMode ){
                if( this.state.wMode.current_turn == 0 ){
                    elem.active_pc = this.state.wMode.pcs[this.state.wMode.cInd];
                }
            } 
        } else if( elem instanceof PartyInfoOverlay ) {
            elem.active_pc_name = this.state.active_pc;     
        }
    }
}

WSUIManager.prototype.setStateVariables = function(){
    var elem;
    for( var i in this.state.uiElements ){
        elem = this.state.uiElements[i];
        if( elem instanceof PCListPane ){
            this.state.active_pc = elem.active_pc;
        }
    }
}

WSUIManager.prototype.draw_extra_ui = function(){
    if( this.state.disableUI ){
        this.state.game.display.draw_sprite ("DisabledUI", 
            0, 
            0); 
        this.state.game.display.draw_sprite ("DisabledUI", 
            364, 
            0);                             
    } else if( this.state.disableWorldButtons ){
        this.state.game.display.draw_sprite ("DisabledUI", 
            364, 
            0); 
    }

    if( this.state.selVisible ){
        for( var i in this.state.selTiles ){
        	var tx = this.state.mx+this.state.selTiles[i][0];
        	var ty = this.state.my+this.state.selTiles[i][1];
	        var act = this.state.world.get_character_by_position(tx,ty);

	        var wmx = this.state.world.grid_to_pixw(tx);
	        var wmy = this.state.world.grid_to_pixh(ty);
	        var sq = this.state.world.get_square(tx, ty); 
	        if( sq === "none" || sq == undefined )
            	return;

	        if( !(act === "none") && sq.isInSight && sq.is_on_screen() ){
	        	var name = act.name;
	        	var tmp;
	        	if( (tmp = name.search("_")) != -1 ){
	        		name = name.substring(0, tmp);
	        	}

			    this.state.game.display.context.font = "12px Verdanda";
			    var meas = this.state.game.display.context.measureText( name  );   
			    var wbox = meas.width;
			    var hbox = 12;
			    var xbox = Math.round(wmx+14 - meas.width/2);  
			    var ybox = wmy-11;	  
			              
	            Math.round(this.state.x - meas.width/2); 
	            this.state.game.display.draw_sprite ("node_blue", 
		            wmx, 
		            wmy);
	            this.state.game.display.draw(xbox-2, ybox-2, wbox+4, hbox+2, "black" );  
	            this.state.game.display.draw_text( name, wmx+14, wmy-1, 
	            	"", "#AABBEE", "");

	        } else if( sq.is_on_screen() ) {
	            this.state.game.display.draw_sprite ("node_rose", 
	                wmx, 
	                wmy);  
	        }
    	}
    } if( this.state.allySelVisible ){
        if( this.state.tanim_frame == this.state.tanim_frame_speed ){
            this.state.tanim++;
            if( this.state.tanim > 5 ){
                this.state.tanim = 0;
            }
            this.state.tanim_frame = 0;
        } else {
            this.state.tanim_frame++;
        }

        var tanim_arr = [
            "<     - ",
            "<    -  ",
            "<   -   ",
            "<  -    ",
            "< -     ",
            "<-      "
        ];

        for( var i in pc_list ){
            var off = (i)*25 + 32;
            this.state.game.display.draw_text_left( 
            	tanim_arr[(this.state.tanim)]+(parseInt(i)+1), 
            	152, off, "Verdanda", "20", "white", "bold", "black");            
        	this.state.whoButtons[i].draw();
        }
        this.state.redraw = true;
    }

    this.state.warn.draw();

    var cact = this.state.player.get_first();
    this.state.game.display.draw_text("( "+cact.x+", "+cact.y+" )", 
    	136, 15, "Verdanda", "#BB7777", "14", "normal", true);
} 
/* jshint browser: true */
/* global app  */

(function(){
"use strict";

var TEST_IngameState = app.game.TEST_IngameState = function( game, params ){
	app.game.AbstractState.call(this, game);
	this.params = params;
	this.wstate = null;
};

TEST_IngameState.prototype = app.extend(app.game.AbstractState); 

TEST_IngameState.prototype.init = function(){
	this.wstate = this.game.Save.get_new_game_state( this.get_pc_info(), this.game );
	this.wstate.init( true );

	this.remake_ui();

	this.begin();
};

TEST_IngameState.prototype.remake_ui = function(){
	this.wstate.remake_ui();
};

TEST_IngameState.prototype.begin = function(){
	this.wstate.begin();
};

TEST_IngameState.prototype.draw = function(){
    this.wstate.draw( this.wMode );
};

TEST_IngameState.prototype.handleMouseClick = function(ev){
	this.wstate.handleMouseClick( ev );
};

TEST_IngameState.prototype.handleMouseUnclick = function(){
	this.wstate.handleMouseUnclick( );
};

TEST_IngameState.prototype.handleMouseMove = function(ev){
	this.wstate.handleMouseMove( ev );
};

TEST_IngameState.prototype.get_pc_info = function(){
	function _get_spells(){
		var ret = [];
		for( var i = 0; i < 7; i++ ){
			ret.push( [
				true,
				false,
				false,
				false,
				false,
				false,
				false
			] );
		}
		return ret;
	}

	var ids = ["POW", "ACC", "FOR", "CON", "RES", "SPD", "EVA"];
	var ret = {
		pc0:{stats:{}},
		pc1:{stats:{}},
		pc2:{stats:{}}
	};

	for( var i in ids ){
		ret.pc0.stats[ids[i]] = Math.floor( app.normalize( Math.random(), 0, 1, 1, 99 ) );
		ret.pc1.stats[ids[i]] = Math.floor( app.normalize( Math.random(), 0, 1, 1, 99 ) );
		ret.pc2.stats[ids[i]] = Math.floor( app.normalize( Math.random(), 0, 1, 1, 99 ) );
	}

	ret.pc0.lspells = _get_spells();
	ret.pc0.dspells = _get_spells();

	ret.pc0.stats.max_hp = 100;
	ret.pc0.stats.curr_hp = 100;
	ret.pc0.stats.max_mp = 20;
	ret.pc0.stats.curr_mp = 20;	

	ret.pc1.lspells = _get_spells();
	ret.pc1.dspells = _get_spells();

	ret.pc1.stats.max_hp = 100;
	ret.pc1.stats.curr_hp = 100;
	ret.pc1.stats.max_mp = 20;
	ret.pc1.stats.curr_mp = 20;	

	ret.pc2.lspells = _get_spells();
	ret.pc2.dspells = _get_spells();

	ret.pc2.stats.max_hp = 100;
	ret.pc2.stats.curr_hp = 100;
	ret.pc2.stats.max_mp = 20;
	ret.pc2.stats.curr_mp = 20;		

	ret.pc0.name = "Engleberton";
	ret.pc1.name = "Anschwertz";
	ret.pc2.name = "Adalais";

	ret.pc0.sprite = "male_legionaire";
	ret.pc1.sprite = "male_magician";
	ret.pc2.sprite = "female_archer";

	ret.pc0["class"]= "legionaire";
	ret.pc1["class"] = "magician";
	ret.pc2["class"] = "archer";

	return ret;
};

})(); 
 // ----------------------------------------------------------------------------
 // Buzz, a Javascript HTML5 Audio library
 // v1.1.0 - released 2013-08-15 13:18
 // Licensed under the MIT license.
 // http://buzz.jaysalvat.com/
 // ----------------------------------------------------------------------------
 // Copyright (C) 2010-2013 Jay Salvat
 // http://jaysalvat.com/
 // ----------------------------------------------------------------------------

(function(t,n,e){"undefined"!=typeof module&&module.exports?module.exports=e():"function"==typeof n.define&&n.define.amd?define(t,[],e):n[t]=e()})("buzz",this,function(){var t={defaults:{autoplay:!1,duration:5e3,formats:[],loop:!1,placeholder:"--",preload:"metadata",volume:80,document:document},types:{mp3:"audio/mpeg",ogg:"audio/ogg",wav:"audio/wav",aac:"audio/aac",m4a:"audio/x-m4a"},sounds:[],el:document.createElement("audio"),sound:function(n,e){function i(t){for(var n=[],e=t.length-1,i=0;e>=i;i++)n.push({start:t.start(i),end:t.end(i)});return n}function u(t){return t.split(".").pop()}function s(n,e){var i=r.createElement("source");i.src=e,t.types[u(e)]&&(i.type=t.types[u(e)]),n.appendChild(i)}e=e||{};var r=e.document||t.defaults.document,o=0,a=[],h={},l=t.isSupported();if(this.load=function(){return l?(this.sound.load(),this):this},this.play=function(){return l?(this.sound.play(),this):this},this.togglePlay=function(){return l?(this.sound.paused?this.sound.play():this.sound.pause(),this):this},this.pause=function(){return l?(this.sound.pause(),this):this},this.isPaused=function(){return l?this.sound.paused:null},this.stop=function(){return l?(this.setTime(0),this.sound.pause(),this):this},this.isEnded=function(){return l?this.sound.ended:null},this.loop=function(){return l?(this.sound.loop="loop",this.bind("ended.buzzloop",function(){this.currentTime=0,this.play()}),this):this},this.unloop=function(){return l?(this.sound.removeAttribute("loop"),this.unbind("ended.buzzloop"),this):this},this.mute=function(){return l?(this.sound.muted=!0,this):this},this.unmute=function(){return l?(this.sound.muted=!1,this):this},this.toggleMute=function(){return l?(this.sound.muted=!this.sound.muted,this):this},this.isMuted=function(){return l?this.sound.muted:null},this.setVolume=function(t){return l?(0>t&&(t=0),t>100&&(t=100),this.volume=t,this.sound.volume=t/100,this):this},this.getVolume=function(){return l?this.volume:this},this.increaseVolume=function(t){return this.setVolume(this.volume+(t||1))},this.decreaseVolume=function(t){return this.setVolume(this.volume-(t||1))},this.setTime=function(t){if(!l)return this;var n=!0;return this.whenReady(function(){n===!0&&(n=!1,this.sound.currentTime=t)}),this},this.getTime=function(){if(!l)return null;var n=Math.round(100*this.sound.currentTime)/100;return isNaN(n)?t.defaults.placeholder:n},this.setPercent=function(n){return l?this.setTime(t.fromPercent(n,this.sound.duration)):this},this.getPercent=function(){if(!l)return null;var n=Math.round(t.toPercent(this.sound.currentTime,this.sound.duration));return isNaN(n)?t.defaults.placeholder:n},this.setSpeed=function(t){return l?(this.sound.playbackRate=t,this):this},this.getSpeed=function(){return l?this.sound.playbackRate:null},this.getDuration=function(){if(!l)return null;var n=Math.round(100*this.sound.duration)/100;return isNaN(n)?t.defaults.placeholder:n},this.getPlayed=function(){return l?i(this.sound.played):null},this.getBuffered=function(){return l?i(this.sound.buffered):null},this.getSeekable=function(){return l?i(this.sound.seekable):null},this.getErrorCode=function(){return l&&this.sound.error?this.sound.error.code:0},this.getErrorMessage=function(){if(!l)return null;switch(this.getErrorCode()){case 1:return"MEDIA_ERR_ABORTED";case 2:return"MEDIA_ERR_NETWORK";case 3:return"MEDIA_ERR_DECODE";case 4:return"MEDIA_ERR_SRC_NOT_SUPPORTED";default:return null}},this.getStateCode=function(){return l?this.sound.readyState:null},this.getStateMessage=function(){if(!l)return null;switch(this.getStateCode()){case 0:return"HAVE_NOTHING";case 1:return"HAVE_METADATA";case 2:return"HAVE_CURRENT_DATA";case 3:return"HAVE_FUTURE_DATA";case 4:return"HAVE_ENOUGH_DATA";default:return null}},this.getNetworkStateCode=function(){return l?this.sound.networkState:null},this.getNetworkStateMessage=function(){if(!l)return null;switch(this.getNetworkStateCode()){case 0:return"NETWORK_EMPTY";case 1:return"NETWORK_IDLE";case 2:return"NETWORK_LOADING";case 3:return"NETWORK_NO_SOURCE";default:return null}},this.set=function(t,n){return l?(this.sound[t]=n,this):this},this.get=function(t){return l?t?this.sound[t]:this.sound:null},this.bind=function(t,n){if(!l)return this;t=t.split(" ");for(var e=this,i=function(t){n.call(e,t)},u=0;t.length>u;u++){var s=t[u],r=s;s=r.split(".")[0],a.push({idx:r,func:i}),this.sound.addEventListener(s,i,!0)}return this},this.unbind=function(t){if(!l)return this;t=t.split(" ");for(var n=0;t.length>n;n++)for(var e=t[n],i=e.split(".")[0],u=0;a.length>u;u++){var s=a[u].idx.split(".");(a[u].idx==e||s[1]&&s[1]==e.replace(".",""))&&(this.sound.removeEventListener(i,a[u].func,!0),a.splice(u,1))}return this},this.bindOnce=function(t,n){if(!l)return this;var e=this;return h[o++]=!1,this.bind(t+"."+o,function(){h[o]||(h[o]=!0,n.call(e)),e.unbind(t+"."+o)}),this},this.trigger=function(t){if(!l)return this;t=t.split(" ");for(var n=0;t.length>n;n++)for(var e=t[n],i=0;a.length>i;i++){var u=a[i].idx.split(".");if(a[i].idx==e||u[0]&&u[0]==e.replace(".","")){var s=r.createEvent("HTMLEvents");s.initEvent(u[0],!1,!0),this.sound.dispatchEvent(s)}}return this},this.fadeTo=function(n,e,i){function u(){setTimeout(function(){n>s&&n>o.volume?(o.setVolume(o.volume+=1),u()):s>n&&o.volume>n?(o.setVolume(o.volume-=1),u()):i instanceof Function&&i.apply(o)},r)}if(!l)return this;e instanceof Function?(i=e,e=t.defaults.duration):e=e||t.defaults.duration;var s=this.volume,r=e/Math.abs(s-n),o=this;return this.play(),this.whenReady(function(){u()}),this},this.fadeIn=function(t,n){return l?this.setVolume(0).fadeTo(100,t,n):this},this.fadeOut=function(t,n){return l?this.fadeTo(0,t,n):this},this.fadeWith=function(t,n){return l?(this.fadeOut(n,function(){this.stop()}),t.play().fadeIn(n),this):this},this.whenReady=function(t){if(!l)return null;var n=this;0===this.sound.readyState?this.bind("canplay.buzzwhenready",function(){t.call(n)}):t.call(n)},l&&n){for(var d in t.defaults)t.defaults.hasOwnProperty(d)&&(e[d]=e[d]||t.defaults[d]);if(this.sound=r.createElement("audio"),n instanceof Array)for(var c in n)n.hasOwnProperty(c)&&s(this.sound,n[c]);else if(e.formats.length)for(var f in e.formats)e.formats.hasOwnProperty(f)&&s(this.sound,n+"."+e.formats[f]);else s(this.sound,n);e.loop&&this.loop(),e.autoplay&&(this.sound.autoplay="autoplay"),this.sound.preload=e.preload===!0?"auto":e.preload===!1?"none":e.preload,this.setVolume(e.volume),t.sounds.push(this)}},group:function(t){function n(){for(var n=e(null,arguments),i=n.shift(),u=0;t.length>u;u++)t[u][i].apply(t[u],n)}function e(t,n){return t instanceof Array?t:Array.prototype.slice.call(n)}t=e(t,arguments),this.getSounds=function(){return t},this.add=function(n){n=e(n,arguments);for(var i=0;n.length>i;i++)t.push(n[i])},this.remove=function(n){n=e(n,arguments);for(var i=0;n.length>i;i++)for(var u=0;t.length>u;u++)if(t[u]==n[i]){t.splice(u,1);break}},this.load=function(){return n("load"),this},this.play=function(){return n("play"),this},this.togglePlay=function(){return n("togglePlay"),this},this.pause=function(t){return n("pause",t),this},this.stop=function(){return n("stop"),this},this.mute=function(){return n("mute"),this},this.unmute=function(){return n("unmute"),this},this.toggleMute=function(){return n("toggleMute"),this},this.setVolume=function(t){return n("setVolume",t),this},this.increaseVolume=function(t){return n("increaseVolume",t),this},this.decreaseVolume=function(t){return n("decreaseVolume",t),this},this.loop=function(){return n("loop"),this},this.unloop=function(){return n("unloop"),this},this.setTime=function(t){return n("setTime",t),this},this.set=function(t,e){return n("set",t,e),this},this.bind=function(t,e){return n("bind",t,e),this},this.unbind=function(t){return n("unbind",t),this},this.bindOnce=function(t,e){return n("bindOnce",t,e),this},this.trigger=function(t){return n("trigger",t),this},this.fade=function(t,e,i,u){return n("fade",t,e,i,u),this},this.fadeIn=function(t,e){return n("fadeIn",t,e),this},this.fadeOut=function(t,e){return n("fadeOut",t,e),this}},all:function(){return new t.group(t.sounds)},isSupported:function(){return!!t.el.canPlayType},isOGGSupported:function(){return!!t.el.canPlayType&&t.el.canPlayType('audio/ogg; codecs="vorbis"')},isWAVSupported:function(){return!!t.el.canPlayType&&t.el.canPlayType('audio/wav; codecs="1"')},isMP3Supported:function(){return!!t.el.canPlayType&&t.el.canPlayType("audio/mpeg;")},isAACSupported:function(){return!!t.el.canPlayType&&(t.el.canPlayType("audio/x-m4a;")||t.el.canPlayType("audio/aac;"))},toTimer:function(t,n){var e,i,u;return e=Math.floor(t/3600),e=isNaN(e)?"--":e>=10?e:"0"+e,i=n?Math.floor(t/60%60):Math.floor(t/60),i=isNaN(i)?"--":i>=10?i:"0"+i,u=Math.floor(t%60),u=isNaN(u)?"--":u>=10?u:"0"+u,n?e+":"+i+":"+u:i+":"+u},fromTimer:function(t){var n=(""+t).split(":");return n&&3==n.length&&(t=3600*parseInt(n[0],10)+60*parseInt(n[1],10)+parseInt(n[2],10)),n&&2==n.length&&(t=60*parseInt(n[0],10)+parseInt(n[1],10)),t},toPercent:function(t,n,e){var i=Math.pow(10,e||0);return Math.round(100*t/n*i)/i},fromPercent:function(t,n,e){var i=Math.pow(10,e||0);return Math.round(n/100*t*i)/i}};return t}); 
/*!
 *  CanvasInput v1.0.16
 *  http://goldfirestudios.com/blog/108/CanvasInput-HTML5-Canvas-Text-Input
 *
 *  (c) 2013, James Simpson of GoldFire Studios
 *  goldfirestudios.com
 *
 *  MIT License
 */
!function(){var e=[],t=window.CanvasInput=function(t){var n=this;t=t?t:{},n._canvas=t.canvas||null,n._ctx=n._canvas?n._canvas.getContext("2d"):null,n._x=t.x||0,n._y=t.y||0,n._extraX=t.extraX||0,n._extraY=t.extraY||0,n._fontSize=t.fontSize||14,n._fontFamily=t.fontFamily||"Arial",n._fontColor=t.fontColor||"#000",n._placeHolderColor=t.placeHolderColor||"#bfbebd",n._fontWeight=t.fontWeight||"normal",n._fontStyle=t.fontStyle||"normal",n._readonly=t.readonly||!1,n._maxlength=t.maxlength||null,n._width=t.width||150,n._height=t.height||n._fontSize,n._padding=t.padding>=0?t.padding:5,n._borderWidth=t.borderWidth>=0?t.borderWidth:1,n._borderColor=t.borderColor||"#959595",n._borderRadius=t.borderRadius>=0?t.borderRadius:3,n._backgroundImage=t.backgroundImage||"",n._boxShadow=t.boxShadow||"1px 1px 0px rgba(255, 255, 255, 1)",n._innerShadow=t.innerShadow||"0px 0px 4px rgba(0, 0, 0, 0.4)",n._selectionColor=t.selectionColor||"rgba(179, 212, 253, 0.8)",n._placeHolder=t.placeHolder||"",n._value=(t.value||n._placeHolder)+"",n._onsubmit=t.onsubmit||function(){},n._onkeydown=t.onkeydown||function(){},n._onkeyup=t.onkeyup||function(){},n._onfocus=t.onfocus||function(){},n._onblur=t.onblur||function(){},n._cursor=!1,n._cursorPos=0,n._hasFocus=!1,n._selection=[0,0],n._wasOver=!1,n.boxShadow(n._boxShadow,!0),n._calcWH(),n._renderCanvas=document.createElement("canvas"),n._renderCanvas.setAttribute("width",n.outerW),n._renderCanvas.setAttribute("height",n.outerH),n._renderCtx=n._renderCanvas.getContext("2d"),n._shadowCanvas=document.createElement("canvas"),n._shadowCanvas.setAttribute("width",n._width+2*n._padding),n._shadowCanvas.setAttribute("height",n._height+2*n._padding),n._shadowCtx=n._shadowCanvas.getContext("2d"),void 0!==t.backgroundGradient?(n._backgroundColor=n._renderCtx.createLinearGradient(0,0,0,n.outerH),n._backgroundColor.addColorStop(0,t.backgroundGradient[0]),n._backgroundColor.addColorStop(1,t.backgroundGradient[1])):n._backgroundColor=t.backgroundColor||"#fff",n._canvas&&(n._canvas.addEventListener("mousemove",function(e){e=e||window.event,n.mousemove(e,n)},!1),n._canvas.addEventListener("mousedown",function(e){e=e||window.event,n.mousedown(e,n)},!1),n._canvas.addEventListener("mouseup",function(e){e=e||window.event,n.mouseup(e,n)},!1)),window.addEventListener("mouseup",function(e){e=e||window.event,n._hasFocus&&!n._mouseDown&&n.blur()},!0),window.addEventListener("keydown",function(e){e=e||window.event,n._hasFocus&&n.keydown(e,n)}),window.addEventListener("keyup",function(e){e=e||window.event,n._hasFocus&&n._onkeyup(e,n)}),window.addEventListener("paste",function(e){if(e=e||window.event,n._hasFocus){var t=e.clipboardData.getData("text/plain"),r=n._value.substr(0,n._cursorPos),i=n._value.substr(n._cursorPos);n._value=r+t+i,n._cursorPos+=t.length,n.render()}}),e.push(n),n._inputsIndex=e.length-1,n.render()};t.prototype={canvas:function(e){var t=this;return void 0!==e?(t._canvas=e,t._ctx=t._canvas.getContext("2d"),t.render()):t._canvas},x:function(e){var t=this;return void 0!==e?(t._x=e,t.render()):t._x},y:function(e){var t=this;return void 0!==e?(t._y=e,t.render()):t._y},extraX:function(e){var t=this;return void 0!==e?(t._extraX=e,t.render()):t._extraX},extraY:function(e){var t=this;return void 0!==e?(t._extraY=e,t.render()):t._extraY},fontSize:function(e){var t=this;return void 0!==e?(t._fontSize=e,t.render()):t._fontSize},fontFamily:function(e){var t=this;return void 0!==e?(t._fontFamily=e,t.render()):t._fontFamily},fontColor:function(e){var t=this;return void 0!==e?(t._fontColor=e,t.render()):t._fontColor},placeHolderColor:function(e){var t=this;return void 0!==e?(t._placeHolderColor=e,t.render()):t._placeHolderColor},fontWeight:function(e){var t=this;return void 0!==e?(t._fontWeight=e,t.render()):t._fontWeight},fontStyle:function(e){var t=this;return void 0!==e?(t._fontStyle=e,t.render()):t._fontStyle},width:function(e){var t=this;return void 0!==e?(t._width=e,t._calcWH(),t._updateCanvasWH(),t.render()):t._width},height:function(e){var t=this;return void 0!==e?(t._height=e,t._calcWH(),t._updateCanvasWH(),t.render()):t._height},padding:function(e){var t=this;return void 0!==e?(t._padding=e,t._calcWH(),t._updateCanvasWH(),t.render()):t._padding},borderWidth:function(e){var t=this;return void 0!==e?(t._borderWidth=e,t._calcWH(),t._updateCanvasWH(),t.render()):t._borderWidth},borderColor:function(e){var t=this;return void 0!==e?(t._borderColor=e,t.render()):t._borderColor},borderRadius:function(e){var t=this;return void 0!==e?(t._borderRadius=e,t.render()):t._borderRadius},backgroundColor:function(e){var t=this;return void 0!==e?(t._backgroundColor=e,t.render()):t._backgroundColor},backgroundGradient:function(e){var t=this;return void 0!==e?(t._backgroundColor=t._renderCtx.createLinearGradient(0,0,0,t.outerH),t._backgroundColor.addColorStop(0,e[0]),t._backgroundColor.addColorStop(1,e[1]),t.render()):t._backgroundColor},boxShadow:function(e,t){var n=this;if(void 0===e)return n._boxShadow;var r=e.split("px ");return n._boxShadow={x:"none"===n._boxShadow?0:parseInt(r[0],10),y:"none"===n._boxShadow?0:parseInt(r[1],10),blur:"none"===n._boxShadow?0:parseInt(r[2],10),color:"none"===n._boxShadow?"":r[3]},n._boxShadow.x<0?(n.shadowL=Math.abs(n._boxShadow.x)+n._boxShadow.blur,n.shadowR=n._boxShadow.blur+n._boxShadow.x):(n.shadowL=Math.abs(n._boxShadow.blur-n._boxShadow.x),n.shadowR=n._boxShadow.blur+n._boxShadow.x),n._boxShadow.y<0?(n.shadowT=Math.abs(n._boxShadow.y)+n._boxShadow.blur,n.shadowB=n._boxShadow.blur+n._boxShadow.y):(n.shadowT=Math.abs(n._boxShadow.blur-n._boxShadow.y),n.shadowB=n._boxShadow.blur+n._boxShadow.y),n.shadowW=n.shadowL+n.shadowR,n.shadowH=n.shadowT+n.shadowB,n._calcWH(),t?void 0:(n._updateCanvasWH(),n.render())},innerShadow:function(e){var t=this;return void 0!==e?(t._innerShadow=e,t.render()):t._innerShadow},selectionColor:function(e){var t=this;return void 0!==e?(t._selectionColor=e,t.render()):t._selectionColor},placeHolder:function(e){var t=this;return void 0!==e?(t._placeHolder=e,t.render()):t._placeHolder},value:function(e){var t=this;return void 0!==e?(t._value=e+"",t.render(),t):t._value},onsubmit:function(e){var t=this;return void 0!==e?(t._onsubmit=e,t):(t._onsubmit(),void 0)},onkeydown:function(e){var t=this;return void 0!==e?(t._onkeydown=e,t):(t._onkeydown(),void 0)},onkeyup:function(e){var t=this;return void 0!==e?(t._onkeyup=e,t):(t._onkeyup(),void 0)},focus:function(t){var n,r=this;if(!r._readonly){if(!r._hasFocus){r._onfocus(r);for(var i=0;i<e.length;i++)e[i]._hasFocus&&e[i].blur()}r._selectionUpdated?delete r._selectionUpdated:r._selection=[0,0],r._cursorPos="number"==typeof t?t:r._clipText().length,r._placeHolder===r._value&&(r._value=""),r._hasFocus=!0,r._cursor=!0,r._cursorInterval&&clearInterval(r._cursorInterval),r._cursorInterval=setInterval(function(){r._cursor=!r._cursor,r.render()},500);var s=navigator.userAgent.toLowerCase(),o=s.indexOf("chrome")>=0&&s.indexOf("mobile")>=0&&s.indexOf("android")>=0,u=void 0!==window.orientation;return u&&!o&&document&&document.createElement&&(n=document.createElement("input"))?(n.type="text",n.style.opacity=0,n.style.position="absolute",n.style.left=r._x+r._extraX+(r._canvas?r._canvas.offsetLeft:0)+"px",n.style.top=r._y+r._extraY+(r._canvas?r._canvas.offsetTop:0)+"px",n.style.width=r._width,n.style.height=0,document.body.appendChild(n),n.focus(),n.addEventListener("blur",function(){r.blur(r)},!1)):u&&r.value(prompt(r._placeHolder)||""),r.render()}},blur:function(e){var t=e||this;return t._onblur(t),t._cursorInterval&&clearInterval(t._cursorInterval),t._hasFocus=!1,t._cursor=!1,t._selection=[0,0],""===t._value&&(t._value=t._placeHolder),t.render()},keydown:function(t,n){var r,i,s=t.which,o=t.shiftKey,u=null;if(n._hasFocus){if(n._onkeydown(t,n),65===s&&(t.ctrlKey||t.metaKey))return n._selection=[0,n._value.length],t.preventDefault(),n.render();if(17===s||t.metaKey||t.ctrlKey)return n;if(t.preventDefault(),8===s)n._clearSelection()||n._cursorPos>0&&(r=n._value.substr(0,n._cursorPos-1),i=n._value.substr(n._cursorPos,n._value.length),n._value=r+i,n._cursorPos--);else if(46===s)n._clearSelection()||n._cursorPos<n._value.length&&(r=n._value.substr(0,n._cursorPos),i=n._value.substr(n._cursorPos+1,n._value.length),n._value=r+i);else if(37===s)n._cursorPos>0&&(n._cursorPos--,n._cursor=!0,n._selection=[0,0]);else if(39===s)n._cursorPos<n._value.length&&(n._cursorPos++,n._cursor=!0,n._selection=[0,0]);else if(13===s)n._onsubmit(t,n);else if(9===s){if(e.length>1){var a=e[n._inputsIndex+1]?n._inputsIndex+1:0;n.blur(),setTimeout(function(){e[a].focus()},10)}}else if(u=n._mapCodeToKey(o,s)){if(n._clearSelection(),n._maxlength&&n._maxlength<=n._value.length)return;r=n._value?n._value.substr(0,n._cursorPos):"",i=n._value?n._value.substr(n._cursorPos):"",n._value=r+u+i,n._cursorPos++}return n.render()}},click:function(e,t){var n=t._mousePos(e),r=n.x,i=n.y;return t._endSelection?(delete t._endSelection,delete t._selectionUpdated,void 0):t._canvas&&t._overInput(r,i)||!t._canvas?t._mouseDown?(t._mouseDown=!1,t.click(e,t),t.focus(t._clickPos(r,i))):void 0:t.blur()},mousemove:function(e,t){var n=t._mousePos(e),r=n.x,i=n.y,s=t._overInput(r,i);if(s&&t._canvas?(t._canvas.style.cursor="text",t._wasOver=!0):t._wasOver&&t._canvas&&(t._canvas.style.cursor="default",t._wasOver=!1),t._hasFocus&&t._selectionStart>=0){var o=t._clickPos(r,i),u=Math.min(t._selectionStart,o),a=Math.max(t._selectionStart,o);if(!s)return t._selectionUpdated=!0,t._endSelection=!0,delete t._selectionStart,t.render(),void 0;(t._selection[0]!==u||t._selection[1]!==a)&&(t._selection=[u,a],t.render())}},mousedown:function(e,t){var n=t._mousePos(e),r=n.x,i=n.y,s=t._overInput(r,i);t._mouseDown=s,t._hasFocus&&s&&(t._selectionStart=t._clickPos(r,i))},mouseup:function(e,t){var n=t._mousePos(e),r=n.x,i=n.y,s=t._clickPos(r,i)!==t._selectionStart;t._hasFocus&&t._selectionStart>=0&&t._overInput(r,i)&&s?(t._selectionUpdated=!0,delete t._selectionStart,t.render()):delete t._selectionStart,t.click(e,t)},renderCanvas:function(){return this._renderCanvas},render:function(){var e=this,t=e._renderCtx,n=e.outerW,r=e.outerH,i=e._borderRadius,s=e._borderWidth,o=e.shadowW,u=e.shadowH;t.clearRect(0,0,t.canvas.width,t.canvas.height),t.shadowOffsetX=e._boxShadow.x,t.shadowOffsetY=e._boxShadow.y,t.shadowBlur=e._boxShadow.blur,t.shadowColor=e._boxShadow.color,e._borderWidth>0&&(t.fillStyle=e._borderColor,e._roundedRect(t,e.shadowL,e.shadowT,n-o,r-u,i),t.fill(),t.shadowOffsetX=0,t.shadowOffsetY=0,t.shadowBlur=0),e._drawTextBox(function(){t.shadowOffsetX=0,t.shadowOffsetY=0,t.shadowBlur=0;var f=e._clipText(),l=e._padding+e._borderWidth+e.shadowT;if(e._selection[1]>0){var c=e._textWidth(f.substring(0,e._selection[0])),h=e._textWidth(f.substring(e._selection[0],e._selection[1]));t.fillStyle=e._selectionColor,t.fillRect(l+c,l,h,e._height)}if(t.fillStyle=e._placeHolder===e._value&&""!==e._value?e._placeHolderColor:e._fontColor,e._cursor){var p=e._textWidth(f.substring(0,e._cursorPos));t.fillRect(l+p,l,1,e._height)}var v=e._padding+e._borderWidth+e.shadowL,m=Math.round(l+e._height/2);t.font=e._fontStyle+" "+e._fontWeight+" "+e._fontSize+"px "+e._fontFamily,t.textAlign="left",t.textBaseline="middle",t.fillText(f,v,m);var g=e._innerShadow.split("px "),y="none"===e._innerShadow?0:parseInt(g[0],10),b="none"===e._innerShadow?0:parseInt(g[1],10),w="none"===e._innerShadow?0:parseInt(g[2],10),E="none"===e._innerShadow?"":g[3];if(w>0){var S=e._shadowCtx,x=S.canvas.width,T=S.canvas.height;S.clearRect(0,0,x,T),S.shadowBlur=w,S.shadowColor=E,S.shadowOffsetX=0,S.shadowOffsetY=b,S.fillRect(-1*n,-100,3*n,100),S.shadowOffsetX=y,S.shadowOffsetY=0,S.fillRect(x,-1*r,100,3*r),S.shadowOffsetX=0,S.shadowOffsetY=b,S.fillRect(-1*n,T,3*n,100),S.shadowOffsetX=y,S.shadowOffsetY=0,S.fillRect(-100,-1*r,100,3*r),e._roundedRect(t,s+e.shadowL,s+e.shadowT,n-2*s-o,r-2*s-u,i),t.clip(),t.drawImage(e._shadowCanvas,0,0,x,T,s+e.shadowL,s+e.shadowT,x,T)}return e._ctx&&(e._ctx.clearRect(e._x,e._y,t.canvas.width,t.canvas.height),e._ctx.drawImage(e._renderCanvas,e._x,e._y)),e})},_drawTextBox:function(e){var t=this,n=t._renderCtx,r=t.outerW,i=t.outerH,s=t._borderRadius,o=t._borderWidth,u=t.shadowW,a=t.shadowH;if(""===t._backgroundImage)n.fillStyle=t._backgroundColor,t._roundedRect(n,o+t.shadowL,o+t.shadowT,r-2*o-u,i-2*o-a,s),n.fill(),e();else{var f=new Image;f.src=t._backgroundImage,f.onload=function(){n.drawImage(f,0,0,f.width,f.height,o+t.shadowL,o+t.shadowT,r,i),e()}}},_clearSelection:function(){var e=this;if(e._selection[1]>0){var t=e._selection[0],n=e._selection[1];return e._value=e._value.substr(0,t)+e._value.substr(n),e._cursorPos=t,e._cursorPos=e._cursorPos<0?0:e._cursorPos,e._selection=[0,0],!0}return!1},_clipText:function(e){var t=this;e=void 0===e?t._value:e;var n=t._textWidth(e),r=n/(t._width-t._padding),i=r>1?e.substr(-1*Math.floor(e.length/r)):e;return i+""},_textWidth:function(e){var t=this,n=t._renderCtx;return n.font=t._fontStyle+" "+t._fontWeight+" "+t._fontSize+"px "+t._fontFamily,n.textAlign="left",n.measureText(e).width},_calcWH:function(){var e=this;e.outerW=e._width+2*e._padding+2*e._borderWidth+e.shadowW,e.outerH=e._height+2*e._padding+2*e._borderWidth+e.shadowH},_updateCanvasWH:function(){var e=this,t=e._renderCanvas.width,n=e._renderCanvas.height;e._renderCanvas.setAttribute("width",e.outerW),e._renderCanvas.setAttribute("height",e.outerH),e._shadowCanvas.setAttribute("width",e._width+2*e._padding),e._shadowCanvas.setAttribute("height",e._height+2*e._padding),e._ctx&&e._ctx.clearRect(e._x,e._y,t,n)},_roundedRect:function(e,t,n,r,i,s){2*s>r&&(s=r/2),2*s>i&&(s=i/2),e.beginPath(),e.moveTo(t+s,n),e.lineTo(t+r-s,n),e.quadraticCurveTo(t+r,n,t+r,n+s),e.lineTo(t+r,n+i-s),e.quadraticCurveTo(t+r,n+i,t+r-s,n+i),e.lineTo(t+s,n+i),e.quadraticCurveTo(t,n+i,t,n+i-s),e.lineTo(t,n+s),e.quadraticCurveTo(t,n,t+s,n),e.closePath()},_overInput:function(e,t){var n=this,r=e>=n._x+n._extraX,i=e<=n._x+n._extraX+n._width+2*n._padding,s=t>=n._y+n._extraY,o=t<=n._y+n._extraY+n._height+2*n._padding;return r&&i&&s&&o},_clickPos:function(e){var t=this,n=t._value;t._value===t._placeHolder&&(n="");var r=t._clipText(n),i=0,s=r.length;if(e-(t._x+t._extraX)<t._textWidth(r))for(var o=0;o<r.length;o++)if(i+=t._textWidth(r[o]),i>=e-(t._x+t._extraX)){s=o;break}return s},_mousePos:function(e){var t=e.target,n=document.defaultView.getComputedStyle(t,void 0),r=parseInt(n.paddingLeft,10)||0,i=parseInt(n.paddingLeft,10)||0,s=parseInt(n.borderLeftWidth,10)||0,o=parseInt(n.borderLeftWidth,10)||0,u=document.body.parentNode.offsetTop||0,a=document.body.parentNode.offsetLeft||0,f=0,l=0;if("unefined"!=typeof t.offsetParent)do f+=t.offsetLeft,l+=t.offsetTop;while(t=t.offsetParent);return f+=r+s+a,l+=i+o+u,{x:e.pageX-f,y:e.pageY-l}},_mapCodeToKey:function(e,t){for(var n=[8,9,13,16,17,18,20,27,91,92],r="",i=0;i<n.length;i++)if(t===n[i])return;if("boolean"==typeof e&&"number"==typeof t){var s={32:" ",48:")",49:"!",50:"@",51:"#",52:"$",53:"%",54:"^",55:"&",56:"*",57:"(",59:":",107:"+",189:"_",186:":",187:"+",188:"<",190:">",191:"?",192:"~",219:"{",220:"|",221:"}",222:'"'};return r=e?t>=65&&90>=t?String.fromCharCode(t):s[t]:t>=65&&90>=t?String.fromCharCode(t).toLowerCase():96===t?"0":97===t?"1":98===t?"2":99===t?"3":100===t?"4":101===t?"5":102===t?"6":103===t?"7":104===t?"8":105===t?"9":188===t?",":190===t?".":191===t?"/":192===t?"`":220===t?"\\":187===t?"=":189===t?"-":222===t?"'":186===t?";":219===t?"[":221===t?"]":String.fromCharCode(t)}}}}() 
/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */
var saveAs=saveAs||navigator.msSaveBlob&&navigator.msSaveBlob.bind(navigator)||function(a){"use strict";var b=a.document,c=function(){return a.URL||a.webkitURL||a},d=a.URL||a.webkitURL||a,e=b.createElementNS("http://www.w3.org/1999/xhtml","a"),f="download"in e,g=function(c){var d=b.createEvent("MouseEvents");return d.initMouseEvent("click",!0,!1,a,0,0,0,0,0,!1,!1,!1,!1,0,null),c.dispatchEvent(d)},h=a.webkitRequestFileSystem,i=a.requestFileSystem||h||a.mozRequestFileSystem,j=function(b){(a.setImmediate||a.setTimeout)(function(){throw b},0)},k="application/octet-stream",l=0,m=[],n=function(){for(var a=m.length;a--;){var b=m[a];"string"==typeof b?d.revokeObjectURL(b):b.remove()}m.length=0},o=function(a,b,c){b=[].concat(b);for(var d=b.length;d--;){var e=a["on"+b[d]];if("function"==typeof e)try{e.call(a,c||a)}catch(f){j(f)}}},p=function(b,d){var q,r,x,j=this,n=b.type,p=!1,s=function(){var a=c().createObjectURL(b);return m.push(a),a},t=function(){o(j,"writestart progress write writeend".split(" "))},u=function(){(p||!q)&&(q=s(b)),r&&(r.location.href=q),j.readyState=j.DONE,t()},v=function(a){return function(){return j.readyState!==j.DONE?a.apply(this,arguments):void 0}},w={create:!0,exclusive:!1};return j.readyState=j.INIT,d||(d="download"),f&&(q=s(b),e.href=q,e.download=d,g(e))?(j.readyState=j.DONE,t(),void 0):(a.chrome&&n&&n!==k&&(x=b.slice||b.webkitSlice,b=x.call(b,0,b.size,k),p=!0),h&&"download"!==d&&(d+=".download"),r=n===k||h?a:a.open(),i?(l+=b.size,i(a.TEMPORARY,l,v(function(a){a.root.getDirectory("saved",w,v(function(a){var c=function(){a.getFile(d,w,v(function(a){a.createWriter(v(function(c){c.onwriteend=function(b){r.location.href=a.toURL(),m.push(a),j.readyState=j.DONE,o(j,"writeend",b)},c.onerror=function(){var a=c.error;a.code!==a.ABORT_ERR&&u()},"writestart progress write abort".split(" ").forEach(function(a){c["on"+a]=j["on"+a]}),c.write(b),j.abort=function(){c.abort(),j.readyState=j.DONE},j.readyState=j.WRITING}),u)}),u)};a.getFile(d,{create:!1},v(function(a){a.remove(),c()}),v(function(a){a.code===a.NOT_FOUND_ERR?c():u()}))}),u)}),u),void 0):(u(),void 0))},q=p.prototype,r=function(a,b){return new p(a,b)};return q.abort=function(){var a=this;a.readyState=a.DONE,o(a,"abort")},q.readyState=q.INIT=0,q.WRITING=1,q.DONE=2,q.error=q.onwritestart=q.onprogress=q.onwrite=q.onabort=q.onerror=q.onwriteend=null,a.addEventListener("unload",n,!1),r}(self);
 
/*! jQuery v1.7.2 jquery.com | jquery.org/license */
(function(a,b){function cy(a){return f.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}function cu(a){if(!cj[a]){var b=c.body,d=f("<"+a+">").appendTo(b),e=d.css("display");d.remove();if(e==="none"||e===""){ck||(ck=c.createElement("iframe"),ck.frameBorder=ck.width=ck.height=0),b.appendChild(ck);if(!cl||!ck.createElement)cl=(ck.contentWindow||ck.contentDocument).document,cl.write((f.support.boxModel?"<!doctype html>":"")+"<html><body>"),cl.close();d=cl.createElement(a),cl.body.appendChild(d),e=f.css(d,"display"),b.removeChild(ck)}cj[a]=e}return cj[a]}function ct(a,b){var c={};f.each(cp.concat.apply([],cp.slice(0,b)),function(){c[this]=a});return c}function cs(){cq=b}function cr(){setTimeout(cs,0);return cq=f.now()}function ci(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function ch(){try{return new a.XMLHttpRequest}catch(b){}}function cb(a,c){a.dataFilter&&(c=a.dataFilter(c,a.dataType));var d=a.dataTypes,e={},g,h,i=d.length,j,k=d[0],l,m,n,o,p;for(g=1;g<i;g++){if(g===1)for(h in a.converters)typeof h=="string"&&(e[h.toLowerCase()]=a.converters[h]);l=k,k=d[g];if(k==="*")k=l;else if(l!=="*"&&l!==k){m=l+" "+k,n=e[m]||e["* "+k];if(!n){p=b;for(o in e){j=o.split(" ");if(j[0]===l||j[0]==="*"){p=e[j[1]+" "+k];if(p){o=e[o],o===!0?n=p:p===!0&&(n=o);break}}}}!n&&!p&&f.error("No conversion from "+m.replace(" "," to ")),n!==!0&&(c=n?n(c):p(o(c)))}}return c}function ca(a,c,d){var e=a.contents,f=a.dataTypes,g=a.responseFields,h,i,j,k;for(i in g)i in d&&(c[g[i]]=d[i]);while(f[0]==="*")f.shift(),h===b&&(h=a.mimeType||c.getResponseHeader("content-type"));if(h)for(i in e)if(e[i]&&e[i].test(h)){f.unshift(i);break}if(f[0]in d)j=f[0];else{for(i in d){if(!f[0]||a.converters[i+" "+f[0]]){j=i;break}k||(k=i)}j=j||k}if(j){j!==f[0]&&f.unshift(j);return d[j]}}function b_(a,b,c,d){if(f.isArray(b))f.each(b,function(b,e){c||bD.test(a)?d(a,e):b_(a+"["+(typeof e=="object"?b:"")+"]",e,c,d)});else if(!c&&f.type(b)==="object")for(var e in b)b_(a+"["+e+"]",b[e],c,d);else d(a,b)}function b$(a,c){var d,e,g=f.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&&((g[d]?a:e||(e={}))[d]=c[d]);e&&f.extend(!0,a,e)}function bZ(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h=a[f],i=0,j=h?h.length:0,k=a===bS,l;for(;i<j&&(k||!l);i++)l=h[i](c,d,e),typeof l=="string"&&(!k||g[l]?l=b:(c.dataTypes.unshift(l),l=bZ(a,c,d,e,l,g)));(k||!l)&&!g["*"]&&(l=bZ(a,c,d,e,"*",g));return l}function bY(a){return function(b,c){typeof b!="string"&&(c=b,b="*");if(f.isFunction(c)){var d=b.toLowerCase().split(bO),e=0,g=d.length,h,i,j;for(;e<g;e++)h=d[e],j=/^\+/.test(h),j&&(h=h.substr(1)||"*"),i=a[h]=a[h]||[],i[j?"unshift":"push"](c)}}}function bB(a,b,c){var d=b==="width"?a.offsetWidth:a.offsetHeight,e=b==="width"?1:0,g=4;if(d>0){if(c!=="border")for(;e<g;e+=2)c||(d-=parseFloat(f.css(a,"padding"+bx[e]))||0),c==="margin"?d+=parseFloat(f.css(a,c+bx[e]))||0:d-=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0;return d+"px"}d=by(a,b);if(d<0||d==null)d=a.style[b];if(bt.test(d))return d;d=parseFloat(d)||0;if(c)for(;e<g;e+=2)d+=parseFloat(f.css(a,"padding"+bx[e]))||0,c!=="padding"&&(d+=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0),c==="margin"&&(d+=parseFloat(f.css(a,c+bx[e]))||0);return d+"px"}function bo(a){var b=c.createElement("div");bh.appendChild(b),b.innerHTML=a.outerHTML;return b.firstChild}function bn(a){var b=(a.nodeName||"").toLowerCase();b==="input"?bm(a):b!=="script"&&typeof a.getElementsByTagName!="undefined"&&f.grep(a.getElementsByTagName("input"),bm)}function bm(a){if(a.type==="checkbox"||a.type==="radio")a.defaultChecked=a.checked}function bl(a){return typeof a.getElementsByTagName!="undefined"?a.getElementsByTagName("*"):typeof a.querySelectorAll!="undefined"?a.querySelectorAll("*"):[]}function bk(a,b){var c;b.nodeType===1&&(b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase(),c==="object"?b.outerHTML=a.outerHTML:c!=="input"||a.type!=="checkbox"&&a.type!=="radio"?c==="option"?b.selected=a.defaultSelected:c==="input"||c==="textarea"?b.defaultValue=a.defaultValue:c==="script"&&b.text!==a.text&&(b.text=a.text):(a.checked&&(b.defaultChecked=b.checked=a.checked),b.value!==a.value&&(b.value=a.value)),b.removeAttribute(f.expando),b.removeAttribute("_submit_attached"),b.removeAttribute("_change_attached"))}function bj(a,b){if(b.nodeType===1&&!!f.hasData(a)){var c,d,e,g=f._data(a),h=f._data(b,g),i=g.events;if(i){delete h.handle,h.events={};for(c in i)for(d=0,e=i[c].length;d<e;d++)f.event.add(b,c,i[c][d])}h.data&&(h.data=f.extend({},h.data))}}function bi(a,b){return f.nodeName(a,"table")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function U(a){var b=V.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}function T(a,b,c){b=b||0;if(f.isFunction(b))return f.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return f.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=f.grep(a,function(a){return a.nodeType===1});if(O.test(b))return f.filter(b,d,!c);b=f.filter(b,d)}return f.grep(a,function(a,d){return f.inArray(a,b)>=0===c})}function S(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function K(){return!0}function J(){return!1}function n(a,b,c){var d=b+"defer",e=b+"queue",g=b+"mark",h=f._data(a,d);h&&(c==="queue"||!f._data(a,e))&&(c==="mark"||!f._data(a,g))&&setTimeout(function(){!f._data(a,e)&&!f._data(a,g)&&(f.removeData(a,d,!0),h.fire())},0)}function m(a){for(var b in a){if(b==="data"&&f.isEmptyObject(a[b]))continue;if(b!=="toJSON")return!1}return!0}function l(a,c,d){if(d===b&&a.nodeType===1){var e="data-"+c.replace(k,"-$1").toLowerCase();d=a.getAttribute(e);if(typeof d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:f.isNumeric(d)?+d:j.test(d)?f.parseJSON(d):d}catch(g){}f.data(a,c,d)}else d=b}return d}function h(a){var b=g[a]={},c,d;a=a.split(/\s+/);for(c=0,d=a.length;c<d;c++)b[a[c]]=!0;return b}var c=a.document,d=a.navigator,e=a.location,f=function(){function J(){if(!e.isReady){try{c.documentElement.doScroll("left")}catch(a){setTimeout(J,1);return}e.ready()}}var e=function(a,b){return new e.fn.init(a,b,h)},f=a.jQuery,g=a.$,h,i=/^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,j=/\S/,k=/^\s+/,l=/\s+$/,m=/^<(\w+)\s*\/?>(?:<\/\1>)?$/,n=/^[\],:{}\s]*$/,o=/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,p=/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,q=/(?:^|:|,)(?:\s*\[)+/g,r=/(webkit)[ \/]([\w.]+)/,s=/(opera)(?:.*version)?[ \/]([\w.]+)/,t=/(msie) ([\w.]+)/,u=/(mozilla)(?:.*? rv:([\w.]+))?/,v=/-([a-z]|[0-9])/ig,w=/^-ms-/,x=function(a,b){return(b+"").toUpperCase()},y=d.userAgent,z,A,B,C=Object.prototype.toString,D=Object.prototype.hasOwnProperty,E=Array.prototype.push,F=Array.prototype.slice,G=String.prototype.trim,H=Array.prototype.indexOf,I={};e.fn=e.prototype={constructor:e,init:function(a,d,f){var g,h,j,k;if(!a)return this;if(a.nodeType){this.context=this[0]=a,this.length=1;return this}if(a==="body"&&!d&&c.body){this.context=c,this[0]=c.body,this.selector=a,this.length=1;return this}if(typeof a=="string"){a.charAt(0)!=="<"||a.charAt(a.length-1)!==">"||a.length<3?g=i.exec(a):g=[null,a,null];if(g&&(g[1]||!d)){if(g[1]){d=d instanceof e?d[0]:d,k=d?d.ownerDocument||d:c,j=m.exec(a),j?e.isPlainObject(d)?(a=[c.createElement(j[1])],e.fn.attr.call(a,d,!0)):a=[k.createElement(j[1])]:(j=e.buildFragment([g[1]],[k]),a=(j.cacheable?e.clone(j.fragment):j.fragment).childNodes);return e.merge(this,a)}h=c.getElementById(g[2]);if(h&&h.parentNode){if(h.id!==g[2])return f.find(a);this.length=1,this[0]=h}this.context=c,this.selector=a;return this}return!d||d.jquery?(d||f).find(a):this.constructor(d).find(a)}if(e.isFunction(a))return f.ready(a);a.selector!==b&&(this.selector=a.selector,this.context=a.context);return e.makeArray(a,this)},selector:"",jquery:"1.7.2",length:0,size:function(){return this.length},toArray:function(){return F.call(this,0)},get:function(a){return a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=this.constructor();e.isArray(a)?E.apply(d,a):e.merge(d,a),d.prevObject=this,d.context=this.context,b==="find"?d.selector=this.selector+(this.selector?" ":"")+c:b&&(d.selector=this.selector+"."+b+"("+c+")");return d},each:function(a,b){return e.each(this,a,b)},ready:function(a){e.bindReady(),A.add(a);return this},eq:function(a){a=+a;return a===-1?this.slice(a):this.slice(a,a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(F.apply(this,arguments),"slice",F.call(arguments).join(","))},map:function(a){return this.pushStack(e.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:E,sort:[].sort,splice:[].splice},e.fn.init.prototype=e.fn,e.extend=e.fn.extend=function(){var a,c,d,f,g,h,i=arguments[0]||{},j=1,k=arguments.length,l=!1;typeof i=="boolean"&&(l=i,i=arguments[1]||{},j=2),typeof i!="object"&&!e.isFunction(i)&&(i={}),k===j&&(i=this,--j);for(;j<k;j++)if((a=arguments[j])!=null)for(c in a){d=i[c],f=a[c];if(i===f)continue;l&&f&&(e.isPlainObject(f)||(g=e.isArray(f)))?(g?(g=!1,h=d&&e.isArray(d)?d:[]):h=d&&e.isPlainObject(d)?d:{},i[c]=e.extend(l,h,f)):f!==b&&(i[c]=f)}return i},e.extend({noConflict:function(b){a.$===e&&(a.$=g),b&&a.jQuery===e&&(a.jQuery=f);return e},isReady:!1,readyWait:1,holdReady:function(a){a?e.readyWait++:e.ready(!0)},ready:function(a){if(a===!0&&!--e.readyWait||a!==!0&&!e.isReady){if(!c.body)return setTimeout(e.ready,1);e.isReady=!0;if(a!==!0&&--e.readyWait>0)return;A.fireWith(c,[e]),e.fn.trigger&&e(c).trigger("ready").off("ready")}},bindReady:function(){if(!A){A=e.Callbacks("once memory");if(c.readyState==="complete")return setTimeout(e.ready,1);if(c.addEventListener)c.addEventListener("DOMContentLoaded",B,!1),a.addEventListener("load",e.ready,!1);else if(c.attachEvent){c.attachEvent("onreadystatechange",B),a.attachEvent("onload",e.ready);var b=!1;try{b=a.frameElement==null}catch(d){}c.documentElement.doScroll&&b&&J()}}},isFunction:function(a){return e.type(a)==="function"},isArray:Array.isArray||function(a){return e.type(a)==="array"},isWindow:function(a){return a!=null&&a==a.window},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},type:function(a){return a==null?String(a):I[C.call(a)]||"object"},isPlainObject:function(a){if(!a||e.type(a)!=="object"||a.nodeType||e.isWindow(a))return!1;try{if(a.constructor&&!D.call(a,"constructor")&&!D.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}var d;for(d in a);return d===b||D.call(a,d)},isEmptyObject:function(a){for(var b in a)return!1;return!0},error:function(a){throw new Error(a)},parseJSON:function(b){if(typeof b!="string"||!b)return null;b=e.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(n.test(b.replace(o,"@").replace(p,"]").replace(q,"")))return(new Function("return "+b))();e.error("Invalid JSON: "+b)},parseXML:function(c){if(typeof c!="string"||!c)return null;var d,f;try{a.DOMParser?(f=new DOMParser,d=f.parseFromString(c,"text/xml")):(d=new ActiveXObject("Microsoft.XMLDOM"),d.async="false",d.loadXML(c))}catch(g){d=b}(!d||!d.documentElement||d.getElementsByTagName("parsererror").length)&&e.error("Invalid XML: "+c);return d},noop:function(){},globalEval:function(b){b&&j.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(w,"ms-").replace(v,x)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,c,d){var f,g=0,h=a.length,i=h===b||e.isFunction(a);if(d){if(i){for(f in a)if(c.apply(a[f],d)===!1)break}else for(;g<h;)if(c.apply(a[g++],d)===!1)break}else if(i){for(f in a)if(c.call(a[f],f,a[f])===!1)break}else for(;g<h;)if(c.call(a[g],g,a[g++])===!1)break;return a},trim:G?function(a){return a==null?"":G.call(a)}:function(a){return a==null?"":(a+"").replace(k,"").replace(l,"")},makeArray:function(a,b){var c=b||[];if(a!=null){var d=e.type(a);a.length==null||d==="string"||d==="function"||d==="regexp"||e.isWindow(a)?E.call(c,a):e.merge(c,a)}return c},inArray:function(a,b,c){var d;if(b){if(H)return H.call(b,a,c);d=b.length,c=c?c<0?Math.max(0,d+c):c:0;for(;c<d;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,c){var d=a.length,e=0;if(typeof c.length=="number")for(var f=c.length;e<f;e++)a[d++]=c[e];else while(c[e]!==b)a[d++]=c[e++];a.length=d;return a},grep:function(a,b,c){var d=[],e;c=!!c;for(var f=0,g=a.length;f<g;f++)e=!!b(a[f],f),c!==e&&d.push(a[f]);return d},map:function(a,c,d){var f,g,h=[],i=0,j=a.length,k=a instanceof e||j!==b&&typeof j=="number"&&(j>0&&a[0]&&a[j-1]||j===0||e.isArray(a));if(k)for(;i<j;i++)f=c(a[i],i,d),f!=null&&(h[h.length]=f);else for(g in a)f=c(a[g],g,d),f!=null&&(h[h.length]=f);return h.concat.apply([],h)},guid:1,proxy:function(a,c){if(typeof c=="string"){var d=a[c];c=a,a=d}if(!e.isFunction(a))return b;var f=F.call(arguments,2),g=function(){return a.apply(c,f.concat(F.call(arguments)))};g.guid=a.guid=a.guid||g.guid||e.guid++;return g},access:function(a,c,d,f,g,h,i){var j,k=d==null,l=0,m=a.length;if(d&&typeof d=="object"){for(l in d)e.access(a,c,l,d[l],1,h,f);g=1}else if(f!==b){j=i===b&&e.isFunction(f),k&&(j?(j=c,c=function(a,b,c){return j.call(e(a),c)}):(c.call(a,f),c=null));if(c)for(;l<m;l++)c(a[l],d,j?f.call(a[l],l,c(a[l],d)):f,i);g=1}return g?a:k?c.call(a):m?c(a[0],d):h},now:function(){return(new Date).getTime()},uaMatch:function(a){a=a.toLowerCase();var b=r.exec(a)||s.exec(a)||t.exec(a)||a.indexOf("compatible")<0&&u.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},sub:function(){function a(b,c){return new a.fn.init(b,c)}e.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function(d,f){f&&f instanceof e&&!(f instanceof a)&&(f=a(f));return e.fn.init.call(this,d,f,b)},a.fn.init.prototype=a.fn;var b=a(c);return a},browser:{}}),e.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){I["[object "+b+"]"]=b.toLowerCase()}),z=e.uaMatch(y),z.browser&&(e.browser[z.browser]=!0,e.browser.version=z.version),e.browser.webkit&&(e.browser.safari=!0),j.test(" ")&&(k=/^[\s\xA0]+/,l=/[\s\xA0]+$/),h=e(c),c.addEventListener?B=function(){c.removeEventListener("DOMContentLoaded",B,!1),e.ready()}:c.attachEvent&&(B=function(){c.readyState==="complete"&&(c.detachEvent("onreadystatechange",B),e.ready())});return e}(),g={};f.Callbacks=function(a){a=a?g[a]||h(a):{};var c=[],d=[],e,i,j,k,l,m,n=function(b){var d,e,g,h,i;for(d=0,e=b.length;d<e;d++)g=b[d],h=f.type(g),h==="array"?n(g):h==="function"&&(!a.unique||!p.has(g))&&c.push(g)},o=function(b,f){f=f||[],e=!a.memory||[b,f],i=!0,j=!0,m=k||0,k=0,l=c.length;for(;c&&m<l;m++)if(c[m].apply(b,f)===!1&&a.stopOnFalse){e=!0;break}j=!1,c&&(a.once?e===!0?p.disable():c=[]:d&&d.length&&(e=d.shift(),p.fireWith(e[0],e[1])))},p={add:function(){if(c){var a=c.length;n(arguments),j?l=c.length:e&&e!==!0&&(k=a,o(e[0],e[1]))}return this},remove:function(){if(c){var b=arguments,d=0,e=b.length;for(;d<e;d++)for(var f=0;f<c.length;f++)if(b[d]===c[f]){j&&f<=l&&(l--,f<=m&&m--),c.splice(f--,1);if(a.unique)break}}return this},has:function(a){if(c){var b=0,d=c.length;for(;b<d;b++)if(a===c[b])return!0}return!1},empty:function(){c=[];return this},disable:function(){c=d=e=b;return this},disabled:function(){return!c},lock:function(){d=b,(!e||e===!0)&&p.disable();return this},locked:function(){return!d},fireWith:function(b,c){d&&(j?a.once||d.push([b,c]):(!a.once||!e)&&o(b,c));return this},fire:function(){p.fireWith(this,arguments);return this},fired:function(){return!!i}};return p};var i=[].slice;f.extend({Deferred:function(a){var b=f.Callbacks("once memory"),c=f.Callbacks("once memory"),d=f.Callbacks("memory"),e="pending",g={resolve:b,reject:c,notify:d},h={done:b.add,fail:c.add,progress:d.add,state:function(){return e},isResolved:b.fired,isRejected:c.fired,then:function(a,b,c){i.done(a).fail(b).progress(c);return this},always:function(){i.done.apply(i,arguments).fail.apply(i,arguments);return this},pipe:function(a,b,c){return f.Deferred(function(d){f.each({done:[a,"resolve"],fail:[b,"reject"],progress:[c,"notify"]},function(a,b){var c=b[0],e=b[1],g;f.isFunction(c)?i[a](function(){g=c.apply(this,arguments),g&&f.isFunction(g.promise)?g.promise().then(d.resolve,d.reject,d.notify):d[e+"With"](this===i?d:this,[g])}):i[a](d[e])})}).promise()},promise:function(a){if(a==null)a=h;else for(var b in h)a[b]=h[b];return a}},i=h.promise({}),j;for(j in g)i[j]=g[j].fire,i[j+"With"]=g[j].fireWith;i.done(function(){e="resolved"},c.disable,d.lock).fail(function(){e="rejected"},b.disable,d.lock),a&&a.call(i,i);return i},when:function(a){function m(a){return function(b){e[a]=arguments.length>1?i.call(arguments,0):b,j.notifyWith(k,e)}}function l(a){return function(c){b[a]=arguments.length>1?i.call(arguments,0):c,--g||j.resolveWith(j,b)}}var b=i.call(arguments,0),c=0,d=b.length,e=Array(d),g=d,h=d,j=d<=1&&a&&f.isFunction(a.promise)?a:f.Deferred(),k=j.promise();if(d>1){for(;c<d;c++)b[c]&&b[c].promise&&f.isFunction(b[c].promise)?b[c].promise().then(l(c),j.reject,m(c)):--g;g||j.resolveWith(j,b)}else j!==a&&j.resolveWith(j,d?[a]:[]);return k}}),f.support=function(){var b,d,e,g,h,i,j,k,l,m,n,o,p=c.createElement("div"),q=c.documentElement;p.setAttribute("className","t"),p.innerHTML="   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>",d=p.getElementsByTagName("*"),e=p.getElementsByTagName("a")[0];if(!d||!d.length||!e)return{};g=c.createElement("select"),h=g.appendChild(c.createElement("option")),i=p.getElementsByTagName("input")[0],b={leadingWhitespace:p.firstChild.nodeType===3,tbody:!p.getElementsByTagName("tbody").length,htmlSerialize:!!p.getElementsByTagName("link").length,style:/top/.test(e.getAttribute("style")),hrefNormalized:e.getAttribute("href")==="/a",opacity:/^0.55/.test(e.style.opacity),cssFloat:!!e.style.cssFloat,checkOn:i.value==="on",optSelected:h.selected,getSetAttribute:p.className!=="t",enctype:!!c.createElement("form").enctype,html5Clone:c.createElement("nav").cloneNode(!0).outerHTML!=="<:nav></:nav>",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,pixelMargin:!0},f.boxModel=b.boxModel=c.compatMode==="CSS1Compat",i.checked=!0,b.noCloneChecked=i.cloneNode(!0).checked,g.disabled=!0,b.optDisabled=!h.disabled;try{delete p.test}catch(r){b.deleteExpando=!1}!p.addEventListener&&p.attachEvent&&p.fireEvent&&(p.attachEvent("onclick",function(){b.noCloneEvent=!1}),p.cloneNode(!0).fireEvent("onclick")),i=c.createElement("input"),i.value="t",i.setAttribute("type","radio"),b.radioValue=i.value==="t",i.setAttribute("checked","checked"),i.setAttribute("name","t"),p.appendChild(i),j=c.createDocumentFragment(),j.appendChild(p.lastChild),b.checkClone=j.cloneNode(!0).cloneNode(!0).lastChild.checked,b.appendChecked=i.checked,j.removeChild(i),j.appendChild(p);if(p.attachEvent)for(n in{submit:1,change:1,focusin:1})m="on"+n,o=m in p,o||(p.setAttribute(m,"return;"),o=typeof p[m]=="function"),b[n+"Bubbles"]=o;j.removeChild(p),j=g=h=p=i=null,f(function(){var d,e,g,h,i,j,l,m,n,q,r,s,t,u=c.getElementsByTagName("body")[0];!u||(m=1,t="padding:0;margin:0;border:",r="position:absolute;top:0;left:0;width:1px;height:1px;",s=t+"0;visibility:hidden;",n="style='"+r+t+"5px solid #000;",q="<div "+n+"display:block;'><div style='"+t+"0;display:block;overflow:hidden;'></div></div>"+"<table "+n+"' cellpadding='0' cellspacing='0'>"+"<tr><td></td></tr></table>",d=c.createElement("div"),d.style.cssText=s+"width:0;height:0;position:static;top:0;margin-top:"+m+"px",u.insertBefore(d,u.firstChild),p=c.createElement("div"),d.appendChild(p),p.innerHTML="<table><tr><td style='"+t+"0;display:none'></td><td>t</td></tr></table>",k=p.getElementsByTagName("td"),o=k[0].offsetHeight===0,k[0].style.display="",k[1].style.display="none",b.reliableHiddenOffsets=o&&k[0].offsetHeight===0,a.getComputedStyle&&(p.innerHTML="",l=c.createElement("div"),l.style.width="0",l.style.marginRight="0",p.style.width="2px",p.appendChild(l),b.reliableMarginRight=(parseInt((a.getComputedStyle(l,null)||{marginRight:0}).marginRight,10)||0)===0),typeof p.style.zoom!="undefined"&&(p.innerHTML="",p.style.width=p.style.padding="1px",p.style.border=0,p.style.overflow="hidden",p.style.display="inline",p.style.zoom=1,b.inlineBlockNeedsLayout=p.offsetWidth===3,p.style.display="block",p.style.overflow="visible",p.innerHTML="<div style='width:5px;'></div>",b.shrinkWrapBlocks=p.offsetWidth!==3),p.style.cssText=r+s,p.innerHTML=q,e=p.firstChild,g=e.firstChild,i=e.nextSibling.firstChild.firstChild,j={doesNotAddBorder:g.offsetTop!==5,doesAddBorderForTableAndCells:i.offsetTop===5},g.style.position="fixed",g.style.top="20px",j.fixedPosition=g.offsetTop===20||g.offsetTop===15,g.style.position=g.style.top="",e.style.overflow="hidden",e.style.position="relative",j.subtractsBorderForOverflowNotVisible=g.offsetTop===-5,j.doesNotIncludeMarginInBodyOffset=u.offsetTop!==m,a.getComputedStyle&&(p.style.marginTop="1%",b.pixelMargin=(a.getComputedStyle(p,null)||{marginTop:0}).marginTop!=="1%"),typeof d.style.zoom!="undefined"&&(d.style.zoom=1),u.removeChild(d),l=p=d=null,f.extend(b,j))});return b}();var j=/^(?:\{.*\}|\[.*\])$/,k=/([A-Z])/g;f.extend({cache:{},uuid:0,expando:"jQuery"+(f.fn.jquery+Math.random()).replace(/\D/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){a=a.nodeType?f.cache[a[f.expando]]:a[f.expando];return!!a&&!m(a)},data:function(a,c,d,e){if(!!f.acceptData(a)){var g,h,i,j=f.expando,k=typeof c=="string",l=a.nodeType,m=l?f.cache:a,n=l?a[j]:a[j]&&j,o=c==="events";if((!n||!m[n]||!o&&!e&&!m[n].data)&&k&&d===b)return;n||(l?a[j]=n=++f.uuid:n=j),m[n]||(m[n]={},l||(m[n].toJSON=f.noop));if(typeof c=="object"||typeof c=="function")e?m[n]=f.extend(m[n],c):m[n].data=f.extend(m[n].data,c);g=h=m[n],e||(h.data||(h.data={}),h=h.data),d!==b&&(h[f.camelCase(c)]=d);if(o&&!h[c])return g.events;k?(i=h[c],i==null&&(i=h[f.camelCase(c)])):i=h;return i}},removeData:function(a,b,c){if(!!f.acceptData(a)){var d,e,g,h=f.expando,i=a.nodeType,j=i?f.cache:a,k=i?a[h]:h;if(!j[k])return;if(b){d=c?j[k]:j[k].data;if(d){f.isArray(b)||(b in d?b=[b]:(b=f.camelCase(b),b in d?b=[b]:b=b.split(" ")));for(e=0,g=b.length;e<g;e++)delete d[b[e]];if(!(c?m:f.isEmptyObject)(d))return}}if(!c){delete j[k].data;if(!m(j[k]))return}f.support.deleteExpando||!j.setInterval?delete j[k]:j[k]=null,i&&(f.support.deleteExpando?delete a[h]:a.removeAttribute?a.removeAttribute(h):a[h]=null)}},_data:function(a,b,c){return f.data(a,b,c,!0)},acceptData:function(a){if(a.nodeName){var b=f.noData[a.nodeName.toLowerCase()];if(b)return b!==!0&&a.getAttribute("classid")===b}return!0}}),f.fn.extend({data:function(a,c){var d,e,g,h,i,j=this[0],k=0,m=null;if(a===b){if(this.length){m=f.data(j);if(j.nodeType===1&&!f._data(j,"parsedAttrs")){g=j.attributes;for(i=g.length;k<i;k++)h=g[k].name,h.indexOf("data-")===0&&(h=f.camelCase(h.substring(5)),l(j,h,m[h]));f._data(j,"parsedAttrs",!0)}}return m}if(typeof a=="object")return this.each(function(){f.data(this,a)});d=a.split(".",2),d[1]=d[1]?"."+d[1]:"",e=d[1]+"!";return f.access(this,function(c){if(c===b){m=this.triggerHandler("getData"+e,[d[0]]),m===b&&j&&(m=f.data(j,a),m=l(j,a,m));return m===b&&d[1]?this.data(d[0]):m}d[1]=c,this.each(function(){var b=f(this);b.triggerHandler("setData"+e,d),f.data(this,a,c),b.triggerHandler("changeData"+e,d)})},null,c,arguments.length>1,null,!1)},removeData:function(a){return this.each(function(){f.removeData(this,a)})}}),f.extend({_mark:function(a,b){a&&(b=(b||"fx")+"mark",f._data(a,b,(f._data(a,b)||0)+1))},_unmark:function(a,b,c){a!==!0&&(c=b,b=a,a=!1);if(b){c=c||"fx";var d=c+"mark",e=a?0:(f._data(b,d)||1)-1;e?f._data(b,d,e):(f.removeData(b,d,!0),n(b,c,"mark"))}},queue:function(a,b,c){var d;if(a){b=(b||"fx")+"queue",d=f._data(a,b),c&&(!d||f.isArray(c)?d=f._data(a,b,f.makeArray(c)):d.push(c));return d||[]}},dequeue:function(a,b){b=b||"fx";var c=f.queue(a,b),d=c.shift(),e={};d==="inprogress"&&(d=c.shift()),d&&(b==="fx"&&c.unshift("inprogress"),f._data(a,b+".run",e),d.call(a,function(){f.dequeue(a,b)},e)),c.length||(f.removeData(a,b+"queue "+b+".run",!0),n(a,b,"queue"))}}),f.fn.extend({queue:function(a,c){var d=2;typeof a!="string"&&(c=a,a="fx",d--);if(arguments.length<d)return f.queue(this[0],a);return c===b?this:this.each(function(){var b=f.queue(this,a,c);a==="fx"&&b[0]!=="inprogress"&&f.dequeue(this,a)})},dequeue:function(a){return this.each(function(){f.dequeue(this,a)})},delay:function(a,b){a=f.fx?f.fx.speeds[a]||a:a,b=b||"fx";return this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,c){function m(){--h||d.resolveWith(e,[e])}typeof a!="string"&&(c=a,a=b),a=a||"fx";var d=f.Deferred(),e=this,g=e.length,h=1,i=a+"defer",j=a+"queue",k=a+"mark",l;while(g--)if(l=f.data(e[g],i,b,!0)||(f.data(e[g],j,b,!0)||f.data(e[g],k,b,!0))&&f.data(e[g],i,f.Callbacks("once memory"),!0))h++,l.add(m);m();return d.promise(c)}});var o=/[\n\t\r]/g,p=/\s+/,q=/\r/g,r=/^(?:button|input)$/i,s=/^(?:button|input|object|select|textarea)$/i,t=/^a(?:rea)?$/i,u=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,v=f.support.getSetAttribute,w,x,y;f.fn.extend({attr:function(a,b){return f.access(this,f.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){f.removeAttr(this,a)})},prop:function(a,b){return f.access(this,f.prop,a,b,arguments.length>1)},removeProp:function(a){a=f.propFix[a]||a;return this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,g,h,i;if(f.isFunction(a))return this.each(function(b){f(this).addClass(a.call(this,b,this.className))});if(a&&typeof a=="string"){b=a.split(p);for(c=0,d=this.length;c<d;c++){e=this[c];if(e.nodeType===1)if(!e.className&&b.length===1)e.className=a;else{g=" "+e.className+" ";for(h=0,i=b.length;h<i;h++)~g.indexOf(" "+b[h]+" ")||(g+=b[h]+" ");e.className=f.trim(g)}}}return this},removeClass:function(a){var c,d,e,g,h,i,j;if(f.isFunction(a))return this.each(function(b){f(this).removeClass(a.call(this,b,this.className))});if(a&&typeof a=="string"||a===b){c=(a||"").split(p);for(d=0,e=this.length;d<e;d++){g=this[d];if(g.nodeType===1&&g.className)if(a){h=(" "+g.className+" ").replace(o," ");for(i=0,j=c.length;i<j;i++)h=h.replace(" "+c[i]+" "," ");g.className=f.trim(h)}else g.className=""}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b=="boolean";if(f.isFunction(a))return this.each(function(c){f(this).toggleClass(a.call(this,c,this.className,b),b)});return this.each(function(){if(c==="string"){var e,g=0,h=f(this),i=b,j=a.split(p);while(e=j[g++])i=d?i:!h.hasClass(e),h[i?"addClass":"removeClass"](e)}else if(c==="undefined"||c==="boolean")this.className&&f._data(this,"__className__",this.className),this.className=this.className||a===!1?"":f._data(this,"__className__")||""})},hasClass:function(a){var b=" "+a+" ",c=0,d=this.length;for(;c<d;c++)if(this[c].nodeType===1&&(" "+this[c].className+" ").replace(o," ").indexOf(b)>-1)return!0;return!1},val:function(a){var c,d,e,g=this[0];{if(!!arguments.length){e=f.isFunction(a);return this.each(function(d){var g=f(this),h;if(this.nodeType===1){e?h=a.call(this,d,g.val()):h=a,h==null?h="":typeof h=="number"?h+="":f.isArray(h)&&(h=f.map(h,function(a){return a==null?"":a+""})),c=f.valHooks[this.type]||f.valHooks[this.nodeName.toLowerCase()];if(!c||!("set"in c)||c.set(this,h,"value")===b)this.value=h}})}if(g){c=f.valHooks[g.type]||f.valHooks[g.nodeName.toLowerCase()];if(c&&"get"in c&&(d=c.get(g,"value"))!==b)return d;d=g.value;return typeof d=="string"?d.replace(q,""):d==null?"":d}}}}),f.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c,d,e,g=a.selectedIndex,h=[],i=a.options,j=a.type==="select-one";if(g<0)return null;c=j?g:0,d=j?g+1:i.length;for(;c<d;c++){e=i[c];if(e.selected&&(f.support.optDisabled?!e.disabled:e.getAttribute("disabled")===null)&&(!e.parentNode.disabled||!f.nodeName(e.parentNode,"optgroup"))){b=f(e).val();if(j)return b;h.push(b)}}if(j&&!h.length&&i.length)return f(i[g]).val();return h},set:function(a,b){var c=f.makeArray(b);f(a).find("option").each(function(){this.selected=f.inArray(f(this).val(),c)>=0}),c.length||(a.selectedIndex=-1);return c}}},attrFn:{val:!0,css:!0,html:!0,text:!0,data:!0,width:!0,height:!0,offset:!0},attr:function(a,c,d,e){var g,h,i,j=a.nodeType;if(!!a&&j!==3&&j!==8&&j!==2){if(e&&c in f.attrFn)return f(a)[c](d);if(typeof a.getAttribute=="undefined")return f.prop(a,c,d);i=j!==1||!f.isXMLDoc(a),i&&(c=c.toLowerCase(),h=f.attrHooks[c]||(u.test(c)?x:w));if(d!==b){if(d===null){f.removeAttr(a,c);return}if(h&&"set"in h&&i&&(g=h.set(a,d,c))!==b)return g;a.setAttribute(c,""+d);return d}if(h&&"get"in h&&i&&(g=h.get(a,c))!==null)return g;g=a.getAttribute(c);return g===null?b:g}},removeAttr:function(a,b){var c,d,e,g,h,i=0;if(b&&a.nodeType===1){d=b.toLowerCase().split(p),g=d.length;for(;i<g;i++)e=d[i],e&&(c=f.propFix[e]||e,h=u.test(e),h||f.attr(a,e,""),a.removeAttribute(v?e:c),h&&c in a&&(a[c]=!1))}},attrHooks:{type:{set:function(a,b){if(r.test(a.nodeName)&&a.parentNode)f.error("type property can't be changed");else if(!f.support.radioValue&&b==="radio"&&f.nodeName(a,"input")){var c=a.value;a.setAttribute("type",b),c&&(a.value=c);return b}}},value:{get:function(a,b){if(w&&f.nodeName(a,"button"))return w.get(a,b);return b in a?a.value:null},set:function(a,b,c){if(w&&f.nodeName(a,"button"))return w.set(a,b,c);a.value=b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var e,g,h,i=a.nodeType;if(!!a&&i!==3&&i!==8&&i!==2){h=i!==1||!f.isXMLDoc(a),h&&(c=f.propFix[c]||c,g=f.propHooks[c]);return d!==b?g&&"set"in g&&(e=g.set(a,d,c))!==b?e:a[c]=d:g&&"get"in g&&(e=g.get(a,c))!==null?e:a[c]}},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode("tabindex");return c&&c.specified?parseInt(c.value,10):s.test(a.nodeName)||t.test(a.nodeName)&&a.href?0:b}}}}),f.attrHooks.tabindex=f.propHooks.tabIndex,x={get:function(a,c){var d,e=f.prop(a,c);return e===!0||typeof e!="boolean"&&(d=a.getAttributeNode(c))&&d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;b===!1?f.removeAttr(a,c):(d=f.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase()));return c}},v||(y={name:!0,id:!0,coords:!0},w=f.valHooks.button={get:function(a,c){var d;d=a.getAttributeNode(c);return d&&(y[c]?d.nodeValue!=="":d.specified)?d.nodeValue:b},set:function(a,b,d){var e=a.getAttributeNode(d);e||(e=c.createAttribute(d),a.setAttributeNode(e));return e.nodeValue=b+""}},f.attrHooks.tabindex.set=w.set,f.each(["width","height"],function(a,b){f.attrHooks[b]=f.extend(f.attrHooks[b],{set:function(a,c){if(c===""){a.setAttribute(b,"auto");return c}}})}),f.attrHooks.contenteditable={get:w.get,set:function(a,b,c){b===""&&(b="false"),w.set(a,b,c)}}),f.support.hrefNormalized||f.each(["href","src","width","height"],function(a,c){f.attrHooks[c]=f.extend(f.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),f.support.style||(f.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=""+b}}),f.support.optSelected||(f.propHooks.selected=f.extend(f.propHooks.selected,{get:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex);return null}})),f.support.enctype||(f.propFix.enctype="encoding"),f.support.checkOn||f.each(["radio","checkbox"],function(){f.valHooks[this]={get:function(a){return a.getAttribute("value")===null?"on":a.value}}}),f.each(["radio","checkbox"],function(){f.valHooks[this]=f.extend(f.valHooks[this],{set:function(a,b){if(f.isArray(b))return a.checked=f.inArray(f(a).val(),b)>=0}})});var z=/^(?:textarea|input|select)$/i,A=/^([^\.]*)?(?:\.(.+))?$/,B=/(?:^|\s)hover(\.\S+)?\b/,C=/^key/,D=/^(?:mouse|contextmenu)|click/,E=/^(?:focusinfocus|focusoutblur)$/,F=/^(\w*)(?:#([\w\-]+))?(?:\.([\w\-]+))?$/,G=function(
a){var b=F.exec(a);b&&(b[1]=(b[1]||"").toLowerCase(),b[3]=b[3]&&new RegExp("(?:^|\\s)"+b[3]+"(?:\\s|$)"));return b},H=function(a,b){var c=a.attributes||{};return(!b[1]||a.nodeName.toLowerCase()===b[1])&&(!b[2]||(c.id||{}).value===b[2])&&(!b[3]||b[3].test((c["class"]||{}).value))},I=function(a){return f.event.special.hover?a:a.replace(B,"mouseenter$1 mouseleave$1")};f.event={add:function(a,c,d,e,g){var h,i,j,k,l,m,n,o,p,q,r,s;if(!(a.nodeType===3||a.nodeType===8||!c||!d||!(h=f._data(a)))){d.handler&&(p=d,d=p.handler,g=p.selector),d.guid||(d.guid=f.guid++),j=h.events,j||(h.events=j={}),i=h.handle,i||(h.handle=i=function(a){return typeof f!="undefined"&&(!a||f.event.triggered!==a.type)?f.event.dispatch.apply(i.elem,arguments):b},i.elem=a),c=f.trim(I(c)).split(" ");for(k=0;k<c.length;k++){l=A.exec(c[k])||[],m=l[1],n=(l[2]||"").split(".").sort(),s=f.event.special[m]||{},m=(g?s.delegateType:s.bindType)||m,s=f.event.special[m]||{},o=f.extend({type:m,origType:l[1],data:e,handler:d,guid:d.guid,selector:g,quick:g&&G(g),namespace:n.join(".")},p),r=j[m];if(!r){r=j[m]=[],r.delegateCount=0;if(!s.setup||s.setup.call(a,e,n,i)===!1)a.addEventListener?a.addEventListener(m,i,!1):a.attachEvent&&a.attachEvent("on"+m,i)}s.add&&(s.add.call(a,o),o.handler.guid||(o.handler.guid=d.guid)),g?r.splice(r.delegateCount++,0,o):r.push(o),f.event.global[m]=!0}a=null}},global:{},remove:function(a,b,c,d,e){var g=f.hasData(a)&&f._data(a),h,i,j,k,l,m,n,o,p,q,r,s;if(!!g&&!!(o=g.events)){b=f.trim(I(b||"")).split(" ");for(h=0;h<b.length;h++){i=A.exec(b[h])||[],j=k=i[1],l=i[2];if(!j){for(j in o)f.event.remove(a,j+b[h],c,d,!0);continue}p=f.event.special[j]||{},j=(d?p.delegateType:p.bindType)||j,r=o[j]||[],m=r.length,l=l?new RegExp("(^|\\.)"+l.split(".").sort().join("\\.(?:.*\\.)?")+"(\\.|$)"):null;for(n=0;n<r.length;n++)s=r[n],(e||k===s.origType)&&(!c||c.guid===s.guid)&&(!l||l.test(s.namespace))&&(!d||d===s.selector||d==="**"&&s.selector)&&(r.splice(n--,1),s.selector&&r.delegateCount--,p.remove&&p.remove.call(a,s));r.length===0&&m!==r.length&&((!p.teardown||p.teardown.call(a,l)===!1)&&f.removeEvent(a,j,g.handle),delete o[j])}f.isEmptyObject(o)&&(q=g.handle,q&&(q.elem=null),f.removeData(a,["events","handle"],!0))}},customEvent:{getData:!0,setData:!0,changeData:!0},trigger:function(c,d,e,g){if(!e||e.nodeType!==3&&e.nodeType!==8){var h=c.type||c,i=[],j,k,l,m,n,o,p,q,r,s;if(E.test(h+f.event.triggered))return;h.indexOf("!")>=0&&(h=h.slice(0,-1),k=!0),h.indexOf(".")>=0&&(i=h.split("."),h=i.shift(),i.sort());if((!e||f.event.customEvent[h])&&!f.event.global[h])return;c=typeof c=="object"?c[f.expando]?c:new f.Event(h,c):new f.Event(h),c.type=h,c.isTrigger=!0,c.exclusive=k,c.namespace=i.join("."),c.namespace_re=c.namespace?new RegExp("(^|\\.)"+i.join("\\.(?:.*\\.)?")+"(\\.|$)"):null,o=h.indexOf(":")<0?"on"+h:"";if(!e){j=f.cache;for(l in j)j[l].events&&j[l].events[h]&&f.event.trigger(c,d,j[l].handle.elem,!0);return}c.result=b,c.target||(c.target=e),d=d!=null?f.makeArray(d):[],d.unshift(c),p=f.event.special[h]||{};if(p.trigger&&p.trigger.apply(e,d)===!1)return;r=[[e,p.bindType||h]];if(!g&&!p.noBubble&&!f.isWindow(e)){s=p.delegateType||h,m=E.test(s+h)?e:e.parentNode,n=null;for(;m;m=m.parentNode)r.push([m,s]),n=m;n&&n===e.ownerDocument&&r.push([n.defaultView||n.parentWindow||a,s])}for(l=0;l<r.length&&!c.isPropagationStopped();l++)m=r[l][0],c.type=r[l][1],q=(f._data(m,"events")||{})[c.type]&&f._data(m,"handle"),q&&q.apply(m,d),q=o&&m[o],q&&f.acceptData(m)&&q.apply(m,d)===!1&&c.preventDefault();c.type=h,!g&&!c.isDefaultPrevented()&&(!p._default||p._default.apply(e.ownerDocument,d)===!1)&&(h!=="click"||!f.nodeName(e,"a"))&&f.acceptData(e)&&o&&e[h]&&(h!=="focus"&&h!=="blur"||c.target.offsetWidth!==0)&&!f.isWindow(e)&&(n=e[o],n&&(e[o]=null),f.event.triggered=h,e[h](),f.event.triggered=b,n&&(e[o]=n));return c.result}},dispatch:function(c){c=f.event.fix(c||a.event);var d=(f._data(this,"events")||{})[c.type]||[],e=d.delegateCount,g=[].slice.call(arguments,0),h=!c.exclusive&&!c.namespace,i=f.event.special[c.type]||{},j=[],k,l,m,n,o,p,q,r,s,t,u;g[0]=c,c.delegateTarget=this;if(!i.preDispatch||i.preDispatch.call(this,c)!==!1){if(e&&(!c.button||c.type!=="click")){n=f(this),n.context=this.ownerDocument||this;for(m=c.target;m!=this;m=m.parentNode||this)if(m.disabled!==!0){p={},r=[],n[0]=m;for(k=0;k<e;k++)s=d[k],t=s.selector,p[t]===b&&(p[t]=s.quick?H(m,s.quick):n.is(t)),p[t]&&r.push(s);r.length&&j.push({elem:m,matches:r})}}d.length>e&&j.push({elem:this,matches:d.slice(e)});for(k=0;k<j.length&&!c.isPropagationStopped();k++){q=j[k],c.currentTarget=q.elem;for(l=0;l<q.matches.length&&!c.isImmediatePropagationStopped();l++){s=q.matches[l];if(h||!c.namespace&&!s.namespace||c.namespace_re&&c.namespace_re.test(s.namespace))c.data=s.data,c.handleObj=s,o=((f.event.special[s.origType]||{}).handle||s.handler).apply(q.elem,g),o!==b&&(c.result=o,o===!1&&(c.preventDefault(),c.stopPropagation()))}}i.postDispatch&&i.postDispatch.call(this,c);return c.result}},props:"attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(a,b){a.which==null&&(a.which=b.charCode!=null?b.charCode:b.keyCode);return a}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(a,d){var e,f,g,h=d.button,i=d.fromElement;a.pageX==null&&d.clientX!=null&&(e=a.target.ownerDocument||c,f=e.documentElement,g=e.body,a.pageX=d.clientX+(f&&f.scrollLeft||g&&g.scrollLeft||0)-(f&&f.clientLeft||g&&g.clientLeft||0),a.pageY=d.clientY+(f&&f.scrollTop||g&&g.scrollTop||0)-(f&&f.clientTop||g&&g.clientTop||0)),!a.relatedTarget&&i&&(a.relatedTarget=i===a.target?d.toElement:i),!a.which&&h!==b&&(a.which=h&1?1:h&2?3:h&4?2:0);return a}},fix:function(a){if(a[f.expando])return a;var d,e,g=a,h=f.event.fixHooks[a.type]||{},i=h.props?this.props.concat(h.props):this.props;a=f.Event(g);for(d=i.length;d;)e=i[--d],a[e]=g[e];a.target||(a.target=g.srcElement||c),a.target.nodeType===3&&(a.target=a.target.parentNode),a.metaKey===b&&(a.metaKey=a.ctrlKey);return h.filter?h.filter(a,g):a},special:{ready:{setup:f.bindReady},load:{noBubble:!0},focus:{delegateType:"focusin"},blur:{delegateType:"focusout"},beforeunload:{setup:function(a,b,c){f.isWindow(this)&&(this.onbeforeunload=c)},teardown:function(a,b){this.onbeforeunload===b&&(this.onbeforeunload=null)}}},simulate:function(a,b,c,d){var e=f.extend(new f.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?f.event.trigger(e,null,b):f.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},f.event.handle=f.event.dispatch,f.removeEvent=c.removeEventListener?function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)}:function(a,b,c){a.detachEvent&&a.detachEvent("on"+b,c)},f.Event=function(a,b){if(!(this instanceof f.Event))return new f.Event(a,b);a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||a.returnValue===!1||a.getPreventDefault&&a.getPreventDefault()?K:J):this.type=a,b&&f.extend(this,b),this.timeStamp=a&&a.timeStamp||f.now(),this[f.expando]=!0},f.Event.prototype={preventDefault:function(){this.isDefaultPrevented=K;var a=this.originalEvent;!a||(a.preventDefault?a.preventDefault():a.returnValue=!1)},stopPropagation:function(){this.isPropagationStopped=K;var a=this.originalEvent;!a||(a.stopPropagation&&a.stopPropagation(),a.cancelBubble=!0)},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=K,this.stopPropagation()},isDefaultPrevented:J,isPropagationStopped:J,isImmediatePropagationStopped:J},f.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(a,b){f.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c=this,d=a.relatedTarget,e=a.handleObj,g=e.selector,h;if(!d||d!==c&&!f.contains(c,d))a.type=e.origType,h=e.handler.apply(this,arguments),a.type=b;return h}}}),f.support.submitBubbles||(f.event.special.submit={setup:function(){if(f.nodeName(this,"form"))return!1;f.event.add(this,"click._submit keypress._submit",function(a){var c=a.target,d=f.nodeName(c,"input")||f.nodeName(c,"button")?c.form:b;d&&!d._submit_attached&&(f.event.add(d,"submit._submit",function(a){a._submit_bubble=!0}),d._submit_attached=!0)})},postDispatch:function(a){a._submit_bubble&&(delete a._submit_bubble,this.parentNode&&!a.isTrigger&&f.event.simulate("submit",this.parentNode,a,!0))},teardown:function(){if(f.nodeName(this,"form"))return!1;f.event.remove(this,"._submit")}}),f.support.changeBubbles||(f.event.special.change={setup:function(){if(z.test(this.nodeName)){if(this.type==="checkbox"||this.type==="radio")f.event.add(this,"propertychange._change",function(a){a.originalEvent.propertyName==="checked"&&(this._just_changed=!0)}),f.event.add(this,"click._change",function(a){this._just_changed&&!a.isTrigger&&(this._just_changed=!1,f.event.simulate("change",this,a,!0))});return!1}f.event.add(this,"beforeactivate._change",function(a){var b=a.target;z.test(b.nodeName)&&!b._change_attached&&(f.event.add(b,"change._change",function(a){this.parentNode&&!a.isSimulated&&!a.isTrigger&&f.event.simulate("change",this.parentNode,a,!0)}),b._change_attached=!0)})},handle:function(a){var b=a.target;if(this!==b||a.isSimulated||a.isTrigger||b.type!=="radio"&&b.type!=="checkbox")return a.handleObj.handler.apply(this,arguments)},teardown:function(){f.event.remove(this,"._change");return z.test(this.nodeName)}}),f.support.focusinBubbles||f.each({focus:"focusin",blur:"focusout"},function(a,b){var d=0,e=function(a){f.event.simulate(b,a.target,f.event.fix(a),!0)};f.event.special[b]={setup:function(){d++===0&&c.addEventListener(a,e,!0)},teardown:function(){--d===0&&c.removeEventListener(a,e,!0)}}}),f.fn.extend({on:function(a,c,d,e,g){var h,i;if(typeof a=="object"){typeof c!="string"&&(d=d||c,c=b);for(i in a)this.on(i,c,d,a[i],g);return this}d==null&&e==null?(e=c,d=c=b):e==null&&(typeof c=="string"?(e=d,d=b):(e=d,d=c,c=b));if(e===!1)e=J;else if(!e)return this;g===1&&(h=e,e=function(a){f().off(a);return h.apply(this,arguments)},e.guid=h.guid||(h.guid=f.guid++));return this.each(function(){f.event.add(this,a,e,d,c)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,c,d){if(a&&a.preventDefault&&a.handleObj){var e=a.handleObj;f(a.delegateTarget).off(e.namespace?e.origType+"."+e.namespace:e.origType,e.selector,e.handler);return this}if(typeof a=="object"){for(var g in a)this.off(g,c,a[g]);return this}if(c===!1||typeof c=="function")d=c,c=b;d===!1&&(d=J);return this.each(function(){f.event.remove(this,a,d,c)})},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},live:function(a,b,c){f(this.context).on(a,this.selector,b,c);return this},die:function(a,b){f(this.context).off(a,this.selector||"**",b);return this},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return arguments.length==1?this.off(a,"**"):this.off(b,a,c)},trigger:function(a,b){return this.each(function(){f.event.trigger(a,b,this)})},triggerHandler:function(a,b){if(this[0])return f.event.trigger(a,b,this[0],!0)},toggle:function(a){var b=arguments,c=a.guid||f.guid++,d=0,e=function(c){var e=(f._data(this,"lastToggle"+a.guid)||0)%d;f._data(this,"lastToggle"+a.guid,e+1),c.preventDefault();return b[e].apply(this,arguments)||!1};e.guid=c;while(d<b.length)b[d++].guid=c;return this.click(e)},hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}}),f.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(a,b){f.fn[b]=function(a,c){c==null&&(c=a,a=null);return arguments.length>0?this.on(b,null,a,c):this.trigger(b)},f.attrFn&&(f.attrFn[b]=!0),C.test(b)&&(f.event.fixHooks[b]=f.event.keyHooks),D.test(b)&&(f.event.fixHooks[b]=f.event.mouseHooks)}),function(){function x(a,b,c,e,f,g){for(var h=0,i=e.length;h<i;h++){var j=e[h];if(j){var k=!1;j=j[a];while(j){if(j[d]===c){k=e[j.sizset];break}if(j.nodeType===1){g||(j[d]=c,j.sizset=h);if(typeof b!="string"){if(j===b){k=!0;break}}else if(m.filter(b,[j]).length>0){k=j;break}}j=j[a]}e[h]=k}}}function w(a,b,c,e,f,g){for(var h=0,i=e.length;h<i;h++){var j=e[h];if(j){var k=!1;j=j[a];while(j){if(j[d]===c){k=e[j.sizset];break}j.nodeType===1&&!g&&(j[d]=c,j.sizset=h);if(j.nodeName.toLowerCase()===b){k=j;break}j=j[a]}e[h]=k}}}var a=/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,d="sizcache"+(Math.random()+"").replace(".",""),e=0,g=Object.prototype.toString,h=!1,i=!0,j=/\\/g,k=/\r\n/g,l=/\W/;[0,0].sort(function(){i=!1;return 0});var m=function(b,d,e,f){e=e||[],d=d||c;var h=d;if(d.nodeType!==1&&d.nodeType!==9)return[];if(!b||typeof b!="string")return e;var i,j,k,l,n,q,r,t,u=!0,v=m.isXML(d),w=[],x=b;do{a.exec(""),i=a.exec(x);if(i){x=i[3],w.push(i[1]);if(i[2]){l=i[3];break}}}while(i);if(w.length>1&&p.exec(b))if(w.length===2&&o.relative[w[0]])j=y(w[0]+w[1],d,f);else{j=o.relative[w[0]]?[d]:m(w.shift(),d);while(w.length)b=w.shift(),o.relative[b]&&(b+=w.shift()),j=y(b,j,f)}else{!f&&w.length>1&&d.nodeType===9&&!v&&o.match.ID.test(w[0])&&!o.match.ID.test(w[w.length-1])&&(n=m.find(w.shift(),d,v),d=n.expr?m.filter(n.expr,n.set)[0]:n.set[0]);if(d){n=f?{expr:w.pop(),set:s(f)}:m.find(w.pop(),w.length===1&&(w[0]==="~"||w[0]==="+")&&d.parentNode?d.parentNode:d,v),j=n.expr?m.filter(n.expr,n.set):n.set,w.length>0?k=s(j):u=!1;while(w.length)q=w.pop(),r=q,o.relative[q]?r=w.pop():q="",r==null&&(r=d),o.relative[q](k,r,v)}else k=w=[]}k||(k=j),k||m.error(q||b);if(g.call(k)==="[object Array]")if(!u)e.push.apply(e,k);else if(d&&d.nodeType===1)for(t=0;k[t]!=null;t++)k[t]&&(k[t]===!0||k[t].nodeType===1&&m.contains(d,k[t]))&&e.push(j[t]);else for(t=0;k[t]!=null;t++)k[t]&&k[t].nodeType===1&&e.push(j[t]);else s(k,e);l&&(m(l,h,e,f),m.uniqueSort(e));return e};m.uniqueSort=function(a){if(u){h=i,a.sort(u);if(h)for(var b=1;b<a.length;b++)a[b]===a[b-1]&&a.splice(b--,1)}return a},m.matches=function(a,b){return m(a,null,null,b)},m.matchesSelector=function(a,b){return m(b,null,null,[a]).length>0},m.find=function(a,b,c){var d,e,f,g,h,i;if(!a)return[];for(e=0,f=o.order.length;e<f;e++){h=o.order[e];if(g=o.leftMatch[h].exec(a)){i=g[1],g.splice(1,1);if(i.substr(i.length-1)!=="\\"){g[1]=(g[1]||"").replace(j,""),d=o.find[h](g,b,c);if(d!=null){a=a.replace(o.match[h],"");break}}}}d||(d=typeof b.getElementsByTagName!="undefined"?b.getElementsByTagName("*"):[]);return{set:d,expr:a}},m.filter=function(a,c,d,e){var f,g,h,i,j,k,l,n,p,q=a,r=[],s=c,t=c&&c[0]&&m.isXML(c[0]);while(a&&c.length){for(h in o.filter)if((f=o.leftMatch[h].exec(a))!=null&&f[2]){k=o.filter[h],l=f[1],g=!1,f.splice(1,1);if(l.substr(l.length-1)==="\\")continue;s===r&&(r=[]);if(o.preFilter[h]){f=o.preFilter[h](f,s,d,r,e,t);if(!f)g=i=!0;else if(f===!0)continue}if(f)for(n=0;(j=s[n])!=null;n++)j&&(i=k(j,f,n,s),p=e^i,d&&i!=null?p?g=!0:s[n]=!1:p&&(r.push(j),g=!0));if(i!==b){d||(s=r),a=a.replace(o.match[h],"");if(!g)return[];break}}if(a===q)if(g==null)m.error(a);else break;q=a}return s},m.error=function(a){throw new Error("Syntax error, unrecognized expression: "+a)};var n=m.getText=function(a){var b,c,d=a.nodeType,e="";if(d){if(d===1||d===9||d===11){if(typeof a.textContent=="string")return a.textContent;if(typeof a.innerText=="string")return a.innerText.replace(k,"");for(a=a.firstChild;a;a=a.nextSibling)e+=n(a)}else if(d===3||d===4)return a.nodeValue}else for(b=0;c=a[b];b++)c.nodeType!==8&&(e+=n(c));return e},o=m.selectors={order:["ID","NAME","TAG"],match:{ID:/#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,CLASS:/\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,NAME:/\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/,ATTR:/\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/,TAG:/^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,CHILD:/:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/,POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/,PSEUDO:/:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/},leftMatch:{},attrMap:{"class":"className","for":"htmlFor"},attrHandle:{href:function(a){return a.getAttribute("href")},type:function(a){return a.getAttribute("type")}},relative:{"+":function(a,b){var c=typeof b=="string",d=c&&!l.test(b),e=c&&!d;d&&(b=b.toLowerCase());for(var f=0,g=a.length,h;f<g;f++)if(h=a[f]){while((h=h.previousSibling)&&h.nodeType!==1);a[f]=e||h&&h.nodeName.toLowerCase()===b?h||!1:h===b}e&&m.filter(b,a,!0)},">":function(a,b){var c,d=typeof b=="string",e=0,f=a.length;if(d&&!l.test(b)){b=b.toLowerCase();for(;e<f;e++){c=a[e];if(c){var g=c.parentNode;a[e]=g.nodeName.toLowerCase()===b?g:!1}}}else{for(;e<f;e++)c=a[e],c&&(a[e]=d?c.parentNode:c.parentNode===b);d&&m.filter(b,a,!0)}},"":function(a,b,c){var d,f=e++,g=x;typeof b=="string"&&!l.test(b)&&(b=b.toLowerCase(),d=b,g=w),g("parentNode",b,f,a,d,c)},"~":function(a,b,c){var d,f=e++,g=x;typeof b=="string"&&!l.test(b)&&(b=b.toLowerCase(),d=b,g=w),g("previousSibling",b,f,a,d,c)}},find:{ID:function(a,b,c){if(typeof b.getElementById!="undefined"&&!c){var d=b.getElementById(a[1]);return d&&d.parentNode?[d]:[]}},NAME:function(a,b){if(typeof b.getElementsByName!="undefined"){var c=[],d=b.getElementsByName(a[1]);for(var e=0,f=d.length;e<f;e++)d[e].getAttribute("name")===a[1]&&c.push(d[e]);return c.length===0?null:c}},TAG:function(a,b){if(typeof b.getElementsByTagName!="undefined")return b.getElementsByTagName(a[1])}},preFilter:{CLASS:function(a,b,c,d,e,f){a=" "+a[1].replace(j,"")+" ";if(f)return a;for(var g=0,h;(h=b[g])!=null;g++)h&&(e^(h.className&&(" "+h.className+" ").replace(/[\t\n\r]/g," ").indexOf(a)>=0)?c||d.push(h):c&&(b[g]=!1));return!1},ID:function(a){return a[1].replace(j,"")},TAG:function(a,b){return a[1].replace(j,"").toLowerCase()},CHILD:function(a){if(a[1]==="nth"){a[2]||m.error(a[0]),a[2]=a[2].replace(/^\+|\s*/g,"");var b=/(-?)(\d*)(?:n([+\-]?\d*))?/.exec(a[2]==="even"&&"2n"||a[2]==="odd"&&"2n+1"||!/\D/.test(a[2])&&"0n+"+a[2]||a[2]);a[2]=b[1]+(b[2]||1)-0,a[3]=b[3]-0}else a[2]&&m.error(a[0]);a[0]=e++;return a},ATTR:function(a,b,c,d,e,f){var g=a[1]=a[1].replace(j,"");!f&&o.attrMap[g]&&(a[1]=o.attrMap[g]),a[4]=(a[4]||a[5]||"").replace(j,""),a[2]==="~="&&(a[4]=" "+a[4]+" ");return a},PSEUDO:function(b,c,d,e,f){if(b[1]==="not")if((a.exec(b[3])||"").length>1||/^\w/.test(b[3]))b[3]=m(b[3],null,null,c);else{var g=m.filter(b[3],c,d,!0^f);d||e.push.apply(e,g);return!1}else if(o.match.POS.test(b[0])||o.match.CHILD.test(b[0]))return!0;return b},POS:function(a){a.unshift(!0);return a}},filters:{enabled:function(a){return a.disabled===!1&&a.type!=="hidden"},disabled:function(a){return a.disabled===!0},checked:function(a){return a.checked===!0},selected:function(a){a.parentNode&&a.parentNode.selectedIndex;return a.selected===!0},parent:function(a){return!!a.firstChild},empty:function(a){return!a.firstChild},has:function(a,b,c){return!!m(c[3],a).length},header:function(a){return/h\d/i.test(a.nodeName)},text:function(a){var b=a.getAttribute("type"),c=a.type;return a.nodeName.toLowerCase()==="input"&&"text"===c&&(b===c||b===null)},radio:function(a){return a.nodeName.toLowerCase()==="input"&&"radio"===a.type},checkbox:function(a){return a.nodeName.toLowerCase()==="input"&&"checkbox"===a.type},file:function(a){return a.nodeName.toLowerCase()==="input"&&"file"===a.type},password:function(a){return a.nodeName.toLowerCase()==="input"&&"password"===a.type},submit:function(a){var b=a.nodeName.toLowerCase();return(b==="input"||b==="button")&&"submit"===a.type},image:function(a){return a.nodeName.toLowerCase()==="input"&&"image"===a.type},reset:function(a){var b=a.nodeName.toLowerCase();return(b==="input"||b==="button")&&"reset"===a.type},button:function(a){var b=a.nodeName.toLowerCase();return b==="input"&&"button"===a.type||b==="button"},input:function(a){return/input|select|textarea|button/i.test(a.nodeName)},focus:function(a){return a===a.ownerDocument.activeElement}},setFilters:{first:function(a,b){return b===0},last:function(a,b,c,d){return b===d.length-1},even:function(a,b){return b%2===0},odd:function(a,b){return b%2===1},lt:function(a,b,c){return b<c[3]-0},gt:function(a,b,c){return b>c[3]-0},nth:function(a,b,c){return c[3]-0===b},eq:function(a,b,c){return c[3]-0===b}},filter:{PSEUDO:function(a,b,c,d){var e=b[1],f=o.filters[e];if(f)return f(a,c,b,d);if(e==="contains")return(a.textContent||a.innerText||n([a])||"").indexOf(b[3])>=0;if(e==="not"){var g=b[3];for(var h=0,i=g.length;h<i;h++)if(g[h]===a)return!1;return!0}m.error(e)},CHILD:function(a,b){var c,e,f,g,h,i,j,k=b[1],l=a;switch(k){case"only":case"first":while(l=l.previousSibling)if(l.nodeType===1)return!1;if(k==="first")return!0;l=a;case"last":while(l=l.nextSibling)if(l.nodeType===1)return!1;return!0;case"nth":c=b[2],e=b[3];if(c===1&&e===0)return!0;f=b[0],g=a.parentNode;if(g&&(g[d]!==f||!a.nodeIndex)){i=0;for(l=g.firstChild;l;l=l.nextSibling)l.nodeType===1&&(l.nodeIndex=++i);g[d]=f}j=a.nodeIndex-e;return c===0?j===0:j%c===0&&j/c>=0}},ID:function(a,b){return a.nodeType===1&&a.getAttribute("id")===b},TAG:function(a,b){return b==="*"&&a.nodeType===1||!!a.nodeName&&a.nodeName.toLowerCase()===b},CLASS:function(a,b){return(" "+(a.className||a.getAttribute("class"))+" ").indexOf(b)>-1},ATTR:function(a,b){var c=b[1],d=m.attr?m.attr(a,c):o.attrHandle[c]?o.attrHandle[c](a):a[c]!=null?a[c]:a.getAttribute(c),e=d+"",f=b[2],g=b[4];return d==null?f==="!=":!f&&m.attr?d!=null:f==="="?e===g:f==="*="?e.indexOf(g)>=0:f==="~="?(" "+e+" ").indexOf(g)>=0:g?f==="!="?e!==g:f==="^="?e.indexOf(g)===0:f==="$="?e.substr(e.length-g.length)===g:f==="|="?e===g||e.substr(0,g.length+1)===g+"-":!1:e&&d!==!1},POS:function(a,b,c,d){var e=b[2],f=o.setFilters[e];if(f)return f(a,c,b,d)}}},p=o.match.POS,q=function(a,b){return"\\"+(b-0+1)};for(var r in o.match)o.match[r]=new RegExp(o.match[r].source+/(?![^\[]*\])(?![^\(]*\))/.source),o.leftMatch[r]=new RegExp(/(^(?:.|\r|\n)*?)/.source+o.match[r].source.replace(/\\(\d+)/g,q));o.match.globalPOS=p;var s=function(a,b){a=Array.prototype.slice.call(a,0);if(b){b.push.apply(b,a);return b}return a};try{Array.prototype.slice.call(c.documentElement.childNodes,0)[0].nodeType}catch(t){s=function(a,b){var c=0,d=b||[];if(g.call(a)==="[object Array]")Array.prototype.push.apply(d,a);else if(typeof a.length=="number")for(var e=a.length;c<e;c++)d.push(a[c]);else for(;a[c];c++)d.push(a[c]);return d}}var u,v;c.documentElement.compareDocumentPosition?u=function(a,b){if(a===b){h=!0;return 0}if(!a.compareDocumentPosition||!b.compareDocumentPosition)return a.compareDocumentPosition?-1:1;return a.compareDocumentPosition(b)&4?-1:1}:(u=function(a,b){if(a===b){h=!0;return 0}if(a.sourceIndex&&b.sourceIndex)return a.sourceIndex-b.sourceIndex;var c,d,e=[],f=[],g=a.parentNode,i=b.parentNode,j=g;if(g===i)return v(a,b);if(!g)return-1;if(!i)return 1;while(j)e.unshift(j),j=j.parentNode;j=i;while(j)f.unshift(j),j=j.parentNode;c=e.length,d=f.length;for(var k=0;k<c&&k<d;k++)if(e[k]!==f[k])return v(e[k],f[k]);return k===c?v(a,f[k],-1):v(e[k],b,1)},v=function(a,b,c){if(a===b)return c;var d=a.nextSibling;while(d){if(d===b)return-1;d=d.nextSibling}return 1}),function(){var a=c.createElement("div"),d="script"+(new Date).getTime(),e=c.documentElement;a.innerHTML="<a name='"+d+"'/>",e.insertBefore(a,e.firstChild),c.getElementById(d)&&(o.find.ID=function(a,c,d){if(typeof c.getElementById!="undefined"&&!d){var e=c.getElementById(a[1]);return e?e.id===a[1]||typeof e.getAttributeNode!="undefined"&&e.getAttributeNode("id").nodeValue===a[1]?[e]:b:[]}},o.filter.ID=function(a,b){var c=typeof a.getAttributeNode!="undefined"&&a.getAttributeNode("id");return a.nodeType===1&&c&&c.nodeValue===b}),e.removeChild(a),e=a=null}(),function(){var a=c.createElement("div");a.appendChild(c.createComment("")),a.getElementsByTagName("*").length>0&&(o.find.TAG=function(a,b){var c=b.getElementsByTagName(a[1]);if(a[1]==="*"){var d=[];for(var e=0;c[e];e++)c[e].nodeType===1&&d.push(c[e]);c=d}return c}),a.innerHTML="<a href='#'></a>",a.firstChild&&typeof a.firstChild.getAttribute!="undefined"&&a.firstChild.getAttribute("href")!=="#"&&(o.attrHandle.href=function(a){return a.getAttribute("href",2)}),a=null}(),c.querySelectorAll&&function(){var a=m,b=c.createElement("div"),d="__sizzle__";b.innerHTML="<p class='TEST'></p>";if(!b.querySelectorAll||b.querySelectorAll(".TEST").length!==0){m=function(b,e,f,g){e=e||c;if(!g&&!m.isXML(e)){var h=/^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec(b);if(h&&(e.nodeType===1||e.nodeType===9)){if(h[1])return s(e.getElementsByTagName(b),f);if(h[2]&&o.find.CLASS&&e.getElementsByClassName)return s(e.getElementsByClassName(h[2]),f)}if(e.nodeType===9){if(b==="body"&&e.body)return s([e.body],f);if(h&&h[3]){var i=e.getElementById(h[3]);if(!i||!i.parentNode)return s([],f);if(i.id===h[3])return s([i],f)}try{return s(e.querySelectorAll(b),f)}catch(j){}}else if(e.nodeType===1&&e.nodeName.toLowerCase()!=="object"){var k=e,l=e.getAttribute("id"),n=l||d,p=e.parentNode,q=/^\s*[+~]/.test(b);l?n=n.replace(/'/g,"\\$&"):e.setAttribute("id",n),q&&p&&(e=e.parentNode);try{if(!q||p)return s(e.querySelectorAll("[id='"+n+"'] "+b),f)}catch(r){}finally{l||k.removeAttribute("id")}}}return a(b,e,f,g)};for(var e in a)m[e]=a[e];b=null}}(),function(){var a=c.documentElement,b=a.matchesSelector||a.mozMatchesSelector||a.webkitMatchesSelector||a.msMatchesSelector;if(b){var d=!b.call(c.createElement("div"),"div"),e=!1;try{b.call(c.documentElement,"[test!='']:sizzle")}catch(f){e=!0}m.matchesSelector=function(a,c){c=c.replace(/\=\s*([^'"\]]*)\s*\]/g,"='$1']");if(!m.isXML(a))try{if(e||!o.match.PSEUDO.test(c)&&!/!=/.test(c)){var f=b.call(a,c);if(f||!d||a.document&&a.document.nodeType!==11)return f}}catch(g){}return m(c,null,null,[a]).length>0}}}(),function(){var a=c.createElement("div");a.innerHTML="<div class='test e'></div><div class='test'></div>";if(!!a.getElementsByClassName&&a.getElementsByClassName("e").length!==0){a.lastChild.className="e";if(a.getElementsByClassName("e").length===1)return;o.order.splice(1,0,"CLASS"),o.find.CLASS=function(a,b,c){if(typeof b.getElementsByClassName!="undefined"&&!c)return b.getElementsByClassName(a[1])},a=null}}(),c.documentElement.contains?m.contains=function(a,b){return a!==b&&(a.contains?a.contains(b):!0)}:c.documentElement.compareDocumentPosition?m.contains=function(a,b){return!!(a.compareDocumentPosition(b)&16)}:m.contains=function(){return!1},m.isXML=function(a){var b=(a?a.ownerDocument||a:0).documentElement;return b?b.nodeName!=="HTML":!1};var y=function(a,b,c){var d,e=[],f="",g=b.nodeType?[b]:b;while(d=o.match.PSEUDO.exec(a))f+=d[0],a=a.replace(o.match.PSEUDO,"");a=o.relative[a]?a+"*":a;for(var h=0,i=g.length;h<i;h++)m(a,g[h],e,c);return m.filter(f,e)};m.attr=f.attr,m.selectors.attrMap={},f.find=m,f.expr=m.selectors,f.expr[":"]=f.expr.filters,f.unique=m.uniqueSort,f.text=m.getText,f.isXMLDoc=m.isXML,f.contains=m.contains}();var L=/Until$/,M=/^(?:parents|prevUntil|prevAll)/,N=/,/,O=/^.[^:#\[\.,]*$/,P=Array.prototype.slice,Q=f.expr.match.globalPOS,R={children:!0,contents:!0,next:!0,prev:!0};f.fn.extend({find:function(a){var b=this,c,d;if(typeof a!="string")return f(a).filter(function(){for(c=0,d=b.length;c<d;c++)if(f.contains(b[c],this))return!0});var e=this.pushStack("","find",a),g,h,i;for(c=0,d=this.length;c<d;c++){g=e.length,f.find(a,this[c],e);if(c>0)for(h=g;h<e.length;h++)for(i=0;i<g;i++)if(e[i]===e[h]){e.splice(h--,1);break}}return e},has:function(a){var b=f(a);return this.filter(function(){for(var a=0,c=b.length;a<c;a++)if(f.contains(this,b[a]))return!0})},not:function(a){return this.pushStack(T(this,a,!1),"not",a)},filter:function(a){return this.pushStack(T(this,a,!0),"filter",a)},is:function(a){return!!a&&(typeof a=="string"?Q.test(a)?f(a,this.context).index(this[0])>=0:f.filter(a,this).length>0:this.filter(a).length>0)},closest:function(a,b){var c=[],d,e,g=this[0];if(f.isArray(a)){var h=1;while(g&&g.ownerDocument&&g!==b){for(d=0;d<a.length;d++)f(g).is(a[d])&&c.push({selector:a[d],elem:g,level:h});g=g.parentNode,h++}return c}var i=Q.test(a)||typeof a!="string"?f(a,b||this.context):0;for(d=0,e=this.length;d<e;d++){g=this[d];while(g){if(i?i.index(g)>-1:f.find.matchesSelector(g,a)){c.push(g);break}g=g.parentNode;if(!g||!g.ownerDocument||g===b||g.nodeType===11)break}}c=c.length>1?f.unique(c):c;return this.pushStack(c,"closest",a)},index:function(a){if(!a)return this[0]&&this[0].parentNode?this.prevAll().length:-1;if(typeof a=="string")return f.inArray(this[0],f(a));return f.inArray(a.jquery?a[0]:a,this)},add:function(a,b){var c=typeof a=="string"?f(a,b):f.makeArray(a&&a.nodeType?[a]:a),d=f.merge(this.get(),c);return this.pushStack(S(c[0])||S(d[0])?d:f.unique(d))},andSelf:function(){return this.add(this.prevObject)}}),f.each({parent:function(a){var b=a.parentNode;return b&&b.nodeType!==11?b:null},parents:function(a){return f.dir(a,"parentNode")},parentsUntil:function(a,b,c){return f.dir(a,"parentNode",c)},next:function(a){return f.nth(a,2,"nextSibling")},prev:function(a){return f.nth(a,2,"previousSibling")},nextAll:function(a){return f.dir(a,"nextSibling")},prevAll:function(a){return f.dir(a,"previousSibling")},nextUntil:function(a,b,c){return f.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return f.dir(a,"previousSibling",c)},siblings:function(a){return f.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return f.sibling(a.firstChild)},contents:function(a){return f.nodeName(a,"iframe")?a.contentDocument||a.contentWindow.document:f.makeArray(a.childNodes)}},function(a,b){f.fn[a]=function(c,d){var e=f.map(this,b,c);L.test(a)||(d=c),d&&typeof d=="string"&&(e=f.filter(d,e)),e=this.length>1&&!R[a]?f.unique(e):e,(this.length>1||N.test(d))&&M.test(a)&&(e=e.reverse());return this.pushStack(e,a,P.call(arguments).join(","))}}),f.extend({filter:function(a,b,c){c&&(a=":not("+a+")");return b.length===1?f.find.matchesSelector(b[0],a)?[b[0]]:[]:f.find.matches(a,b)},dir:function(a,c,d){var e=[],g=a[c];while(g&&g.nodeType!==9&&(d===b||g.nodeType!==1||!f(g).is(d)))g.nodeType===1&&e.push(g),g=g[c];return e},nth:function(a,b,c,d){b=b||1;var e=0;for(;a;a=a[c])if(a.nodeType===1&&++e===b)break;return a},sibling:function(a,b){var c=[];for(;a;a=a.nextSibling)a.nodeType===1&&a!==b&&c.push(a);return c}});var V="abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",W=/ jQuery\d+="(?:\d+|null)"/g,X=/^\s+/,Y=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig,Z=/<([\w:]+)/,$=/<tbody/i,_=/<|&#?\w+;/,ba=/<(?:script|style)/i,bb=/<(?:script|object|embed|option|style)/i,bc=new RegExp("<(?:"+V+")[\\s/>]","i"),bd=/checked\s*(?:[^=]|=\s*.checked.)/i,be=/\/(java|ecma)script/i,bf=/^\s*<!(?:\[CDATA\[|\-\-)/,bg={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],area:[1,"<map>","</map>"],_default:[0,"",""]},bh=U(c);bg.optgroup=bg.option,bg.tbody=bg.tfoot=bg.colgroup=bg.caption=bg.thead,bg.th=bg.td,f.support.htmlSerialize||(bg._default=[1,"div<div>","</div>"]),f.fn.extend({text:function(a){return f.access(this,function(a){return a===b?f.text(this):this.empty().append((this[0]&&this[0].ownerDocument||c).createTextNode(a))},null,a,arguments.length)},wrapAll:function(a){if(f.isFunction(a))return this.each(function(b){f(this).wrapAll(a.call(this,b))});if(this[0]){var b=f(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstChild&&a.firstChild.nodeType===1)a=a.firstChild;return a}).append(this)}return this},wrapInner:function(a){if(f.isFunction(a))return this.each(function(b){f(this).wrapInner(a.call(this,b))});return this.each(function(){var b=f(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=f.isFunction(a);return this.each(function(c){f(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){f.nodeName(this,"body")||f(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,!0,function(a){this.nodeType===1&&this.appendChild(a)})},prepend:function(){return this.domManip(arguments,!0,function(a){this.nodeType===1&&this.insertBefore(a,this.firstChild)})},before:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this)});if(arguments.length){var a=f
.clean(arguments);a.push.apply(a,this.toArray());return this.pushStack(a,"before",arguments)}},after:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this.nextSibling)});if(arguments.length){var a=this.pushStack(this,"after",arguments);a.push.apply(a,f.clean(arguments));return a}},remove:function(a,b){for(var c=0,d;(d=this[c])!=null;c++)if(!a||f.filter(a,[d]).length)!b&&d.nodeType===1&&(f.cleanData(d.getElementsByTagName("*")),f.cleanData([d])),d.parentNode&&d.parentNode.removeChild(d);return this},empty:function(){for(var a=0,b;(b=this[a])!=null;a++){b.nodeType===1&&f.cleanData(b.getElementsByTagName("*"));while(b.firstChild)b.removeChild(b.firstChild)}return this},clone:function(a,b){a=a==null?!1:a,b=b==null?a:b;return this.map(function(){return f.clone(this,a,b)})},html:function(a){return f.access(this,function(a){var c=this[0]||{},d=0,e=this.length;if(a===b)return c.nodeType===1?c.innerHTML.replace(W,""):null;if(typeof a=="string"&&!ba.test(a)&&(f.support.leadingWhitespace||!X.test(a))&&!bg[(Z.exec(a)||["",""])[1].toLowerCase()]){a=a.replace(Y,"<$1></$2>");try{for(;d<e;d++)c=this[d]||{},c.nodeType===1&&(f.cleanData(c.getElementsByTagName("*")),c.innerHTML=a);c=0}catch(g){}}c&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(a){if(this[0]&&this[0].parentNode){if(f.isFunction(a))return this.each(function(b){var c=f(this),d=c.html();c.replaceWith(a.call(this,b,d))});typeof a!="string"&&(a=f(a).detach());return this.each(function(){var b=this.nextSibling,c=this.parentNode;f(this).remove(),b?f(b).before(a):f(c).append(a)})}return this.length?this.pushStack(f(f.isFunction(a)?a():a),"replaceWith",a):this},detach:function(a){return this.remove(a,!0)},domManip:function(a,c,d){var e,g,h,i,j=a[0],k=[];if(!f.support.checkClone&&arguments.length===3&&typeof j=="string"&&bd.test(j))return this.each(function(){f(this).domManip(a,c,d,!0)});if(f.isFunction(j))return this.each(function(e){var g=f(this);a[0]=j.call(this,e,c?g.html():b),g.domManip(a,c,d)});if(this[0]){i=j&&j.parentNode,f.support.parentNode&&i&&i.nodeType===11&&i.childNodes.length===this.length?e={fragment:i}:e=f.buildFragment(a,this,k),h=e.fragment,h.childNodes.length===1?g=h=h.firstChild:g=h.firstChild;if(g){c=c&&f.nodeName(g,"tr");for(var l=0,m=this.length,n=m-1;l<m;l++)d.call(c?bi(this[l],g):this[l],e.cacheable||m>1&&l<n?f.clone(h,!0,!0):h)}k.length&&f.each(k,function(a,b){b.src?f.ajax({type:"GET",global:!1,url:b.src,async:!1,dataType:"script"}):f.globalEval((b.text||b.textContent||b.innerHTML||"").replace(bf,"/*$0*/")),b.parentNode&&b.parentNode.removeChild(b)})}return this}}),f.buildFragment=function(a,b,d){var e,g,h,i,j=a[0];b&&b[0]&&(i=b[0].ownerDocument||b[0]),i.createDocumentFragment||(i=c),a.length===1&&typeof j=="string"&&j.length<512&&i===c&&j.charAt(0)==="<"&&!bb.test(j)&&(f.support.checkClone||!bd.test(j))&&(f.support.html5Clone||!bc.test(j))&&(g=!0,h=f.fragments[j],h&&h!==1&&(e=h)),e||(e=i.createDocumentFragment(),f.clean(a,i,e,d)),g&&(f.fragments[j]=h?e:1);return{fragment:e,cacheable:g}},f.fragments={},f.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){f.fn[a]=function(c){var d=[],e=f(c),g=this.length===1&&this[0].parentNode;if(g&&g.nodeType===11&&g.childNodes.length===1&&e.length===1){e[b](this[0]);return this}for(var h=0,i=e.length;h<i;h++){var j=(h>0?this.clone(!0):this).get();f(e[h])[b](j),d=d.concat(j)}return this.pushStack(d,a,e.selector)}}),f.extend({clone:function(a,b,c){var d,e,g,h=f.support.html5Clone||f.isXMLDoc(a)||!bc.test("<"+a.nodeName+">")?a.cloneNode(!0):bo(a);if((!f.support.noCloneEvent||!f.support.noCloneChecked)&&(a.nodeType===1||a.nodeType===11)&&!f.isXMLDoc(a)){bk(a,h),d=bl(a),e=bl(h);for(g=0;d[g];++g)e[g]&&bk(d[g],e[g])}if(b){bj(a,h);if(c){d=bl(a),e=bl(h);for(g=0;d[g];++g)bj(d[g],e[g])}}d=e=null;return h},clean:function(a,b,d,e){var g,h,i,j=[];b=b||c,typeof b.createElement=="undefined"&&(b=b.ownerDocument||b[0]&&b[0].ownerDocument||c);for(var k=0,l;(l=a[k])!=null;k++){typeof l=="number"&&(l+="");if(!l)continue;if(typeof l=="string")if(!_.test(l))l=b.createTextNode(l);else{l=l.replace(Y,"<$1></$2>");var m=(Z.exec(l)||["",""])[1].toLowerCase(),n=bg[m]||bg._default,o=n[0],p=b.createElement("div"),q=bh.childNodes,r;b===c?bh.appendChild(p):U(b).appendChild(p),p.innerHTML=n[1]+l+n[2];while(o--)p=p.lastChild;if(!f.support.tbody){var s=$.test(l),t=m==="table"&&!s?p.firstChild&&p.firstChild.childNodes:n[1]==="<table>"&&!s?p.childNodes:[];for(i=t.length-1;i>=0;--i)f.nodeName(t[i],"tbody")&&!t[i].childNodes.length&&t[i].parentNode.removeChild(t[i])}!f.support.leadingWhitespace&&X.test(l)&&p.insertBefore(b.createTextNode(X.exec(l)[0]),p.firstChild),l=p.childNodes,p&&(p.parentNode.removeChild(p),q.length>0&&(r=q[q.length-1],r&&r.parentNode&&r.parentNode.removeChild(r)))}var u;if(!f.support.appendChecked)if(l[0]&&typeof (u=l.length)=="number")for(i=0;i<u;i++)bn(l[i]);else bn(l);l.nodeType?j.push(l):j=f.merge(j,l)}if(d){g=function(a){return!a.type||be.test(a.type)};for(k=0;j[k];k++){h=j[k];if(e&&f.nodeName(h,"script")&&(!h.type||be.test(h.type)))e.push(h.parentNode?h.parentNode.removeChild(h):h);else{if(h.nodeType===1){var v=f.grep(h.getElementsByTagName("script"),g);j.splice.apply(j,[k+1,0].concat(v))}d.appendChild(h)}}}return j},cleanData:function(a){var b,c,d=f.cache,e=f.event.special,g=f.support.deleteExpando;for(var h=0,i;(i=a[h])!=null;h++){if(i.nodeName&&f.noData[i.nodeName.toLowerCase()])continue;c=i[f.expando];if(c){b=d[c];if(b&&b.events){for(var j in b.events)e[j]?f.event.remove(i,j):f.removeEvent(i,j,b.handle);b.handle&&(b.handle.elem=null)}g?delete i[f.expando]:i.removeAttribute&&i.removeAttribute(f.expando),delete d[c]}}}});var bp=/alpha\([^)]*\)/i,bq=/opacity=([^)]*)/,br=/([A-Z]|^ms)/g,bs=/^[\-+]?(?:\d*\.)?\d+$/i,bt=/^-?(?:\d*\.)?\d+(?!px)[^\d\s]+$/i,bu=/^([\-+])=([\-+.\de]+)/,bv=/^margin/,bw={position:"absolute",visibility:"hidden",display:"block"},bx=["Top","Right","Bottom","Left"],by,bz,bA;f.fn.css=function(a,c){return f.access(this,function(a,c,d){return d!==b?f.style(a,c,d):f.css(a,c)},a,c,arguments.length>1)},f.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=by(a,"opacity");return c===""?"1":c}return a.style.opacity}}},cssNumber:{fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":f.support.cssFloat?"cssFloat":"styleFloat"},style:function(a,c,d,e){if(!!a&&a.nodeType!==3&&a.nodeType!==8&&!!a.style){var g,h,i=f.camelCase(c),j=a.style,k=f.cssHooks[i];c=f.cssProps[i]||i;if(d===b){if(k&&"get"in k&&(g=k.get(a,!1,e))!==b)return g;return j[c]}h=typeof d,h==="string"&&(g=bu.exec(d))&&(d=+(g[1]+1)*+g[2]+parseFloat(f.css(a,c)),h="number");if(d==null||h==="number"&&isNaN(d))return;h==="number"&&!f.cssNumber[i]&&(d+="px");if(!k||!("set"in k)||(d=k.set(a,d))!==b)try{j[c]=d}catch(l){}}},css:function(a,c,d){var e,g;c=f.camelCase(c),g=f.cssHooks[c],c=f.cssProps[c]||c,c==="cssFloat"&&(c="float");if(g&&"get"in g&&(e=g.get(a,!0,d))!==b)return e;if(by)return by(a,c)},swap:function(a,b,c){var d={},e,f;for(f in b)d[f]=a.style[f],a.style[f]=b[f];e=c.call(a);for(f in b)a.style[f]=d[f];return e}}),f.curCSS=f.css,c.defaultView&&c.defaultView.getComputedStyle&&(bz=function(a,b){var c,d,e,g,h=a.style;b=b.replace(br,"-$1").toLowerCase(),(d=a.ownerDocument.defaultView)&&(e=d.getComputedStyle(a,null))&&(c=e.getPropertyValue(b),c===""&&!f.contains(a.ownerDocument.documentElement,a)&&(c=f.style(a,b))),!f.support.pixelMargin&&e&&bv.test(b)&&bt.test(c)&&(g=h.width,h.width=c,c=e.width,h.width=g);return c}),c.documentElement.currentStyle&&(bA=function(a,b){var c,d,e,f=a.currentStyle&&a.currentStyle[b],g=a.style;f==null&&g&&(e=g[b])&&(f=e),bt.test(f)&&(c=g.left,d=a.runtimeStyle&&a.runtimeStyle.left,d&&(a.runtimeStyle.left=a.currentStyle.left),g.left=b==="fontSize"?"1em":f,f=g.pixelLeft+"px",g.left=c,d&&(a.runtimeStyle.left=d));return f===""?"auto":f}),by=bz||bA,f.each(["height","width"],function(a,b){f.cssHooks[b]={get:function(a,c,d){if(c)return a.offsetWidth!==0?bB(a,b,d):f.swap(a,bw,function(){return bB(a,b,d)})},set:function(a,b){return bs.test(b)?b+"px":b}}}),f.support.opacity||(f.cssHooks.opacity={get:function(a,b){return bq.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?parseFloat(RegExp.$1)/100+"":b?"1":""},set:function(a,b){var c=a.style,d=a.currentStyle,e=f.isNumeric(b)?"alpha(opacity="+b*100+")":"",g=d&&d.filter||c.filter||"";c.zoom=1;if(b>=1&&f.trim(g.replace(bp,""))===""){c.removeAttribute("filter");if(d&&!d.filter)return}c.filter=bp.test(g)?g.replace(bp,e):g+" "+e}}),f(function(){f.support.reliableMarginRight||(f.cssHooks.marginRight={get:function(a,b){return f.swap(a,{display:"inline-block"},function(){return b?by(a,"margin-right"):a.style.marginRight})}})}),f.expr&&f.expr.filters&&(f.expr.filters.hidden=function(a){var b=a.offsetWidth,c=a.offsetHeight;return b===0&&c===0||!f.support.reliableHiddenOffsets&&(a.style&&a.style.display||f.css(a,"display"))==="none"},f.expr.filters.visible=function(a){return!f.expr.filters.hidden(a)}),f.each({margin:"",padding:"",border:"Width"},function(a,b){f.cssHooks[a+b]={expand:function(c){var d,e=typeof c=="string"?c.split(" "):[c],f={};for(d=0;d<4;d++)f[a+bx[d]+b]=e[d]||e[d-2]||e[0];return f}}});var bC=/%20/g,bD=/\[\]$/,bE=/\r?\n/g,bF=/#.*$/,bG=/^(.*?):[ \t]*([^\r\n]*)\r?$/mg,bH=/^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,bI=/^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,bJ=/^(?:GET|HEAD)$/,bK=/^\/\//,bL=/\?/,bM=/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,bN=/^(?:select|textarea)/i,bO=/\s+/,bP=/([?&])_=[^&]*/,bQ=/^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/,bR=f.fn.load,bS={},bT={},bU,bV,bW=["*/"]+["*"];try{bU=e.href}catch(bX){bU=c.createElement("a"),bU.href="",bU=bU.href}bV=bQ.exec(bU.toLowerCase())||[],f.fn.extend({load:function(a,c,d){if(typeof a!="string"&&bR)return bR.apply(this,arguments);if(!this.length)return this;var e=a.indexOf(" ");if(e>=0){var g=a.slice(e,a.length);a=a.slice(0,e)}var h="GET";c&&(f.isFunction(c)?(d=c,c=b):typeof c=="object"&&(c=f.param(c,f.ajaxSettings.traditional),h="POST"));var i=this;f.ajax({url:a,type:h,dataType:"html",data:c,complete:function(a,b,c){c=a.responseText,a.isResolved()&&(a.done(function(a){c=a}),i.html(g?f("<div>").append(c.replace(bM,"")).find(g):c)),d&&i.each(d,[c,b,a])}});return this},serialize:function(){return f.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?f.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||bN.test(this.nodeName)||bH.test(this.type))}).map(function(a,b){var c=f(this).val();return c==null?null:f.isArray(c)?f.map(c,function(a,c){return{name:b.name,value:a.replace(bE,"\r\n")}}):{name:b.name,value:c.replace(bE,"\r\n")}}).get()}}),f.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),function(a,b){f.fn[b]=function(a){return this.on(b,a)}}),f.each(["get","post"],function(a,c){f[c]=function(a,d,e,g){f.isFunction(d)&&(g=g||e,e=d,d=b);return f.ajax({type:c,url:a,data:d,success:e,dataType:g})}}),f.extend({getScript:function(a,c){return f.get(a,b,c,"script")},getJSON:function(a,b,c){return f.get(a,b,c,"json")},ajaxSetup:function(a,b){b?b$(a,f.ajaxSettings):(b=a,a=f.ajaxSettings),b$(a,b);return a},ajaxSettings:{url:bU,isLocal:bI.test(bV[1]),global:!0,type:"GET",contentType:"application/x-www-form-urlencoded; charset=UTF-8",processData:!0,async:!0,accepts:{xml:"application/xml, text/xml",html:"text/html",text:"text/plain",json:"application/json, text/javascript","*":bW},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText"},converters:{"* text":a.String,"text html":!0,"text json":f.parseJSON,"text xml":f.parseXML},flatOptions:{context:!0,url:!0}},ajaxPrefilter:bY(bS),ajaxTransport:bY(bT),ajax:function(a,c){function w(a,c,l,m){if(s!==2){s=2,q&&clearTimeout(q),p=b,n=m||"",v.readyState=a>0?4:0;var o,r,u,w=c,x=l?ca(d,v,l):b,y,z;if(a>=200&&a<300||a===304){if(d.ifModified){if(y=v.getResponseHeader("Last-Modified"))f.lastModified[k]=y;if(z=v.getResponseHeader("Etag"))f.etag[k]=z}if(a===304)w="notmodified",o=!0;else try{r=cb(d,x),w="success",o=!0}catch(A){w="parsererror",u=A}}else{u=w;if(!w||a)w="error",a<0&&(a=0)}v.status=a,v.statusText=""+(c||w),o?h.resolveWith(e,[r,w,v]):h.rejectWith(e,[v,w,u]),v.statusCode(j),j=b,t&&g.trigger("ajax"+(o?"Success":"Error"),[v,d,o?r:u]),i.fireWith(e,[v,w]),t&&(g.trigger("ajaxComplete",[v,d]),--f.active||f.event.trigger("ajaxStop"))}}typeof a=="object"&&(c=a,a=b),c=c||{};var d=f.ajaxSetup({},c),e=d.context||d,g=e!==d&&(e.nodeType||e instanceof f)?f(e):f.event,h=f.Deferred(),i=f.Callbacks("once memory"),j=d.statusCode||{},k,l={},m={},n,o,p,q,r,s=0,t,u,v={readyState:0,setRequestHeader:function(a,b){if(!s){var c=a.toLowerCase();a=m[c]=m[c]||a,l[a]=b}return this},getAllResponseHeaders:function(){return s===2?n:null},getResponseHeader:function(a){var c;if(s===2){if(!o){o={};while(c=bG.exec(n))o[c[1].toLowerCase()]=c[2]}c=o[a.toLowerCase()]}return c===b?null:c},overrideMimeType:function(a){s||(d.mimeType=a);return this},abort:function(a){a=a||"abort",p&&p.abort(a),w(0,a);return this}};h.promise(v),v.success=v.done,v.error=v.fail,v.complete=i.add,v.statusCode=function(a){if(a){var b;if(s<2)for(b in a)j[b]=[j[b],a[b]];else b=a[v.status],v.then(b,b)}return this},d.url=((a||d.url)+"").replace(bF,"").replace(bK,bV[1]+"//"),d.dataTypes=f.trim(d.dataType||"*").toLowerCase().split(bO),d.crossDomain==null&&(r=bQ.exec(d.url.toLowerCase()),d.crossDomain=!(!r||r[1]==bV[1]&&r[2]==bV[2]&&(r[3]||(r[1]==="http:"?80:443))==(bV[3]||(bV[1]==="http:"?80:443)))),d.data&&d.processData&&typeof d.data!="string"&&(d.data=f.param(d.data,d.traditional)),bZ(bS,d,c,v);if(s===2)return!1;t=d.global,d.type=d.type.toUpperCase(),d.hasContent=!bJ.test(d.type),t&&f.active++===0&&f.event.trigger("ajaxStart");if(!d.hasContent){d.data&&(d.url+=(bL.test(d.url)?"&":"?")+d.data,delete d.data),k=d.url;if(d.cache===!1){var x=f.now(),y=d.url.replace(bP,"$1_="+x);d.url=y+(y===d.url?(bL.test(d.url)?"&":"?")+"_="+x:"")}}(d.data&&d.hasContent&&d.contentType!==!1||c.contentType)&&v.setRequestHeader("Content-Type",d.contentType),d.ifModified&&(k=k||d.url,f.lastModified[k]&&v.setRequestHeader("If-Modified-Since",f.lastModified[k]),f.etag[k]&&v.setRequestHeader("If-None-Match",f.etag[k])),v.setRequestHeader("Accept",d.dataTypes[0]&&d.accepts[d.dataTypes[0]]?d.accepts[d.dataTypes[0]]+(d.dataTypes[0]!=="*"?", "+bW+"; q=0.01":""):d.accepts["*"]);for(u in d.headers)v.setRequestHeader(u,d.headers[u]);if(d.beforeSend&&(d.beforeSend.call(e,v,d)===!1||s===2)){v.abort();return!1}for(u in{success:1,error:1,complete:1})v[u](d[u]);p=bZ(bT,d,c,v);if(!p)w(-1,"No Transport");else{v.readyState=1,t&&g.trigger("ajaxSend",[v,d]),d.async&&d.timeout>0&&(q=setTimeout(function(){v.abort("timeout")},d.timeout));try{s=1,p.send(l,w)}catch(z){if(s<2)w(-1,z);else throw z}}return v},param:function(a,c){var d=[],e=function(a,b){b=f.isFunction(b)?b():b,d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};c===b&&(c=f.ajaxSettings.traditional);if(f.isArray(a)||a.jquery&&!f.isPlainObject(a))f.each(a,function(){e(this.name,this.value)});else for(var g in a)b_(g,a[g],c,e);return d.join("&").replace(bC,"+")}}),f.extend({active:0,lastModified:{},etag:{}});var cc=f.now(),cd=/(\=)\?(&|$)|\?\?/i;f.ajaxSetup({jsonp:"callback",jsonpCallback:function(){return f.expando+"_"+cc++}}),f.ajaxPrefilter("json jsonp",function(b,c,d){var e=typeof b.data=="string"&&/^application\/x\-www\-form\-urlencoded/.test(b.contentType);if(b.dataTypes[0]==="jsonp"||b.jsonp!==!1&&(cd.test(b.url)||e&&cd.test(b.data))){var g,h=b.jsonpCallback=f.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,i=a[h],j=b.url,k=b.data,l="$1"+h+"$2";b.jsonp!==!1&&(j=j.replace(cd,l),b.url===j&&(e&&(k=k.replace(cd,l)),b.data===k&&(j+=(/\?/.test(j)?"&":"?")+b.jsonp+"="+h))),b.url=j,b.data=k,a[h]=function(a){g=[a]},d.always(function(){a[h]=i,g&&f.isFunction(i)&&a[h](g[0])}),b.converters["script json"]=function(){g||f.error(h+" was not called");return g[0]},b.dataTypes[0]="json";return"script"}}),f.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/javascript|ecmascript/},converters:{"text script":function(a){f.globalEval(a);return a}}}),f.ajaxPrefilter("script",function(a){a.cache===b&&(a.cache=!1),a.crossDomain&&(a.type="GET",a.global=!1)}),f.ajaxTransport("script",function(a){if(a.crossDomain){var d,e=c.head||c.getElementsByTagName("head")[0]||c.documentElement;return{send:function(f,g){d=c.createElement("script"),d.async="async",a.scriptCharset&&(d.charset=a.scriptCharset),d.src=a.url,d.onload=d.onreadystatechange=function(a,c){if(c||!d.readyState||/loaded|complete/.test(d.readyState))d.onload=d.onreadystatechange=null,e&&d.parentNode&&e.removeChild(d),d=b,c||g(200,"success")},e.insertBefore(d,e.firstChild)},abort:function(){d&&d.onload(0,1)}}}});var ce=a.ActiveXObject?function(){for(var a in cg)cg[a](0,1)}:!1,cf=0,cg;f.ajaxSettings.xhr=a.ActiveXObject?function(){return!this.isLocal&&ch()||ci()}:ch,function(a){f.extend(f.support,{ajax:!!a,cors:!!a&&"withCredentials"in a})}(f.ajaxSettings.xhr()),f.support.ajax&&f.ajaxTransport(function(c){if(!c.crossDomain||f.support.cors){var d;return{send:function(e,g){var h=c.xhr(),i,j;c.username?h.open(c.type,c.url,c.async,c.username,c.password):h.open(c.type,c.url,c.async);if(c.xhrFields)for(j in c.xhrFields)h[j]=c.xhrFields[j];c.mimeType&&h.overrideMimeType&&h.overrideMimeType(c.mimeType),!c.crossDomain&&!e["X-Requested-With"]&&(e["X-Requested-With"]="XMLHttpRequest");try{for(j in e)h.setRequestHeader(j,e[j])}catch(k){}h.send(c.hasContent&&c.data||null),d=function(a,e){var j,k,l,m,n;try{if(d&&(e||h.readyState===4)){d=b,i&&(h.onreadystatechange=f.noop,ce&&delete cg[i]);if(e)h.readyState!==4&&h.abort();else{j=h.status,l=h.getAllResponseHeaders(),m={},n=h.responseXML,n&&n.documentElement&&(m.xml=n);try{m.text=h.responseText}catch(a){}try{k=h.statusText}catch(o){k=""}!j&&c.isLocal&&!c.crossDomain?j=m.text?200:404:j===1223&&(j=204)}}}catch(p){e||g(-1,p)}m&&g(j,k,m,l)},!c.async||h.readyState===4?d():(i=++cf,ce&&(cg||(cg={},f(a).unload(ce)),cg[i]=d),h.onreadystatechange=d)},abort:function(){d&&d(0,1)}}}});var cj={},ck,cl,cm=/^(?:toggle|show|hide)$/,cn=/^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i,co,cp=[["height","marginTop","marginBottom","paddingTop","paddingBottom"],["width","marginLeft","marginRight","paddingLeft","paddingRight"],["opacity"]],cq;f.fn.extend({show:function(a,b,c){var d,e;if(a||a===0)return this.animate(ct("show",3),a,b,c);for(var g=0,h=this.length;g<h;g++)d=this[g],d.style&&(e=d.style.display,!f._data(d,"olddisplay")&&e==="none"&&(e=d.style.display=""),(e===""&&f.css(d,"display")==="none"||!f.contains(d.ownerDocument.documentElement,d))&&f._data(d,"olddisplay",cu(d.nodeName)));for(g=0;g<h;g++){d=this[g];if(d.style){e=d.style.display;if(e===""||e==="none")d.style.display=f._data(d,"olddisplay")||""}}return this},hide:function(a,b,c){if(a||a===0)return this.animate(ct("hide",3),a,b,c);var d,e,g=0,h=this.length;for(;g<h;g++)d=this[g],d.style&&(e=f.css(d,"display"),e!=="none"&&!f._data(d,"olddisplay")&&f._data(d,"olddisplay",e));for(g=0;g<h;g++)this[g].style&&(this[g].style.display="none");return this},_toggle:f.fn.toggle,toggle:function(a,b,c){var d=typeof a=="boolean";f.isFunction(a)&&f.isFunction(b)?this._toggle.apply(this,arguments):a==null||d?this.each(function(){var b=d?a:f(this).is(":hidden");f(this)[b?"show":"hide"]()}):this.animate(ct("toggle",3),a,b,c);return this},fadeTo:function(a,b,c,d){return this.filter(":hidden").css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){function g(){e.queue===!1&&f._mark(this);var b=f.extend({},e),c=this.nodeType===1,d=c&&f(this).is(":hidden"),g,h,i,j,k,l,m,n,o,p,q;b.animatedProperties={};for(i in a){g=f.camelCase(i),i!==g&&(a[g]=a[i],delete a[i]);if((k=f.cssHooks[g])&&"expand"in k){l=k.expand(a[g]),delete a[g];for(i in l)i in a||(a[i]=l[i])}}for(g in a){h=a[g],f.isArray(h)?(b.animatedProperties[g]=h[1],h=a[g]=h[0]):b.animatedProperties[g]=b.specialEasing&&b.specialEasing[g]||b.easing||"swing";if(h==="hide"&&d||h==="show"&&!d)return b.complete.call(this);c&&(g==="height"||g==="width")&&(b.overflow=[this.style.overflow,this.style.overflowX,this.style.overflowY],f.css(this,"display")==="inline"&&f.css(this,"float")==="none"&&(!f.support.inlineBlockNeedsLayout||cu(this.nodeName)==="inline"?this.style.display="inline-block":this.style.zoom=1))}b.overflow!=null&&(this.style.overflow="hidden");for(i in a)j=new f.fx(this,b,i),h=a[i],cm.test(h)?(q=f._data(this,"toggle"+i)||(h==="toggle"?d?"show":"hide":0),q?(f._data(this,"toggle"+i,q==="show"?"hide":"show"),j[q]()):j[h]()):(m=cn.exec(h),n=j.cur(),m?(o=parseFloat(m[2]),p=m[3]||(f.cssNumber[i]?"":"px"),p!=="px"&&(f.style(this,i,(o||1)+p),n=(o||1)/j.cur()*n,f.style(this,i,n+p)),m[1]&&(o=(m[1]==="-="?-1:1)*o+n),j.custom(n,o,p)):j.custom(n,h,""));return!0}var e=f.speed(b,c,d);if(f.isEmptyObject(a))return this.each(e.complete,[!1]);a=f.extend({},a);return e.queue===!1?this.each(g):this.queue(e.queue,g)},stop:function(a,c,d){typeof a!="string"&&(d=c,c=a,a=b),c&&a!==!1&&this.queue(a||"fx",[]);return this.each(function(){function h(a,b,c){var e=b[c];f.removeData(a,c,!0),e.stop(d)}var b,c=!1,e=f.timers,g=f._data(this);d||f._unmark(!0,this);if(a==null)for(b in g)g[b]&&g[b].stop&&b.indexOf(".run")===b.length-4&&h(this,g,b);else g[b=a+".run"]&&g[b].stop&&h(this,g,b);for(b=e.length;b--;)e[b].elem===this&&(a==null||e[b].queue===a)&&(d?e[b](!0):e[b].saveState(),c=!0,e.splice(b,1));(!d||!c)&&f.dequeue(this,a)})}}),f.each({slideDown:ct("show",1),slideUp:ct("hide",1),slideToggle:ct("toggle",1),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){f.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),f.extend({speed:function(a,b,c){var d=a&&typeof a=="object"?f.extend({},a):{complete:c||!c&&b||f.isFunction(a)&&a,duration:a,easing:c&&b||b&&!f.isFunction(b)&&b};d.duration=f.fx.off?0:typeof d.duration=="number"?d.duration:d.duration in f.fx.speeds?f.fx.speeds[d.duration]:f.fx.speeds._default;if(d.queue==null||d.queue===!0)d.queue="fx";d.old=d.complete,d.complete=function(a){f.isFunction(d.old)&&d.old.call(this),d.queue?f.dequeue(this,d.queue):a!==!1&&f._unmark(this)};return d},easing:{linear:function(a){return a},swing:function(a){return-Math.cos(a*Math.PI)/2+.5}},timers:[],fx:function(a,b,c){this.options=b,this.elem=a,this.prop=c,b.orig=b.orig||{}}}),f.fx.prototype={update:function(){this.options.step&&this.options.step.call(this.elem,this.now,this),(f.fx.step[this.prop]||f.fx.step._default)(this)},cur:function(){if(this.elem[this.prop]!=null&&(!this.elem.style||this.elem.style[this.prop]==null))return this.elem[this.prop];var a,b=f.css(this.elem,this.prop);return isNaN(a=parseFloat(b))?!b||b==="auto"?0:b:a},custom:function(a,c,d){function h(a){return e.step(a)}var e=this,g=f.fx;this.startTime=cq||cr(),this.end=c,this.now=this.start=a,this.pos=this.state=0,this.unit=d||this.unit||(f.cssNumber[this.prop]?"":"px"),h.queue=this.options.queue,h.elem=this.elem,h.saveState=function(){f._data(e.elem,"fxshow"+e.prop)===b&&(e.options.hide?f._data(e.elem,"fxshow"+e.prop,e.start):e.options.show&&f._data(e.elem,"fxshow"+e.prop,e.end))},h()&&f.timers.push(h)&&!co&&(co=setInterval(g.tick,g.interval))},show:function(){var a=f._data(this.elem,"fxshow"+this.prop);this.options.orig[this.prop]=a||f.style(this.elem,this.prop),this.options.show=!0,a!==b?this.custom(this.cur(),a):this.custom(this.prop==="width"||this.prop==="height"?1:0,this.cur()),f(this.elem).show()},hide:function(){this.options.orig[this.prop]=f._data(this.elem,"fxshow"+this.prop)||f.style(this.elem,this.prop),this.options.hide=!0,this.custom(this.cur(),0)},step:function(a){var b,c,d,e=cq||cr(),g=!0,h=this.elem,i=this.options;if(a||e>=i.duration+this.startTime){this.now=this.end,this.pos=this.state=1,this.update(),i.animatedProperties[this.prop]=!0;for(b in i.animatedProperties)i.animatedProperties[b]!==!0&&(g=!1);if(g){i.overflow!=null&&!f.support.shrinkWrapBlocks&&f.each(["","X","Y"],function(a,b){h.style["overflow"+b]=i.overflow[a]}),i.hide&&f(h).hide();if(i.hide||i.show)for(b in i.animatedProperties)f.style(h,b,i.orig[b]),f.removeData(h,"fxshow"+b,!0),f.removeData(h,"toggle"+b,!0);d=i.complete,d&&(i.complete=!1,d.call(h))}return!1}i.duration==Infinity?this.now=e:(c=e-this.startTime,this.state=c/i.duration,this.pos=f.easing[i.animatedProperties[this.prop]](this.state,c,0,1,i.duration),this.now=this.start+(this.end-this.start)*this.pos),this.update();return!0}},f.extend(f.fx,{tick:function(){var a,b=f.timers,c=0;for(;c<b.length;c++)a=b[c],!a()&&b[c]===a&&b.splice(c--,1);b.length||f.fx.stop()},interval:13,stop:function(){clearInterval(co),co=null},speeds:{slow:600,fast:200,_default:400},step:{opacity:function(a){f.style(a.elem,"opacity",a.now)},_default:function(a){a.elem.style&&a.elem.style[a.prop]!=null?a.elem.style[a.prop]=a.now+a.unit:a.elem[a.prop]=a.now}}}),f.each(cp.concat.apply([],cp),function(a,b){b.indexOf("margin")&&(f.fx.step[b]=function(a){f.style(a.elem,b,Math.max(0,a.now)+a.unit)})}),f.expr&&f.expr.filters&&(f.expr.filters.animated=function(a){return f.grep(f.timers,function(b){return a===b.elem}).length});var cv,cw=/^t(?:able|d|h)$/i,cx=/^(?:body|html)$/i;"getBoundingClientRect"in c.documentElement?cv=function(a,b,c,d){try{d=a.getBoundingClientRect()}catch(e){}if(!d||!f.contains(c,a))return d?{top:d.top,left:d.left}:{top:0,left:0};var g=b.body,h=cy(b),i=c.clientTop||g.clientTop||0,j=c.clientLeft||g.clientLeft||0,k=h.pageYOffset||f.support.boxModel&&c.scrollTop||g.scrollTop,l=h.pageXOffset||f.support.boxModel&&c.scrollLeft||g.scrollLeft,m=d.top+k-i,n=d.left+l-j;return{top:m,left:n}}:cv=function(a,b,c){var d,e=a.offsetParent,g=a,h=b.body,i=b.defaultView,j=i?i.getComputedStyle(a,null):a.currentStyle,k=a.offsetTop,l=a.offsetLeft;while((a=a.parentNode)&&a!==h&&a!==c){if(f.support.fixedPosition&&j.position==="fixed")break;d=i?i.getComputedStyle(a,null):a.currentStyle,k-=a.scrollTop,l-=a.scrollLeft,a===e&&(k+=a.offsetTop,l+=a.offsetLeft,f.support.doesNotAddBorder&&(!f.support.doesAddBorderForTableAndCells||!cw.test(a.nodeName))&&(k+=parseFloat(d.borderTopWidth)||0,l+=parseFloat(d.borderLeftWidth)||0),g=e,e=a.offsetParent),f.support.subtractsBorderForOverflowNotVisible&&d.overflow!=="visible"&&(k+=parseFloat(d.borderTopWidth)||0,l+=parseFloat(d.borderLeftWidth)||0),j=d}if(j.position==="relative"||j.position==="static")k+=h.offsetTop,l+=h.offsetLeft;f.support.fixedPosition&&j.position==="fixed"&&(k+=Math.max(c.scrollTop,h.scrollTop),l+=Math.max(c.scrollLeft,h.scrollLeft));return{top:k,left:l}},f.fn.offset=function(a){if(arguments.length)return a===b?this:this.each(function(b){f.offset.setOffset(this,a,b)});var c=this[0],d=c&&c.ownerDocument;if(!d)return null;if(c===d.body)return f.offset.bodyOffset(c);return cv(c,d,d.documentElement)},f.offset={bodyOffset:function(a){var b=a.offsetTop,c=a.offsetLeft;f.support.doesNotIncludeMarginInBodyOffset&&(b+=parseFloat(f.css(a,"marginTop"))||0,c+=parseFloat(f.css(a,"marginLeft"))||0);return{top:b,left:c}},setOffset:function(a,b,c){var d=f.css(a,"position");d==="static"&&(a.style.position="relative");var e=f(a),g=e.offset(),h=f.css(a,"top"),i=f.css(a,"left"),j=(d==="absolute"||d==="fixed")&&f.inArray("auto",[h,i])>-1,k={},l={},m,n;j?(l=e.position(),m=l.top,n=l.left):(m=parseFloat(h)||0,n=parseFloat(i)||0),f.isFunction(b)&&(b=b.call(a,c,g)),b.top!=null&&(k.top=b.top-g.top+m),b.left!=null&&(k.left=b.left-g.left+n),"using"in b?b.using.call(a,k):e.css(k)}},f.fn.extend({position:function(){if(!this[0])return null;var a=this[0],b=this.offsetParent(),c=this.offset(),d=cx.test(b[0].nodeName)?{top:0,left:0}:b.offset();c.top-=parseFloat(f.css(a,"marginTop"))||0,c.left-=parseFloat(f.css(a,"marginLeft"))||0,d.top+=parseFloat(f.css(b[0],"borderTopWidth"))||0,d.left+=parseFloat(f.css(b[0],"borderLeftWidth"))||0;return{top:c.top-d.top,left:c.left-d.left}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||c.body;while(a&&!cx.test(a.nodeName)&&f.css(a,"position")==="static")a=a.offsetParent;return a})}}),f.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(a,c){var d=/Y/.test(c);f.fn[a]=function(e){return f.access(this,function(a,e,g){var h=cy(a);if(g===b)return h?c in h?h[c]:f.support.boxModel&&h.document.documentElement[e]||h.document.body[e]:a[e];h?h.scrollTo(d?f(h).scrollLeft():g,d?g:f(h).scrollTop()):a[e]=g},a,e,arguments.length,null)}}),f.each({Height:"height",Width:"width"},function(a,c){var d="client"+a,e="scroll"+a,g="offset"+a;f.fn["inner"+a]=function(){var a=this[0];return a?a.style?parseFloat(f.css(a,c,"padding")):this[c]():null},f.fn["outer"+a]=function(a){var b=this[0];return b?b.style?parseFloat(f.css(b,c,a?"margin":"border")):this[c]():null},f.fn[c]=function(a){return f.access(this,function(a,c,h){var i,j,k,l;if(f.isWindow(a)){i=a.document,j=i.documentElement[d];return f.support.boxModel&&j||i.body&&i.body[d]||j}if(a.nodeType===9){i=a.documentElement;if(i[d]>=i[e])return i[d];return Math.max(a.body[e],i[e],a.body[g],i[g])}if(h===b){k=f.css(a,c),l=parseFloat(k);return f.isNumeric(l)?l:k}f(a).css(c,h)},c,a,arguments.length,null)}}),a.jQuery=a.$=f,typeof define=="function"&&define.amd&&define.amd.jQuery&&define("jquery",[],function(){return f})})(window); 
!function(e){"object"==typeof exports?module.exports=e():"function"==typeof define&&define.amd?define(e):"undefined"!=typeof window?window.kami=e():"undefined"!=typeof global?global.kami=e():"undefined"!=typeof self&&(self.kami=e())}(function(){var define,module,exports;
return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/**
 * The core kami module provides basic 2D sprite batching and 
 * asset management.
 * 
 * @module kami
 */

var Class = require('klasse');
var Mesh = require('./glutils/Mesh');

var colorToFloat = require('number-util').colorToFloat;

/** 
 * A batcher mixin composed of quads (two tris, indexed). 
 *
 * This is used internally; users should look at 
 * {{#crossLink "SpriteBatch"}}{{/crossLink}} instead, which inherits from this
 * class.
 * 
 * The batcher itself is not managed by WebGLContext; however, it makes
 * use of Mesh and Texture which will be managed. For this reason, the batcher
 * does not hold a direct reference to the GL state.
 *
 * Subclasses must implement the following:  
 * {{#crossLink "BaseBatch/_createShader:method"}}{{/crossLink}}  
 * {{#crossLink "BaseBatch/_createVertexAttributes:method"}}{{/crossLink}}  
 * {{#crossLink "BaseBatch/getVertexSize:method"}}{{/crossLink}}  
 * 
 * @class  BaseBatch
 * @constructor
 * @param {WebGLContext} context the context this batcher belongs to
 * @param {Number} size the optional size of this batch, i.e. max number of quads
 * @default  500
 */
var BaseBatch = new Class({

  //Constructor
  initialize: function BaseBatch(context, size) {
    if (typeof context !== "object")
      throw "GL context not specified to SpriteBatch";
    this.context = context;

    this.size = size || 500;
    
    // 65535 is max index, so 65535 / 6 = 10922.
    if (this.size > 10922)  //(you'd have to be insane to try and batch this much with WebGL)
      throw "Can't have more than 10922 sprites per batch: " + this.size;
        
    
    
    this._blendSrc = this.context.gl.ONE;
    this._blendDst = this.context.gl.ONE_MINUS_SRC_ALPHA
    this._blendingEnabled = true;
    this._shader = this._createShader();

    /**
     * This shader will be used whenever "null" is passed
     * as the batch's shader. 
     *
     * @property {ShaderProgram} shader
     */
    this.defaultShader = this._shader;

    /**
     * By default, a SpriteBatch is created with its own ShaderProgram,
     * stored in `defaultShader`. If this flag is true, on deleting the SpriteBatch, its
     * `defaultShader` will also be deleted. If this flag is false, no shaders
     * will be deleted on destroy.
     *
     * Note that if you re-assign `defaultShader`, you will need to dispose the previous
     * default shader yoursel. 
     *
     * @property ownsShader
     * @type {Boolean}
     */
    this.ownsShader = true;

    this.idx = 0;

    /**
     * Whether we are currently drawing to the batch. Do not modify.
     * 
     * @property {Boolean} drawing
     */
    this.drawing = false;

    this.mesh = this._createMesh(this.size);


    /**
     * The ABGR packed color, as a single float. The default
     * value is the color white (255, 255, 255, 255).
     *
     * @property {Number} color
     * @readOnly 
     */
    this.color = colorToFloat(255, 255, 255, 255);
    
    /**
     * Whether to premultiply alpha on calls to setColor. 
     * This is true by default, so that we can conveniently write:
     *
     *     batch.setColor(1, 0, 0, 0.25); //tints red with 25% opacity
     *
     * If false, you must premultiply the colors yourself to achieve
     * the same tint, like so:
     *
     *     batch.setColor(0.25, 0, 0, 0.25);
     * 
     * @property premultiplied
     * @type {Boolean}
     * @default  true
     */
    this.premultiplied = true;
  },

  /**
   * A property to enable or disable blending for this sprite batch. If
   * we are currently drawing, this will first flush the batch, and then
   * update GL_BLEND state (enabled or disabled) with our new value.
   * 
   * @property {Boolean} blendingEnabled
   */
  blendingEnabled: {
    set: function(val) {
      var old = this._blendingEnabled;
      if (this.drawing)
        this.flush();

      this._blendingEnabled = val;

      //if we have a new value, update it.
      //this is because blend is done in begin() / end() 
      if (this.drawing && old != val) {
        var gl = this.context.gl;
        if (val)
          gl.enable(gl.BLEND);
        else
          gl.disable(gl.BLEND);
      }

    },

    get: function() {
      return this._blendingEnabled;
    }
  },

  /**
   * Sets the blend source parameters. 
   * If we are currently drawing, this will flush the batch.
   *
   * Setting either src or dst to `null` or a falsy value tells the SpriteBatch
   * to ignore gl.blendFunc. This is useful if you wish to use your
   * own blendFunc or blendFuncSeparate. 
   * 
   * @property {GLenum} blendDst 
   */
  blendSrc: {
    set: function(val) {
      if (this.drawing)
        this.flush();
      this._blendSrc = val;
    },

    get: function() {
      return this._blendSrc;
    }
  },

  /**
   * Sets the blend destination parameters. 
   * If we are currently drawing, this will flush the batch.
   *
   * Setting either src or dst to `null` or a falsy value tells the SpriteBatch
   * to ignore gl.blendFunc. This is useful if you wish to use your
   * own blendFunc or blendFuncSeparate. 
   *
   * @property {GLenum} blendSrc 
   */
  blendDst: {
    set: function(val) {
      if (this.drawing)
        this.flush();
      this._blendDst = val;
    },

    get: function() {
      return this._blendDst;
    }
  },

  /**
   * Sets the blend source and destination parameters. This is 
   * a convenience function for the blendSrc and blendDst setters.
   * If we are currently drawing, this will flush the batch.
   *
   * Setting either to `null` or a falsy value tells the SpriteBatch
   * to ignore gl.blendFunc. This is useful if you wish to use your
   * own blendFunc or blendFuncSeparate. 
   *
   * @method  setBlendFunction
   * @param {GLenum} blendSrc the source blend parameter
   * @param {GLenum} blendDst the destination blend parameter
   */
  setBlendFunction: function(blendSrc, blendDst) {
    this.blendSrc = blendSrc;
    this.blendDst = blendDst;
  },

  /**
   * This is a setter/getter for this batch's current ShaderProgram.
   * If this is set when the batch is drawing, the state will be flushed
   * to the GPU and the new shader will then be bound.
   *
   * If `null` or a falsy value is specified, the batch's `defaultShader` will be used. 
   *
   * Note that shaders are bound on batch.begin().
   *
   * @property shader
   * @type {ShaderProgram}
   */
  shader: {
    set: function(val) {
      var wasDrawing = this.drawing;

      if (wasDrawing) {
        this.end(); //unbinds the shader from the mesh
      }

      this._shader = val ? val : this.defaultShader;

      if (wasDrawing) {
        this.begin();
      }
    },

    get: function() {
      return this._shader;
    }
  },

  /**
   * Sets the color of this sprite batcher, which is used in subsequent draw
   * calls. This does not flush the batch.
   *
   * If r, g, b, are all numbers, this method assumes that RGB 
   * or RGBA float values (0.0 to 1.0) are being passed. Alpha defaults to one
   * if undefined.
   * 
   * If the first three arguments are not numbers, we only consider the first argument
   * and assign it to all four components -- this is useful for setting transparency 
   * in a premultiplied alpha stage. 
   * 
   * If the first argument is invalid or not a number,
   * the color defaults to (1, 1, 1, 1).
   *
   * @method  setColor
   * @param {Number} r the red component, normalized
   * @param {Number} g the green component, normalized
   * @param {Number} b the blue component, normalized
   * @param {Number} a the alpha component, normalized
   */
  setColor: function(r, g, b, a) {
    var rnum = typeof r === "number";
    if (rnum
        && typeof g === "number"
        && typeof b === "number") {
      //default alpha to one 
      a = (a || a === 0) ? a : 1.0;
    } else {
      r = g = b = a = rnum ? r : 1.0;
    }
    
    if (this.premultiplied) {
      r *= a;
      g *= a;
      b *= a;
    }
    
    this.color = colorToFloat(
      ~~(r * 255),
      ~~(g * 255),
      ~~(b * 255),
      ~~(a * 255)
    );
  },

  /**
   * Called from the constructor to create a new Mesh 
   * based on the expected batch size. Should set up
   * verts & indices properly.
   *
   * Users should not call this directly; instead, it
   * should only be implemented by subclasses.
   * 
   * @method _createMesh
   * @param {Number} size the size passed through the constructor
   */
  _createMesh: function(size) {
    //the total number of floats in our batch
    var numVerts = size * 4 * this.getVertexSize();
    //the total number of indices in our batch
    var numIndices = size * 6;
    var gl = this.context.gl;

    //vertex data
    this.vertices = new Float32Array(numVerts);
    //index data
    this.indices = new Uint16Array(numIndices); 
    
    for (var i=0, j=0; i < numIndices; i += 6, j += 4) 
    {
      this.indices[i + 0] = j + 0; 
      this.indices[i + 1] = j + 1;
      this.indices[i + 2] = j + 2;
      this.indices[i + 3] = j + 0;
      this.indices[i + 4] = j + 2;
      this.indices[i + 5] = j + 3;
    }

    var mesh = new Mesh(this.context, false, 
            numVerts, numIndices, this._createVertexAttributes());
    mesh.vertices = this.vertices;
    mesh.indices = this.indices;
    mesh.vertexUsage = gl.DYNAMIC_DRAW;
    mesh.indexUsage = gl.STATIC_DRAW;
    mesh.dirty = true;
    return mesh;
  },

  /**
   * Returns a shader for this batch. If you plan to support
   * multiple instances of your batch, it may or may not be wise
   * to use a shared shader to save resources.
   * 
   * This method initially throws an error; so it must be overridden by
   * subclasses of BaseBatch.
   *
   * @method  _createShader
   * @return {Number} the size of a vertex, in # of floats
   */
  _createShader: function() {
    throw "_createShader not implemented"
  },  

  /**
   * Returns an array of vertex attributes for this mesh; 
   * subclasses should implement this with the attributes 
   * expected for their batch.
   *
   * This method initially throws an error; so it must be overridden by
   * subclasses of BaseBatch.
   *
   * @method _createVertexAttributes
   * @return {Array} an array of Mesh.VertexAttrib objects
   */
  _createVertexAttributes: function() {
    throw "_createVertexAttributes not implemented";
  },


  /**
   * Returns the number of floats per vertex for this batcher.
   * 
   * This method initially throws an error; so it must be overridden by
   * subclasses of BaseBatch.
   *
   * @method  getVertexSize
   * @return {Number} the size of a vertex, in # of floats
   */
  getVertexSize: function() {
    throw "getVertexSize not implemented";
  },

  
  /** 
   * Begins the sprite batch. This will bind the shader
   * and mesh. Subclasses may want to disable depth or 
   * set up blending.
   *
   * @method  begin
   */
  begin: function()  {
    if (this.drawing) 
      throw "batch.end() must be called before begin";
    this.drawing = true;

    this.shader.bind();

    //bind the attributes now to avoid redundant calls
    this.mesh.bind(this.shader);

    if (this._blendingEnabled) {
      var gl = this.context.gl;
      gl.enable(gl.BLEND);
    }
  },

  /** 
   * Ends the sprite batch. This will flush any remaining 
   * data and set GL state back to normal.
   * 
   * @method  end
   */
  end: function()  {
    if (!this.drawing)
      throw "batch.begin() must be called before end";
    if (this.idx > 0)
      this.flush();
    this.drawing = false;

    this.mesh.unbind(this.shader);

    if (this._blendingEnabled) {
      var gl = this.context.gl;
      gl.disable(gl.BLEND);
    }
  },

  /** 
   * Called before rendering to bind new textures.
   * This method does nothing by default.
   *
   * @method  _preRender
   */
  _preRender: function()  {
  },

  /**
   * Flushes the batch by pushing the current data
   * to GL.
   * 
   * @method flush
   */
  flush: function()  {
    if (this.idx===0)
      return;

    var gl = this.context.gl;

    //premultiplied alpha
    if (this._blendingEnabled) {
      //set either to null if you want to call your own 
      //blendFunc or blendFuncSeparate
      if (this._blendSrc && this._blendDst)
        gl.blendFunc(this._blendSrc, this._blendDst); 
    }

    this._preRender();

    //number of sprites in batch
    var numComponents = this.getVertexSize();
    var spriteCount = (this.idx / (numComponents * 4));
    
    //draw the sprites
    this.mesh.verticesDirty = true;
    this.mesh.draw(gl.TRIANGLES, spriteCount * 6, 0, this.idx);

    this.idx = 0;
  },

  /**
   * Adds a sprite to this batch.
   * The specifics depend on the sprite batch implementation.
   *
   * @method draw
   * @param  {Texture} texture the texture for this sprite
   * @param  {Number} x       the x position, defaults to zero
   * @param  {Number} y       the y position, defaults to zero
   * @param  {Number} width   the width, defaults to the texture width
   * @param  {Number} height  the height, defaults to the texture height
   * @param  {Number} u1      the first U coordinate, default zero
   * @param  {Number} v1      the first V coordinate, default zero
   * @param  {Number} u2      the second U coordinate, default one
   * @param  {Number} v2      the second V coordinate, default one
   */
  draw: function(texture, x, y, width, height, u1, v1, u2, v2) {
  },

  /**
   * Adds a single quad mesh to this sprite batch from the given
   * array of vertices.
   * The specifics depend on the sprite batch implementation.
   *
   * @method  drawVertices
   * @param {Texture} texture the texture we are drawing for this sprite
   * @param {Float32Array} verts an array of vertices
   * @param {Number} off the offset into the vertices array to read from
   */
  drawVertices: function(texture, verts, off)  {
  },

  drawRegion: function(region, x, y, width, height) {
    this.draw(region.texture, x, y, width, height, region.u, region.v, region.u2, region.v2);
  },

  /**
   * Destroys the batch, deleting its buffers and removing it from the
   * WebGLContext management. Trying to use this
   * batch after destroying it can lead to unpredictable behaviour.
   *
   * If `ownsShader` is true, this will also delete the `defaultShader` object.
   * 
   * @method destroy
   */
  destroy: function() {
    this.vertices = null;
    this.indices = null;
    this.size = this.maxVertices = 0;

    if (this.ownsShader && this.defaultShader)
      this.defaultShader.destroy();
    this.defaultShader = null;
    this._shader = null; // remove reference to whatever shader is currently being used

    if (this.mesh) 
      this.mesh.destroy();
    this.mesh = null;
  }
});

module.exports = BaseBatch;

},{"./glutils/Mesh":7,"klasse":10,"number-util":11}],2:[function(require,module,exports){
/**
 * @module kami
 */

// Requires....
var Class         = require('klasse');

var BaseBatch = require('./BaseBatch');

var Mesh          = require('./glutils/Mesh');
var ShaderProgram = require('./glutils/ShaderProgram');

/**
 * A basic implementation of a batcher which draws 2D sprites.
 * This uses two triangles (quads) with indexed and interleaved
 * vertex data. Each vertex holds 5 floats (Position.xy, Color, TexCoord0.xy).
 *
 * The color is packed into a single float to reduce vertex bandwidth, and
 * the data is interleaved for best performance. We use a static index buffer,
 * and a dynamic vertex buffer that is updated with bufferSubData. 
 * 
 * @example
 *      var SpriteBatch = require('kami').SpriteBatch;  
 *      
 *      //create a new batcher
 *      var batch = new SpriteBatch(context);
 *
 *      function render() {
 *          batch.begin();
 *          
 *          //draw some sprites in between begin and end...
 *          batch.draw( texture, 0, 0, 25, 32 );
 *          batch.draw( texture1, 0, 25, 42, 23 );
 * 
 *          batch.end();
 *      }
 * 
 * @class  SpriteBatch
 * @uses BaseBatch
 * @constructor
 * @param {WebGLContext} context the context for this batch
 * @param {Number} size the max number of sprites to fit in a single batch
 */
var SpriteBatch = new Class({

  //inherit some stuff onto this prototype
  Mixins: BaseBatch,

  //Constructor
  initialize: function SpriteBatch(context, size) {
    BaseBatch.call(this, context, size);

    /**
     * The projection Float32Array vec2 which is
     * used to avoid some matrix calculations.
     *
     * @property projection
     * @type {Float32Array}
     */
    this.projection = new Float32Array(2);

    //Sets up a default projection vector so that the batch works without setProjection
    this.projection[0] = this.context.width/2;
    this.projection[1] = this.context.height/2;

    /**
     * The currently bound texture. Do not modify.
     * 
     * @property {Texture} texture
     * @readOnly
     */
    this.texture = null;
  },

  /**
   * This is a convenience function to set the batch's projection
   * matrix to an orthographic 2D projection, based on the given screen
   * size. This allows users to render in 2D without any need for a camera.
   * 
   * @param  {[type]} width  [description]
   * @param  {[type]} height [description]
   * @return {[type]}        [description]
   */
  resize: function(width, height) {
    this.setProjection(width/2, height/2);
  },

  /**
   * The number of floats per vertex for this batcher 
   * (Position.xy + Color + TexCoord0.xy).
   *
   * @method  getVertexSize
   * @return {Number} the number of floats per vertex
   */
  getVertexSize: function() {
    return SpriteBatch.VERTEX_SIZE;
  },

  /**
   * Used internally to return the Position, Color, and TexCoord0 attributes.
   *
   * @method  _createVertexAttribuets
   * @protected
   * @return {[type]} [description]
   */
  _createVertexAttributes: function() {
    var gl = this.context.gl;

    return [ 
      new Mesh.Attrib(ShaderProgram.POSITION_ATTRIBUTE, 2),
       //pack the color using some crazy wizardry 
      new Mesh.Attrib(ShaderProgram.COLOR_ATTRIBUTE, 4, null, gl.UNSIGNED_BYTE, true, 1),
      new Mesh.Attrib(ShaderProgram.TEXCOORD_ATTRIBUTE+"0", 2)
    ];
  },


  /**
   * Sets the projection vector, an x and y
   * defining the middle points of your stage.
   *
   * @method setProjection
   * @param {Number} x the x projection value
   * @param {Number} y the y projection value
   */
  setProjection: function(x, y) {
    var oldX = this.projection[0];
    var oldY = this.projection[1];
    this.projection[0] = x;
    this.projection[1] = y;

    //we need to flush the batch..
    if (this.drawing && (x != oldX || y != oldY)) {
      this.flush();
      this._updateMatrices();
    }
  },

  /**
   * Creates a default shader for this batch.
   *
   * @method  _createShader
   * @protected
   * @return {ShaderProgram} a new instance of ShaderProgram
   */
  _createShader: function() {
    var shader = new ShaderProgram(this.context,
        SpriteBatch.DEFAULT_VERT_SHADER, 
        SpriteBatch.DEFAULT_FRAG_SHADER);
    if (shader.log)
      console.warn("Shader Log:\n" + shader.log);
    return shader;
  },

  /**
   * This is called during rendering to update projection/transform
   * matrices and upload the new values to the shader. For example,
   * if the user calls setProjection mid-draw, the batch will flush
   * and this will be called before continuing to add items to the batch.
   *
   * You generally should not need to call this directly.
   * 
   * @method  updateMatrices
   * @protected
   */
  updateMatrices: function() {
    this.shader.setUniformfv("u_projection", this.projection);
  },

  /**
   * Called before rendering, and binds the current texture.
   * 
   * @method _preRender
   * @protected
   */
  _preRender: function() {
    if (this.texture)
      this.texture.bind();
  },

  /**
   * Binds the shader, disables depth writing, 
   * enables blending, activates texture unit 0, and sends
   * default matrices and sampler2D uniforms to the shader.
   *
   * @method  begin
   */
  begin: function() {
    //sprite batch doesn't hold a reference to GL since it is volatile
    var gl = this.context.gl;
    
    //This binds the shader and mesh!
    BaseBatch.prototype.begin.call(this);

    this.updateMatrices(); //send projection/transform to shader

    //upload the sampler uniform. not necessary every flush so we just
    //do it here.
    this.shader.setUniformi("u_texture0", 0);

    //disable depth mask
    gl.depthMask(false);
  },

  /**
   * Ends the sprite batcher and flushes any remaining data to the GPU.
   * 
   * @method end
   */
  end: function() {
    //sprite batch doesn't hold a reference to GL since it is volatile
    var gl = this.context.gl;
    
    //just do direct parent call for speed here
    //This binds the shader and mesh!
    BaseBatch.prototype.end.call(this);

    gl.depthMask(true);
  },

  /**
   * Flushes the batch to the GPU. This should be called when
   * state changes, such as blend functions, depth or stencil states,
   * shaders, and so forth.
   * 
   * @method flush
   */
  flush: function() {
    //ignore flush if texture is null or our batch is empty
    if (!this.texture)
      return;
    if (this.idx === 0)
      return;
    BaseBatch.prototype.flush.call(this);
    SpriteBatch.totalRenderCalls++;
  },

  /**
   * Adds a sprite to this batch. The sprite is drawn in 
   * screen-space with the origin at the upper-left corner (y-down).
   * 
   * @method draw
   * @param  {Texture} texture the Texture
   * @param  {Number} x       the x position in pixels, defaults to zero
   * @param  {Number} y       the y position in pixels, defaults to zero
   * @param  {Number} width   the width in pixels, defaults to the texture width
   * @param  {Number} height  the height in pixels, defaults to the texture height
   * @param  {Number} u1      the first U coordinate, default zero
   * @param  {Number} v1      the first V coordinate, default zero
   * @param  {Number} u2      the second U coordinate, default one
   * @param  {Number} v2      the second V coordinate, default one
   */
  draw: function(texture, x, y, width, height, u1, v1, u2, v2) {
    if (!this.drawing)
      throw "Illegal State: trying to draw a batch before begin()";

    //don't draw anything if GL tex doesn't exist..
    if (!texture)
      return;

    if (this.texture === null || this.texture.id !== texture.id) {
      //new texture.. flush previous data
      this.flush();
      this.texture = texture;
    } else if (this.idx == this.vertices.length) {
      this.flush(); //we've reached our max, flush before pushing more data
    }

    width = (width===0) ? width : (width || texture.width);
    height = (height===0) ? height : (height || texture.height);
    x = x || 0;
    y = y || 0;

    var x1 = x;
    var x2 = x + width;
    var y1 = y;
    var y2 = y + height;

    u1 = u1 || 0;
    u2 = (u2===0) ? u2 : (u2 || 1);
    v1 = v1 || 0;
    v2 = (v2===0) ? v2 : (v2 || 1);

    var c = this.color;

    //xy
    this.vertices[this.idx++] = x1;
    this.vertices[this.idx++] = y1;
    //color
    this.vertices[this.idx++] = c;
    //uv
    this.vertices[this.idx++] = u1;
    this.vertices[this.idx++] = v1;
    
    //xy
    this.vertices[this.idx++] = x2;
    this.vertices[this.idx++] = y1;
    //color
    this.vertices[this.idx++] = c;
    //uv
    this.vertices[this.idx++] = u2;
    this.vertices[this.idx++] = v1;

    //xy
    this.vertices[this.idx++] = x2;
    this.vertices[this.idx++] = y2;
    //color
    this.vertices[this.idx++] = c;
    //uv
    this.vertices[this.idx++] = u2;
    this.vertices[this.idx++] = v2;

    //xy
    this.vertices[this.idx++] = x1;
    this.vertices[this.idx++] = y2;
    //color
    this.vertices[this.idx++] = c;
    //uv
    this.vertices[this.idx++] = u1;
    this.vertices[this.idx++] = v2;
  },

  /**
   * Adds a single quad mesh to this sprite batch from the given
   * array of vertices. The sprite is drawn in 
   * screen-space with the origin at the upper-left corner (y-down).
   *
   * This reads 20 interleaved floats from the given offset index, in the format
   *
   *  { x, y, color, u, v,
   *      ...  }
   *
   * @method  drawVertices
   * @param {Texture} texture the Texture object
   * @param {Float32Array} verts an array of vertices
   * @param {Number} off the offset into the vertices array to read from
   */
  drawVertices: function(texture, verts, off) {
    if (!this.drawing)
      throw "Illegal State: trying to draw a batch before begin()";
    
    //don't draw anything if GL tex doesn't exist..
    if (!texture)
      return;


    if (this.texture != texture) {
      //new texture.. flush previous data
      this.flush();
      this.texture = texture;
    } else if (this.idx == this.vertices.length) {
      this.flush(); //we've reached our max, flush before pushing more data
    }

    off = off || 0;
    //TODO: use a loop here?
    //xy
    this.vertices[this.idx++] = verts[off++];
    this.vertices[this.idx++] = verts[off++];
    //color
    this.vertices[this.idx++] = verts[off++];
    //uv
    this.vertices[this.idx++] = verts[off++];
    this.vertices[this.idx++] = verts[off++];
    
    //xy
    this.vertices[this.idx++] = verts[off++];
    this.vertices[this.idx++] = verts[off++];
    //color
    this.vertices[this.idx++] = verts[off++];
    //uv
    this.vertices[this.idx++] = verts[off++];
    this.vertices[this.idx++] = verts[off++];

    //xy
    this.vertices[this.idx++] = verts[off++];
    this.vertices[this.idx++] = verts[off++];
    //color
    this.vertices[this.idx++] = verts[off++];
    //uv
    this.vertices[this.idx++] = verts[off++];
    this.vertices[this.idx++] = verts[off++];

    //xy
    this.vertices[this.idx++] = verts[off++];
    this.vertices[this.idx++] = verts[off++];
    //color
    this.vertices[this.idx++] = verts[off++];
    //uv
    this.vertices[this.idx++] = verts[off++];
    this.vertices[this.idx++] = verts[off++];
  }
});

/**
 * The default vertex size, i.e. number of floats per vertex.
 * @attribute  VERTEX_SIZE
 * @static
 * @final
 * @type {Number}
 * @default  5
 */
SpriteBatch.VERTEX_SIZE = 5;

/**
 * Incremented after each draw call, can be used for debugging.
 *
 *     SpriteBatch.totalRenderCalls = 0;
 *
 *     ... draw your scene ...
 *
 *     console.log("Draw calls per frame:", SpriteBatch.totalRenderCalls);
 *
 * 
 * @attribute  totalRenderCalls
 * @static
 * @type {Number}
 * @default  0
 */
SpriteBatch.totalRenderCalls = 0;

SpriteBatch.DEFAULT_FRAG_SHADER = [
  "precision mediump float;",
  "varying vec2 vTexCoord0;",
  "varying vec4 vColor;",
  "uniform sampler2D u_texture0;",

  "void main(void) {",
  "   gl_FragColor = texture2D(u_texture0, vTexCoord0) * vColor;",
  "}"
].join('\n');

SpriteBatch.DEFAULT_VERT_SHADER = [
  "attribute vec2 "+ShaderProgram.POSITION_ATTRIBUTE+";",
  "attribute vec4 "+ShaderProgram.COLOR_ATTRIBUTE+";",
  "attribute vec2 "+ShaderProgram.TEXCOORD_ATTRIBUTE+"0;",

  "uniform vec2 u_projection;",
  "varying vec2 vTexCoord0;",
  "varying vec4 vColor;",

  "void main(void) {", ///TODO: use a projection and transform matrix
  "   gl_Position = vec4( "
    +ShaderProgram.POSITION_ATTRIBUTE
    +".x / u_projection.x - 1.0, "
    +ShaderProgram.POSITION_ATTRIBUTE
    +".y / -u_projection.y + 1.0 , 0.0, 1.0);",
  "   vTexCoord0 = "+ShaderProgram.TEXCOORD_ATTRIBUTE+"0;",
  "   vColor = "+ShaderProgram.COLOR_ATTRIBUTE+";",
  "}"
].join('\n');

module.exports = SpriteBatch;

},{"./BaseBatch":1,"./glutils/Mesh":7,"./glutils/ShaderProgram":8,"klasse":10}],3:[function(require,module,exports){
/**
 * @module kami
 */

var Class = require('klasse');
var Signal = require('signals');
var nextPowerOfTwo = require('number-util').nextPowerOfTwo;
var isPowerOfTwo = require('number-util').isPowerOfTwo;

var Texture = new Class({


  /**
   * Creates a new texture with the optional width, height, and data.
   *
   * If the constructor is passed no parameters other than WebGLContext, then
   * it will not be initialized and will be non-renderable. You will need to manually
   * uploadData or uploadImage yourself.
   *
   * If you pass a width and height after context, the texture will be initialized with that size
   * and null data (e.g. transparent black). If you also pass the format and data, 
   * it will be uploaded to the texture. 
   *
   * If you pass a String or Data URI as the second parameter,
   * this Texture will load an Image object asynchronously. The optional third
   * and fourth parameters are callback functions for success and failure, respectively. 
   * The optional fifrth parameter for this version of the constructor is genMipmaps, which defaults to false. 
   * 
   * The arguments are kept in memory for future context restoration events. If
   * this is undesirable (e.g. huge buffers which need to be GC'd), you should not
   * pass the data in the constructor, but instead upload it after creating an uninitialized 
   * texture. You will need to manage it yourself, either by extending the create() method, 
   * or listening to restored events in WebGLContext.
   *
   * Most users will want to use the AssetManager to create and manage their textures
   * with asynchronous loading and context loss. 
   *
   * @example
   *    new Texture(context, 256, 256); //empty 256x256 texture
   *    new Texture(context, 1, 1, Texture.Format.RGBA, Texture.DataType.UNSIGNED_BYTE, 
   *          new Uint8Array([255,0,0,255])); //1x1 red texture
   *    new Texture(context, "test.png"); //loads image asynchronously
   *    new Texture(context, "test.png", successFunc, failFunc, useMipmaps); //extra params for image laoder 
   *
   * @class  Texture
   * @constructor
   * @param  {WebGLContext} context the WebGL context
   * @param  {Number} width the width of this texture
   * @param  {Number} height the height of this texture
   * @param  {GLenum} format e.g. Texture.Format.RGBA
   * @param  {GLenum} dataType e.g. Texture.DataType.UNSIGNED_BYTE (Uint8Array)
   * @param  {GLenum} data the array buffer, e.g. a Uint8Array view
   * @param  {Boolean} genMipmaps whether to generate mipmaps after uploading the data
   */
  initialize: function Texture(context, width, height, format, dataType, data, genMipmaps) {
    if (typeof context !== "object")
      throw "GL context not specified to Texture";
    this.context = context;

    /**
     * The WebGLTexture which backs this Texture object. This
     * can be used for low-level GL calls.
     * 
     * @type {WebGLTexture}
     */
    this.id = null; //initialized in create()

    /**
     * The target for this texture unit, i.e. TEXTURE_2D. Subclasses
     * should override the create() method to change this, for correct
     * usage with context restore.
     * 
     * @property target
     * @type {GLenum}
     * @default  gl.TEXTURE_2D
     */
    this.target = context.gl.TEXTURE_2D;

    /**
     * The width of this texture, in pixels.
     * 
     * @property width
     * @readOnly
     * @type {Number} the width
     */
    this.width = 0; //initialized on texture upload

    /**
     * The height of this texture, in pixels.
     * 
     * @property height
     * @readOnly
     * @type {Number} the height
     */
    this.height = 0; //initialized on texture upload

    // e.g. --> new Texture(gl, 256, 256, gl.RGB, gl.UNSIGNED_BYTE, data);
    //          creates a new empty texture, 256x256
    //    --> new Texture(gl);
    //        creates a new texture but WITHOUT uploading any data. 

    /**
     * The S wrap parameter.
     * @property {GLenum} wrapS
     */
    this.wrapS = Texture.DEFAULT_WRAP;
    /**
     * The T wrap parameter.
     * @property {GLenum} wrapT
     */
    this.wrapT = Texture.DEFAULT_WRAP;
    /**
     * The minifcation filter.
     * @property {GLenum} minFilter 
     */
    this.minFilter = Texture.DEFAULT_FILTER;
    
    /**
     * The magnification filter.
     * @property {GLenum} magFilter 
     */
    this.magFilter = Texture.DEFAULT_FILTER;

    /**
     * When a texture is created, we keep track of the arguments provided to 
     * its constructor. On context loss and restore, these arguments are re-supplied
     * to the Texture, so as to re-create it in its correct form.
     *
     * This is mainly useful if you are procedurally creating textures and passing
     * their data directly (e.g. for generic lookup tables in a shader). For image
     * or media based textures, it would be better to use an AssetManager to manage
     * the asynchronous texture upload.
     *
     * Upon destroying a texture, a reference to this is also lost.
     *
     * @property managedArgs
     * @type {Array} the array of arguments, shifted to exclude the WebGLContext parameter
     */
    this.managedArgs = Array.prototype.slice.call(arguments, 1);

    //This is maanged by WebGLContext
    this.context.addManagedObject(this);
    this.create();
  },

  /**
   * This can be called after creating a Texture to load an Image object asynchronously,
   * or upload image data directly. It takes the same parameters as the constructor, except 
   * for the context which has already been established. 
   *
   * Users will generally not need to call this directly. 
   * 
   * @protected
   * @method  setup
   */
  setup: function(width, height, format, dataType, data, genMipmaps) {
    var gl = this.gl;

    //If the first argument is a string, assume it's an Image loader
    //second argument will then be genMipmaps, third and fourth the success/fail callbacks
    if (typeof width === "string") {
      var img = new Image();
      var path      = arguments[0];   //first argument, the path
      var successCB = typeof arguments[1] === "function" ? arguments[1] : null;
      var failCB    = typeof arguments[2] === "function" ? arguments[2] : null;
      genMipmaps    = !!arguments[3];

      var self = this;

      //If you try to render a texture that is not yet "renderable" (i.e. the 
      //async load hasn't completed yet, which is always the case in Chrome since requestAnimationFrame
      //fires before img.onload), WebGL will throw us errors. So instead we will just upload some
      //dummy data until the texture load is complete. Users can disable this with the global flag.
      if (Texture.USE_DUMMY_1x1_DATA) {
        self.uploadData(1, 1);
        this.width = this.height = 0;
      }

      img.onload = function() {
        self.uploadImage(img, undefined, undefined, genMipmaps);
        if (successCB)
          successCB();
      }
      img.onerror = function() {
        // console.warn("Error loading image: "+path);
        if (genMipmaps) //we still need to gen mipmaps on the 1x1 dummy
          gl.generateMipmap(gl.TEXTURE_2D);
        if (failCB)
          failCB();
      }
      img.onabort = function() {
        // console.warn("Image load aborted: "+path);
        if (genMipmaps) //we still need to gen mipmaps on the 1x1 dummy
          gl.generateMipmap(gl.TEXTURE_2D);
        if (failCB)
          failCB();
      }

      img.src = path;
    } 
    //otherwise assume our regular list of width/height arguments are passed
    else {
      this.uploadData(width, height, format, dataType, data, genMipmaps);
    }
  },  

  /**
   * Called in the Texture constructor, and after the GL context has been re-initialized. 
   * Subclasses can override this to provide a custom data upload, e.g. cubemaps or compressed
   * textures.
   *
   * @method  create
   */
  create: function() {
    this.gl = this.context.gl; 
    var gl = this.gl;

    this.id = gl.createTexture(); //texture ID is recreated
    this.width = this.height = 0; //size is reset to zero until loaded
    this.target = gl.TEXTURE_2D;  //the provider can change this if necessary (e.g. cube maps)

    this.bind();


    //TODO: clean these up a little. 
    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, Texture.UNPACK_PREMULTIPLY_ALPHA);
    gl.pixelStorei(gl.UNPACK_ALIGNMENT, Texture.UNPACK_ALIGNMENT);
    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, Texture.UNPACK_FLIP_Y);
    
    var colorspace = Texture.UNPACK_COLORSPACE_CONVERSION || gl.BROWSER_DEFAULT_WEBGL;
    gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, colorspace);

    //setup wrap modes without binding redundantly
    this.setWrap(this.wrapS, this.wrapT, false);
    this.setFilter(this.minFilter, this.magFilter, false);
    
    if (this.managedArgs.length !== 0) {
      this.setup.apply(this, this.managedArgs);
    }
  },

  /**
   * Destroys this texture by deleting the GL resource,
   * removing it from the WebGLContext management stack,
   * setting its size to zero, and id and managed arguments to null.
   * 
   * Trying to use this texture after may lead to undefined behaviour.
   *
   * @method  destroy
   */
  destroy: function() {
    if (this.id && this.gl)
      this.gl.deleteTexture(this.id);
    if (this.context)
      this.context.removeManagedObject(this);
    this.width = this.height = 0;
    this.id = null;
    this.managedArgs = null;
    this.context = null;
    this.gl = null;
  },

  /**
   * Sets the wrap mode for this texture; if the second argument
   * is undefined or falsy, then both S and T wrap will use the first
   * argument.
   *
   * You can use Texture.Wrap constants for convenience, to avoid needing 
   * a GL reference.
   *
   * @method  setWrap
   * @param {GLenum} s the S wrap mode
   * @param {GLenum} t the T wrap mode
   * @param {Boolean} ignoreBind (optional) if true, the bind will be ignored. 
   */
  setWrap: function(s, t, ignoreBind) { //TODO: support R wrap mode
    if (s && t) {
      this.wrapS = s;
      this.wrapT = t;
    } else 
      this.wrapS = this.wrapT = s;
    
    //enforce POT rules..
    this._checkPOT(); 

    if (!ignoreBind)
      this.bind();

    var gl = this.gl;
    gl.texParameteri(this.target, gl.TEXTURE_WRAP_S, this.wrapS);
    gl.texParameteri(this.target, gl.TEXTURE_WRAP_T, this.wrapT);
  },


  /**
   * Sets the min and mag filter for this texture; 
   * if mag is undefined or falsy, then both min and mag will use the
   * filter specified for min.
   *
   * You can use Texture.Filter constants for convenience, to avoid needing 
   * a GL reference.
   *
   * @method  setFilter
   * @param {GLenum} min the minification filter
   * @param {GLenum} mag the magnification filter
   * @param {Boolean} ignoreBind if true, the bind will be ignored. 
   */
  setFilter: function(min, mag, ignoreBind) { 
    if (min && mag) {
      this.minFilter = min;
      this.magFilter = mag;
    } else 
      this.minFilter = this.magFilter = min;
    
    //enforce POT rules..
    this._checkPOT();

    if (!ignoreBind)
      this.bind();

    var gl = this.gl;
    gl.texParameteri(this.target, gl.TEXTURE_MIN_FILTER, this.minFilter);
    gl.texParameteri(this.target, gl.TEXTURE_MAG_FILTER, this.magFilter);
  },

  /**
   * A low-level method to upload the specified ArrayBufferView
   * to this texture. This will cause the width and height of this
   * texture to change.
   *
   * @method  uploadData
   * @param  {Number} width          the new width of this texture,
   *                                 defaults to the last used width (or zero)
   * @param  {Number} height         the new height of this texture
   *                                 defaults to the last used height (or zero)
   * @param  {GLenum} format         the data format, default RGBA
   * @param  {GLenum} type           the data type, default UNSIGNED_BYTE (Uint8Array)
   * @param  {ArrayBufferView} data  the raw data for this texture, or null for an empty image
   * @param  {Boolean} genMipmaps    whether to generate mipmaps after uploading the data, default false
   */
  uploadData: function(width, height, format, type, data, genMipmaps) {
    var gl = this.gl;

    format = format || gl.RGBA;
    type = type || gl.UNSIGNED_BYTE;
    data = data || null; //make sure falsey value is null for texImage2D

    this.width = (width || width==0) ? width : this.width;
    this.height = (height || height==0) ? height : this.height;

    this._checkPOT();

    this.bind();

    gl.texImage2D(this.target, 0, format, 
            this.width, this.height, 0, format,
            type, data);

    if (genMipmaps)
      gl.generateMipmap(this.target);
  },

  /**
   * Uploads ImageData, HTMLImageElement, HTMLCanvasElement or 
   * HTMLVideoElement.
   *
   * @method  uploadImage
   * @param  {Object} domObject the DOM image container
   * @param  {GLenum} format the format, default gl.RGBA
   * @param  {GLenum} type the data type, default gl.UNSIGNED_BYTE
   * @param  {Boolean} genMipmaps whether to generate mipmaps after uploading the data, default false
   */
  uploadImage: function(domObject, format, type, genMipmaps) {
    var gl = this.gl;

    format = format || gl.RGBA;
    type = type || gl.UNSIGNED_BYTE;
    
    this.width = domObject.width;
    this.height = domObject.height;

    this._checkPOT();

    this.bind();

    gl.texImage2D(this.target, 0, format, format,
            type, domObject);

    if (genMipmaps)
      gl.generateMipmap(this.target);
  },

  /**
   * If FORCE_POT is false, we verify this texture to see if it is valid, 
   * as per non-power-of-two rules. If it is non-power-of-two, it must have 
   * a wrap mode of CLAMP_TO_EDGE, and the minification filter must be LINEAR
   * or NEAREST. If we don't satisfy these needs, an error is thrown.
   * 
   * @method  _checkPOT
   * @private
   * @return {[type]} [description]
   */
  _checkPOT: function() {
    if (!Texture.FORCE_POT) {
      //If minFilter is anything but LINEAR or NEAREST
      //or if wrapS or wrapT are not CLAMP_TO_EDGE...
      var wrongFilter = (this.minFilter !== Texture.Filter.LINEAR && this.minFilter !== Texture.Filter.NEAREST);
      var wrongWrap = (this.wrapS !== Texture.Wrap.CLAMP_TO_EDGE || this.wrapT !== Texture.Wrap.CLAMP_TO_EDGE);

      if ( wrongFilter || wrongWrap ) {
        if (!isPowerOfTwo(this.width) || !isPowerOfTwo(this.height))
          throw new Error(wrongFilter 
              ? "Non-power-of-two textures cannot use mipmapping as filter"
              : "Non-power-of-two textures must use CLAMP_TO_EDGE as wrap");
      }
    }
  },

  /**
   * Binds the texture. If unit is specified,
   * it will bind the texture at the given slot
   * (TEXTURE0, TEXTURE1, etc). If unit is not specified,
   * it will simply bind the texture at whichever slot
   * is currently active.
   *
   * @method  bind
   * @param  {Number} unit the texture unit index, starting at 0
   */
  bind: function(unit) {
    var gl = this.gl;
    if (unit || unit === 0)
      gl.activeTexture(gl.TEXTURE0 + unit);
    gl.bindTexture(this.target, this.id);
  },

  toString: function() {
    return this.id + ":" + this.width + "x" + this.height + "";
  }
});

/** 
 * A set of Filter constants that match their GL counterparts.
 * This is for convenience, to avoid the need for a GL rendering context.
 *
 * @example
 * ```
 *     Texture.Filter.NEAREST
 *     Texture.Filter.NEAREST_MIPMAP_LINEAR
 *     Texture.Filter.NEAREST_MIPMAP_NEAREST
 *     Texture.Filter.LINEAR
 *     Texture.Filter.LINEAR_MIPMAP_LINEAR
 *     Texture.Filter.LINEAR_MIPMAP_NEAREST
 * ```
 * @attribute Filter
 * @static
 * @type {Object}
 */
Texture.Filter = {
  NEAREST: 9728,
  NEAREST_MIPMAP_LINEAR: 9986,
  NEAREST_MIPMAP_NEAREST: 9984,
  LINEAR: 9729,
  LINEAR_MIPMAP_LINEAR: 9987,
  LINEAR_MIPMAP_NEAREST: 9985
};

/** 
 * A set of Wrap constants that match their GL counterparts.
 * This is for convenience, to avoid the need for a GL rendering context.
 *
 * @example
 * ```
 *     Texture.Wrap.CLAMP_TO_EDGE
 *     Texture.Wrap.MIRRORED_REPEAT
 *     Texture.Wrap.REPEAT
 * ```
 * @attribute Wrap
 * @static
 * @type {Object}
 */
Texture.Wrap = {
  CLAMP_TO_EDGE: 33071,
  MIRRORED_REPEAT: 33648,
  REPEAT: 10497
};

/** 
 * A set of Format constants that match their GL counterparts.
 * This is for convenience, to avoid the need for a GL rendering context.
 *
 * @example
 * ```
 *     Texture.Format.RGB
 *     Texture.Format.RGBA
 *     Texture.Format.LUMINANCE_ALPHA
 * ```
 * @attribute Format
 * @static
 * @type {Object}
 */
Texture.Format = {
  DEPTH_COMPONENT: 6402,
  ALPHA: 6406,
  RGBA: 6408,
  RGB: 6407,
  LUMINANCE: 6409,
  LUMINANCE_ALPHA: 6410
};

/** 
 * A set of DataType constants that match their GL counterparts.
 * This is for convenience, to avoid the need for a GL rendering context.
 *
 * @example
 * ```
 *     Texture.DataType.UNSIGNED_BYTE 
 *     Texture.DataType.FLOAT 
 * ```
 * @attribute DataType
 * @static
 * @type {Object}
 */
Texture.DataType = {
  BYTE: 5120,
  SHORT: 5122,
  INT: 5124,
  FLOAT: 5126,
  UNSIGNED_BYTE: 5121,
  UNSIGNED_INT: 5125,
  UNSIGNED_SHORT: 5123,
  UNSIGNED_SHORT_4_4_4_4: 32819,
  UNSIGNED_SHORT_5_5_5_1: 32820,
  UNSIGNED_SHORT_5_6_5: 33635
}

/**
 * The default wrap mode when creating new textures. If a custom 
 * provider was specified, it may choose to override this default mode.
 * 
 * @attribute {GLenum} DEFAULT_WRAP
 * @static 
 * @default  Texture.Wrap.CLAMP_TO_EDGE
 */
Texture.DEFAULT_WRAP = Texture.Wrap.CLAMP_TO_EDGE;


/**
 * The default filter mode when creating new textures. If a custom
 * provider was specified, it may choose to override this default mode.
 *
 * @attribute {GLenum} DEFAULT_FILTER
 * @static
 * @default  Texture.Filter.LINEAR
 */
Texture.DEFAULT_FILTER = Texture.Filter.NEAREST;

/**
 * By default, we do some error checking when creating textures
 * to ensure that they will be "renderable" by WebGL. Non-power-of-two
 * textures must use CLAMP_TO_EDGE as their wrap mode, and NEAREST or LINEAR
 * as their wrap mode. Further, trying to generate mipmaps for a NPOT image
 * will lead to errors. 
 *
 * However, you can disable this error checking by setting `FORCE_POT` to true.
 * This may be useful if you are running on specific hardware that supports POT 
 * textures, or in some future case where NPOT textures is added as a WebGL extension.
 * 
 * @attribute {Boolean} FORCE_POT
 * @static
 * @default  false
 */
Texture.FORCE_POT = false;

//default pixel store operations. Used in create()
Texture.UNPACK_FLIP_Y = false;
Texture.UNPACK_ALIGNMENT = 1;
Texture.UNPACK_PREMULTIPLY_ALPHA = true; 
Texture.UNPACK_COLORSPACE_CONVERSION = undefined;

//for the Image constructor we need to handle things a bit differently..
Texture.USE_DUMMY_1x1_DATA = true;

/**
 * Utility to get the number of components for the given GLenum, e.g. gl.RGBA returns 4.
 * Returns null if the specified format is not of type DEPTH_COMPONENT, ALPHA, LUMINANCE,
 * LUMINANCE_ALPHA, RGB, or RGBA.
 * 
 * @method getNumComponents
 * @static
 * @param  {GLenum} format a texture format, i.e. Texture.Format.RGBA
 * @return {Number} the number of components for this format
 */
Texture.getNumComponents = function(format) {
  switch (format) {
    case Texture.Format.DEPTH_COMPONENT:
    case Texture.Format.ALPHA:
    case Texture.Format.LUMINANCE:
      return 1;
    case Texture.Format.LUMINANCE_ALPHA:
      return 2;
    case Texture.Format.RGB:
      return 3;
    case Texture.Format.RGBA:
      return 4;
  }
  return null;
};

module.exports = Texture;
},{"klasse":10,"number-util":11,"signals":12}],4:[function(require,module,exports){
var Class = require('klasse');

//This is a GL-specific texture region, employing tangent space normalized coordinates U and V.
//A canvas-specific region would really just be a lightweight object with { x, y, width, height }
//in pixels.
var TextureRegion = new Class({

  initialize: function TextureRegion(texture, x, y, width, height) {
    this.texture = texture;
    this.setRegion(x, y, width, height);
  },

  setUVs: function(u, v, u2, v2) {
    this.regionWidth = Math.round(Math.abs(u2 - u) * this.texture.width);
        this.regionHeight = Math.round(Math.abs(v2 - v) * this.texture.height);

        // From LibGDX TextureRegion.java -- 
    // For a 1x1 region, adjust UVs toward pixel center to avoid filtering artifacts on AMD GPUs when drawing very stretched.
    if (this.regionWidth == 1 && this.regionHeight == 1) {
      var adjustX = 0.25 / this.texture.width;
      u += adjustX;
      u2 -= adjustX;
      var adjustY = 0.25 / this.texture.height;
      v += adjustY;
      v2 -= adjustY;
    }

    this.u = u;
    this.v = v;
    this.u2 = u2;
    this.v2 = v2;
  },

  setRegion: function(x, y, width, height) {
    x = x || 0;
    y = y || 0;
    width = (width===0 || width) ? width : this.texture.width;
    height = (height===0 || height) ? height : this.texture.height;

    var invTexWidth = 1 / this.texture.width;
    var invTexHeight = 1 / this.texture.height;
    this.setUVs(x * invTexWidth, y * invTexHeight, (x + width) * invTexWidth, (y + height) * invTexHeight);
    this.regionWidth = Math.abs(width);
    this.regionHeight = Math.abs(height);
  },

  /** Sets the texture to that of the specified region and sets the coordinates relative to the specified region. */
  setFromRegion: function(region, x, y, width, height) {
    this.texture = region.texture;
    this.set(region.getRegionX() + x, region.getRegionY() + y, width, height);
  },


  //TODO: add setters for regionX/Y and regionWidth/Height

  regionX: {
    get: function() {
      return Math.round(this.u * this.texture.width);
    } 
  },

  regionY: {
    get: function() {
      return Math.round(this.v * this.texture.height);
    }
  },

  flip: function(x, y) {
    var temp;
    if (x) {
      temp = this.u;
      this.u = this.u2;
      this.u2 = temp;
    }
    if (y) {
      temp = this.v;
      this.v = this.v2;
      this.v2 = temp;
    }
  }
});

module.exports = TextureRegion;
},{"klasse":10}],5:[function(require,module,exports){
/**
 * @module kami
 */

var Class = require('klasse');
var Signal = require('signals');

/**
 * A thin wrapper around WebGLRenderingContext which handles
 * context loss and restore with various rendering objects (textures,
 * shaders and buffers). This also handles general viewport management.
 *
 * If the view is not specified, a canvas will be created.
 *
 * If the `view` parameter is an instanceof WebGLRenderingContext,
 * we will use its canvas and context without fetching another through `getContext`.
 * Passing a canvas that has already had `getContext('webgl')` called will not cause
 * errors, but in certain debuggers (e.g. Chrome WebGL Inspector) only the latest
 * context will be traced.
 * 
 * @class  WebGLContext
 * @constructor
 * @param {Number} width the width of the GL canvas
 * @param {Number} height the height of the GL canvas
 * @param {HTMLCanvasElement} view the optional DOM canvas element
 * @param {Object} contextAttribuets an object containing context attribs which
 *                                   will be used during GL initialization
 */
var WebGLContext = new Class({
  
  initialize: function WebGLContext(width, height, view, contextAttributes) {
    /**
     * The list of rendering objects (shaders, VBOs, textures, etc) which are 
     * currently being managed. Any object with a "create" method can be added
     * to this list. Upon destroying the rendering object, it should be removed.
     * See addManagedObject and removeManagedObject.
     * 
     * @property {Array} managedObjects
     */
    this.managedObjects = [];

    /**
     * The actual GL context. You can use this for
     * raw GL calls or to access GLenum constants. This
     * will be updated on context restore. While the WebGLContext
     * is not `valid`, you should not try to access GL state.
     * 
     * @property gl
     * @type {WebGLRenderingContext}
     */
    this.gl = null;

    if (view && typeof window.WebGLRenderingContext !== "undefined"
         && view instanceof window.WebGLRenderingContext) {
      view = view.canvas;
      this.gl = view;
      this.valid = true;
      contextAttributes = undefined; //just ignore new attribs...
    }

    /**
     * The canvas DOM element for this context.
     * @property {Number} view
     */
    this.view = view || document.createElement("canvas");

    //default size as per spec:
    //http://www.w3.org/TR/2012/WD-html5-author-20120329/the-canvas-element.html#the-canvas-element
    
    /**
     * The width of this canvas.
     *
     * @property width
     * @type {Number}
     */
    this.width = this.view.width = width || 300;

    /**
     * The height of this canvas.
     * @property height
     * @type {Number}
     */
    this.height = this.view.height = height || 150;


    /**
     * The context attributes for initializing the GL state. This might include
     * anti-aliasing, alpha settings, verison, and so forth.
     * 
     * @property {Object} contextAttributes 
     */
    this.contextAttributes = contextAttributes;
    
    /**
     * Whether this context is 'valid', i.e. renderable. A context that has been lost
     * (and not yet restored) or destroyed is invalid.
     * 
     * @property {Boolean} valid
     */
    this.valid = false;

    /**
     * A signal dispatched when GL context is lost. 
     * 
     * The first argument passed to the listener is the WebGLContext
     * managing the context loss.
     * 
     * @event {Signal} lost
     */
    this.lost = new Signal();

    /**
     * A signal dispatched when GL context is restored, after all the managed
     * objects have been recreated.
     *
     * The first argument passed to the listener is the WebGLContext
     * which managed the restoration.
     *
     * This does not gaurentee that all objects will be renderable.
     * For example, a Texture with an ImageProvider may still be loading
     * asynchronously.   
     * 
     * @event {Signal} restored
     */
    this.restored = new Signal(); 
    
    //setup context lost and restore listeners
    this.view.addEventListener("webglcontextlost", function (ev) {
      ev.preventDefault();
      this._contextLost(ev);
    }.bind(this));
    this.view.addEventListener("webglcontextrestored", function (ev) {
      ev.preventDefault();
      this._contextRestored(ev);
    }.bind(this));
      
    if (!this.valid) //would only be valid if WebGLRenderingContext was passed 
      this._initContext();

    this.resize(this.width, this.height);
  },
  
  _initContext: function() {
    var err = "";
    this.valid = false;

    try {
      this.gl = (this.view.getContext('webgl', this.contextAttributes) 
            || this.view.getContext('experimental-webgl', this.contextAttributes));
    } catch (e) {
      this.gl = null;
    }

    if (this.gl) {
      this.valid = true;
    } else {
      throw "WebGL Context Not Supported -- try enabling it or using a different browser";
    } 
  },

  /**
   * Updates the width and height of this WebGL context, resizes
   * the canvas view, and calls gl.viewport() with the new size.
   * 
   * @param  {Number} width  the new width
   * @param  {Number} height the new height
   */
  resize: function(width, height) {
    this.width = width;
    this.height = height;

    this.view.width = width;
    this.view.height = height;

    var gl = this.gl;
    gl.viewport(0, 0, this.width, this.height);
  },

  /**
   * (internal use)
   * A managed object is anything with a "create" function, that will
   * restore GL state after context loss. 
   * 
   * @param {[type]} tex [description]
   */
  addManagedObject: function(obj) {
    this.managedObjects.push(obj);
  },

  /**
   * (internal use)
   * Removes a managed object from the cache. This is useful to destroy
   * a texture or shader, and have it no longer re-load on context restore.
   *
   * Returns the object that was removed, or null if it was not found in the cache.
   * 
   * @param  {Object} obj the object to be managed
   * @return {Object}     the removed object, or null
   */
  removeManagedObject: function(obj) {
    var idx = this.managedObjects.indexOf(obj);
    if (idx > -1) {
      this.managedObjects.splice(idx, 1);
      return obj;
    } 
    return null;
  },

  /**
   * Calls destroy() on each managed object, then removes references to these objects
   * and the GL rendering context. This also removes references to the view and sets
   * the context's width and height to zero.
   *
   * Attempting to use this WebGLContext or the GL rendering context after destroying it
   * will lead to undefined behaviour.
   */
  destroy: function() {
    for (var i=0; i<this.managedObjects.length; i++) {
      var obj = this.managedObjects[i];
      if (obj && typeof obj.destroy === "function")
        obj.destroy();
    }
    this.managedObjects.length = 0;
    this.valid = false;
    this.gl = null;
    this.view = null;
    this.width = this.height = 0;
  },

  _contextLost: function(ev) {
    //all textures/shaders/buffers/FBOs have been deleted... 
    //we need to re-create them on restore
    this.valid = false;

    this.lost.dispatch(this);
  },

  _contextRestored: function(ev) {
    //first, initialize the GL context again
    this._initContext();

    //now we recreate our shaders and textures
    for (var i=0; i<this.managedObjects.length; i++) {
      this.managedObjects[i].create();
    }

    //update GL viewport
    this.resize(this.width, this.height);

    this.restored.dispatch(this);
  }
});

module.exports = WebGLContext;
},{"klasse":10,"signals":12}],6:[function(require,module,exports){
var Class = require('klasse');
var Texture = require('../Texture');


var FrameBuffer = new Class({

  /**
   * Creates a new Frame Buffer Object with the given width and height.
   *
   * If width and height are non-numbers, this method expects the
   * first parameter to be a Texture object which should be acted upon. 
   * In this case, the FrameBuffer does not "own" the texture, and so it
   * won't dispose of it upon destruction. This is an advanced version of the
   * constructor that assumes the user is giving us a valid Texture that can be bound (i.e.
   * no async Image textures).
   *
   * @class  FrameBuffer
   * @constructor
   * @param  {[type]} width  [description]
   * @param  {[type]} height [description]
   * @param  {[type]} filter [description]
   * @return {[type]}        [description]
   */
  initialize: function FrameBuffer(context, width, height, format) { //TODO: depth component
    if (typeof context !== "object")
      throw "GL context not specified to FrameBuffer";
  

    /**
     * The underlying ID of the GL frame buffer object.
     *
     * @property {WebGLFramebuffer} id
     */   
    this.id = null;

    /**
     * The WebGLContext backed by this frame buffer.
     *
     * @property {WebGLContext} context
     */
    this.context = context;

    /**
     * The Texture backed by this frame buffer.
     *
     * @property {Texture} Texture
     */
    //this Texture is now managed.
    this.texture = new Texture(context, width, height, format);

    //This is maanged by WebGLContext
    this.context.addManagedObject(this);
    this.create();
  },

  /**
   * A read-only property which returns the width of the backing texture. 
   * 
   * @readOnly
   * @property width
   * @type {Number}
   */
  width: {
    get: function() {
      return this.texture.width
    }
  },

  /**
   * A read-only property which returns the height of the backing texture. 
   * 
   * @readOnly
   * @property height
   * @type {Number}
   */
  height: {
    get: function() {
      return this.texture.height;
    }
  },


  /**
   * Called during initialization to setup the frame buffer; also called on
   * context restore. Users will not need to call this directly.
   * 
   * @method create
   */
  create: function() {
    this.gl = this.context.gl; 
    var gl = this.gl;

    var tex = this.texture;

    //we assume the texture has already had create() called on it
    //since it was added as a managed object prior to this FrameBuffer
    tex.bind();
 
    this.id = gl.createFramebuffer();
    gl.bindFramebuffer(gl.FRAMEBUFFER, this.id);

    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, tex.target, tex.id, 0);

    var result = gl.checkFramebufferStatus(gl.FRAMEBUFFER);
    if (result != gl.FRAMEBUFFER_COMPLETE) {
      this.destroy(); //destroy our resources before leaving this function..

      var err = "Framebuffer not complete";
      switch (result) {
        case gl.FRAMEBUFFER_UNSUPPORTED:
          throw new Error(err + ": unsupported");
        case gl.INCOMPLETE_DIMENSIONS:
          throw new Error(err + ": incomplete dimensions");
        case gl.INCOMPLETE_ATTACHMENT:
          throw new Error(err + ": incomplete attachment");
        case gl.INCOMPLETE_MISSING_ATTACHMENT:
          throw new Error(err + ": missing attachment");
        default:
          throw new Error(err);
      }
    }
    gl.bindFramebuffer(gl.FRAMEBUFFER, null);
  },


  /**
   * Destroys this frame buffer. Using this object after destroying it will have
   * undefined results. 
   * @method destroy
   */
  destroy: function() {
    var gl = this.gl;

    if (this.texture)
      this.texture.destroy();
    if (this.id && this.gl)
      this.gl.deleteFramebuffer(this.id);
    if (this.context)
      this.context.removeManagedObject(this);

    this.id = null;
    this.gl = null;
    this.texture = null;
    this.context = null;
  },

  /**
   * Binds this framebuffer and sets the viewport to the expected size.
   * @method begin
   */
  begin: function() {
    var gl = this.gl;
    gl.viewport(0, 0, this.texture.width, this.texture.height);
    gl.bindFramebuffer(gl.FRAMEBUFFER, this.id);
  },

  /**
   * Binds the default frame buffer (the screen) and sets the viewport back
   * to the size of the WebGLContext.
   * 
   * @method end
   */
  end: function() {
    var gl = this.gl;
    gl.viewport(0, 0, this.context.width, this.context.height);
    gl.bindFramebuffer(gl.FRAMEBUFFER, null);
  }
});

module.exports = FrameBuffer;
},{"../Texture":3,"klasse":10}],7:[function(require,module,exports){
/**
 * @module kami
 */

var Class = require('klasse');

//TODO: decouple into VBO + IBO utilities 
/**
 * A mesh class that wraps VBO and IBO.
 *
 * @class  Mesh
 */
var Mesh = new Class({


  /**
   * A write-only property which sets both vertices and indices 
   * flag to dirty or not. 
   *
   * @property dirty
   * @type {Boolean}
   * @writeOnly
   */
  dirty: {
    set: function(val) {
      this.verticesDirty = val;
      this.indicesDirty = val;
    }
  },

  /**
   * Creates a new Mesh with the provided parameters.
   *
   * If numIndices is 0 or falsy, no index buffer will be used
   * and indices will be an empty ArrayBuffer and a null indexBuffer.
   * 
   * If isStatic is true, then vertexUsage and indexUsage will
   * be set to gl.STATIC_DRAW. Otherwise they will use gl.DYNAMIC_DRAW.
   * You may want to adjust these after initialization for further control.
   * 
   * @param  {WebGLContext}  context the context for management
   * @param  {Boolean} isStatic      a hint as to whether this geometry is static
   * @param  {[type]}  numVerts      [description]
   * @param  {[type]}  numIndices    [description]
   * @param  {[type]}  vertexAttribs [description]
   * @return {[type]}                [description]
   */
  initialize: function Mesh(context, isStatic, numVerts, numIndices, vertexAttribs) {
    if (typeof context !== "object")
      throw "GL context not specified to Mesh";
    if (!numVerts)
      throw "numVerts not specified, must be > 0";

    this.context = context;
    this.gl = context.gl;
    
    this.numVerts = null;
    this.numIndices = null;
    
    this.vertices = null;
    this.indices = null;
    this.vertexBuffer = null;
    this.indexBuffer = null;

    this.verticesDirty = true;
    this.indicesDirty = true;
    this.indexUsage = null;
    this.vertexUsage = null;

    /** 
     * @property
     * @private
     */
    this._vertexAttribs = null;

    /** 
     * The stride for one vertex _in bytes_. 
     * 
     * @property {Number} vertexStride
     */
    this.vertexStride = null;

    this.numVerts = numVerts;
    this.numIndices = numIndices || 0;
    this.vertexUsage = isStatic ? this.gl.STATIC_DRAW : this.gl.DYNAMIC_DRAW;
    this.indexUsage  = isStatic ? this.gl.STATIC_DRAW : this.gl.DYNAMIC_DRAW;
    this._vertexAttribs = vertexAttribs || [];
    
    this.indicesDirty = true;
    this.verticesDirty = true;

    //determine the vertex stride based on given attributes
    var totalNumComponents = 0;
    for (var i=0; i<this._vertexAttribs.length; i++)
      totalNumComponents += this._vertexAttribs[i].offsetCount;
    this.vertexStride = totalNumComponents * 4; // in bytes

    this.vertices = new Float32Array(this.numVerts);
    this.indices = new Uint16Array(this.numIndices);

    //add this VBO to the managed cache
    this.context.addManagedObject(this);

    this.create();
  },

  //recreates the buffers on context loss
  create: function() {
    this.gl = this.context.gl;
    var gl = this.gl;
    this.vertexBuffer = gl.createBuffer();

    //ignore index buffer if we haven't specified any
    this.indexBuffer = this.numIndices > 0
          ? gl.createBuffer()
          : null;

    this.dirty = true;
  },

  destroy: function() {
    this.vertices = null;
    this.indices = null;
    if (this.vertexBuffer && this.gl)
      this.gl.deleteBuffer(this.vertexBuffer);
    if (this.indexBuffer && this.gl)
      this.gl.deleteBuffer(this.indexBuffer);
    this.vertexBuffer = null;
    this.indexBuffer = null;
    if (this.context)
      this.context.removeManagedObject(this);
    this.gl = null;
    this.context = null;
  },

  _updateBuffers: function(ignoreBind, subDataLength) {
    var gl = this.gl;

    //bind our index data, if we have any
    if (this.numIndices > 0) {
      if (!ignoreBind)
        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);

      //update the index data
      if (this.indicesDirty) {
        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.indices, this.indexUsage);
        this.indicesDirty = false;
      }
    }

    //bind our vertex data
    if (!ignoreBind)
      gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);

    //update our vertex data
    if (this.verticesDirty) {
      if (subDataLength) {
        // TODO: When decoupling VBO/IBO be sure to give better subData support..
        var view = this.vertices.subarray(0, subDataLength);
        gl.bufferSubData(gl.ARRAY_BUFFER, 0, view);
      } else {
        gl.bufferData(gl.ARRAY_BUFFER, this.vertices, this.vertexUsage);  
      }

      
      this.verticesDirty = false;
    }
  },

  draw: function(primitiveType, count, offset, subDataLength) {
    if (count === 0)
      return;

    var gl = this.gl;
    
    offset = offset || 0;

    //binds and updates our buffers. pass ignoreBind as true
    //to avoid binding unnecessarily
    this._updateBuffers(true, subDataLength);

    if (this.numIndices > 0) { 
      gl.drawElements(primitiveType, count, 
            gl.UNSIGNED_SHORT, offset * 2); //* Uint16Array.BYTES_PER_ELEMENT
    } else
      gl.drawArrays(primitiveType, offset, count);
  },

  //binds this mesh's vertex attributes for the given shader
  bind: function(shader) {
    var gl = this.gl;

    var offset = 0;
    var stride = this.vertexStride;

    //bind and update our vertex data before binding attributes
    this._updateBuffers();

    //for each attribtue
    for (var i=0; i<this._vertexAttribs.length; i++) {
      var a = this._vertexAttribs[i];

      //location of the attribute
      var loc = a.location === null 
          ? shader.getAttributeLocation(a.name)
          : a.location;

      //TODO: We may want to skip unfound attribs
      // if (loc!==0 && !loc)
      //  console.warn("WARN:", a.name, "is not enabled");

      //first, enable the vertex array
      gl.enableVertexAttribArray(loc);

      //then specify our vertex format
      gl.vertexAttribPointer(loc, a.numComponents, a.type || gl.FLOAT, 
                   a.normalize, stride, offset);

      //and increase the offset...
      offset += a.offsetCount * 4; //in bytes
    }
  },

  unbind: function(shader) {
    var gl = this.gl;

    //for each attribtue
    for (var i=0; i<this._vertexAttribs.length; i++) {
      var a = this._vertexAttribs[i];

      //location of the attribute
      var loc = a.location === null 
          ? shader.getAttributeLocation(a.name)
          : a.location;

      //first, enable the vertex array
      gl.disableVertexAttribArray(loc);
    }
  }
});

Mesh.Attrib = new Class({

  name: null,
  numComponents: null,
  location: null,
  type: null,

  /**
   * Location is optional and for advanced users that
   * want vertex arrays to match across shaders. Any non-numerical
   * value will be converted to null, and ignored. If a numerical
   * value is given, it will override the position of this attribute
   * when given to a mesh.
   * 
   * @param  {[type]} name          [description]
   * @param  {[type]} numComponents [description]
   * @param  {[type]} location      [description]
   * @return {[type]}               [description]
   */
  initialize: function(name, numComponents, location, type, normalize, offsetCount) {
    this.name = name;
    this.numComponents = numComponents;
    this.location = typeof location === "number" ? location : null;
    this.type = type;
    this.normalize = Boolean(normalize);
    this.offsetCount = typeof offsetCount === "number" ? offsetCount : this.numComponents;
  }
})


module.exports = Mesh;
},{"klasse":10}],8:[function(require,module,exports){
/**
 * @module kami
 */

var Class = require('klasse');


var ShaderProgram = new Class({
  
  /**
   * Creates a new ShaderProgram from the given source, and an optional map of attribute
   * locations as <name, index> pairs.
   *
   * _Note:_ Chrome version 31 was giving me issues with attribute locations -- you may
   * want to omit this to let the browser pick the locations for you. 
   *
   * @class  ShaderProgram
   * @constructor
   * @param  {WebGLContext} context      the context to manage this object
   * @param  {String} vertSource         the vertex shader source
   * @param  {String} fragSource         the fragment shader source
   * @param  {Object} attributeLocations the attribute locations
   */
  initialize: function ShaderProgram(context, vertSource, fragSource, attributeLocations) {
    if (!vertSource || !fragSource)
      throw "vertex and fragment shaders must be defined";
    if (typeof context !== "object")
      throw "GL context not specified to ShaderProgram";
    this.context = context;

    this.vertShader = null;
    this.fragShader = null;
    this.program = null;
    this.log = "";

    this.uniformCache = null;
    this.attributeCache = null;

    this.attributeLocations = attributeLocations;

    //We trim (ECMAScript5) so that the GLSL line numbers are
    //accurate on shader log
    this.vertSource = vertSource.trim();
    this.fragSource = fragSource.trim();

    //Adds this shader to the context, to be managed
    this.context.addManagedObject(this);

    this.create();
  },

  /** 
   * This is called during the ShaderProgram constructor,
   * and may need to be called again after context loss and restore.
   * 
   * @method  create
   */
  create: function() {
    this.gl = this.context.gl;
    this._compileShaders();
  },

  //Compiles the shaders, throwing an error if the program was invalid.
  _compileShaders: function() {
    var gl = this.gl; 
    
    this.log = "";

    this.vertShader = this._loadShader(gl.VERTEX_SHADER, this.vertSource);
    this.fragShader = this._loadShader(gl.FRAGMENT_SHADER, this.fragSource);

    if (!this.vertShader || !this.fragShader)
      throw "Error returned when calling createShader";

    this.program = gl.createProgram();

    gl.attachShader(this.program, this.vertShader);
    gl.attachShader(this.program, this.fragShader);
  
    //TODO: This seems not to be working on my OSX -- maybe a driver bug?
    if (this.attributeLocations) {
      for (var key in this.attributeLocations) {
        if (this.attributeLocations.hasOwnProperty(key)) {
          gl.bindAttribLocation(this.program, Math.floor(this.attributeLocations[key]), key);
        }
      }
    }

    gl.linkProgram(this.program); 

    this.log += gl.getProgramInfoLog(this.program) || "";

    if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {
      throw "Error linking the shader program:\n"
        + this.log;
    }

    this._fetchUniforms();
    this._fetchAttributes();
  },

  _fetchUniforms: function() {
    var gl = this.gl;

    this.uniformCache = {};

    var len = gl.getProgramParameter(this.program, gl.ACTIVE_UNIFORMS);
    if (!len) //null or zero
      return;

    for (var i=0; i<len; i++) {
      var info = gl.getActiveUniform(this.program, i);
      if (info === null) 
        continue;
      var name = info.name;
      var location = gl.getUniformLocation(this.program, name);
      
      this.uniformCache[name] = {
        size: info.size,
        type: info.type,
        location: location
      };
    }
  },

  _fetchAttributes: function() { 
    var gl = this.gl; 

    this.attributeCache = {};

    var len = gl.getProgramParameter(this.program, gl.ACTIVE_ATTRIBUTES);
    if (!len) //null or zero
      return; 

    for (var i=0; i<len; i++) {
      var info = gl.getActiveAttrib(this.program, i);
      if (info === null) 
        continue;
      var name = info.name;

      //the attrib location is a simple index
      var location = gl.getAttribLocation(this.program, name);
      
      this.attributeCache[name] = {
        size: info.size,
        type: info.type,
        location: location
      };
    }
  },

  _loadShader: function(type, source) {
    var gl = this.gl;

    var shader = gl.createShader(type);
    if (!shader) //should not occur...
      return -1;

    gl.shaderSource(shader, source);
    gl.compileShader(shader);
    
    var logResult = gl.getShaderInfoLog(shader) || "";
    if (logResult) {
      //we do this so the user knows which shader has the error
      var typeStr = (type === gl.VERTEX_SHADER) ? "vertex" : "fragment";
      logResult = "Error compiling "+ typeStr+ " shader:\n"+logResult;
    }

    this.log += logResult;

    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS) ) {
      throw this.log;
    }
    return shader;
  },

  /**
   * Called to bind this shader. Note that there is no "unbind" since
   * technically such a thing is not possible in the programmable pipeline.
   *
   * You must bind a shader before settings its uniforms.
   * 
   * @method bind
   */
  bind: function() {
    this.gl.useProgram(this.program);
  },


  /**
   * Destroys this shader and its resources. You should not try to use this
   * after destroying it.
   * @method  destroy
   */
  destroy: function() {
    if (this.context)
      this.context.removeManagedObject(this);

    if (this.gl && this.program) {
      var gl = this.gl;
      gl.detachShader(this.program, this.vertShader);
      gl.detachShader(this.program, this.fragShader);

      gl.deleteShader(this.vertShader);
      gl.deleteShader(this.fragShader);
      gl.deleteProgram(this.program);
    }
    this.attributeCache = null;
    this.uniformCache = null;
    this.vertShader = null;
    this.fragShader = null;
    this.program = null;
    this.gl = null;
    this.context = null;
  },


  /**
   * Returns the cached uniform info (size, type, location).
   * If the uniform is not found in the cache, it is assumed
   * to not exist, and this method returns null.
   *
   * This may return null even if the uniform is defined in GLSL:
   * if it is _inactive_ (i.e. not used in the program) then it may
   * be optimized out.
   *
   * @method  getUniformInfo
   * @param  {String} name the uniform name as defined in GLSL
   * @return {Object} an object containing location, size, and type
   */
  getUniformInfo: function(name) {
    return this.uniformCache[name] || null; 
  },

  /**
   * Returns the cached attribute info (size, type, location).
   * If the attribute is not found in the cache, it is assumed
   * to not exist, and this method returns null.
   *
   * This may return null even if the attribute is defined in GLSL:
   * if it is _inactive_ (i.e. not used in the program or disabled) 
   * then it may be optimized out.
   *
   * @method  getAttributeInfo
   * @param  {String} name the attribute name as defined in GLSL
   * @return {object} an object containing location, size and type
   */
  getAttributeInfo: function(name) {
    return this.attributeCache[name] || null; 
  },


  /**
   * Returns the cached uniform location object.
   * If the uniform is not found, this method returns null.
   *
   * @method  getAttributeLocation
   * @param  {String} name the uniform name as defined in GLSL
   * @return {GLint} the location object
   */
  getAttributeLocation: function(name) { //TODO: make faster, don't cache
    var info = this.getAttributeInfo(name);
    return info ? info.location : null;
  },

  /**
   * Returns the cached uniform location object, assuming it exists
   * and is active. Note that uniforms may be inactive if 
   * the GLSL compiler deemed them unused.
   *
   * @method  getUniformLocation
   * @param  {String} name the uniform name as defined in GLSL
   * @return {WebGLUniformLocation} the location object
   */
  getUniformLocation: function(name) {
    var info = this.getUniformInfo(name);
    return info ? info.location : null;
  },

  /**
   * Returns true if the uniform is active and found in this
   * compiled program. Note that uniforms may be inactive if 
   * the GLSL compiler deemed them unused.
   *
   * @method  hasUniform
   * @param  {String}  name the uniform name
   * @return {Boolean} true if the uniform is found and active
   */
  hasUniform: function(name) {
    return this.getUniformInfo(name) !== null;
  },

  /**
   * Returns true if the attribute is active and found in this
   * compiled program.
   *
   * @method  hasAttribute
   * @param  {String}  name the attribute name
   * @return {Boolean} true if the attribute is found and active
   */
  hasAttribute: function(name) {
    return this.getAttributeInfo(name) !== null;
  },

  /**
   * Returns the uniform value by name.
   *
   * @method  getUniform
   * @param  {String} name the uniform name as defined in GLSL
   * @return {any} The value of the WebGL uniform
   */
  getUniform: function(name) {
    return this.gl.getUniform(this.program, this.getUniformLocation(name));
  },

  /**
   * Returns the uniform value at the specified WebGLUniformLocation.
   *
   * @method  getUniformAt
   * @param  {WebGLUniformLocation} location the location object
   * @return {any} The value of the WebGL uniform
   */
  getUniformAt: function(location) {
    return this.gl.getUniform(this.program, location);
  },

  /**
   * A convenience method to set uniformi from the given arguments.
   * We determine which GL call to make based on the number of arguments
   * passed. For example, `setUniformi("var", 0, 1)` maps to `gl.uniform2i`.
   * 
   * @method  setUniformi
   * @param {String} name           the name of the uniform
   * @param {GLint} x  the x component for ints
   * @param {GLint} y  the y component for ivec2
   * @param {GLint} z  the z component for ivec3
   * @param {GLint} w  the w component for ivec4
   */
  setUniformi: function(name, x, y, z, w) {
    'use strict';
    var gl = this.gl;
    var loc = this.getUniformLocation(name);
    if (loc === null)
      return false;
    switch (arguments.length) {
      case 2: gl.uniform1i(loc, x); return true;
      case 3: gl.uniform2i(loc, x, y); return true;
      case 4: gl.uniform3i(loc, x, y, z); return true;
      case 5: gl.uniform4i(loc, x, y, z, w); return true;
      default:
        throw "invalid arguments to setUniformi"; 
    }
  },

  /**
   * A convenience method to set uniformf from the given arguments.
   * We determine which GL call to make based on the number of arguments
   * passed. For example, `setUniformf("var", 0, 1)` maps to `gl.uniform2f`.
   * 
   * @method  setUniformf
   * @param {String} name           the name of the uniform
   * @param {GLfloat} x  the x component for floats
   * @param {GLfloat} y  the y component for vec2
   * @param {GLfloat} z  the z component for vec3
   * @param {GLfloat} w  the w component for vec4
   */
  setUniformf: function(name, x, y, z, w) {
    'use strict';
    var gl = this.gl;
    var loc = this.getUniformLocation(name);
    if (loc === null)
      return false;
    switch (arguments.length) {
      case 2: gl.uniform1f(loc, x); return true;
      case 3: gl.uniform2f(loc, x, y); return true;
      case 4: gl.uniform3f(loc, x, y, z); return true;
      case 5: gl.uniform4f(loc, x, y, z, w); return true;
      default:
        throw "invalid arguments to setUniformf"; 
    }
  },

  //I guess we won't support sequence<GLfloat> .. whatever that is ??
  

  ///// 
  
  /**
   * A convenience method to set uniformNfv from the given ArrayBuffer.
   * We determine which GL call to make based on the length of the array 
   * buffer (for 1-4 component vectors stored in a Float32Array). To use
   * this method to upload data to uniform arrays, you need to specify the
   * 'count' parameter; i.e. the data type you are using for that array. If
   * specified, this will dictate whether to call uniform1fv, uniform2fv, etc.
   *
   * @method  setUniformfv
   * @param {String} name           the name of the uniform
   * @param {ArrayBuffer} arrayBuffer the array buffer
   * @param {Number} count            optional, the explicit data type count, e.g. 2 for vec2
   */
  setUniformfv: function(name, arrayBuffer, count) {
    'use strict';
    count = count || arrayBuffer.length;
    var gl = this.gl;
    var loc = this.getUniformLocation(name);
    if (loc === null)
      return false;
    switch (count) {
      case 1: gl.uniform1fv(loc, arrayBuffer); return true;
      case 2: gl.uniform2fv(loc, arrayBuffer); return true;
      case 3: gl.uniform3fv(loc, arrayBuffer); return true;
      case 4: gl.uniform4fv(loc, arrayBuffer); return true;
      default:
        throw "invalid arguments to setUniformf"; 
    }
  },

  /**
   * A convenience method to set uniformNiv from the given ArrayBuffer.
   * We determine which GL call to make based on the length of the array 
   * buffer (for 1-4 component vectors stored in a int array). To use
   * this method to upload data to uniform arrays, you need to specify the
   * 'count' parameter; i.e. the data type you are using for that array. If
   * specified, this will dictate whether to call uniform1fv, uniform2fv, etc.
   *
   * @method  setUniformiv
   * @param {String} name           the name of the uniform
   * @param {ArrayBuffer} arrayBuffer the array buffer
   * @param {Number} count            optional, the explicit data type count, e.g. 2 for ivec2
   */
  setUniformiv: function(name, arrayBuffer, count) {
    'use strict';
    count = count || arrayBuffer.length;
    var gl = this.gl;
    var loc = this.getUniformLocation(name);
    if (loc === null)
      return false;
    switch (count) {
      case 1: gl.uniform1iv(loc, arrayBuffer); return true;
      case 2: gl.uniform2iv(loc, arrayBuffer); return true;
      case 3: gl.uniform3iv(loc, arrayBuffer); return true;
      case 4: gl.uniform4iv(loc, arrayBuffer); return true;
      default:
        throw "invalid arguments to setUniformf"; 
    }
  },

  /**
   * This is a convenience function to pass a Matrix3 (from vecmath,
   * kami's preferred math library) or a Float32Array (e.g. gl-matrix)
   * to a shader. If mat is an object with "val", it is considered to be
   * a Matrix3, otherwise assumed to be a typed array being passed directly
   * to the shader.
   * 
   * @param {String} name the uniform name
   * @param {Matrix3|Float32Array} mat a Matrix3 or Float32Array
   * @param {Boolean} transpose whether to transpose the matrix, default false
   */
  setUniformMatrix3: function(name, mat, transpose) {
    'use strict';
    var arr = typeof mat === "object" && mat.val ? mat.val : mat;
    transpose = !!transpose; //to boolean

    var gl = this.gl;
    var loc = this.getUniformLocation(name);
    if (loc === null)
      return false;
    gl.uniformMatrix3fv(loc, transpose, arr)
  },

  /**
   * This is a convenience function to pass a Matrix4 (from vecmath,
   * kami's preferred math library) or a Float32Array (e.g. gl-matrix)
   * to a shader. If mat is an object with "val", it is considered to be
   * a Matrix4, otherwise assumed to be a typed array being passed directly
   * to the shader.
   * 
   * @param {String} name the uniform name
   * @param {Matrix4|Float32Array} mat a Matrix4 or Float32Array
   * @param {Boolean} transpose whether to transpose the matrix, default false
   */
  setUniformMatrix4: function(name, mat, transpose) {
    'use strict';
    var arr = typeof mat === "object" && mat.val ? mat.val : mat;
    transpose = !!transpose; //to boolean

    var gl = this.gl;
    var loc = this.getUniformLocation(name);
    if (loc === null)
      return false;
    gl.uniformMatrix4fv(loc, transpose, arr)
  } 
 
});

//Some default attribute names that parts of kami will use
//when creating a standard shader.
ShaderProgram.POSITION_ATTRIBUTE = "Position";
ShaderProgram.NORMAL_ATTRIBUTE = "Normal";
ShaderProgram.COLOR_ATTRIBUTE = "Color";
ShaderProgram.TEXCOORD_ATTRIBUTE = "TexCoord";

module.exports = ShaderProgram;
},{"klasse":10}],9:[function(require,module,exports){
/**
  Auto-generated Kami index file.
  Dependencies are placed on the top-level namespace, for convenience.
  Created on 2014-06-11.
*/
module.exports = {
    //core classes
    'BaseBatch':       require('./BaseBatch.js'),
    'SpriteBatch':     require('./SpriteBatch.js'),
    'Texture':         require('./Texture.js'),
    'TextureRegion':   require('./TextureRegion.js'),
    'WebGLContext':    require('./WebGLContext.js'),
    'FrameBuffer':     require('./glutils/FrameBuffer.js'),
    'Mesh':            require('./glutils/Mesh.js'),
    'ShaderProgram':   require('./glutils/ShaderProgram.js'),

    //signals dependencies
    'Signal':          require('signals').Signal,

    //klasse dependencies
    'Class':           require('klasse'),

    //number-util dependencies
    'NumberUtil':      require('number-util')
};
},{"./BaseBatch.js":1,"./SpriteBatch.js":2,"./Texture.js":3,"./TextureRegion.js":4,"./WebGLContext.js":5,"./glutils/FrameBuffer.js":6,"./glutils/Mesh.js":7,"./glutils/ShaderProgram.js":8,"klasse":10,"number-util":11,"signals":12}],10:[function(require,module,exports){
function hasGetterOrSetter(def) {
  return (!!def.get && typeof def.get === "function") || (!!def.set && typeof def.set === "function");
}

function getProperty(definition, k, isClassDescriptor) {
  //This may be a lightweight object, OR it might be a property
  //that was defined previously.
  
  //For simple class descriptors we can just assume its NOT previously defined.
  var def = isClassDescriptor 
        ? definition[k] 
        : Object.getOwnPropertyDescriptor(definition, k);

  if (!isClassDescriptor && def.value && typeof def.value === "object") {
    def = def.value;
  }


  //This might be a regular property, or it may be a getter/setter the user defined in a class.
  if ( def && hasGetterOrSetter(def) ) {
    if (typeof def.enumerable === "undefined")
      def.enumerable = true;
    if (typeof def.configurable === "undefined")
      def.configurable = true;
    return def;
  } else {
    return false;
  }
}

function hasNonConfigurable(obj, k) {
  var prop = Object.getOwnPropertyDescriptor(obj, k);
  if (!prop)
    return false;

  if (prop.value && typeof prop.value === "object")
    prop = prop.value;

  if (prop.configurable === false) 
    return true;

  return false;
}

//TODO: On create, 
//    On mixin, 

function extend(ctor, definition, isClassDescriptor, extend) {
  for (var k in definition) {
    if (!definition.hasOwnProperty(k))
      continue;

    var def = getProperty(definition, k, isClassDescriptor);

    if (def !== false) {
      //If Extends is used, we will check its prototype to see if 
      //the final variable exists.
      
      var parent = extend || ctor;
      if (hasNonConfigurable(parent.prototype, k)) {

        //just skip the final property
        if (Class.ignoreFinals)
          continue;

        //We cannot re-define a property that is configurable=false.
        //So we will consider them final and throw an error. This is by
        //default so it is clear to the developer what is happening.
        //You can set ignoreFinals to true if you need to extend a class
        //which has configurable=false; it will simply not re-define final properties.
        throw new Error("cannot override final property '"+k
              +"', set Class.ignoreFinals = true to skip");
      }

      Object.defineProperty(ctor.prototype, k, def);
    } else {
      ctor.prototype[k] = definition[k];
    }

  }
}

/**
 */
function mixin(myClass, mixins) {
  if (!mixins)
    return;

  if (!Array.isArray(mixins))
    mixins = [mixins];

  for (var i=0; i<mixins.length; i++) {
    extend(myClass, mixins[i].prototype || mixins[i]);
  }
}

/**
 * Creates a new class with the given descriptor.
 * The constructor, defined by the name `initialize`,
 * is an optional function. If unspecified, an anonymous
 * function will be used which calls the parent class (if
 * one exists). 
 *
 * You can also use `Extends` and `Mixins` to provide subclassing
 * and inheritance.
 *
 * @class  Class
 * @constructor
 * @param {Object} definition a dictionary of functions for the class
 * @example
 *
 *    var MyClass = new Class({
 *    
 *      initialize: function() {
 *        this.foo = 2.0;
 *      },
 *
 *      bar: function() {
 *        return this.foo + 5;
 *      }
 *    });
 */
function Class(definition) {
  if (!definition)
    definition = {};

  //The variable name here dictates what we see in Chrome debugger
  var initialize;
  var Extends;

  if (definition.initialize) {
    if (typeof definition.initialize !== "function")
      throw new Error("initialize must be a function");
    initialize = definition.initialize;

    //Usually we should avoid "delete" in V8 at all costs.
    //However, its unlikely to make any performance difference
    //here since we only call this on class creation (i.e. not object creation).
    delete definition.initialize;
  } else {
    if (definition.Extends) {
      var base = definition.Extends;
      initialize = function () {
        base.apply(this, arguments);
      }; 
    } else {
      initialize = function () {}; 
    }
  }

  if (definition.Extends) {
    initialize.prototype = Object.create(definition.Extends.prototype);
    initialize.prototype.constructor = initialize;
    //for getOwnPropertyDescriptor to work, we need to act
    //directly on the Extends (or Mixin)
    Extends = definition.Extends;
    delete definition.Extends;
  } else {
    initialize.prototype.constructor = initialize;
  }

  //Grab the mixins, if they are specified...
  var mixins = null;
  if (definition.Mixins) {
    mixins = definition.Mixins;
    delete definition.Mixins;
  }

  //First, mixin if we can.
  mixin(initialize, mixins);

  //Now we grab the actual definition which defines the overrides.
  extend(initialize, definition, true, Extends);

  return initialize;
};

Class.extend = extend;
Class.mixin = mixin;
Class.ignoreFinals = false;

module.exports = Class;
},{}],11:[function(require,module,exports){
var int8 = new Int8Array(4);
var int32 = new Int32Array(int8.buffer, 0, 1);
var float32 = new Float32Array(int8.buffer, 0, 1);

/**
 * A singleton for number utilities. 
 * @class NumberUtil
 */
var NumberUtil = function() {

};


/**
 * Returns a float representation of the given int bits. ArrayBuffer
 * is used for the conversion.
 *
 * @method  intBitsToFloat
 * @static
 * @param  {Number} i the int to cast
 * @return {Number}   the float
 */
NumberUtil.intBitsToFloat = function(i) {
  int32[0] = i;
  return float32[0];
};

/**
 * Returns the int bits from the given float. ArrayBuffer is used
 * for the conversion.
 *
 * @method  floatToIntBits
 * @static
 * @param  {Number} f the float to cast
 * @return {Number}   the int bits
 */
NumberUtil.floatToIntBits = function(f) {
  float32[0] = f;
  return int32[0];
};

/**
 * Encodes ABGR int as a float, with slight precision loss.
 *
 * @method  intToFloatColor
 * @static
 * @param {Number} value an ABGR packed integer
 */
NumberUtil.intToFloatColor = function(value) {
  return NumberUtil.intBitsToFloat( value & 0xfeffffff );
};

/**
 * Returns a float encoded ABGR value from the given RGBA
 * bytes (0 - 255). Useful for saving bandwidth in vertex data.
 *
 * @method  colorToFloat
 * @static
 * @param {Number} r the Red byte (0 - 255)
 * @param {Number} g the Green byte (0 - 255)
 * @param {Number} b the Blue byte (0 - 255)
 * @param {Number} a the Alpha byte (0 - 255)
 * @return {Float32}  a Float32 of the RGBA color
 */
NumberUtil.colorToFloat = function(r, g, b, a) {
  var bits = (a << 24 | b << 16 | g << 8 | r);
  return NumberUtil.intToFloatColor(bits);
};

/**
 * Returns true if the number is a power-of-two.
 *
 * @method  isPowerOfTwo
 * @param  {Number}  n the number to test
 * @return {Boolean}   true if power-of-two
 */
NumberUtil.isPowerOfTwo = function(n) {
  return (n & (n - 1)) == 0;
};

/**
 * Returns the next highest power-of-two from the specified number. 
 * 
 * @param  {Number} n the number to test
 * @return {Number}   the next highest power of two
 */
NumberUtil.nextPowerOfTwo = function(n) {
  n--;
  n |= n >> 1;
  n |= n >> 2;
  n |= n >> 4;
  n |= n >> 8;
  n |= n >> 16;
  return n+1;
};

module.exports = NumberUtil;
},{}],12:[function(require,module,exports){
/*jslint onevar:true, undef:true, newcap:true, regexp:true, bitwise:true, maxerr:50, indent:4, white:false, nomen:false, plusplus:false */
/*global define:false, require:false, exports:false, module:false, signals:false */

/** @license
 * JS Signals <http://millermedeiros.github.com/js-signals/>
 * Released under the MIT license
 * Author: Miller Medeiros
 * Version: 1.0.0 - Build: 268 (2012/11/29 05:48 PM)
 */

(function(global){

    // SignalBinding -------------------------------------------------
    //================================================================

    /**
     * Object that represents a binding between a Signal and a listener function.
     * <br />- <strong>This is an internal constructor and shouldn't be called by regular users.</strong>
     * <br />- inspired by Joa Ebert AS3 SignalBinding and Robert Penner's Slot classes.
     * @author Miller Medeiros
     * @constructor
     * @internal
     * @name SignalBinding
     * @param {Signal} signal Reference to Signal object that listener is currently bound to.
     * @param {Function} listener Handler function bound to the signal.
     * @param {boolean} isOnce If binding should be executed just once.
     * @param {Object} [listenerContext] Context on which listener will be executed (object that should represent the `this` variable inside listener function).
     * @param {Number} [priority] The priority level of the event listener. (default = 0).
     */
    function SignalBinding(signal, listener, isOnce, listenerContext, priority) {

        /**
         * Handler function bound to the signal.
         * @type Function
         * @private
         */
        this._listener = listener;

        /**
         * If binding should be executed just once.
         * @type boolean
         * @private
         */
        this._isOnce = isOnce;

        /**
         * Context on which listener will be executed (object that should represent the `this` variable inside listener function).
         * @memberOf SignalBinding.prototype
         * @name context
         * @type Object|undefined|null
         */
        this.context = listenerContext;

        /**
         * Reference to Signal object that listener is currently bound to.
         * @type Signal
         * @private
         */
        this._signal = signal;

        /**
         * Listener priority
         * @type Number
         * @private
         */
        this._priority = priority || 0;
    }

    SignalBinding.prototype = {

        /**
         * If binding is active and should be executed.
         * @type boolean
         */
        active : true,

        /**
         * Default parameters passed to listener during `Signal.dispatch` and `SignalBinding.execute`. (curried parameters)
         * @type Array|null
         */
        params : null,

        /**
         * Call listener passing arbitrary parameters.
         * <p>If binding was added using `Signal.addOnce()` it will be automatically removed from signal dispatch queue, this method is used internally for the signal dispatch.</p>
         * @param {Array} [paramsArr] Array of parameters that should be passed to the listener
         * @return {*} Value returned by the listener.
         */
        execute : function (paramsArr) {
            var handlerReturn, params;
            if (this.active && !!this._listener) {
                params = this.params? this.params.concat(paramsArr) : paramsArr;
                handlerReturn = this._listener.apply(this.context, params);
                if (this._isOnce) {
                    this.detach();
                }
            }
            return handlerReturn;
        },

        /**
         * Detach binding from signal.
         * - alias to: mySignal.remove(myBinding.getListener());
         * @return {Function|null} Handler function bound to the signal or `null` if binding was previously detached.
         */
        detach : function () {
            return this.isBound()? this._signal.remove(this._listener, this.context) : null;
        },

        /**
         * @return {Boolean} `true` if binding is still bound to the signal and have a listener.
         */
        isBound : function () {
            return (!!this._signal && !!this._listener);
        },

        /**
         * @return {boolean} If SignalBinding will only be executed once.
         */
        isOnce : function () {
            return this._isOnce;
        },

        /**
         * @return {Function} Handler function bound to the signal.
         */
        getListener : function () {
            return this._listener;
        },

        /**
         * @return {Signal} Signal that listener is currently bound to.
         */
        getSignal : function () {
            return this._signal;
        },

        /**
         * Delete instance properties
         * @private
         */
        _destroy : function () {
            delete this._signal;
            delete this._listener;
            delete this.context;
        },

        /**
         * @return {string} String representation of the object.
         */
        toString : function () {
            return '[SignalBinding isOnce:' + this._isOnce +', isBound:'+ this.isBound() +', active:' + this.active + ']';
        }

    };


/*global SignalBinding:false*/

    // Signal --------------------------------------------------------
    //================================================================

    function validateListener(listener, fnName) {
        if (typeof listener !== 'function') {
            throw new Error( 'listener is a required param of {fn}() and should be a Function.'.replace('{fn}', fnName) );
        }
    }

    /**
     * Custom event broadcaster
     * <br />- inspired by Robert Penner's AS3 Signals.
     * @name Signal
     * @author Miller Medeiros
     * @constructor
     */
    function Signal() {
        /**
         * @type Array.<SignalBinding>
         * @private
         */
        this._bindings = [];
        this._prevParams = null;

        // enforce dispatch to aways work on same context (#47)
        var self = this;
        this.dispatch = function(){
            Signal.prototype.dispatch.apply(self, arguments);
        };
    }

    Signal.prototype = {

        /**
         * Signals Version Number
         * @type String
         * @const
         */
        VERSION : '1.0.0',

        /**
         * If Signal should keep record of previously dispatched parameters and
         * automatically execute listener during `add()`/`addOnce()` if Signal was
         * already dispatched before.
         * @type boolean
         */
        memorize : false,

        /**
         * @type boolean
         * @private
         */
        _shouldPropagate : true,

        /**
         * If Signal is active and should broadcast events.
         * <p><strong>IMPORTANT:</strong> Setting this property during a dispatch will only affect the next dispatch, if you want to stop the propagation of a signal use `halt()` instead.</p>
         * @type boolean
         */
        active : true,

        /**
         * @param {Function} listener
         * @param {boolean} isOnce
         * @param {Object} [listenerContext]
         * @param {Number} [priority]
         * @return {SignalBinding}
         * @private
         */
        _registerListener : function (listener, isOnce, listenerContext, priority) {

            var prevIndex = this._indexOfListener(listener, listenerContext),
                binding;

            if (prevIndex !== -1) {
                binding = this._bindings[prevIndex];
                if (binding.isOnce() !== isOnce) {
                    throw new Error('You cannot add'+ (isOnce? '' : 'Once') +'() then add'+ (!isOnce? '' : 'Once') +'() the same listener without removing the relationship first.');
                }
            } else {
                binding = new SignalBinding(this, listener, isOnce, listenerContext, priority);
                this._addBinding(binding);
            }

            if(this.memorize && this._prevParams){
                binding.execute(this._prevParams);
            }

            return binding;
        },

        /**
         * @param {SignalBinding} binding
         * @private
         */
        _addBinding : function (binding) {
            //simplified insertion sort
            var n = this._bindings.length;
            do { --n; } while (this._bindings[n] && binding._priority <= this._bindings[n]._priority);
            this._bindings.splice(n + 1, 0, binding);
        },

        /**
         * @param {Function} listener
         * @return {number}
         * @private
         */
        _indexOfListener : function (listener, context) {
            var n = this._bindings.length,
                cur;
            while (n--) {
                cur = this._bindings[n];
                if (cur._listener === listener && cur.context === context) {
                    return n;
                }
            }
            return -1;
        },

        /**
         * Check if listener was attached to Signal.
         * @param {Function} listener
         * @param {Object} [context]
         * @return {boolean} if Signal has the specified listener.
         */
        has : function (listener, context) {
            return this._indexOfListener(listener, context) !== -1;
        },

        /**
         * Add a listener to the signal.
         * @param {Function} listener Signal handler function.
         * @param {Object} [listenerContext] Context on which listener will be executed (object that should represent the `this` variable inside listener function).
         * @param {Number} [priority] The priority level of the event listener. Listeners with higher priority will be executed before listeners with lower priority. Listeners with same priority level will be executed at the same order as they were added. (default = 0)
         * @return {SignalBinding} An Object representing the binding between the Signal and listener.
         */
        add : function (listener, listenerContext, priority) {
            validateListener(listener, 'add');
            return this._registerListener(listener, false, listenerContext, priority);
        },

        /**
         * Add listener to the signal that should be removed after first execution (will be executed only once).
         * @param {Function} listener Signal handler function.
         * @param {Object} [listenerContext] Context on which listener will be executed (object that should represent the `this` variable inside listener function).
         * @param {Number} [priority] The priority level of the event listener. Listeners with higher priority will be executed before listeners with lower priority. Listeners with same priority level will be executed at the same order as they were added. (default = 0)
         * @return {SignalBinding} An Object representing the binding between the Signal and listener.
         */
        addOnce : function (listener, listenerContext, priority) {
            validateListener(listener, 'addOnce');
            return this._registerListener(listener, true, listenerContext, priority);
        },

        /**
         * Remove a single listener from the dispatch queue.
         * @param {Function} listener Handler function that should be removed.
         * @param {Object} [context] Execution context (since you can add the same handler multiple times if executing in a different context).
         * @return {Function} Listener handler function.
         */
        remove : function (listener, context) {
            validateListener(listener, 'remove');

            var i = this._indexOfListener(listener, context);
            if (i !== -1) {
                this._bindings[i]._destroy(); //no reason to a SignalBinding exist if it isn't attached to a signal
                this._bindings.splice(i, 1);
            }
            return listener;
        },

        /**
         * Remove all listeners from the Signal.
         */
        removeAll : function () {
            var n = this._bindings.length;
            while (n--) {
                this._bindings[n]._destroy();
            }
            this._bindings.length = 0;
        },

        /**
         * @return {number} Number of listeners attached to the Signal.
         */
        getNumListeners : function () {
            return this._bindings.length;
        },

        /**
         * Stop propagation of the event, blocking the dispatch to next listeners on the queue.
         * <p><strong>IMPORTANT:</strong> should be called only during signal dispatch, calling it before/after dispatch won't affect signal broadcast.</p>
         * @see Signal.prototype.disable
         */
        halt : function () {
            this._shouldPropagate = false;
        },

        /**
         * Dispatch/Broadcast Signal to all listeners added to the queue.
         * @param {...*} [params] Parameters that should be passed to each handler.
         */
        dispatch : function (params) {
            if (! this.active) {
                return;
            }

            var paramsArr = Array.prototype.slice.call(arguments),
                n = this._bindings.length,
                bindings;

            if (this.memorize) {
                this._prevParams = paramsArr;
            }

            if (! n) {
                //should come after memorize
                return;
            }

            bindings = this._bindings.slice(); //clone array in case add/remove items during dispatch
            this._shouldPropagate = true; //in case `halt` was called before dispatch or during the previous dispatch.

            //execute all callbacks until end of the list or until a callback returns `false` or stops propagation
            //reverse loop since listeners with higher priority will be added at the end of the list
            do { n--; } while (bindings[n] && this._shouldPropagate && bindings[n].execute(paramsArr) !== false);
        },

        /**
         * Forget memorized arguments.
         * @see Signal.memorize
         */
        forget : function(){
            this._prevParams = null;
        },

        /**
         * Remove all bindings from signal and destroy any reference to external objects (destroy Signal object).
         * <p><strong>IMPORTANT:</strong> calling any method on the signal instance after calling dispose will throw errors.</p>
         */
        dispose : function () {
            this.removeAll();
            delete this._bindings;
            delete this._prevParams;
        },

        /**
         * @return {string} String representation of the object.
         */
        toString : function () {
            return '[Signal active:'+ this.active +' numListeners:'+ this.getNumListeners() +']';
        }

    };


    // Namespace -----------------------------------------------------
    //================================================================

    /**
     * Signals namespace
     * @namespace
     * @name signals
     */
    var signals = Signal;

    /**
     * Custom event broadcaster
     * @see Signal
     */
    // alias for backwards compatibility (see #gh-44)
    signals.Signal = Signal;



    //exports to multiple environments
    if(typeof define === 'function' && define.amd){ //AMD
        define(function () { return signals; });
    } else if (typeof module !== 'undefined' && module.exports){ //node
        module.exports = signals;
    } else { //browser
        //use string because of Google closure compiler ADVANCED_MODE
        /*jslint sub:true */
        global['signals'] = signals;
    }

}(this));

},{}]},{},[9])
//@ sourceMappingURL=data:application/json;base64,
(9)
});
; 
/*!
 * jQuery JavaScript Library v1.8.2
 * http://jquery.com/
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 *
 * Copyright 2012 jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: Thu Sep 20 2012 21:13:05 GMT-0400 (Eastern Daylight Time)
 */
(function( window, undefined ) {
var
	// A central reference to the root jQuery(document)
	rootjQuery,

	// The deferred used on DOM ready
	readyList,

	// Use the correct document accordingly with window argument (sandbox)
	document = window.document,
	location = window.location,
	navigator = window.navigator,

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$,

	// Save a reference to some core methods
	core_push = Array.prototype.push,
	core_slice = Array.prototype.slice,
	core_indexOf = Array.prototype.indexOf,
	core_toString = Object.prototype.toString,
	core_hasOwn = Object.prototype.hasOwnProperty,
	core_trim = String.prototype.trim,

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {
		// The jQuery object is actually just the init constructor 'enhanced'
		return new jQuery.fn.init( selector, context, rootjQuery );
	},

	// Used for matching numbers
	core_pnum = /[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source,

	// Used for detecting and trimming whitespace
	core_rnotwhite = /\S/,
	core_rspace = /\s+/,

	// Make sure we trim BOM and NBSP (here's looking at you, Safari 5.0 and IE)
	rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	rquickExpr = /^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,

	// Match a standalone tag
	rsingleTag = /^<(\w+)\s*\/?>(?:<\/\1>|)$/,

	// JSON RegExp
	rvalidchars = /^[\],:{}\s]*$/,
	rvalidbraces = /(?:^|:|,)(?:\s*\[)+/g,
	rvalidescape = /\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g,
	rvalidtokens = /"[^"\\\r\n]*"|true|false|null|-?(?:\d\d*\.|)\d+(?:[eE][\-+]?\d+|)/g,

	// Matches dashed string for camelizing
	rmsPrefix = /^-ms-/,
	rdashAlpha = /-([\da-z])/gi,

	// Used by jQuery.camelCase as callback to replace()
	fcamelCase = function( all, letter ) {
		return ( letter + "" ).toUpperCase();
	},

	// The ready event handler and self cleanup method
	DOMContentLoaded = function() {
		if ( document.addEventListener ) {
			document.removeEventListener( "DOMContentLoaded", DOMContentLoaded, false );
			jQuery.ready();
		} else if ( document.readyState === "complete" ) {
			// we're here because readyState === "complete" in oldIE
			// which is good enough for us to call the dom ready!
			document.detachEvent( "onreadystatechange", DOMContentLoaded );
			jQuery.ready();
		}
	},

	// [[Class]] -> type pairs
	class2type = {};

jQuery.fn = jQuery.prototype = {
	constructor: jQuery,
	init: function( selector, context, rootjQuery ) {
		var match, elem, ret, doc;

		// Handle $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Handle $(DOMElement)
		if ( selector.nodeType ) {
			this.context = this[0] = selector;
			this.length = 1;
			return this;
		}

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector.charAt(0) === "<" && selector.charAt( selector.length - 1 ) === ">" && selector.length >= 3 ) {
				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && (match[1] || !context) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[1] ) {
					context = context instanceof jQuery ? context[0] : context;
					doc = ( context && context.nodeType ? context.ownerDocument || context : document );

					// scripts is true for back-compat
					selector = jQuery.parseHTML( match[1], doc, true );
					if ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) ) {
						this.attr.call( selector, context, true );
					}

					return jQuery.merge( this, selector );

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[2] );

					// Check parentNode to catch when Blackberry 4.6 returns
					// nodes that are no longer in the document #6963
					if ( elem && elem.parentNode ) {
						// Handle the case where IE and Opera return items
						// by name instead of ID
						if ( elem.id !== match[2] ) {
							return rootjQuery.find( selector );
						}

						// Otherwise, we inject the element directly into the jQuery object
						this.length = 1;
						this[0] = elem;
					}

					this.context = document;
					this.selector = selector;
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || rootjQuery ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( jQuery.isFunction( selector ) ) {
			return rootjQuery.ready( selector );
		}

		if ( selector.selector !== undefined ) {
			this.selector = selector.selector;
			this.context = selector.context;
		}

		return jQuery.makeArray( selector, this );
	},

	// Start with an empty selector
	selector: "",

	// The current version of jQuery being used
	jquery: "1.8.2",

	// The default length of a jQuery object is 0
	length: 0,

	// The number of elements contained in the matched element set
	size: function() {
		return this.length;
	},

	toArray: function() {
		return core_slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {
		return num == null ?

			// Return a 'clean' array
			this.toArray() :

			// Return just the object
			( num < 0 ? this[ this.length + num ] : this[ num ] );
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems, name, selector ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;

		ret.context = this.context;

		if ( name === "find" ) {
			ret.selector = this.selector + ( this.selector ? " " : "" ) + selector;
		} else if ( name ) {
			ret.selector = this.selector + "." + name + "(" + selector + ")";
		}

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	// (You can seed the arguments with an array of args, but this is
	// only used internally.)
	each: function( callback, args ) {
		return jQuery.each( this, callback, args );
	},

	ready: function( fn ) {
		// Add the callback
		jQuery.ready.promise().done( fn );

		return this;
	},

	eq: function( i ) {
		i = +i;
		return i === -1 ?
			this.slice( i ) :
			this.slice( i, i + 1 );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	slice: function() {
		return this.pushStack( core_slice.apply( this, arguments ),
			"slice", core_slice.call(arguments).join(",") );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map(this, function( elem, i ) {
			return callback.call( elem, i, elem );
		}));
	},

	end: function() {
		return this.prevObject || this.constructor(null);
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: core_push,
	sort: [].sort,
	splice: [].splice
};

// Give the init function the jQuery prototype for later instantiation
jQuery.fn.init.prototype = jQuery.fn;

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[0] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;
		target = arguments[1] || {};
		// skip the boolean and the target
		i = 2;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !jQuery.isFunction(target) ) {
		target = {};
	}

	// extend jQuery itself if only one argument is passed
	if ( length === i ) {
		target = this;
		--i;
	}

	for ( ; i < length; i++ ) {
		// Only deal with non-null/undefined values
		if ( (options = arguments[ i ]) != null ) {
			// Extend the base object
			for ( name in options ) {
				src = target[ name ];
				copy = options[ name ];

				// Prevent never-ending loop
				if ( target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {
					if ( copyIsArray ) {
						copyIsArray = false;
						clone = src && jQuery.isArray(src) ? src : [];

					} else {
						clone = src && jQuery.isPlainObject(src) ? src : {};
					}

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend({
	noConflict: function( deep ) {
		if ( window.$ === jQuery ) {
			window.$ = _$;
		}

		if ( deep && window.jQuery === jQuery ) {
			window.jQuery = _jQuery;
		}

		return jQuery;
	},

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Hold (or release) the ready event
	holdReady: function( hold ) {
		if ( hold ) {
			jQuery.readyWait++;
		} else {
			jQuery.ready( true );
		}
	},

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).
		if ( !document.body ) {
			return setTimeout( jQuery.ready, 1 );
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );

		// Trigger any bound ready events
		if ( jQuery.fn.trigger ) {
			jQuery( document ).trigger("ready").off("ready");
		}
	},

	// See test/unit/core.js for details concerning isFunction.
	// Since version 1.3, DOM methods and functions like alert
	// aren't supported. They return false on IE (#2968).
	isFunction: function( obj ) {
		return jQuery.type(obj) === "function";
	},

	isArray: Array.isArray || function( obj ) {
		return jQuery.type(obj) === "array";
	},

	isWindow: function( obj ) {
		return obj != null && obj == obj.window;
	},

	isNumeric: function( obj ) {
		return !isNaN( parseFloat(obj) ) && isFinite( obj );
	},

	type: function( obj ) {
		return obj == null ?
			String( obj ) :
			class2type[ core_toString.call(obj) ] || "object";
	},

	isPlainObject: function( obj ) {
		// Must be an Object.
		// Because of IE, we also have to check the presence of the constructor property.
		// Make sure that DOM nodes and window objects don't pass through, as well
		if ( !obj || jQuery.type(obj) !== "object" || obj.nodeType || jQuery.isWindow( obj ) ) {
			return false;
		}

		try {
			// Not own constructor property must be Object
			if ( obj.constructor &&
				!core_hasOwn.call(obj, "constructor") &&
				!core_hasOwn.call(obj.constructor.prototype, "isPrototypeOf") ) {
				return false;
			}
		} catch ( e ) {
			// IE8,9 Will throw exceptions on certain host objects #9897
			return false;
		}

		// Own properties are enumerated firstly, so to speed up,
		// if last one is own, then all properties are own.

		var key;
		for ( key in obj ) {}

		return key === undefined || core_hasOwn.call( obj, key );
	},

	isEmptyObject: function( obj ) {
		var name;
		for ( name in obj ) {
			return false;
		}
		return true;
	},

	error: function( msg ) {
		throw new Error( msg );
	},

	// data: string of html
	// context (optional): If specified, the fragment will be created in this context, defaults to document
	// scripts (optional): If true, will include scripts passed in the html string
	parseHTML: function( data, context, scripts ) {
		var parsed;
		if ( !data || typeof data !== "string" ) {
			return null;
		}
		if ( typeof context === "boolean" ) {
			scripts = context;
			context = 0;
		}
		context = context || document;

		// Single tag
		if ( (parsed = rsingleTag.exec( data )) ) {
			return [ context.createElement( parsed[1] ) ];
		}

		parsed = jQuery.buildFragment( [ data ], context, scripts ? null : [] );
		return jQuery.merge( [],
			(parsed.cacheable ? jQuery.clone( parsed.fragment ) : parsed.fragment).childNodes );
	},

	parseJSON: function( data ) {
		if ( !data || typeof data !== "string") {
			return null;
		}

		// Make sure leading/trailing whitespace is removed (IE can't handle it)
		data = jQuery.trim( data );

		// Attempt to parse using the native JSON parser first
		if ( window.JSON && window.JSON.parse ) {
			return window.JSON.parse( data );
		}

		// Make sure the incoming data is actual JSON
		// Logic borrowed from http://json.org/json2.js
		if ( rvalidchars.test( data.replace( rvalidescape, "@" )
			.replace( rvalidtokens, "]" )
			.replace( rvalidbraces, "")) ) {

			return ( new Function( "return " + data ) )();

		}
		jQuery.error( "Invalid JSON: " + data );
	},

	// Cross-browser xml parsing
	parseXML: function( data ) {
		var xml, tmp;
		if ( !data || typeof data !== "string" ) {
			return null;
		}
		try {
			if ( window.DOMParser ) { // Standard
				tmp = new DOMParser();
				xml = tmp.parseFromString( data , "text/xml" );
			} else { // IE
				xml = new ActiveXObject( "Microsoft.XMLDOM" );
				xml.async = "false";
				xml.loadXML( data );
			}
		} catch( e ) {
			xml = undefined;
		}
		if ( !xml || !xml.documentElement || xml.getElementsByTagName( "parsererror" ).length ) {
			jQuery.error( "Invalid XML: " + data );
		}
		return xml;
	},

	noop: function() {},

	// Evaluates a script in a global context
	// Workarounds based on findings by Jim Driscoll
	// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context
	globalEval: function( data ) {
		if ( data && core_rnotwhite.test( data ) ) {
			// We use execScript on Internet Explorer
			// We use an anonymous function so that context is window
			// rather than jQuery in Firefox
			( window.execScript || function( data ) {
				window[ "eval" ].call( window, data );
			} )( data );
		}
	},

	// Convert dashed to camelCase; used by the css and data modules
	// Microsoft forgot to hump their vendor prefix (#9572)
	camelCase: function( string ) {
		return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
	},

	nodeName: function( elem, name ) {
		return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
	},

	// args is for internal usage only
	each: function( obj, callback, args ) {
		var name,
			i = 0,
			length = obj.length,
			isObj = length === undefined || jQuery.isFunction( obj );

		if ( args ) {
			if ( isObj ) {
				for ( name in obj ) {
					if ( callback.apply( obj[ name ], args ) === false ) {
						break;
					}
				}
			} else {
				for ( ; i < length; ) {
					if ( callback.apply( obj[ i++ ], args ) === false ) {
						break;
					}
				}
			}

		// A special, fast, case for the most common use of each
		} else {
			if ( isObj ) {
				for ( name in obj ) {
					if ( callback.call( obj[ name ], name, obj[ name ] ) === false ) {
						break;
					}
				}
			} else {
				for ( ; i < length; ) {
					if ( callback.call( obj[ i ], i, obj[ i++ ] ) === false ) {
						break;
					}
				}
			}
		}

		return obj;
	},

	// Use native String.trim function wherever possible
	trim: core_trim && !core_trim.call("\uFEFF\xA0") ?
		function( text ) {
			return text == null ?
				"" :
				core_trim.call( text );
		} :

		// Otherwise use our own trimming functionality
		function( text ) {
			return text == null ?
				"" :
				( text + "" ).replace( rtrim, "" );
		},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var type,
			ret = results || [];

		if ( arr != null ) {
			// The window, strings (and functions) also have 'length'
			// Tweaked logic slightly to handle Blackberry 4.7 RegExp issues #6930
			type = jQuery.type( arr );

			if ( arr.length == null || type === "string" || type === "function" || type === "regexp" || jQuery.isWindow( arr ) ) {
				core_push.call( ret, arr );
			} else {
				jQuery.merge( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		var len;

		if ( arr ) {
			if ( core_indexOf ) {
				return core_indexOf.call( arr, elem, i );
			}

			len = arr.length;
			i = i ? i < 0 ? Math.max( 0, len + i ) : i : 0;

			for ( ; i < len; i++ ) {
				// Skip accessing in sparse arrays
				if ( i in arr && arr[ i ] === elem ) {
					return i;
				}
			}
		}

		return -1;
	},

	merge: function( first, second ) {
		var l = second.length,
			i = first.length,
			j = 0;

		if ( typeof l === "number" ) {
			for ( ; j < l; j++ ) {
				first[ i++ ] = second[ j ];
			}

		} else {
			while ( second[j] !== undefined ) {
				first[ i++ ] = second[ j++ ];
			}
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, inv ) {
		var retVal,
			ret = [],
			i = 0,
			length = elems.length;
		inv = !!inv;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			retVal = !!callback( elems[ i ], i );
			if ( inv !== retVal ) {
				ret.push( elems[ i ] );
			}
		}

		return ret;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var value, key,
			ret = [],
			i = 0,
			length = elems.length,
			// jquery objects are treated as arrays
			isArray = elems instanceof jQuery || length !== undefined && typeof length === "number" && ( ( length > 0 && elems[ 0 ] && elems[ length -1 ] ) || length === 0 || jQuery.isArray( elems ) ) ;

		// Go through the array, translating each of the items to their
		if ( isArray ) {
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret[ ret.length ] = value;
				}
			}

		// Go through every key on the object,
		} else {
			for ( key in elems ) {
				value = callback( elems[ key ], key, arg );

				if ( value != null ) {
					ret[ ret.length ] = value;
				}
			}
		}

		// Flatten any nested arrays
		return ret.concat.apply( [], ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// Bind a function to a context, optionally partially applying any
	// arguments.
	proxy: function( fn, context ) {
		var tmp, args, proxy;

		if ( typeof context === "string" ) {
			tmp = fn[ context ];
			context = fn;
			fn = tmp;
		}

		// Quick check to determine if target is callable, in the spec
		// this throws a TypeError, but we will just return undefined.
		if ( !jQuery.isFunction( fn ) ) {
			return undefined;
		}

		// Simulated bind
		args = core_slice.call( arguments, 2 );
		proxy = function() {
			return fn.apply( context, args.concat( core_slice.call( arguments ) ) );
		};

		// Set the guid of unique handler to the same of original handler, so it can be removed
		proxy.guid = fn.guid = fn.guid || jQuery.guid++;

		return proxy;
	},

	// Multifunctional method to get and set values of a collection
	// The value/s can optionally be executed if it's a function
	access: function( elems, fn, key, value, chainable, emptyGet, pass ) {
		var exec,
			bulk = key == null,
			i = 0,
			length = elems.length;

		// Sets many values
		if ( key && typeof key === "object" ) {
			for ( i in key ) {
				jQuery.access( elems, fn, i, key[i], 1, emptyGet, value );
			}
			chainable = 1;

		// Sets one value
		} else if ( value !== undefined ) {
			// Optionally, function values get executed if exec is true
			exec = pass === undefined && jQuery.isFunction( value );

			if ( bulk ) {
				// Bulk operations only iterate when executing function values
				if ( exec ) {
					exec = fn;
					fn = function( elem, key, value ) {
						return exec.call( jQuery( elem ), value );
					};

				// Otherwise they run against the entire set
				} else {
					fn.call( elems, value );
					fn = null;
				}
			}

			if ( fn ) {
				for (; i < length; i++ ) {
					fn( elems[i], key, exec ? value.call( elems[i], i, fn( elems[i], key ) ) : value, pass );
				}
			}

			chainable = 1;
		}

		return chainable ?
			elems :

			// Gets
			bulk ?
				fn.call( elems ) :
				length ? fn( elems[0], key ) : emptyGet;
	},

	now: function() {
		return ( new Date() ).getTime();
	}
});

jQuery.ready.promise = function( obj ) {
	if ( !readyList ) {

		readyList = jQuery.Deferred();

		// Catch cases where $(document).ready() is called after the browser event has already occurred.
		// we once tried to use readyState "interactive" here, but it caused issues like the one
		// discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15
		if ( document.readyState === "complete" ) {
			// Handle it asynchronously to allow scripts the opportunity to delay ready
			setTimeout( jQuery.ready, 1 );

		// Standards-based browsers support DOMContentLoaded
		} else if ( document.addEventListener ) {
			// Use the handy event callback
			document.addEventListener( "DOMContentLoaded", DOMContentLoaded, false );

			// A fallback to window.onload, that will always work
			window.addEventListener( "load", jQuery.ready, false );

		// If IE event model is used
		} else {
			// Ensure firing before onload, maybe late but safe also for iframes
			document.attachEvent( "onreadystatechange", DOMContentLoaded );

			// A fallback to window.onload, that will always work
			window.attachEvent( "onload", jQuery.ready );

			// If IE and not a frame
			// continually check to see if the document is ready
			var top = false;

			try {
				top = window.frameElement == null && document.documentElement;
			} catch(e) {}

			if ( top && top.doScroll ) {
				(function doScrollCheck() {
					if ( !jQuery.isReady ) {

						try {
							// Use the trick by Diego Perini
							// http://javascript.nwbox.com/IEContentLoaded/
							top.doScroll("left");
						} catch(e) {
							return setTimeout( doScrollCheck, 50 );
						}

						// and execute any waiting functions
						jQuery.ready();
					}
				})();
			}
		}
	}
	return readyList.promise( obj );
};

// Populate the class2type map
jQuery.each("Boolean Number String Function Array Date RegExp Object".split(" "), function(i, name) {
	class2type[ "[object " + name + "]" ] = name.toLowerCase();
});

// All jQuery objects should point back to these
rootjQuery = jQuery(document);
// String to Object options format cache
var optionsCache = {};

// Convert String-formatted options into Object-formatted ones and store in cache
function createOptions( options ) {
	var object = optionsCache[ options ] = {};
	jQuery.each( options.split( core_rspace ), function( _, flag ) {
		object[ flag ] = true;
	});
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		( optionsCache[ options ] || createOptions( options ) ) :
		jQuery.extend( {}, options );

	var // Last fire value (for non-forgettable lists)
		memory,
		// Flag to know if list was already fired
		fired,
		// Flag to know if list is currently firing
		firing,
		// First callback to fire (used internally by add and fireWith)
		firingStart,
		// End of the loop when firing
		firingLength,
		// Index of currently firing callback (modified by remove if needed)
		firingIndex,
		// Actual callback list
		list = [],
		// Stack of fire calls for repeatable lists
		stack = !options.once && [],
		// Fire callbacks
		fire = function( data ) {
			memory = options.memory && data;
			fired = true;
			firingIndex = firingStart || 0;
			firingStart = 0;
			firingLength = list.length;
			firing = true;
			for ( ; list && firingIndex < firingLength; firingIndex++ ) {
				if ( list[ firingIndex ].apply( data[ 0 ], data[ 1 ] ) === false && options.stopOnFalse ) {
					memory = false; // To prevent further calls using add
					break;
				}
			}
			firing = false;
			if ( list ) {
				if ( stack ) {
					if ( stack.length ) {
						fire( stack.shift() );
					}
				} else if ( memory ) {
					list = [];
				} else {
					self.disable();
				}
			}
		},
		// Actual Callbacks object
		self = {
			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {
					// First, we save the current length
					var start = list.length;
					(function add( args ) {
						jQuery.each( args, function( _, arg ) {
							var type = jQuery.type( arg );
							if ( type === "function" && ( !options.unique || !self.has( arg ) ) ) {
								list.push( arg );
							} else if ( arg && arg.length && type !== "string" ) {
								// Inspect recursively
								add( arg );
							}
						});
					})( arguments );
					// Do we need to add the callbacks to the
					// current firing batch?
					if ( firing ) {
						firingLength = list.length;
					// With memory, if we're not firing then
					// we should call right away
					} else if ( memory ) {
						firingStart = start;
						fire( memory );
					}
				}
				return this;
			},
			// Remove a callback from the list
			remove: function() {
				if ( list ) {
					jQuery.each( arguments, function( _, arg ) {
						var index;
						while( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
							list.splice( index, 1 );
							// Handle firing indexes
							if ( firing ) {
								if ( index <= firingLength ) {
									firingLength--;
								}
								if ( index <= firingIndex ) {
									firingIndex--;
								}
							}
						}
					});
				}
				return this;
			},
			// Control if a given callback is in the list
			has: function( fn ) {
				return jQuery.inArray( fn, list ) > -1;
			},
			// Remove all callbacks from the list
			empty: function() {
				list = [];
				return this;
			},
			// Have the list do nothing anymore
			disable: function() {
				list = stack = memory = undefined;
				return this;
			},
			// Is it disabled?
			disabled: function() {
				return !list;
			},
			// Lock the list in its current state
			lock: function() {
				stack = undefined;
				if ( !memory ) {
					self.disable();
				}
				return this;
			},
			// Is it locked?
			locked: function() {
				return !stack;
			},
			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				args = args || [];
				args = [ context, args.slice ? args.slice() : args ];
				if ( list && ( !fired || stack ) ) {
					if ( firing ) {
						stack.push( args );
					} else {
						fire( args );
					}
				}
				return this;
			},
			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},
			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};
jQuery.extend({

	Deferred: function( func ) {
		var tuples = [
				// action, add listener, listener list, final state
				[ "resolve", "done", jQuery.Callbacks("once memory"), "resolved" ],
				[ "reject", "fail", jQuery.Callbacks("once memory"), "rejected" ],
				[ "notify", "progress", jQuery.Callbacks("memory") ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				then: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;
					return jQuery.Deferred(function( newDefer ) {
						jQuery.each( tuples, function( i, tuple ) {
							var action = tuple[ 0 ],
								fn = fns[ i ];
							// deferred[ done | fail | progress ] for forwarding actions to newDefer
							deferred[ tuple[1] ]( jQuery.isFunction( fn ) ?
								function() {
									var returned = fn.apply( this, arguments );
									if ( returned && jQuery.isFunction( returned.promise ) ) {
										returned.promise()
											.done( newDefer.resolve )
											.fail( newDefer.reject )
											.progress( newDefer.notify );
									} else {
										newDefer[ action + "With" ]( this === deferred ? newDefer : this, [ returned ] );
									}
								} :
								newDefer[ action ]
							);
						});
						fns = null;
					}).promise();
				},
				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Keep pipe for back-compat
		promise.pipe = promise.then;

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 3 ];

			// promise[ done | fail | progress ] = list.add
			promise[ tuple[1] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(function() {
					// state = [ resolved | rejected ]
					state = stateString;

				// [ reject_list | resolve_list ].disable; progress_list.lock
				}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );
			}

			// deferred[ resolve | reject | notify ] = list.fire
			deferred[ tuple[0] ] = list.fire;
			deferred[ tuple[0] + "With" ] = list.fireWith;
		});

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( subordinate /* , ..., subordinateN */ ) {
		var i = 0,
			resolveValues = core_slice.call( arguments ),
			length = resolveValues.length,

			// the count of uncompleted subordinates
			remaining = length !== 1 || ( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,

			// the master Deferred. If resolveValues consist of only a single Deferred, just use that.
			deferred = remaining === 1 ? subordinate : jQuery.Deferred(),

			// Update function for both resolve and progress values
			updateFunc = function( i, contexts, values ) {
				return function( value ) {
					contexts[ i ] = this;
					values[ i ] = arguments.length > 1 ? core_slice.call( arguments ) : value;
					if( values === progressValues ) {
						deferred.notifyWith( contexts, values );
					} else if ( !( --remaining ) ) {
						deferred.resolveWith( contexts, values );
					}
				};
			},

			progressValues, progressContexts, resolveContexts;

		// add listeners to Deferred subordinates; treat others as resolved
		if ( length > 1 ) {
			progressValues = new Array( length );
			progressContexts = new Array( length );
			resolveContexts = new Array( length );
			for ( ; i < length; i++ ) {
				if ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {
					resolveValues[ i ].promise()
						.done( updateFunc( i, resolveContexts, resolveValues ) )
						.fail( deferred.reject )
						.progress( updateFunc( i, progressContexts, progressValues ) );
				} else {
					--remaining;
				}
			}
		}

		// if we're not waiting on anything, resolve the master
		if ( !remaining ) {
			deferred.resolveWith( resolveContexts, resolveValues );
		}

		return deferred.promise();
	}
});
jQuery.support = (function() {

	var support,
		all,
		a,
		select,
		opt,
		input,
		fragment,
		eventName,
		i,
		isSupported,
		clickFn,
		div = document.createElement("div");

	// Preliminary tests
	div.setAttribute( "className", "t" );
	div.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>";

	all = div.getElementsByTagName("*");
	a = div.getElementsByTagName("a")[ 0 ];
	a.style.cssText = "top:1px;float:left;opacity:.5";

	// Can't get basic test support
	if ( !all || !all.length ) {
		return {};
	}

	// First batch of supports tests
	select = document.createElement("select");
	opt = select.appendChild( document.createElement("option") );
	input = div.getElementsByTagName("input")[ 0 ];

	support = {
		// IE strips leading whitespace when .innerHTML is used
		leadingWhitespace: ( div.firstChild.nodeType === 3 ),

		// Make sure that tbody elements aren't automatically inserted
		// IE will insert them into empty tables
		tbody: !div.getElementsByTagName("tbody").length,

		// Make sure that link elements get serialized correctly by innerHTML
		// This requires a wrapper element in IE
		htmlSerialize: !!div.getElementsByTagName("link").length,

		// Get the style information from getAttribute
		// (IE uses .cssText instead)
		style: /top/.test( a.getAttribute("style") ),

		// Make sure that URLs aren't manipulated
		// (IE normalizes it by default)
		hrefNormalized: ( a.getAttribute("href") === "/a" ),

		// Make sure that element opacity exists
		// (IE uses filter instead)
		// Use a regex to work around a WebKit issue. See #5145
		opacity: /^0.5/.test( a.style.opacity ),

		// Verify style float existence
		// (IE uses styleFloat instead of cssFloat)
		cssFloat: !!a.style.cssFloat,

		// Make sure that if no value is specified for a checkbox
		// that it defaults to "on".
		// (WebKit defaults to "" instead)
		checkOn: ( input.value === "on" ),

		// Make sure that a selected-by-default option has a working selected property.
		// (WebKit defaults to false instead of true, IE too, if it's in an optgroup)
		optSelected: opt.selected,

		// Test setAttribute on camelCase class. If it works, we need attrFixes when doing get/setAttribute (ie6/7)
		getSetAttribute: div.className !== "t",

		// Tests for enctype support on a form(#6743)
		enctype: !!document.createElement("form").enctype,

		// Makes sure cloning an html5 element does not cause problems
		// Where outerHTML is undefined, this still works
		html5Clone: document.createElement("nav").cloneNode( true ).outerHTML !== "<:nav></:nav>",

		// jQuery.support.boxModel DEPRECATED in 1.8 since we don't support Quirks Mode
		boxModel: ( document.compatMode === "CSS1Compat" ),

		// Will be defined later
		submitBubbles: true,
		changeBubbles: true,
		focusinBubbles: false,
		deleteExpando: true,
		noCloneEvent: true,
		inlineBlockNeedsLayout: false,
		shrinkWrapBlocks: false,
		reliableMarginRight: true,
		boxSizingReliable: true,
		pixelPosition: false
	};

	// Make sure checked status is properly cloned
	input.checked = true;
	support.noCloneChecked = input.cloneNode( true ).checked;

	// Make sure that the options inside disabled selects aren't marked as disabled
	// (WebKit marks them as disabled)
	select.disabled = true;
	support.optDisabled = !opt.disabled;

	// Test to see if it's possible to delete an expando from an element
	// Fails in Internet Explorer
	try {
		delete div.test;
	} catch( e ) {
		support.deleteExpando = false;
	}

	if ( !div.addEventListener && div.attachEvent && div.fireEvent ) {
		div.attachEvent( "onclick", clickFn = function() {
			// Cloning a node shouldn't copy over any
			// bound event handlers (IE does this)
			support.noCloneEvent = false;
		});
		div.cloneNode( true ).fireEvent("onclick");
		div.detachEvent( "onclick", clickFn );
	}

	// Check if a radio maintains its value
	// after being appended to the DOM
	input = document.createElement("input");
	input.value = "t";
	input.setAttribute( "type", "radio" );
	support.radioValue = input.value === "t";

	input.setAttribute( "checked", "checked" );

	// #11217 - WebKit loses check when the name is after the checked attribute
	input.setAttribute( "name", "t" );

	div.appendChild( input );
	fragment = document.createDocumentFragment();
	fragment.appendChild( div.lastChild );

	// WebKit doesn't clone checked state correctly in fragments
	support.checkClone = fragment.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Check if a disconnected checkbox will retain its checked
	// value of true after appended to the DOM (IE6/7)
	support.appendChecked = input.checked;

	fragment.removeChild( input );
	fragment.appendChild( div );

	// Technique from Juriy Zaytsev
	// http://perfectionkills.com/detecting-event-support-without-browser-sniffing/
	// We only care about the case where non-standard event systems
	// are used, namely in IE. Short-circuiting here helps us to
	// avoid an eval call (in setAttribute) which can cause CSP
	// to go haywire. See: https://developer.mozilla.org/en/Security/CSP
	if ( div.attachEvent ) {
		for ( i in {
			submit: true,
			change: true,
			focusin: true
		}) {
			eventName = "on" + i;
			isSupported = ( eventName in div );
			if ( !isSupported ) {
				div.setAttribute( eventName, "return;" );
				isSupported = ( typeof div[ eventName ] === "function" );
			}
			support[ i + "Bubbles" ] = isSupported;
		}
	}

	// Run tests that need a body at doc ready
	jQuery(function() {
		var container, div, tds, marginDiv,
			divReset = "padding:0;margin:0;border:0;display:block;overflow:hidden;",
			body = document.getElementsByTagName("body")[0];

		if ( !body ) {
			// Return for frameset docs that don't have a body
			return;
		}

		container = document.createElement("div");
		container.style.cssText = "visibility:hidden;border:0;width:0;height:0;position:static;top:0;margin-top:1px";
		body.insertBefore( container, body.firstChild );

		// Construct the test element
		div = document.createElement("div");
		container.appendChild( div );

		// Check if table cells still have offsetWidth/Height when they are set
		// to display:none and there are still other visible table cells in a
		// table row; if so, offsetWidth/Height are not reliable for use when
		// determining if an element has been hidden directly using
		// display:none (it is still safe to use offsets if a parent element is
		// hidden; don safety goggles and see bug #4512 for more information).
		// (only IE 8 fails this test)
		div.innerHTML = "<table><tr><td></td><td>t</td></tr></table>";
		tds = div.getElementsByTagName("td");
		tds[ 0 ].style.cssText = "padding:0;margin:0;border:0;display:none";
		isSupported = ( tds[ 0 ].offsetHeight === 0 );

		tds[ 0 ].style.display = "";
		tds[ 1 ].style.display = "none";

		// Check if empty table cells still have offsetWidth/Height
		// (IE <= 8 fail this test)
		support.reliableHiddenOffsets = isSupported && ( tds[ 0 ].offsetHeight === 0 );

		// Check box-sizing and margin behavior
		div.innerHTML = "";
		div.style.cssText = "box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;";
		support.boxSizing = ( div.offsetWidth === 4 );
		support.doesNotIncludeMarginInBodyOffset = ( body.offsetTop !== 1 );

		// NOTE: To any future maintainer, we've window.getComputedStyle
		// because jsdom on node.js will break without it.
		if ( window.getComputedStyle ) {
			support.pixelPosition = ( window.getComputedStyle( div, null ) || {} ).top !== "1%";
			support.boxSizingReliable = ( window.getComputedStyle( div, null ) || { width: "4px" } ).width === "4px";

			// Check if div with explicit width and no margin-right incorrectly
			// gets computed margin-right based on width of container. For more
			// info see bug #3333
			// Fails in WebKit before Feb 2011 nightlies
			// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
			marginDiv = document.createElement("div");
			marginDiv.style.cssText = div.style.cssText = divReset;
			marginDiv.style.marginRight = marginDiv.style.width = "0";
			div.style.width = "1px";
			div.appendChild( marginDiv );
			support.reliableMarginRight =
				!parseFloat( ( window.getComputedStyle( marginDiv, null ) || {} ).marginRight );
		}

		if ( typeof div.style.zoom !== "undefined" ) {
			// Check if natively block-level elements act like inline-block
			// elements when setting their display to 'inline' and giving
			// them layout
			// (IE < 8 does this)
			div.innerHTML = "";
			div.style.cssText = divReset + "width:1px;padding:1px;display:inline;zoom:1";
			support.inlineBlockNeedsLayout = ( div.offsetWidth === 3 );

			// Check if elements with layout shrink-wrap their children
			// (IE 6 does this)
			div.style.display = "block";
			div.style.overflow = "visible";
			div.innerHTML = "<div></div>";
			div.firstChild.style.width = "5px";
			support.shrinkWrapBlocks = ( div.offsetWidth !== 3 );

			container.style.zoom = 1;
		}

		// Null elements to avoid leaks in IE
		body.removeChild( container );
		container = div = tds = marginDiv = null;
	});

	// Null elements to avoid leaks in IE
	fragment.removeChild( div );
	all = a = select = opt = input = fragment = div = null;

	return support;
})();
var rbrace = /(?:\{[\s\S]*\}|\[[\s\S]*\])$/,
	rmultiDash = /([A-Z])/g;

jQuery.extend({
	cache: {},

	deletedIds: [],

	// Remove at next major release (1.9/2.0)
	uuid: 0,

	// Unique for each copy of jQuery on the page
	// Non-digits removed to match rinlinejQuery
	expando: "jQuery" + ( jQuery.fn.jquery + Math.random() ).replace( /\D/g, "" ),

	// The following elements throw uncatchable exceptions if you
	// attempt to add expando properties to them.
	noData: {
		"embed": true,
		// Ban all objects except for Flash (which handle expandos)
		"object": "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",
		"applet": true
	},

	hasData: function( elem ) {
		elem = elem.nodeType ? jQuery.cache[ elem[jQuery.expando] ] : elem[ jQuery.expando ];
		return !!elem && !isEmptyDataObject( elem );
	},

	data: function( elem, name, data, pvt /* Internal Use Only */ ) {
		if ( !jQuery.acceptData( elem ) ) {
			return;
		}

		var thisCache, ret,
			internalKey = jQuery.expando,
			getByName = typeof name === "string",

			// We have to handle DOM nodes and JS objects differently because IE6-7
			// can't GC object references properly across the DOM-JS boundary
			isNode = elem.nodeType,

			// Only DOM nodes need the global jQuery cache; JS object data is
			// attached directly to the object so GC can occur automatically
			cache = isNode ? jQuery.cache : elem,

			// Only defining an ID for JS objects if its cache already exists allows
			// the code to shortcut on the same path as a DOM node with no cache
			id = isNode ? elem[ internalKey ] : elem[ internalKey ] && internalKey;

		// Avoid doing any more work than we need to when trying to get data on an
		// object that has no data at all
		if ( (!id || !cache[id] || (!pvt && !cache[id].data)) && getByName && data === undefined ) {
			return;
		}

		if ( !id ) {
			// Only DOM nodes need a new unique ID for each element since their data
			// ends up in the global cache
			if ( isNode ) {
				elem[ internalKey ] = id = jQuery.deletedIds.pop() || jQuery.guid++;
			} else {
				id = internalKey;
			}
		}

		if ( !cache[ id ] ) {
			cache[ id ] = {};

			// Avoids exposing jQuery metadata on plain JS objects when the object
			// is serialized using JSON.stringify
			if ( !isNode ) {
				cache[ id ].toJSON = jQuery.noop;
			}
		}

		// An object can be passed to jQuery.data instead of a key/value pair; this gets
		// shallow copied over onto the existing cache
		if ( typeof name === "object" || typeof name === "function" ) {
			if ( pvt ) {
				cache[ id ] = jQuery.extend( cache[ id ], name );
			} else {
				cache[ id ].data = jQuery.extend( cache[ id ].data, name );
			}
		}

		thisCache = cache[ id ];

		// jQuery data() is stored in a separate object inside the object's internal data
		// cache in order to avoid key collisions between internal data and user-defined
		// data.
		if ( !pvt ) {
			if ( !thisCache.data ) {
				thisCache.data = {};
			}

			thisCache = thisCache.data;
		}

		if ( data !== undefined ) {
			thisCache[ jQuery.camelCase( name ) ] = data;
		}

		// Check for both converted-to-camel and non-converted data property names
		// If a data property was specified
		if ( getByName ) {

			// First Try to find as-is property data
			ret = thisCache[ name ];

			// Test for null|undefined property data
			if ( ret == null ) {

				// Try to find the camelCased property
				ret = thisCache[ jQuery.camelCase( name ) ];
			}
		} else {
			ret = thisCache;
		}

		return ret;
	},

	removeData: function( elem, name, pvt /* Internal Use Only */ ) {
		if ( !jQuery.acceptData( elem ) ) {
			return;
		}

		var thisCache, i, l,

			isNode = elem.nodeType,

			// See jQuery.data for more information
			cache = isNode ? jQuery.cache : elem,
			id = isNode ? elem[ jQuery.expando ] : jQuery.expando;

		// If there is already no cache entry for this object, there is no
		// purpose in continuing
		if ( !cache[ id ] ) {
			return;
		}

		if ( name ) {

			thisCache = pvt ? cache[ id ] : cache[ id ].data;

			if ( thisCache ) {

				// Support array or space separated string names for data keys
				if ( !jQuery.isArray( name ) ) {

					// try the string as a key before any manipulation
					if ( name in thisCache ) {
						name = [ name ];
					} else {

						// split the camel cased version by spaces unless a key with the spaces exists
						name = jQuery.camelCase( name );
						if ( name in thisCache ) {
							name = [ name ];
						} else {
							name = name.split(" ");
						}
					}
				}

				for ( i = 0, l = name.length; i < l; i++ ) {
					delete thisCache[ name[i] ];
				}

				// If there is no data left in the cache, we want to continue
				// and let the cache object itself get destroyed
				if ( !( pvt ? isEmptyDataObject : jQuery.isEmptyObject )( thisCache ) ) {
					return;
				}
			}
		}

		// See jQuery.data for more information
		if ( !pvt ) {
			delete cache[ id ].data;

			// Don't destroy the parent cache unless the internal data object
			// had been the only thing left in it
			if ( !isEmptyDataObject( cache[ id ] ) ) {
				return;
			}
		}

		// Destroy the cache
		if ( isNode ) {
			jQuery.cleanData( [ elem ], true );

		// Use delete when supported for expandos or `cache` is not a window per isWindow (#10080)
		} else if ( jQuery.support.deleteExpando || cache != cache.window ) {
			delete cache[ id ];

		// When all else fails, null
		} else {
			cache[ id ] = null;
		}
	},

	// For internal use only.
	_data: function( elem, name, data ) {
		return jQuery.data( elem, name, data, true );
	},

	// A method for determining if a DOM node can handle the data expando
	acceptData: function( elem ) {
		var noData = elem.nodeName && jQuery.noData[ elem.nodeName.toLowerCase() ];

		// nodes accept data unless otherwise specified; rejection can be conditional
		return !noData || noData !== true && elem.getAttribute("classid") === noData;
	}
});

jQuery.fn.extend({
	data: function( key, value ) {
		var parts, part, attr, name, l,
			elem = this[0],
			i = 0,
			data = null;

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = jQuery.data( elem );

				if ( elem.nodeType === 1 && !jQuery._data( elem, "parsedAttrs" ) ) {
					attr = elem.attributes;
					for ( l = attr.length; i < l; i++ ) {
						name = attr[i].name;

						if ( !name.indexOf( "data-" ) ) {
							name = jQuery.camelCase( name.substring(5) );

							dataAttr( elem, name, data[ name ] );
						}
					}
					jQuery._data( elem, "parsedAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each(function() {
				jQuery.data( this, key );
			});
		}

		parts = key.split( ".", 2 );
		parts[1] = parts[1] ? "." + parts[1] : "";
		part = parts[1] + "!";

		return jQuery.access( this, function( value ) {

			if ( value === undefined ) {
				data = this.triggerHandler( "getData" + part, [ parts[0] ] );

				// Try to fetch any internally stored data first
				if ( data === undefined && elem ) {
					data = jQuery.data( elem, key );
					data = dataAttr( elem, key, data );
				}

				return data === undefined && parts[1] ?
					this.data( parts[0] ) :
					data;
			}

			parts[1] = value;
			this.each(function() {
				var self = jQuery( this );

				self.triggerHandler( "setData" + part, parts );
				jQuery.data( this, key, value );
				self.triggerHandler( "changeData" + part, parts );
			});
		}, null, value, arguments.length > 1, null, false );
	},

	removeData: function( key ) {
		return this.each(function() {
			jQuery.removeData( this, key );
		});
	}
});

function dataAttr( elem, key, data ) {
	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {

		var name = "data-" + key.replace( rmultiDash, "-$1" ).toLowerCase();

		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = data === "true" ? true :
				data === "false" ? false :
				data === "null" ? null :
				// Only convert to a number if it doesn't change the string
				+data + "" === data ? +data :
				rbrace.test( data ) ? jQuery.parseJSON( data ) :
					data;
			} catch( e ) {}

			// Make sure we set the data so it isn't changed later
			jQuery.data( elem, key, data );

		} else {
			data = undefined;
		}
	}

	return data;
}

// checks a cache object for emptiness
function isEmptyDataObject( obj ) {
	var name;
	for ( name in obj ) {

		// if the public data object is empty, the private is still empty
		if ( name === "data" && jQuery.isEmptyObject( obj[name] ) ) {
			continue;
		}
		if ( name !== "toJSON" ) {
			return false;
		}
	}

	return true;
}
jQuery.extend({
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = jQuery._data( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || jQuery.isArray(data) ) {
					queue = jQuery._data( elem, type, jQuery.makeArray(data) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// not intended for public consumption - generates a queueHooks object, or returns the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return jQuery._data( elem, key ) || jQuery._data( elem, key, {
			empty: jQuery.Callbacks("once memory").add(function() {
				jQuery.removeData( elem, type + "queue", true );
				jQuery.removeData( elem, key, true );
			})
		});
	}
});

jQuery.fn.extend({
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[0], type );
		}

		return data === undefined ?
			this :
			this.each(function() {
				var queue = jQuery.queue( this, type, data );

				// ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[0] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			});
	},
	dequeue: function( type ) {
		return this.each(function() {
			jQuery.dequeue( this, type );
		});
	},
	// Based off of the plugin by Clint Helfers, with permission.
	// http://blindsignals.com/index.php/2009/07/jquery-delay/
	delay: function( time, type ) {
		time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
		type = type || "fx";

		return this.queue( type, function( next, hooks ) {
			var timeout = setTimeout( next, time );
			hooks.stop = function() {
				clearTimeout( timeout );
			};
		});
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},
	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while( i-- ) {
			tmp = jQuery._data( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
});
var nodeHook, boolHook, fixSpecified,
	rclass = /[\t\r\n]/g,
	rreturn = /\r/g,
	rtype = /^(?:button|input)$/i,
	rfocusable = /^(?:button|input|object|select|textarea)$/i,
	rclickable = /^a(?:rea|)$/i,
	rboolean = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,
	getSetAttribute = jQuery.support.getSetAttribute;

jQuery.fn.extend({
	attr: function( name, value ) {
		return jQuery.access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each(function() {
			jQuery.removeAttr( this, name );
		});
	},

	prop: function( name, value ) {
		return jQuery.access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		name = jQuery.propFix[ name ] || name;
		return this.each(function() {
			// try/catch handles cases where IE balks (such as removing a property on window)
			try {
				this[ name ] = undefined;
				delete this[ name ];
			} catch( e ) {}
		});
	},

	addClass: function( value ) {
		var classNames, i, l, elem,
			setClass, c, cl;

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( j ) {
				jQuery( this ).addClass( value.call(this, j, this.className) );
			});
		}

		if ( value && typeof value === "string" ) {
			classNames = value.split( core_rspace );

			for ( i = 0, l = this.length; i < l; i++ ) {
				elem = this[ i ];

				if ( elem.nodeType === 1 ) {
					if ( !elem.className && classNames.length === 1 ) {
						elem.className = value;

					} else {
						setClass = " " + elem.className + " ";

						for ( c = 0, cl = classNames.length; c < cl; c++ ) {
							if ( setClass.indexOf( " " + classNames[ c ] + " " ) < 0 ) {
								setClass += classNames[ c ] + " ";
							}
						}
						elem.className = jQuery.trim( setClass );
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var removes, className, elem, c, cl, i, l;

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( j ) {
				jQuery( this ).removeClass( value.call(this, j, this.className) );
			});
		}
		if ( (value && typeof value === "string") || value === undefined ) {
			removes = ( value || "" ).split( core_rspace );

			for ( i = 0, l = this.length; i < l; i++ ) {
				elem = this[ i ];
				if ( elem.nodeType === 1 && elem.className ) {

					className = (" " + elem.className + " ").replace( rclass, " " );

					// loop over each item in the removal list
					for ( c = 0, cl = removes.length; c < cl; c++ ) {
						// Remove until there is nothing to remove,
						while ( className.indexOf(" " + removes[ c ] + " ") >= 0 ) {
							className = className.replace( " " + removes[ c ] + " " , " " );
						}
					}
					elem.className = value ? jQuery.trim( className ) : "";
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value,
			isBool = typeof stateVal === "boolean";

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( i ) {
				jQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );
			});
		}

		return this.each(function() {
			if ( type === "string" ) {
				// toggle individual class names
				var className,
					i = 0,
					self = jQuery( this ),
					state = stateVal,
					classNames = value.split( core_rspace );

				while ( (className = classNames[ i++ ]) ) {
					// check each className given, space separated list
					state = isBool ? state : !self.hasClass( className );
					self[ state ? "addClass" : "removeClass" ]( className );
				}

			} else if ( type === "undefined" || type === "boolean" ) {
				if ( this.className ) {
					// store className if set
					jQuery._data( this, "__className__", this.className );
				}

				// toggle whole className
				this.className = this.className || value === false ? "" : jQuery._data( this, "__className__" ) || "";
			}
		});
	},

	hasClass: function( selector ) {
		var className = " " + selector + " ",
			i = 0,
			l = this.length;
		for ( ; i < l; i++ ) {
			if ( this[i].nodeType === 1 && (" " + this[i].className + " ").replace(rclass, " ").indexOf( className ) >= 0 ) {
				return true;
			}
		}

		return false;
	},

	val: function( value ) {
		var hooks, ret, isFunction,
			elem = this[0];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] || jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks && "get" in hooks && (ret = hooks.get( elem, "value" )) !== undefined ) {
					return ret;
				}

				ret = elem.value;

				return typeof ret === "string" ?
					// handle most common string cases
					ret.replace(rreturn, "") :
					// handle cases where value is null/undef or number
					ret == null ? "" : ret;
			}

			return;
		}

		isFunction = jQuery.isFunction( value );

		return this.each(function( i ) {
			var val,
				self = jQuery(this);

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( isFunction ) {
				val = value.call( this, i, self.val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";
			} else if ( typeof val === "number" ) {
				val += "";
			} else if ( jQuery.isArray( val ) ) {
				val = jQuery.map(val, function ( value ) {
					return value == null ? "" : value + "";
				});
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !("set" in hooks) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		});
	}
});

jQuery.extend({
	valHooks: {
		option: {
			get: function( elem ) {
				// attributes.value is undefined in Blackberry 4.7 but
				// uses .value. See #6932
				var val = elem.attributes.value;
				return !val || val.specified ? elem.value : elem.text;
			}
		},
		select: {
			get: function( elem ) {
				var value, i, max, option,
					index = elem.selectedIndex,
					values = [],
					options = elem.options,
					one = elem.type === "select-one";

				// Nothing was selected
				if ( index < 0 ) {
					return null;
				}

				// Loop through all the selected options
				i = one ? index : 0;
				max = one ? index + 1 : options.length;
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// Don't return options that are disabled or in a disabled optgroup
					if ( option.selected && (jQuery.support.optDisabled ? !option.disabled : option.getAttribute("disabled") === null) &&
							(!option.parentNode.disabled || !jQuery.nodeName( option.parentNode, "optgroup" )) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				// Fixes Bug #2551 -- select.val() broken in IE after form.reset()
				if ( one && !values.length && options.length ) {
					return jQuery( options[ index ] ).val();
				}

				return values;
			},

			set: function( elem, value ) {
				var values = jQuery.makeArray( value );

				jQuery(elem).find("option").each(function() {
					this.selected = jQuery.inArray( jQuery(this).val(), values ) >= 0;
				});

				if ( !values.length ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	},

	// Unused in 1.8, left in so attrFn-stabbers won't die; remove in 1.9
	attrFn: {},

	attr: function( elem, name, value, pass ) {
		var ret, hooks, notxml,
			nType = elem.nodeType;

		// don't get/set attributes on text, comment and attribute nodes
		if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		if ( pass && jQuery.isFunction( jQuery.fn[ name ] ) ) {
			return jQuery( elem )[ name ]( value );
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}

		notxml = nType !== 1 || !jQuery.isXMLDoc( elem );

		// All attributes are lowercase
		// Grab necessary hook if one is defined
		if ( notxml ) {
			name = name.toLowerCase();
			hooks = jQuery.attrHooks[ name ] || ( rboolean.test( name ) ? boolHook : nodeHook );
		}

		if ( value !== undefined ) {

			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;

			} else if ( hooks && "set" in hooks && notxml && (ret = hooks.set( elem, value, name )) !== undefined ) {
				return ret;

			} else {
				elem.setAttribute( name, value + "" );
				return value;
			}

		} else if ( hooks && "get" in hooks && notxml && (ret = hooks.get( elem, name )) !== null ) {
			return ret;

		} else {

			ret = elem.getAttribute( name );

			// Non-existent attributes return null, we normalize to undefined
			return ret === null ?
				undefined :
				ret;
		}
	},

	removeAttr: function( elem, value ) {
		var propName, attrNames, name, isBool,
			i = 0;

		if ( value && elem.nodeType === 1 ) {

			attrNames = value.split( core_rspace );

			for ( ; i < attrNames.length; i++ ) {
				name = attrNames[ i ];

				if ( name ) {
					propName = jQuery.propFix[ name ] || name;
					isBool = rboolean.test( name );

					// See #9699 for explanation of this approach (setting first, then removal)
					// Do not do this for boolean attributes (see #10870)
					if ( !isBool ) {
						jQuery.attr( elem, name, "" );
					}
					elem.removeAttribute( getSetAttribute ? name : propName );

					// Set corresponding property to false for boolean attributes
					if ( isBool && propName in elem ) {
						elem[ propName ] = false;
					}
				}
			}
		}
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				// We can't allow the type property to be changed (since it causes problems in IE)
				if ( rtype.test( elem.nodeName ) && elem.parentNode ) {
					jQuery.error( "type property can't be changed" );
				} else if ( !jQuery.support.radioValue && value === "radio" && jQuery.nodeName(elem, "input") ) {
					// Setting the type on a radio button after the value resets the value in IE6-9
					// Reset value to it's default in case type is set after value
					// This is for element creation
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		},
		// Use the value property for back compat
		// Use the nodeHook for button elements in IE6/7 (#1954)
		value: {
			get: function( elem, name ) {
				if ( nodeHook && jQuery.nodeName( elem, "button" ) ) {
					return nodeHook.get( elem, name );
				}
				return name in elem ?
					elem.value :
					null;
			},
			set: function( elem, value, name ) {
				if ( nodeHook && jQuery.nodeName( elem, "button" ) ) {
					return nodeHook.set( elem, value, name );
				}
				// Does not return so that setAttribute is also used
				elem.value = value;
			}
		}
	},

	propFix: {
		tabindex: "tabIndex",
		readonly: "readOnly",
		"for": "htmlFor",
		"class": "className",
		maxlength: "maxLength",
		cellspacing: "cellSpacing",
		cellpadding: "cellPadding",
		rowspan: "rowSpan",
		colspan: "colSpan",
		usemap: "useMap",
		frameborder: "frameBorder",
		contenteditable: "contentEditable"
	},

	prop: function( elem, name, value ) {
		var ret, hooks, notxml,
			nType = elem.nodeType;

		// don't get/set properties on text, comment and attribute nodes
		if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		notxml = nType !== 1 || !jQuery.isXMLDoc( elem );

		if ( notxml ) {
			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ) {
				return ret;

			} else {
				return ( elem[ name ] = value );
			}

		} else {
			if ( hooks && "get" in hooks && (ret = hooks.get( elem, name )) !== null ) {
				return ret;

			} else {
				return elem[ name ];
			}
		}
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {
				// elem.tabIndex doesn't always return the correct value when it hasn't been explicitly set
				// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				var attributeNode = elem.getAttributeNode("tabindex");

				return attributeNode && attributeNode.specified ?
					parseInt( attributeNode.value, 10 ) :
					rfocusable.test( elem.nodeName ) || rclickable.test( elem.nodeName ) && elem.href ?
						0 :
						undefined;
			}
		}
	}
});

// Hook for boolean attributes
boolHook = {
	get: function( elem, name ) {
		// Align boolean attributes with corresponding properties
		// Fall back to attribute presence where some booleans are not supported
		var attrNode,
			property = jQuery.prop( elem, name );
		return property === true || typeof property !== "boolean" && ( attrNode = elem.getAttributeNode(name) ) && attrNode.nodeValue !== false ?
			name.toLowerCase() :
			undefined;
	},
	set: function( elem, value, name ) {
		var propName;
		if ( value === false ) {
			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			// value is true since we know at this point it's type boolean and not false
			// Set boolean attributes to the same name and set the DOM property
			propName = jQuery.propFix[ name ] || name;
			if ( propName in elem ) {
				// Only set the IDL specifically if it already exists on the element
				elem[ propName ] = true;
			}

			elem.setAttribute( name, name.toLowerCase() );
		}
		return name;
	}
};

// IE6/7 do not support getting/setting some attributes with get/setAttribute
if ( !getSetAttribute ) {

	fixSpecified = {
		name: true,
		id: true,
		coords: true
	};

	// Use this for any attribute in IE6/7
	// This fixes almost every IE6/7 issue
	nodeHook = jQuery.valHooks.button = {
		get: function( elem, name ) {
			var ret;
			ret = elem.getAttributeNode( name );
			return ret && ( fixSpecified[ name ] ? ret.value !== "" : ret.specified ) ?
				ret.value :
				undefined;
		},
		set: function( elem, value, name ) {
			// Set the existing or create a new attribute node
			var ret = elem.getAttributeNode( name );
			if ( !ret ) {
				ret = document.createAttribute( name );
				elem.setAttributeNode( ret );
			}
			return ( ret.value = value + "" );
		}
	};

	// Set width and height to auto instead of 0 on empty string( Bug #8150 )
	// This is for removals
	jQuery.each([ "width", "height" ], function( i, name ) {
		jQuery.attrHooks[ name ] = jQuery.extend( jQuery.attrHooks[ name ], {
			set: function( elem, value ) {
				if ( value === "" ) {
					elem.setAttribute( name, "auto" );
					return value;
				}
			}
		});
	});

	// Set contenteditable to false on removals(#10429)
	// Setting to empty string throws an error as an invalid value
	jQuery.attrHooks.contenteditable = {
		get: nodeHook.get,
		set: function( elem, value, name ) {
			if ( value === "" ) {
				value = "false";
			}
			nodeHook.set( elem, value, name );
		}
	};
}


// Some attributes require a special call on IE
if ( !jQuery.support.hrefNormalized ) {
	jQuery.each([ "href", "src", "width", "height" ], function( i, name ) {
		jQuery.attrHooks[ name ] = jQuery.extend( jQuery.attrHooks[ name ], {
			get: function( elem ) {
				var ret = elem.getAttribute( name, 2 );
				return ret === null ? undefined : ret;
			}
		});
	});
}

if ( !jQuery.support.style ) {
	jQuery.attrHooks.style = {
		get: function( elem ) {
			// Return undefined in the case of empty string
			// Normalize to lowercase since IE uppercases css property names
			return elem.style.cssText.toLowerCase() || undefined;
		},
		set: function( elem, value ) {
			return ( elem.style.cssText = value + "" );
		}
	};
}

// Safari mis-reports the default selected property of an option
// Accessing the parent's selectedIndex property fixes it
if ( !jQuery.support.optSelected ) {
	jQuery.propHooks.selected = jQuery.extend( jQuery.propHooks.selected, {
		get: function( elem ) {
			var parent = elem.parentNode;

			if ( parent ) {
				parent.selectedIndex;

				// Make sure that it also works with optgroups, see #5701
				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
			return null;
		}
	});
}

// IE6/7 call enctype encoding
if ( !jQuery.support.enctype ) {
	jQuery.propFix.enctype = "encoding";
}

// Radios and checkboxes getter/setter
if ( !jQuery.support.checkOn ) {
	jQuery.each([ "radio", "checkbox" ], function() {
		jQuery.valHooks[ this ] = {
			get: function( elem ) {
				// Handle the case where in Webkit "" is returned instead of "on" if a value isn't specified
				return elem.getAttribute("value") === null ? "on" : elem.value;
			}
		};
	});
}
jQuery.each([ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = jQuery.extend( jQuery.valHooks[ this ], {
		set: function( elem, value ) {
			if ( jQuery.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) >= 0 );
			}
		}
	});
});
var rformElems = /^(?:textarea|input|select)$/i,
	rtypenamespace = /^([^\.]*|)(?:\.(.+)|)$/,
	rhoverHack = /(?:^|\s)hover(\.\S+|)\b/,
	rkeyEvent = /^key/,
	rmouseEvent = /^(?:mouse|contextmenu)|click/,
	rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	hoverHack = function( events ) {
		return jQuery.event.special.hover ? events : events.replace( rhoverHack, "mouseenter$1 mouseleave$1" );
	};

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	add: function( elem, types, handler, data, selector ) {

		var elemData, eventHandle, events,
			t, tns, type, namespaces, handleObj,
			handleObjIn, handlers, special;

		// Don't attach events to noData or text/comment nodes (allow plain objects tho)
		if ( elem.nodeType === 3 || elem.nodeType === 8 || !types || !handler || !(elemData = jQuery._data( elem )) ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		events = elemData.events;
		if ( !events ) {
			elemData.events = events = {};
		}
		eventHandle = elemData.handle;
		if ( !eventHandle ) {
			elemData.handle = eventHandle = function( e ) {
				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" && (!e || jQuery.event.triggered !== e.type) ?
					jQuery.event.dispatch.apply( eventHandle.elem, arguments ) :
					undefined;
			};
			// Add elem as a property of the handle fn to prevent a memory leak with IE non-native events
			eventHandle.elem = elem;
		}

		// Handle multiple events separated by a space
		// jQuery(...).bind("mouseover mouseout", fn);
		types = jQuery.trim( hoverHack(types) ).split( " " );
		for ( t = 0; t < types.length; t++ ) {

			tns = rtypenamespace.exec( types[t] ) || [];
			type = tns[1];
			namespaces = ( tns[2] || "" ).split( "." ).sort();

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend({
				type: type,
				origType: tns[1],
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join(".")
			}, handleObjIn );

			// Init the event handler queue if we're the first
			handlers = events[ type ];
			if ( !handlers ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener/attachEvent if the special events handler returns false
				if ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {
					// Bind the global event handler to the element
					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle, false );

					} else if ( elem.attachEvent ) {
						elem.attachEvent( "on" + type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

		// Nullify elem to prevent memory leaks in IE
		elem = null;
	},

	global: {},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var t, tns, type, origType, namespaces, origCount,
			j, events, special, eventType, handleObj,
			elemData = jQuery.hasData( elem ) && jQuery._data( elem );

		if ( !elemData || !(events = elemData.events) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = jQuery.trim( hoverHack( types || "" ) ).split(" ");
		for ( t = 0; t < types.length; t++ ) {
			tns = rtypenamespace.exec( types[t] ) || [];
			type = origType = tns[1];
			namespaces = tns[2];

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector? special.delegateType : special.bindType ) || type;
			eventType = events[ type ] || [];
			origCount = eventType.length;
			namespaces = namespaces ? new RegExp("(^|\\.)" + namespaces.split(".").sort().join("\\.(?:.*\\.|)") + "(\\.|$)") : null;

			// Remove matching events
			for ( j = 0; j < eventType.length; j++ ) {
				handleObj = eventType[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					 ( !handler || handler.guid === handleObj.guid ) &&
					 ( !namespaces || namespaces.test( handleObj.namespace ) ) &&
					 ( !selector || selector === handleObj.selector || selector === "**" && handleObj.selector ) ) {
					eventType.splice( j--, 1 );

					if ( handleObj.selector ) {
						eventType.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( eventType.length === 0 && origCount !== eventType.length ) {
				if ( !special.teardown || special.teardown.call( elem, namespaces, elemData.handle ) === false ) {
					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			delete elemData.handle;

			// removeData also checks for emptiness and clears the expando if empty
			// so use it instead of delete
			jQuery.removeData( elem, "events", true );
		}
	},

	// Events that are safe to short-circuit if no handlers are attached.
	// Native DOM events should not be added, they may have inline handlers.
	customEvent: {
		"getData": true,
		"setData": true,
		"changeData": true
	},

	trigger: function( event, data, elem, onlyHandlers ) {
		// Don't do events on text and comment nodes
		if ( elem && (elem.nodeType === 3 || elem.nodeType === 8) ) {
			return;
		}

		// Event object or event type
		var cache, exclusive, i, cur, old, ontype, special, handle, eventPath, bubbleType,
			type = event.type || event,
			namespaces = [];

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf( "!" ) >= 0 ) {
			// Exclusive events trigger only for the exact event (no namespaces)
			type = type.slice(0, -1);
			exclusive = true;
		}

		if ( type.indexOf( "." ) >= 0 ) {
			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split(".");
			type = namespaces.shift();
			namespaces.sort();
		}

		if ( (!elem || jQuery.event.customEvent[ type ]) && !jQuery.event.global[ type ] ) {
			// No jQuery handlers for this event type, and it can't have inline handlers
			return;
		}

		// Caller can pass in an Event, Object, or just an event type string
		event = typeof event === "object" ?
			// jQuery.Event object
			event[ jQuery.expando ] ? event :
			// Object literal
			new jQuery.Event( type, event ) :
			// Just the event type (string)
			new jQuery.Event( type );

		event.type = type;
		event.isTrigger = true;
		event.exclusive = exclusive;
		event.namespace = namespaces.join( "." );
		event.namespace_re = event.namespace? new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)") : null;
		ontype = type.indexOf( ":" ) < 0 ? "on" + type : "";

		// Handle a global trigger
		if ( !elem ) {

			// TODO: Stop taunting the data cache; remove global events and always attach to document
			cache = jQuery.cache;
			for ( i in cache ) {
				if ( cache[ i ].events && cache[ i ].events[ type ] ) {
					jQuery.event.trigger( event, data, cache[ i ].handle.elem, true );
				}
			}
			return;
		}

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data != null ? jQuery.makeArray( data ) : [];
		data.unshift( event );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		eventPath = [[ elem, special.bindType || type ]];
		if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			cur = rfocusMorph.test( bubbleType + type ) ? elem : elem.parentNode;
			for ( old = elem; cur; cur = cur.parentNode ) {
				eventPath.push([ cur, bubbleType ]);
				old = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( old === (elem.ownerDocument || document) ) {
				eventPath.push([ old.defaultView || old.parentWindow || window, bubbleType ]);
			}
		}

		// Fire handlers on the event path
		for ( i = 0; i < eventPath.length && !event.isPropagationStopped(); i++ ) {

			cur = eventPath[i][0];
			event.type = eventPath[i][1];

			handle = ( jQuery._data( cur, "events" ) || {} )[ event.type ] && jQuery._data( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}
			// Note that this is a bare JS function and not a jQuery handler
			handle = ontype && cur[ ontype ];
			if ( handle && jQuery.acceptData( cur ) && handle.apply && handle.apply( cur, data ) === false ) {
				event.preventDefault();
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( (!special._default || special._default.apply( elem.ownerDocument, data ) === false) &&
				!(type === "click" && jQuery.nodeName( elem, "a" )) && jQuery.acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name name as the event.
				// Can't use an .isFunction() check here because IE6/7 fails that test.
				// Don't do default actions on window, that's where global variables be (#6170)
				// IE<9 dies on focus/blur to hidden element (#1486)
				if ( ontype && elem[ type ] && ((type !== "focus" && type !== "blur") || event.target.offsetWidth !== 0) && !jQuery.isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					old = elem[ ontype ];

					if ( old ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;
					elem[ type ]();
					jQuery.event.triggered = undefined;

					if ( old ) {
						elem[ ontype ] = old;
					}
				}
			}
		}

		return event.result;
	},

	dispatch: function( event ) {

		// Make a writable jQuery.Event from the native event object
		event = jQuery.event.fix( event || window.event );

		var i, j, cur, ret, selMatch, matched, matches, handleObj, sel, related,
			handlers = ( (jQuery._data( this, "events" ) || {} )[ event.type ] || []),
			delegateCount = handlers.delegateCount,
			args = core_slice.call( arguments ),
			run_all = !event.exclusive && !event.namespace,
			special = jQuery.event.special[ event.type ] || {},
			handlerQueue = [];

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[0] = event;
		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers that should run if there are delegated events
		// Avoid non-left-click bubbling in Firefox (#3861)
		if ( delegateCount && !(event.button && event.type === "click") ) {

			for ( cur = event.target; cur != this; cur = cur.parentNode || this ) {

				// Don't process clicks (ONLY) on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.disabled !== true || event.type !== "click" ) {
					selMatch = {};
					matches = [];
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];
						sel = handleObj.selector;

						if ( selMatch[ sel ] === undefined ) {
							selMatch[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) >= 0 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( selMatch[ sel ] ) {
							matches.push( handleObj );
						}
					}
					if ( matches.length ) {
						handlerQueue.push({ elem: cur, matches: matches });
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		if ( handlers.length > delegateCount ) {
			handlerQueue.push({ elem: this, matches: handlers.slice( delegateCount ) });
		}

		// Run delegates first; they may want to stop propagation beneath us
		for ( i = 0; i < handlerQueue.length && !event.isPropagationStopped(); i++ ) {
			matched = handlerQueue[ i ];
			event.currentTarget = matched.elem;

			for ( j = 0; j < matched.matches.length && !event.isImmediatePropagationStopped(); j++ ) {
				handleObj = matched.matches[ j ];

				// Triggered event must either 1) be non-exclusive and have no namespace, or
				// 2) have namespace(s) a subset or equal to those in the bound event (both can have no namespace).
				if ( run_all || (!event.namespace && !handleObj.namespace) || event.namespace_re && event.namespace_re.test( handleObj.namespace ) ) {

					event.data = handleObj.data;
					event.handleObj = handleObj;

					ret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.handler )
							.apply( matched.elem, args );

					if ( ret !== undefined ) {
						event.result = ret;
						if ( ret === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	// Includes some event props shared by KeyEvent and MouseEvent
	// *** attrChange attrName relatedNode srcElement  are not normalized, non-W3C, deprecated, will be removed in 1.8 ***
	props: "attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),

	fixHooks: {},

	keyHooks: {
		props: "char charCode key keyCode".split(" "),
		filter: function( event, original ) {

			// Add which for key events
			if ( event.which == null ) {
				event.which = original.charCode != null ? original.charCode : original.keyCode;
			}

			return event;
		}
	},

	mouseHooks: {
		props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
		filter: function( event, original ) {
			var eventDoc, doc, body,
				button = original.button,
				fromElement = original.fromElement;

			// Calculate pageX/Y if missing and clientX/Y available
			if ( event.pageX == null && original.clientX != null ) {
				eventDoc = event.target.ownerDocument || document;
				doc = eventDoc.documentElement;
				body = eventDoc.body;

				event.pageX = original.clientX + ( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && body.clientLeft || 0 );
				event.pageY = original.clientY + ( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) - ( doc && doc.clientTop  || body && body.clientTop  || 0 );
			}

			// Add relatedTarget, if necessary
			if ( !event.relatedTarget && fromElement ) {
				event.relatedTarget = fromElement === event.target ? original.toElement : fromElement;
			}

			// Add which for click: 1 === left; 2 === middle; 3 === right
			// Note: button is not normalized, so don't use it
			if ( !event.which && button !== undefined ) {
				event.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );
			}

			return event;
		}
	},

	fix: function( event ) {
		if ( event[ jQuery.expando ] ) {
			return event;
		}

		// Create a writable copy of the event object and normalize some properties
		var i, prop,
			originalEvent = event,
			fixHook = jQuery.event.fixHooks[ event.type ] || {},
			copy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;

		event = jQuery.Event( originalEvent );

		for ( i = copy.length; i; ) {
			prop = copy[ --i ];
			event[ prop ] = originalEvent[ prop ];
		}

		// Fix target property, if necessary (#1925, IE 6/7/8 & Safari2)
		if ( !event.target ) {
			event.target = originalEvent.srcElement || document;
		}

		// Target should not be a text node (#504, Safari)
		if ( event.target.nodeType === 3 ) {
			event.target = event.target.parentNode;
		}

		// For mouse/key events, metaKey==false if it's undefined (#3368, #11328; IE6/7/8)
		event.metaKey = !!event.metaKey;

		return fixHook.filter? fixHook.filter( event, originalEvent ) : event;
	},

	special: {
		load: {
			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},

		focus: {
			delegateType: "focusin"
		},
		blur: {
			delegateType: "focusout"
		},

		beforeunload: {
			setup: function( data, namespaces, eventHandle ) {
				// We only want to do this special case on windows
				if ( jQuery.isWindow( this ) ) {
					this.onbeforeunload = eventHandle;
				}
			},

			teardown: function( namespaces, eventHandle ) {
				if ( this.onbeforeunload === eventHandle ) {
					this.onbeforeunload = null;
				}
			}
		}
	},

	simulate: function( type, elem, event, bubble ) {
		// Piggyback on a donor event to simulate a different one.
		// Fake originalEvent to avoid donor's stopPropagation, but if the
		// simulated event prevents default then we do the same on the donor.
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{ type: type,
				isSimulated: true,
				originalEvent: {}
			}
		);
		if ( bubble ) {
			jQuery.event.trigger( e, null, elem );
		} else {
			jQuery.event.dispatch.call( elem, e );
		}
		if ( e.isDefaultPrevented() ) {
			event.preventDefault();
		}
	}
};

// Some plugins are using, but it's undocumented/deprecated and will be removed.
// The 1.7 special event interface should provide all the hooks needed now.
jQuery.event.handle = jQuery.event.dispatch;

jQuery.removeEvent = document.removeEventListener ?
	function( elem, type, handle ) {
		if ( elem.removeEventListener ) {
			elem.removeEventListener( type, handle, false );
		}
	} :
	function( elem, type, handle ) {
		var name = "on" + type;

		if ( elem.detachEvent ) {

			// #8545, #7054, preventing memory leaks for custom events in IE6-8 –
			// detachEvent needed property on element, by name of that event, to properly expose it to GC
			if ( typeof elem[ name ] === "undefined" ) {
				elem[ name ] = null;
			}

			elem.detachEvent( name, handle );
		}
	};

jQuery.Event = function( src, props ) {
	// Allow instantiation without the 'new' keyword
	if ( !(this instanceof jQuery.Event) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = ( src.defaultPrevented || src.returnValue === false ||
			src.getPreventDefault && src.getPreventDefault() ) ? returnTrue : returnFalse;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || jQuery.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

function returnFalse() {
	return false;
}
function returnTrue() {
	return true;
}

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	preventDefault: function() {
		this.isDefaultPrevented = returnTrue;

		var e = this.originalEvent;
		if ( !e ) {
			return;
		}

		// if preventDefault exists run it on the original event
		if ( e.preventDefault ) {
			e.preventDefault();

		// otherwise set the returnValue property of the original event to false (IE)
		} else {
			e.returnValue = false;
		}
	},
	stopPropagation: function() {
		this.isPropagationStopped = returnTrue;

		var e = this.originalEvent;
		if ( !e ) {
			return;
		}
		// if stopPropagation exists run it on the original event
		if ( e.stopPropagation ) {
			e.stopPropagation();
		}
		// otherwise set the cancelBubble property of the original event to true (IE)
		e.cancelBubble = true;
	},
	stopImmediatePropagation: function() {
		this.isImmediatePropagationStopped = returnTrue;
		this.stopPropagation();
	},
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse
};

// Create mouseenter/leave events using mouseover/out and event-time checks
jQuery.each({
	mouseenter: "mouseover",
	mouseleave: "mouseout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj,
				selector = handleObj.selector;

			// For mousenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || (related !== target && !jQuery.contains( target, related )) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
});

// IE submit delegation
if ( !jQuery.support.submitBubbles ) {

	jQuery.event.special.submit = {
		setup: function() {
			// Only need this for delegated form submit events
			if ( jQuery.nodeName( this, "form" ) ) {
				return false;
			}

			// Lazy-add a submit handler when a descendant form may potentially be submitted
			jQuery.event.add( this, "click._submit keypress._submit", function( e ) {
				// Node name check avoids a VML-related crash in IE (#9807)
				var elem = e.target,
					form = jQuery.nodeName( elem, "input" ) || jQuery.nodeName( elem, "button" ) ? elem.form : undefined;
				if ( form && !jQuery._data( form, "_submit_attached" ) ) {
					jQuery.event.add( form, "submit._submit", function( event ) {
						event._submit_bubble = true;
					});
					jQuery._data( form, "_submit_attached", true );
				}
			});
			// return undefined since we don't need an event listener
		},

		postDispatch: function( event ) {
			// If form was submitted by the user, bubble the event up the tree
			if ( event._submit_bubble ) {
				delete event._submit_bubble;
				if ( this.parentNode && !event.isTrigger ) {
					jQuery.event.simulate( "submit", this.parentNode, event, true );
				}
			}
		},

		teardown: function() {
			// Only need this for delegated form submit events
			if ( jQuery.nodeName( this, "form" ) ) {
				return false;
			}

			// Remove delegated handlers; cleanData eventually reaps submit handlers attached above
			jQuery.event.remove( this, "._submit" );
		}
	};
}

// IE change delegation and checkbox/radio fix
if ( !jQuery.support.changeBubbles ) {

	jQuery.event.special.change = {

		setup: function() {

			if ( rformElems.test( this.nodeName ) ) {
				// IE doesn't fire change on a check/radio until blur; trigger it on click
				// after a propertychange. Eat the blur-change in special.change.handle.
				// This still fires onchange a second time for check/radio after blur.
				if ( this.type === "checkbox" || this.type === "radio" ) {
					jQuery.event.add( this, "propertychange._change", function( event ) {
						if ( event.originalEvent.propertyName === "checked" ) {
							this._just_changed = true;
						}
					});
					jQuery.event.add( this, "click._change", function( event ) {
						if ( this._just_changed && !event.isTrigger ) {
							this._just_changed = false;
						}
						// Allow triggered, simulated change events (#11500)
						jQuery.event.simulate( "change", this, event, true );
					});
				}
				return false;
			}
			// Delegated event; lazy-add a change handler on descendant inputs
			jQuery.event.add( this, "beforeactivate._change", function( e ) {
				var elem = e.target;

				if ( rformElems.test( elem.nodeName ) && !jQuery._data( elem, "_change_attached" ) ) {
					jQuery.event.add( elem, "change._change", function( event ) {
						if ( this.parentNode && !event.isSimulated && !event.isTrigger ) {
							jQuery.event.simulate( "change", this.parentNode, event, true );
						}
					});
					jQuery._data( elem, "_change_attached", true );
				}
			});
		},

		handle: function( event ) {
			var elem = event.target;

			// Swallow native change events from checkbox/radio, we already triggered them above
			if ( this !== elem || event.isSimulated || event.isTrigger || (elem.type !== "radio" && elem.type !== "checkbox") ) {
				return event.handleObj.handler.apply( this, arguments );
			}
		},

		teardown: function() {
			jQuery.event.remove( this, "._change" );

			return !rformElems.test( this.nodeName );
		}
	};
}

// Create "bubbling" focus and blur events
if ( !jQuery.support.focusinBubbles ) {
	jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler while someone wants focusin/focusout
		var attaches = 0,
			handler = function( event ) {
				jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), true );
			};

		jQuery.event.special[ fix ] = {
			setup: function() {
				if ( attaches++ === 0 ) {
					document.addEventListener( orig, handler, true );
				}
			},
			teardown: function() {
				if ( --attaches === 0 ) {
					document.removeEventListener( orig, handler, true );
				}
			}
		};
	});
}

jQuery.fn.extend({

	on: function( types, selector, data, fn, /*INTERNAL*/ one ) {
		var origFn, type;

		// Types can be a map of types/handlers
		if ( typeof types === "object" ) {
			// ( types-Object, selector, data )
			if ( typeof selector !== "string" ) { // && selector != null
				// ( types-Object, data )
				data = data || selector;
				selector = undefined;
			}
			for ( type in types ) {
				this.on( type, selector, data, types[ type ], one );
			}
			return this;
		}

		if ( data == null && fn == null ) {
			// ( types, fn )
			fn = selector;
			data = selector = undefined;
		} else if ( fn == null ) {
			if ( typeof selector === "string" ) {
				// ( types, selector, fn )
				fn = data;
				data = undefined;
			} else {
				// ( types, data, fn )
				fn = data;
				data = selector;
				selector = undefined;
			}
		}
		if ( fn === false ) {
			fn = returnFalse;
		} else if ( !fn ) {
			return this;
		}

		if ( one === 1 ) {
			origFn = fn;
			fn = function( event ) {
				// Can use an empty set, since event contains the info
				jQuery().off( event );
				return origFn.apply( this, arguments );
			};
			// Use same guid so caller can remove using origFn
			fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
		}
		return this.each( function() {
			jQuery.event.add( this, types, fn, data, selector );
		});
	},
	one: function( types, selector, data, fn ) {
		return this.on( types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {
			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {
			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {
			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each(function() {
			jQuery.event.remove( this, types, fn, selector );
		});
	},

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	live: function( types, data, fn ) {
		jQuery( this.context ).on( types, this.selector, data, fn );
		return this;
	},
	die: function( types, fn ) {
		jQuery( this.context ).off( types, this.selector || "**", fn );
		return this;
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {
		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ? this.off( selector, "**" ) : this.off( types, selector || "**", fn );
	},

	trigger: function( type, data ) {
		return this.each(function() {
			jQuery.event.trigger( type, data, this );
		});
	},
	triggerHandler: function( type, data ) {
		if ( this[0] ) {
			return jQuery.event.trigger( type, data, this[0], true );
		}
	},

	toggle: function( fn ) {
		// Save reference to arguments for access in closure
		var args = arguments,
			guid = fn.guid || jQuery.guid++,
			i = 0,
			toggler = function( event ) {
				// Figure out which function to execute
				var lastToggle = ( jQuery._data( this, "lastToggle" + fn.guid ) || 0 ) % i;
				jQuery._data( this, "lastToggle" + fn.guid, lastToggle + 1 );

				// Make sure that clicks stop
				event.preventDefault();

				// and execute the function
				return args[ lastToggle ].apply( this, arguments ) || false;
			};

		// link all the functions, so any of them can unbind this click handler
		toggler.guid = guid;
		while ( i < args.length ) {
			args[ i++ ].guid = guid;
		}

		return this.click( toggler );
	},

	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
});

jQuery.each( ("blur focus focusin focusout load resize scroll unload click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup error contextmenu").split(" "), function( i, name ) {

	// Handle event binding
	jQuery.fn[ name ] = function( data, fn ) {
		if ( fn == null ) {
			fn = data;
			data = null;
		}

		return arguments.length > 0 ?
			this.on( name, null, data, fn ) :
			this.trigger( name );
	};

	if ( rkeyEvent.test( name ) ) {
		jQuery.event.fixHooks[ name ] = jQuery.event.keyHooks;
	}

	if ( rmouseEvent.test( name ) ) {
		jQuery.event.fixHooks[ name ] = jQuery.event.mouseHooks;
	}
});
/*!
 * Sizzle CSS Selector Engine
 * Copyright 2012 jQuery Foundation and other contributors
 * Released under the MIT license
 * http://sizzlejs.com/
 */
(function( window, undefined ) {

var cachedruns,
	assertGetIdNotName,
	Expr,
	getText,
	isXML,
	contains,
	compile,
	sortOrder,
	hasDuplicate,
	outermostContext,

	baseHasDuplicate = true,
	strundefined = "undefined",

	expando = ( "sizcache" + Math.random() ).replace( ".", "" ),

	Token = String,
	document = window.document,
	docElem = document.documentElement,
	dirruns = 0,
	done = 0,
	pop = [].pop,
	push = [].push,
	slice = [].slice,
	// Use a stripped-down indexOf if a native one is unavailable
	indexOf = [].indexOf || function( elem ) {
		var i = 0,
			len = this.length;
		for ( ; i < len; i++ ) {
			if ( this[i] === elem ) {
				return i;
			}
		}
		return -1;
	},

	// Augment a function for special use by Sizzle
	markFunction = function( fn, value ) {
		fn[ expando ] = value == null || value;
		return fn;
	},

	createCache = function() {
		var cache = {},
			keys = [];

		return markFunction(function( key, value ) {
			// Only keep the most recent entries
			if ( keys.push( key ) > Expr.cacheLength ) {
				delete cache[ keys.shift() ];
			}

			return (cache[ key ] = value);
		}, cache );
	},

	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),

	// Regex

	// Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",
	// http://www.w3.org/TR/css3-syntax/#characters
	characterEncoding = "(?:\\\\.|[-\\w]|[^\\x00-\\xa0])+",

	// Loosely modeled on CSS identifier characters
	// An unquoted value should be a CSS identifier (http://www.w3.org/TR/css3-selectors/#attribute-selectors)
	// Proper syntax: http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
	identifier = characterEncoding.replace( "w", "w#" ),

	// Acceptable operators http://www.w3.org/TR/selectors/#attribute-selectors
	operators = "([*^$|!~]?=)",
	attributes = "\\[" + whitespace + "*(" + characterEncoding + ")" + whitespace +
		"*(?:" + operators + whitespace + "*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|(" + identifier + ")|)|)" + whitespace + "*\\]",

	// Prefer arguments not in parens/brackets,
	//   then attribute selectors and non-pseudos (denoted by :),
	//   then anything else
	// These preferences are here to reduce the number of selectors
	//   needing tokenize in the PSEUDO preFilter
	pseudos = ":(" + characterEncoding + ")(?:\\((?:(['\"])((?:\\\\.|[^\\\\])*?)\\2|([^()[\\]]*|(?:(?:" + attributes + ")|[^:]|\\\\.)*|.*))\\)|)",

	// For matchExpr.POS and matchExpr.needsContext
	pos = ":(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace +
		"*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([\\x20\\t\\r\\n\\f>+~])" + whitespace + "*" ),
	rpseudo = new RegExp( pseudos ),

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w\-]+)|(\w+)|\.([\w\-]+))$/,

	rnot = /^:not/,
	rsibling = /[\x20\t\r\n\f]*[+~]/,
	rendsWithNot = /:not\($/,

	rheader = /h\d/i,
	rinputs = /input|select|textarea|button/i,

	rbackslash = /\\(?!\\)/g,

	matchExpr = {
		"ID": new RegExp( "^#(" + characterEncoding + ")" ),
		"CLASS": new RegExp( "^\\.(" + characterEncoding + ")" ),
		"NAME": new RegExp( "^\\[name=['\"]?(" + characterEncoding + ")['\"]?\\]" ),
		"TAG": new RegExp( "^(" + characterEncoding.replace( "w", "w*" ) + ")" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"POS": new RegExp( pos, "i" ),
		"CHILD": new RegExp( "^:(only|nth|first|last)-child(?:\\(" + whitespace +
			"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
			"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		// For use in libraries implementing .is()
		"needsContext": new RegExp( "^" + whitespace + "*[>+~]|" + pos, "i" )
	},

	// Support

	// Used for testing something on an element
	assert = function( fn ) {
		var div = document.createElement("div");

		try {
			return fn( div );
		} catch (e) {
			return false;
		} finally {
			// release memory in IE
			div = null;
		}
	},

	// Check if getElementsByTagName("*") returns only elements
	assertTagNameNoComments = assert(function( div ) {
		div.appendChild( document.createComment("") );
		return !div.getElementsByTagName("*").length;
	}),

	// Check if getAttribute returns normalized href attributes
	assertHrefNotNormalized = assert(function( div ) {
		div.innerHTML = "<a href='#'></a>";
		return div.firstChild && typeof div.firstChild.getAttribute !== strundefined &&
			div.firstChild.getAttribute("href") === "#";
	}),

	// Check if attributes should be retrieved by attribute nodes
	assertAttributes = assert(function( div ) {
		div.innerHTML = "<select></select>";
		var type = typeof div.lastChild.getAttribute("multiple");
		// IE8 returns a string for some attributes even when not present
		return type !== "boolean" && type !== "string";
	}),

	// Check if getElementsByClassName can be trusted
	assertUsableClassName = assert(function( div ) {
		// Opera can't find a second classname (in 9.6)
		div.innerHTML = "<div class='hidden e'></div><div class='hidden'></div>";
		if ( !div.getElementsByClassName || !div.getElementsByClassName("e").length ) {
			return false;
		}

		// Safari 3.2 caches class attributes and doesn't catch changes
		div.lastChild.className = "e";
		return div.getElementsByClassName("e").length === 2;
	}),

	// Check if getElementById returns elements by name
	// Check if getElementsByName privileges form controls or returns elements by ID
	assertUsableName = assert(function( div ) {
		// Inject content
		div.id = expando + 0;
		div.innerHTML = "<a name='" + expando + "'></a><div name='" + expando + "'></div>";
		docElem.insertBefore( div, docElem.firstChild );

		// Test
		var pass = document.getElementsByName &&
			// buggy browsers will return fewer than the correct 2
			document.getElementsByName( expando ).length === 2 +
			// buggy browsers will return more than the correct 0
			document.getElementsByName( expando + 0 ).length;
		assertGetIdNotName = !document.getElementById( expando );

		// Cleanup
		docElem.removeChild( div );

		return pass;
	});

// If slice is not available, provide a backup
try {
	slice.call( docElem.childNodes, 0 )[0].nodeType;
} catch ( e ) {
	slice = function( i ) {
		var elem,
			results = [];
		for ( ; (elem = this[i]); i++ ) {
			results.push( elem );
		}
		return results;
	};
}

function Sizzle( selector, context, results, seed ) {
	results = results || [];
	context = context || document;
	var match, elem, xml, m,
		nodeType = context.nodeType;

	if ( !selector || typeof selector !== "string" ) {
		return results;
	}

	if ( nodeType !== 1 && nodeType !== 9 ) {
		return [];
	}

	xml = isXML( context );

	if ( !xml && !seed ) {
		if ( (match = rquickExpr.exec( selector )) ) {
			// Speed-up: Sizzle("#ID")
			if ( (m = match[1]) ) {
				if ( nodeType === 9 ) {
					elem = context.getElementById( m );
					// Check parentNode to catch when Blackberry 4.6 returns
					// nodes that are no longer in the document #6963
					if ( elem && elem.parentNode ) {
						// Handle the case where IE, Opera, and Webkit return items
						// by name instead of ID
						if ( elem.id === m ) {
							results.push( elem );
							return results;
						}
					} else {
						return results;
					}
				} else {
					// Context is not a document
					if ( context.ownerDocument && (elem = context.ownerDocument.getElementById( m )) &&
						contains( context, elem ) && elem.id === m ) {
						results.push( elem );
						return results;
					}
				}

			// Speed-up: Sizzle("TAG")
			} else if ( match[2] ) {
				push.apply( results, slice.call(context.getElementsByTagName( selector ), 0) );
				return results;

			// Speed-up: Sizzle(".CLASS")
			} else if ( (m = match[3]) && assertUsableClassName && context.getElementsByClassName ) {
				push.apply( results, slice.call(context.getElementsByClassName( m ), 0) );
				return results;
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed, xml );
}

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	return Sizzle( expr, null, null, [ elem ] ).length > 0;
};

// Returns a function to use in pseudos for input types
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

// Returns a function to use in pseudos for buttons
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return (name === "input" || name === "button") && elem.type === type;
	};
}

// Returns a function to use in pseudos for positionals
function createPositionalPseudo( fn ) {
	return markFunction(function( argument ) {
		argument = +argument;
		return markFunction(function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ (j = matchIndexes[i]) ] ) {
					seed[j] = !(matches[j] = seed[j]);
				}
			}
		});
	});
}

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( nodeType ) {
		if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
			// Use textContent for elements
			// innerText usage removed for consistency of new lines (see #11153)
			if ( typeof elem.textContent === "string" ) {
				return elem.textContent;
			} else {
				// Traverse its children
				for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
					ret += getText( elem );
				}
			}
		} else if ( nodeType === 3 || nodeType === 4 ) {
			return elem.nodeValue;
		}
		// Do not include comment or processing instruction nodes
	} else {

		// If no nodeType, this is expected to be an array
		for ( ; (node = elem[i]); i++ ) {
			// Do not traverse comment nodes
			ret += getText( node );
		}
	}
	return ret;
};

isXML = Sizzle.isXML = function( elem ) {
	// documentElement is verified for cases where it doesn't yet exist
	// (such as loading iframes in IE - #4833)
	var documentElement = elem && (elem.ownerDocument || elem).documentElement;
	return documentElement ? documentElement.nodeName !== "HTML" : false;
};

// Element contains another
contains = Sizzle.contains = docElem.contains ?
	function( a, b ) {
		var adown = a.nodeType === 9 ? a.documentElement : a,
			bup = b && b.parentNode;
		return a === bup || !!( bup && bup.nodeType === 1 && adown.contains && adown.contains(bup) );
	} :
	docElem.compareDocumentPosition ?
	function( a, b ) {
		return b && !!( a.compareDocumentPosition( b ) & 16 );
	} :
	function( a, b ) {
		while ( (b = b.parentNode) ) {
			if ( b === a ) {
				return true;
			}
		}
		return false;
	};

Sizzle.attr = function( elem, name ) {
	var val,
		xml = isXML( elem );

	if ( !xml ) {
		name = name.toLowerCase();
	}
	if ( (val = Expr.attrHandle[ name ]) ) {
		return val( elem );
	}
	if ( xml || assertAttributes ) {
		return elem.getAttribute( name );
	}
	val = elem.getAttributeNode( name );
	return val ?
		typeof elem[ name ] === "boolean" ?
			elem[ name ] ? name : null :
			val.specified ? val.value : null :
		null;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	// IE6/7 return a modified href
	attrHandle: assertHrefNotNormalized ?
		{} :
		{
			"href": function( elem ) {
				return elem.getAttribute( "href", 2 );
			},
			"type": function( elem ) {
				return elem.getAttribute("type");
			}
		},

	find: {
		"ID": assertGetIdNotName ?
			function( id, context, xml ) {
				if ( typeof context.getElementById !== strundefined && !xml ) {
					var m = context.getElementById( id );
					// Check parentNode to catch when Blackberry 4.6 returns
					// nodes that are no longer in the document #6963
					return m && m.parentNode ? [m] : [];
				}
			} :
			function( id, context, xml ) {
				if ( typeof context.getElementById !== strundefined && !xml ) {
					var m = context.getElementById( id );

					return m ?
						m.id === id || typeof m.getAttributeNode !== strundefined && m.getAttributeNode("id").value === id ?
							[m] :
							undefined :
						[];
				}
			},

		"TAG": assertTagNameNoComments ?
			function( tag, context ) {
				if ( typeof context.getElementsByTagName !== strundefined ) {
					return context.getElementsByTagName( tag );
				}
			} :
			function( tag, context ) {
				var results = context.getElementsByTagName( tag );

				// Filter out possible comments
				if ( tag === "*" ) {
					var elem,
						tmp = [],
						i = 0;

					for ( ; (elem = results[i]); i++ ) {
						if ( elem.nodeType === 1 ) {
							tmp.push( elem );
						}
					}

					return tmp;
				}
				return results;
			},

		"NAME": assertUsableName && function( tag, context ) {
			if ( typeof context.getElementsByName !== strundefined ) {
				return context.getElementsByName( name );
			}
		},

		"CLASS": assertUsableClassName && function( className, context, xml ) {
			if ( typeof context.getElementsByClassName !== strundefined && !xml ) {
				return context.getElementsByClassName( className );
			}
		}
	},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[1] = match[1].replace( rbackslash, "" );

			// Move the given value to match[3] whether quoted or unquoted
			match[3] = ( match[4] || match[5] || "" ).replace( rbackslash, "" );

			if ( match[2] === "~=" ) {
				match[3] = " " + match[3] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {
			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				3 xn-component of xn+y argument ([+-]?\d*n|)
				4 sign of xn-component
				5 x of xn-component
				6 sign of y-component
				7 y of y-component
			*/
			match[1] = match[1].toLowerCase();

			if ( match[1] === "nth" ) {
				// nth-child requires argument
				if ( !match[2] ) {
					Sizzle.error( match[0] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[3] = +( match[3] ? match[4] + (match[5] || 1) : 2 * ( match[2] === "even" || match[2] === "odd" ) );
				match[4] = +( ( match[6] + match[7] ) || match[2] === "odd" );

			// other types prohibit arguments
			} else if ( match[2] ) {
				Sizzle.error( match[0] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var unquoted, excess;
			if ( matchExpr["CHILD"].test( match[0] ) ) {
				return null;
			}

			if ( match[3] ) {
				match[2] = match[3];
			} else if ( (unquoted = match[4]) ) {
				// Only check arguments that contain a pseudo
				if ( rpseudo.test(unquoted) &&
					// Get excess from tokenize (recursively)
					(excess = tokenize( unquoted, true )) &&
					// advance to the next closing parenthesis
					(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

					// excess is a negative index
					unquoted = unquoted.slice( 0, excess );
					match[0] = match[0].slice( 0, excess );
				}
				match[2] = unquoted;
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {
		"ID": assertGetIdNotName ?
			function( id ) {
				id = id.replace( rbackslash, "" );
				return function( elem ) {
					return elem.getAttribute("id") === id;
				};
			} :
			function( id ) {
				id = id.replace( rbackslash, "" );
				return function( elem ) {
					var node = typeof elem.getAttributeNode !== strundefined && elem.getAttributeNode("id");
					return node && node.value === id;
				};
			},

		"TAG": function( nodeName ) {
			if ( nodeName === "*" ) {
				return function() { return true; };
			}
			nodeName = nodeName.replace( rbackslash, "" ).toLowerCase();

			return function( elem ) {
				return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
			};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ expando ][ className ];
			if ( !pattern ) {
				pattern = classCache( className, new RegExp("(^|" + whitespace + ")" + className + "(" + whitespace + "|$)") );
			}
			return function( elem ) {
				return pattern.test( elem.className || (typeof elem.getAttribute !== strundefined && elem.getAttribute("class")) || "" );
			};
		},

		"ATTR": function( name, operator, check ) {
			return function( elem, context ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.substr( result.length - check.length ) === check :
					operator === "~=" ? ( " " + result + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.substr( 0, check.length + 1 ) === check + "-" :
					false;
			};
		},

		"CHILD": function( type, argument, first, last ) {

			if ( type === "nth" ) {
				return function( elem ) {
					var node, diff,
						parent = elem.parentNode;

					if ( first === 1 && last === 0 ) {
						return true;
					}

					if ( parent ) {
						diff = 0;
						for ( node = parent.firstChild; node; node = node.nextSibling ) {
							if ( node.nodeType === 1 ) {
								diff++;
								if ( elem === node ) {
									break;
								}
							}
						}
					}

					// Incorporate the offset (or cast to NaN), then check against cycle size
					diff -= last;
					return diff === first || ( diff % first === 0 && diff / first >= 0 );
				};
			}

			return function( elem ) {
				var node = elem;

				switch ( type ) {
					case "only":
					case "first":
						while ( (node = node.previousSibling) ) {
							if ( node.nodeType === 1 ) {
								return false;
							}
						}

						if ( type === "first" ) {
							return true;
						}

						node = elem;

						/* falls through */
					case "last":
						while ( (node = node.nextSibling) ) {
							if ( node.nodeType === 1 ) {
								return false;
							}
						}

						return true;
				}
			};
		},

		"PSEUDO": function( pseudo, argument ) {
			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction(function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf.call( seed, matched[i] );
							seed[ idx ] = !( matches[ idx ] = matched[i] );
						}
					}) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {
		"not": markFunction(function( selector ) {
			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction(function( seed, matches, context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( (elem = unmatched[i]) ) {
							seed[i] = !(matches[i] = elem);
						}
					}
				}) :
				function( elem, context, xml ) {
					input[0] = elem;
					matcher( input, null, xml, results );
					return !results.pop();
				};
		}),

		"has": markFunction(function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		}),

		"contains": markFunction(function( text ) {
			return function( elem ) {
				return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
			};
		}),

		"enabled": function( elem ) {
			return elem.disabled === false;
		},

		"disabled": function( elem ) {
			return elem.disabled === true;
		},

		"checked": function( elem ) {
			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
		},

		"selected": function( elem ) {
			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos["empty"]( elem );
		},

		"empty": function( elem ) {
			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is only affected by element nodes and content nodes(including text(3), cdata(4)),
			//   not comment, processing instructions, or others
			// Thanks to Diego Perini for the nodeName shortcut
			//   Greater than "@" means alpha characters (specifically not starting with "#" or "?")
			var nodeType;
			elem = elem.firstChild;
			while ( elem ) {
				if ( elem.nodeName > "@" || (nodeType = elem.nodeType) === 3 || nodeType === 4 ) {
					return false;
				}
				elem = elem.nextSibling;
			}
			return true;
		},

		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"text": function( elem ) {
			var type, attr;
			// IE6 and 7 will map elem.type to 'text' for new HTML5 types (search, etc)
			// use getAttribute instead to test this case
			return elem.nodeName.toLowerCase() === "input" &&
				(type = elem.type) === "text" &&
				( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === type );
		},

		// Input types
		"radio": createInputPseudo("radio"),
		"checkbox": createInputPseudo("checkbox"),
		"file": createInputPseudo("file"),
		"password": createInputPseudo("password"),
		"image": createInputPseudo("image"),

		"submit": createButtonPseudo("submit"),
		"reset": createButtonPseudo("reset"),

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"focus": function( elem ) {
			var doc = elem.ownerDocument;
			return elem === doc.activeElement && (!doc.hasFocus || doc.hasFocus()) && !!(elem.type || elem.href);
		},

		"active": function( elem ) {
			return elem === elem.ownerDocument.activeElement;
		},

		// Positional types
		"first": createPositionalPseudo(function( matchIndexes, length, argument ) {
			return [ 0 ];
		}),

		"last": createPositionalPseudo(function( matchIndexes, length, argument ) {
			return [ length - 1 ];
		}),

		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		}),

		"even": createPositionalPseudo(function( matchIndexes, length, argument ) {
			for ( var i = 0; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"odd": createPositionalPseudo(function( matchIndexes, length, argument ) {
			for ( var i = 1; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			for ( var i = argument < 0 ? argument + length : argument; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			for ( var i = argument < 0 ? argument + length : argument; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		})
	}
};

function siblingCheck( a, b, ret ) {
	if ( a === b ) {
		return ret;
	}

	var cur = a.nextSibling;

	while ( cur ) {
		if ( cur === b ) {
			return -1;
		}

		cur = cur.nextSibling;
	}

	return 1;
}

sortOrder = docElem.compareDocumentPosition ?
	function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		return ( !a.compareDocumentPosition || !b.compareDocumentPosition ?
			a.compareDocumentPosition :
			a.compareDocumentPosition(b) & 4
		) ? -1 : 1;
	} :
	function( a, b ) {
		// The nodes are identical, we can exit early
		if ( a === b ) {
			hasDuplicate = true;
			return 0;

		// Fallback to using sourceIndex (in IE) if it's available on both nodes
		} else if ( a.sourceIndex && b.sourceIndex ) {
			return a.sourceIndex - b.sourceIndex;
		}

		var al, bl,
			ap = [],
			bp = [],
			aup = a.parentNode,
			bup = b.parentNode,
			cur = aup;

		// If the nodes are siblings (or identical) we can do a quick check
		if ( aup === bup ) {
			return siblingCheck( a, b );

		// If no parents were found then the nodes are disconnected
		} else if ( !aup ) {
			return -1;

		} else if ( !bup ) {
			return 1;
		}

		// Otherwise they're somewhere else in the tree so we need
		// to build up a full list of the parentNodes for comparison
		while ( cur ) {
			ap.unshift( cur );
			cur = cur.parentNode;
		}

		cur = bup;

		while ( cur ) {
			bp.unshift( cur );
			cur = cur.parentNode;
		}

		al = ap.length;
		bl = bp.length;

		// Start walking down the tree looking for a discrepancy
		for ( var i = 0; i < al && i < bl; i++ ) {
			if ( ap[i] !== bp[i] ) {
				return siblingCheck( ap[i], bp[i] );
			}
		}

		// We ended someplace up the tree so do a sibling check
		return i === al ?
			siblingCheck( a, bp[i], -1 ) :
			siblingCheck( ap[i], b, 1 );
	};

// Always assume the presence of duplicates if sort doesn't
// pass them to our comparison function (as in Google Chrome).
[0, 0].sort( sortOrder );
baseHasDuplicate = !hasDuplicate;

// Document sorting and removing duplicates
Sizzle.uniqueSort = function( results ) {
	var elem,
		i = 1;

	hasDuplicate = baseHasDuplicate;
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		for ( ; (elem = results[i]); i++ ) {
			if ( elem === results[ i - 1 ] ) {
				results.splice( i--, 1 );
			}
		}
	}

	return results;
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

function tokenize( selector, parseOnly ) {
	var matched, match, tokens, type, soFar, groups, preFilters,
		cached = tokenCache[ expando ][ selector ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || (match = rcomma.exec( soFar )) ) {
			if ( match ) {
				soFar = soFar.slice( match[0].length );
			}
			groups.push( tokens = [] );
		}

		matched = false;

		// Combinators
		if ( (match = rcombinators.exec( soFar )) ) {
			tokens.push( matched = new Token( match.shift() ) );
			soFar = soFar.slice( matched.length );

			// Cast descendant combinators to space
			matched.type = match[0].replace( rtrim, " " );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
				// The last two arguments here are (context, xml) for backCompat
				(match = preFilters[ type ]( match, document, true ))) ) {

				tokens.push( matched = new Token( match.shift() ) );
				soFar = soFar.slice( matched.length );
				matched.type = type;
				matched.matches = match;
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :
			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		checkNonElements = base && combinator.dir === "parentNode",
		doneName = done++;

	return combinator.first ?
		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( (elem = elem[ dir ]) ) {
				if ( checkNonElements || elem.nodeType === 1  ) {
					return matcher( elem, context, xml );
				}
			}
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			// We can't set arbitrary data on XML nodes, so they don't benefit from dir caching
			if ( !xml ) {
				var cache,
					dirkey = dirruns + " " + doneName + " ",
					cachedkey = dirkey + cachedruns;
				while ( (elem = elem[ dir ]) ) {
					if ( checkNonElements || elem.nodeType === 1 ) {
						if ( (cache = elem[ expando ]) === cachedkey ) {
							return elem.sizset;
						} else if ( typeof cache === "string" && cache.indexOf(dirkey) === 0 ) {
							if ( elem.sizset ) {
								return elem;
							}
						} else {
							elem[ expando ] = cachedkey;
							if ( matcher( elem, context, xml ) ) {
								elem.sizset = true;
								return elem;
							}
							elem.sizset = false;
						}
					}
				}
			} else {
				while ( (elem = elem[ dir ]) ) {
					if ( checkNonElements || elem.nodeType === 1 ) {
						if ( matcher( elem, context, xml ) ) {
							return elem;
						}
					}
				}
			}
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[i]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[0];
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( (elem = unmatched[i]) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction(function( seed, results, context, xml ) {
		// Positional selectors apply to seed elements, so it is invalid to follow them with relative ones
		if ( seed && postFinder ) {
			return;
		}

		var i, elem, postFilterIn,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [], seed ),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?
				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			postFilterIn = condense( matcherOut, postMap );
			postFilter( postFilterIn, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = postFilterIn.length;
			while ( i-- ) {
				if ( (elem = postFilterIn[i]) ) {
					matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
				}
			}
		}

		// Keep seed and results synchronized
		if ( seed ) {
			// Ignore postFinder because it can't coexist with seed
			i = preFilter && matcherOut.length;
			while ( i-- ) {
				if ( (elem = matcherOut[i]) ) {
					seed[ preMap[i] ] = !(results[ preMap[i] ] = elem);
				}
			}
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	});
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[0].type ],
		implicitRelative = leadingRelative || Expr.relative[" "],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf.call( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			return ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				(checkContext = context).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );
		} ];

	for ( ; i < len; i++ ) {
		if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
			matchers = [ addCombinator( elementMatcher( matchers ), matcher ) ];
		} else {
			// The concatenated values are (context, xml) for backCompat
			matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {
				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[j].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && tokens.slice( 0, i - 1 ).join("").replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
					j < len && tokens.join("")
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, expandContext ) {
			var elem, j, matcher,
				setMatched = [],
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				outermost = expandContext != null,
				contextBackup = outermostContext,
				// We must always have either seed elements or context
				elems = seed || byElement && Expr.find["TAG"]( "*", expandContext && context.parentNode || context ),
				// Nested matchers should use non-integer dirruns
				dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.E);

			if ( outermost ) {
				outermostContext = context !== document && context;
				cachedruns = superMatcher.el;
			}

			// Add elements passing elementMatchers directly to results
			for ( ; (elem = elems[i]) != null; i++ ) {
				if ( byElement && elem ) {
					for ( j = 0; (matcher = elementMatchers[j]); j++ ) {
						if ( matcher( elem, context, xml ) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
						cachedruns = ++superMatcher.el;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {
					// They will have gone through all possible matchers
					if ( (elem = !matcher && elem) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// Apply set filters to unmatched elements
			matchedCount += i;
			if ( bySet && i !== matchedCount ) {
				for ( j = 0; (matcher = setMatchers[j]); j++ ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {
					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !(unmatched[i] || setMatched[i]) ) {
								setMatched[i] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	superMatcher.el = 0;
	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, group /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ expando ][ selector ];

	if ( !cached ) {
		// Generate a function of recursive functions that can be used to check each element
		if ( !group ) {
			group = tokenize( selector );
		}
		i = group.length;
		while ( i-- ) {
			cached = matcherFromTokens( group[i] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );
	}
	return cached;
};

function multipleContexts( selector, contexts, results, seed ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[i], results, seed );
	}
	return results;
}

function select( selector, context, results, seed, xml ) {
	var i, tokens, token, type, find,
		match = tokenize( selector ),
		j = match.length;

	if ( !seed ) {
		// Try to minimize operations if there is only one group
		if ( match.length === 1 ) {

			// Take a shortcut and set the context if the root selector is an ID
			tokens = match[0] = match[0].slice( 0 );
			if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
					context.nodeType === 9 && !xml &&
					Expr.relative[ tokens[1].type ] ) {

				context = Expr.find["ID"]( token.matches[0].replace( rbackslash, "" ), context, xml )[0];
				if ( !context ) {
					return results;
				}

				selector = selector.slice( tokens.shift().length );
			}

			// Fetch a seed set for right-to-left matching
			for ( i = matchExpr["POS"].test( selector ) ? -1 : tokens.length - 1; i >= 0; i-- ) {
				token = tokens[i];

				// Abort if we hit a combinator
				if ( Expr.relative[ (type = token.type) ] ) {
					break;
				}
				if ( (find = Expr.find[ type ]) ) {
					// Search, expanding context for leading sibling combinators
					if ( (seed = find(
						token.matches[0].replace( rbackslash, "" ),
						rsibling.test( tokens[0].type ) && context.parentNode || context,
						xml
					)) ) {

						// If seed is empty or no tokens remain, we can return early
						tokens.splice( i, 1 );
						selector = seed.length && tokens.join("");
						if ( !selector ) {
							push.apply( results, slice.call( seed, 0 ) );
							return results;
						}

						break;
					}
				}
			}
		}
	}

	// Compile and execute a filtering function
	// Provide `match` to avoid retokenization if we modified the selector above
	compile( selector, match )(
		seed,
		context,
		xml,
		results,
		rsibling.test( selector )
	);
	return results;
}

if ( document.querySelectorAll ) {
	(function() {
		var disconnectedMatch,
			oldSelect = select,
			rescape = /'|\\/g,
			rattributeQuotes = /\=[\x20\t\r\n\f]*([^'"\]]*)[\x20\t\r\n\f]*\]/g,

			// qSa(:focus) reports false when true (Chrome 21),
			// A support test would require too much code (would include document ready)
			rbuggyQSA = [":focus"],

			// matchesSelector(:focus) reports false when true (Chrome 21),
			// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
			// A support test would require too much code (would include document ready)
			// just skip matchesSelector for :active
			rbuggyMatches = [ ":active", ":focus" ],
			matches = docElem.matchesSelector ||
				docElem.mozMatchesSelector ||
				docElem.webkitMatchesSelector ||
				docElem.oMatchesSelector ||
				docElem.msMatchesSelector;

		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert(function( div ) {
			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explictly
			// setting a boolean content attribute,
			// since its presence should be enough
			// http://bugs.jquery.com/ticket/12359
			div.innerHTML = "<select><option selected=''></option></select>";

			// IE8 - Some boolean attributes are not treated correctly
			if ( !div.querySelectorAll("[selected]").length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:checked|disabled|ismap|multiple|readonly|selected|value)" );
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here (do not put tests after this one)
			if ( !div.querySelectorAll(":checked").length ) {
				rbuggyQSA.push(":checked");
			}
		});

		assert(function( div ) {

			// Opera 10-12/IE9 - ^= $= *= and empty values
			// Should not select anything
			div.innerHTML = "<p test=''></p>";
			if ( div.querySelectorAll("[test^='']").length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:\"\"|'')" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here (do not put tests after this one)
			div.innerHTML = "<input type='hidden'/>";
			if ( !div.querySelectorAll(":enabled").length ) {
				rbuggyQSA.push(":enabled", ":disabled");
			}
		});

		// rbuggyQSA always contains :focus, so no need for a length check
		rbuggyQSA = /* rbuggyQSA.length && */ new RegExp( rbuggyQSA.join("|") );

		select = function( selector, context, results, seed, xml ) {
			// Only use querySelectorAll when not filtering,
			// when this is not xml,
			// and when no QSA bugs apply
			if ( !seed && !xml && (!rbuggyQSA || !rbuggyQSA.test( selector )) ) {
				var groups, i,
					old = true,
					nid = expando,
					newContext = context,
					newSelector = context.nodeType === 9 && selector;

				// qSA works strangely on Element-rooted queries
				// We can work around this by specifying an extra ID on the root
				// and working up from there (Thanks to Andrew Dupont for the technique)
				// IE 8 doesn't work on object elements
				if ( context.nodeType === 1 && context.nodeName.toLowerCase() !== "object" ) {
					groups = tokenize( selector );

					if ( (old = context.getAttribute("id")) ) {
						nid = old.replace( rescape, "\\$&" );
					} else {
						context.setAttribute( "id", nid );
					}
					nid = "[id='" + nid + "'] ";

					i = groups.length;
					while ( i-- ) {
						groups[i] = nid + groups[i].join("");
					}
					newContext = rsibling.test( selector ) && context.parentNode || context;
					newSelector = groups.join(",");
				}

				if ( newSelector ) {
					try {
						push.apply( results, slice.call( newContext.querySelectorAll(
							newSelector
						), 0 ) );
						return results;
					} catch(qsaError) {
					} finally {
						if ( !old ) {
							context.removeAttribute("id");
						}
					}
				}
			}

			return oldSelect( selector, context, results, seed, xml );
		};

		if ( matches ) {
			assert(function( div ) {
				// Check to see if it's possible to do matchesSelector
				// on a disconnected node (IE 9)
				disconnectedMatch = matches.call( div, "div" );

				// This should fail with an exception
				// Gecko does not error, returns false instead
				try {
					matches.call( div, "[test!='']:sizzle" );
					rbuggyMatches.push( "!=", pseudos );
				} catch ( e ) {}
			});

			// rbuggyMatches always contains :active and :focus, so no need for a length check
			rbuggyMatches = /* rbuggyMatches.length && */ new RegExp( rbuggyMatches.join("|") );

			Sizzle.matchesSelector = function( elem, expr ) {
				// Make sure that attribute selectors are quoted
				expr = expr.replace( rattributeQuotes, "='$1']" );

				// rbuggyMatches always contains :active, so no need for an existence check
				if ( !isXML( elem ) && !rbuggyMatches.test( expr ) && (!rbuggyQSA || !rbuggyQSA.test( expr )) ) {
					try {
						var ret = matches.call( elem, expr );

						// IE 9's matchesSelector returns false on disconnected nodes
						if ( ret || disconnectedMatch ||
								// As well, disconnected nodes are said to be in a document
								// fragment in IE 9
								elem.document && elem.document.nodeType !== 11 ) {
							return ret;
						}
					} catch(e) {}
				}

				return Sizzle( expr, null, null, [ elem ] ).length > 0;
			};
		}
	})();
}

// Deprecated
Expr.pseudos["nth"] = Expr.pseudos["eq"];

// Back-compat
function setFilters() {}
Expr.filters = setFilters.prototype = Expr.pseudos;
Expr.setFilters = new setFilters();

// Override sizzle attribute retrieval
Sizzle.attr = jQuery.attr;
jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;
jQuery.expr[":"] = jQuery.expr.pseudos;
jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;


})( window );
var runtil = /Until$/,
	rparentsprev = /^(?:parents|prev(?:Until|All))/,
	isSimple = /^.[^:#\[\.,]*$/,
	rneedsContext = jQuery.expr.match.needsContext,
	// methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend({
	find: function( selector ) {
		var i, l, length, n, r, ret,
			self = this;

		if ( typeof selector !== "string" ) {
			return jQuery( selector ).filter(function() {
				for ( i = 0, l = self.length; i < l; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			});
		}

		ret = this.pushStack( "", "find", selector );

		for ( i = 0, l = this.length; i < l; i++ ) {
			length = ret.length;
			jQuery.find( selector, this[i], ret );

			if ( i > 0 ) {
				// Make sure that the results are unique
				for ( n = length; n < ret.length; n++ ) {
					for ( r = 0; r < length; r++ ) {
						if ( ret[r] === ret[n] ) {
							ret.splice(n--, 1);
							break;
						}
					}
				}
			}
		}

		return ret;
	},

	has: function( target ) {
		var i,
			targets = jQuery( target, this ),
			len = targets.length;

		return this.filter(function() {
			for ( i = 0; i < len; i++ ) {
				if ( jQuery.contains( this, targets[i] ) ) {
					return true;
				}
			}
		});
	},

	not: function( selector ) {
		return this.pushStack( winnow(this, selector, false), "not", selector);
	},

	filter: function( selector ) {
		return this.pushStack( winnow(this, selector, true), "filter", selector );
	},

	is: function( selector ) {
		return !!selector && (
			typeof selector === "string" ?
				// If this is a positional/relative selector, check membership in the returned set
				// so $("p:first").is("p:last") won't return true for a doc with two "p".
				rneedsContext.test( selector ) ?
					jQuery( selector, this.context ).index( this[0] ) >= 0 :
					jQuery.filter( selector, this ).length > 0 :
				this.filter( selector ).length > 0 );
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			ret = [],
			pos = rneedsContext.test( selectors ) || typeof selectors !== "string" ?
				jQuery( selectors, context || this.context ) :
				0;

		for ( ; i < l; i++ ) {
			cur = this[i];

			while ( cur && cur.ownerDocument && cur !== context && cur.nodeType !== 11 ) {
				if ( pos ? pos.index(cur) > -1 : jQuery.find.matchesSelector(cur, selectors) ) {
					ret.push( cur );
					break;
				}
				cur = cur.parentNode;
			}
		}

		ret = ret.length > 1 ? jQuery.unique( ret ) : ret;

		return this.pushStack( ret, "closest", selectors );
	},

	// Determine the position of an element within
	// the matched set of elements
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[0] && this[0].parentNode ) ? this.prevAll().length : -1;
		}

		// index in selector
		if ( typeof elem === "string" ) {
			return jQuery.inArray( this[0], jQuery( elem ) );
		}

		// Locate the position of the desired element
		return jQuery.inArray(
			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[0] : elem, this );
	},

	add: function( selector, context ) {
		var set = typeof selector === "string" ?
				jQuery( selector, context ) :
				jQuery.makeArray( selector && selector.nodeType ? [ selector ] : selector ),
			all = jQuery.merge( this.get(), set );

		return this.pushStack( isDisconnected( set[0] ) || isDisconnected( all[0] ) ?
			all :
			jQuery.unique( all ) );
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter(selector)
		);
	}
});

jQuery.fn.andSelf = jQuery.fn.addBack;

// A painfully simple check to see if an element is disconnected
// from a document (should be improved, where feasible).
function isDisconnected( node ) {
	return !node || !node.parentNode || node.parentNode.nodeType === 11;
}

function sibling( cur, dir ) {
	do {
		cur = cur[ dir ];
	} while ( cur && cur.nodeType !== 1 );

	return cur;
}

jQuery.each({
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return jQuery.dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return jQuery.dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return jQuery.dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return jQuery.sibling( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return jQuery.sibling( elem.firstChild );
	},
	contents: function( elem ) {
		return jQuery.nodeName( elem, "iframe" ) ?
			elem.contentDocument || elem.contentWindow.document :
			jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var ret = jQuery.map( this, fn, until );

		if ( !runtil.test( name ) ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			ret = jQuery.filter( selector, ret );
		}

		ret = this.length > 1 && !guaranteedUnique[ name ] ? jQuery.unique( ret ) : ret;

		if ( this.length > 1 && rparentsprev.test( name ) ) {
			ret = ret.reverse();
		}

		return this.pushStack( ret, name, core_slice.call( arguments ).join(",") );
	};
});

jQuery.extend({
	filter: function( expr, elems, not ) {
		if ( not ) {
			expr = ":not(" + expr + ")";
		}

		return elems.length === 1 ?
			jQuery.find.matchesSelector(elems[0], expr) ? [ elems[0] ] : [] :
			jQuery.find.matches(expr, elems);
	},

	dir: function( elem, dir, until ) {
		var matched = [],
			cur = elem[ dir ];

		while ( cur && cur.nodeType !== 9 && (until === undefined || cur.nodeType !== 1 || !jQuery( cur ).is( until )) ) {
			if ( cur.nodeType === 1 ) {
				matched.push( cur );
			}
			cur = cur[dir];
		}
		return matched;
	},

	sibling: function( n, elem ) {
		var r = [];

		for ( ; n; n = n.nextSibling ) {
			if ( n.nodeType === 1 && n !== elem ) {
				r.push( n );
			}
		}

		return r;
	}
});

// Implement the identical functionality for filter and not
function winnow( elements, qualifier, keep ) {

	// Can't pass null or undefined to indexOf in Firefox 4
	// Set to 0 to skip string check
	qualifier = qualifier || 0;

	if ( jQuery.isFunction( qualifier ) ) {
		return jQuery.grep(elements, function( elem, i ) {
			var retVal = !!qualifier.call( elem, i, elem );
			return retVal === keep;
		});

	} else if ( qualifier.nodeType ) {
		return jQuery.grep(elements, function( elem, i ) {
			return ( elem === qualifier ) === keep;
		});

	} else if ( typeof qualifier === "string" ) {
		var filtered = jQuery.grep(elements, function( elem ) {
			return elem.nodeType === 1;
		});

		if ( isSimple.test( qualifier ) ) {
			return jQuery.filter(qualifier, filtered, !keep);
		} else {
			qualifier = jQuery.filter( qualifier, filtered );
		}
	}

	return jQuery.grep(elements, function( elem, i ) {
		return ( jQuery.inArray( elem, qualifier ) >= 0 ) === keep;
	});
}
function createSafeFragment( document ) {
	var list = nodeNames.split( "|" ),
	safeFrag = document.createDocumentFragment();

	if ( safeFrag.createElement ) {
		while ( list.length ) {
			safeFrag.createElement(
				list.pop()
			);
		}
	}
	return safeFrag;
}

var nodeNames = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|" +
		"header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",
	rinlinejQuery = / jQuery\d+="(?:null|\d+)"/g,
	rleadingWhitespace = /^\s+/,
	rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
	rtagName = /<([\w:]+)/,
	rtbody = /<tbody/i,
	rhtml = /<|&#?\w+;/,
	rnoInnerhtml = /<(?:script|style|link)/i,
	rnocache = /<(?:script|object|embed|option|style)/i,
	rnoshimcache = new RegExp("<(?:" + nodeNames + ")[\\s/>]", "i"),
	rcheckableType = /^(?:checkbox|radio)$/,
	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rscriptType = /\/(java|ecma)script/i,
	rcleanScript = /^\s*<!(?:\[CDATA\[|\-\-)|[\]\-]{2}>\s*$/g,
	wrapMap = {
		option: [ 1, "<select multiple='multiple'>", "</select>" ],
		legend: [ 1, "<fieldset>", "</fieldset>" ],
		thead: [ 1, "<table>", "</table>" ],
		tr: [ 2, "<table><tbody>", "</tbody></table>" ],
		td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],
		col: [ 2, "<table><tbody></tbody><colgroup>", "</colgroup></table>" ],
		area: [ 1, "<map>", "</map>" ],
		_default: [ 0, "", "" ]
	},
	safeFragment = createSafeFragment( document ),
	fragmentDiv = safeFragment.appendChild( document.createElement("div") );

wrapMap.optgroup = wrapMap.option;
wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;

// IE6-8 can't serialize link, script, style, or any html5 (NoScope) tags,
// unless wrapped in a div with non-breaking characters in front of it.
if ( !jQuery.support.htmlSerialize ) {
	wrapMap._default = [ 1, "X<div>", "</div>" ];
}

jQuery.fn.extend({
	text: function( value ) {
		return jQuery.access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().append( ( this[0] && this[0].ownerDocument || document ).createTextNode( value ) );
		}, null, value, arguments.length );
	},

	wrapAll: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each(function(i) {
				jQuery(this).wrapAll( html.call(this, i) );
			});
		}

		if ( this[0] ) {
			// The elements to wrap the target around
			var wrap = jQuery( html, this[0].ownerDocument ).eq(0).clone(true);

			if ( this[0].parentNode ) {
				wrap.insertBefore( this[0] );
			}

			wrap.map(function() {
				var elem = this;

				while ( elem.firstChild && elem.firstChild.nodeType === 1 ) {
					elem = elem.firstChild;
				}

				return elem;
			}).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each(function(i) {
				jQuery(this).wrapInner( html.call(this, i) );
			});
		}

		return this.each(function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		});
	},

	wrap: function( html ) {
		var isFunction = jQuery.isFunction( html );

		return this.each(function(i) {
			jQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );
		});
	},

	unwrap: function() {
		return this.parent().each(function() {
			if ( !jQuery.nodeName( this, "body" ) ) {
				jQuery( this ).replaceWith( this.childNodes );
			}
		}).end();
	},

	append: function() {
		return this.domManip(arguments, true, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 ) {
				this.appendChild( elem );
			}
		});
	},

	prepend: function() {
		return this.domManip(arguments, true, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 ) {
				this.insertBefore( elem, this.firstChild );
			}
		});
	},

	before: function() {
		if ( !isDisconnected( this[0] ) ) {
			return this.domManip(arguments, false, function( elem ) {
				this.parentNode.insertBefore( elem, this );
			});
		}

		if ( arguments.length ) {
			var set = jQuery.clean( arguments );
			return this.pushStack( jQuery.merge( set, this ), "before", this.selector );
		}
	},

	after: function() {
		if ( !isDisconnected( this[0] ) ) {
			return this.domManip(arguments, false, function( elem ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			});
		}

		if ( arguments.length ) {
			var set = jQuery.clean( arguments );
			return this.pushStack( jQuery.merge( this, set ), "after", this.selector );
		}
	},

	// keepData is for internal use only--do not document
	remove: function( selector, keepData ) {
		var elem,
			i = 0;

		for ( ; (elem = this[i]) != null; i++ ) {
			if ( !selector || jQuery.filter( selector, [ elem ] ).length ) {
				if ( !keepData && elem.nodeType === 1 ) {
					jQuery.cleanData( elem.getElementsByTagName("*") );
					jQuery.cleanData( [ elem ] );
				}

				if ( elem.parentNode ) {
					elem.parentNode.removeChild( elem );
				}
			}
		}

		return this;
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; (elem = this[i]) != null; i++ ) {
			// Remove element nodes and prevent memory leaks
			if ( elem.nodeType === 1 ) {
				jQuery.cleanData( elem.getElementsByTagName("*") );
			}

			// Remove any remaining nodes
			while ( elem.firstChild ) {
				elem.removeChild( elem.firstChild );
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function () {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		});
	},

	html: function( value ) {
		return jQuery.access( this, function( value ) {
			var elem = this[0] || {},
				i = 0,
				l = this.length;

			if ( value === undefined ) {
				return elem.nodeType === 1 ?
					elem.innerHTML.replace( rinlinejQuery, "" ) :
					undefined;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				( jQuery.support.htmlSerialize || !rnoshimcache.test( value )  ) &&
				( jQuery.support.leadingWhitespace || !rleadingWhitespace.test( value ) ) &&
				!wrapMap[ ( rtagName.exec( value ) || ["", ""] )[1].toLowerCase() ] ) {

				value = value.replace( rxhtmlTag, "<$1></$2>" );

				try {
					for (; i < l; i++ ) {
						// Remove element nodes and prevent memory leaks
						elem = this[i] || {};
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( elem.getElementsByTagName( "*" ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch(e) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function( value ) {
		if ( !isDisconnected( this[0] ) ) {
			// Make sure that the elements are removed from the DOM before they are inserted
			// this can help fix replacing a parent with child elements
			if ( jQuery.isFunction( value ) ) {
				return this.each(function(i) {
					var self = jQuery(this), old = self.html();
					self.replaceWith( value.call( this, i, old ) );
				});
			}

			if ( typeof value !== "string" ) {
				value = jQuery( value ).detach();
			}

			return this.each(function() {
				var next = this.nextSibling,
					parent = this.parentNode;

				jQuery( this ).remove();

				if ( next ) {
					jQuery(next).before( value );
				} else {
					jQuery(parent).append( value );
				}
			});
		}

		return this.length ?
			this.pushStack( jQuery(jQuery.isFunction(value) ? value() : value), "replaceWith", value ) :
			this;
	},

	detach: function( selector ) {
		return this.remove( selector, true );
	},

	domManip: function( args, table, callback ) {

		// Flatten any nested arrays
		args = [].concat.apply( [], args );

		var results, first, fragment, iNoClone,
			i = 0,
			value = args[0],
			scripts = [],
			l = this.length;

		// We can't cloneNode fragments that contain checked, in WebKit
		if ( !jQuery.support.checkClone && l > 1 && typeof value === "string" && rchecked.test( value ) ) {
			return this.each(function() {
				jQuery(this).domManip( args, table, callback );
			});
		}

		if ( jQuery.isFunction(value) ) {
			return this.each(function(i) {
				var self = jQuery(this);
				args[0] = value.call( this, i, table ? self.html() : undefined );
				self.domManip( args, table, callback );
			});
		}

		if ( this[0] ) {
			results = jQuery.buildFragment( args, this, scripts );
			fragment = results.fragment;
			first = fragment.firstChild;

			if ( fragment.childNodes.length === 1 ) {
				fragment = first;
			}

			if ( first ) {
				table = table && jQuery.nodeName( first, "tr" );

				// Use the original fragment for the last item instead of the first because it can end up
				// being emptied incorrectly in certain situations (#8070).
				// Fragments from the fragment cache must always be cloned and never used in place.
				for ( iNoClone = results.cacheable || l - 1; i < l; i++ ) {
					callback.call(
						table && jQuery.nodeName( this[i], "table" ) ?
							findOrAppend( this[i], "tbody" ) :
							this[i],
						i === iNoClone ?
							fragment :
							jQuery.clone( fragment, true, true )
					);
				}
			}

			// Fix #11809: Avoid leaking memory
			fragment = first = null;

			if ( scripts.length ) {
				jQuery.each( scripts, function( i, elem ) {
					if ( elem.src ) {
						if ( jQuery.ajax ) {
							jQuery.ajax({
								url: elem.src,
								type: "GET",
								dataType: "script",
								async: false,
								global: false,
								"throws": true
							});
						} else {
							jQuery.error("no ajax");
						}
					} else {
						jQuery.globalEval( ( elem.text || elem.textContent || elem.innerHTML || "" ).replace( rcleanScript, "" ) );
					}

					if ( elem.parentNode ) {
						elem.parentNode.removeChild( elem );
					}
				});
			}
		}

		return this;
	}
});

function findOrAppend( elem, tag ) {
	return elem.getElementsByTagName( tag )[0] || elem.appendChild( elem.ownerDocument.createElement( tag ) );
}

function cloneCopyEvent( src, dest ) {

	if ( dest.nodeType !== 1 || !jQuery.hasData( src ) ) {
		return;
	}

	var type, i, l,
		oldData = jQuery._data( src ),
		curData = jQuery._data( dest, oldData ),
		events = oldData.events;

	if ( events ) {
		delete curData.handle;
		curData.events = {};

		for ( type in events ) {
			for ( i = 0, l = events[ type ].length; i < l; i++ ) {
				jQuery.event.add( dest, type, events[ type ][ i ] );
			}
		}
	}

	// make the cloned public data object a copy from the original
	if ( curData.data ) {
		curData.data = jQuery.extend( {}, curData.data );
	}
}

function cloneFixAttributes( src, dest ) {
	var nodeName;

	// We do not need to do anything for non-Elements
	if ( dest.nodeType !== 1 ) {
		return;
	}

	// clearAttributes removes the attributes, which we don't want,
	// but also removes the attachEvent events, which we *do* want
	if ( dest.clearAttributes ) {
		dest.clearAttributes();
	}

	// mergeAttributes, in contrast, only merges back on the
	// original attributes, not the events
	if ( dest.mergeAttributes ) {
		dest.mergeAttributes( src );
	}

	nodeName = dest.nodeName.toLowerCase();

	if ( nodeName === "object" ) {
		// IE6-10 improperly clones children of object elements using classid.
		// IE10 throws NoModificationAllowedError if parent is null, #12132.
		if ( dest.parentNode ) {
			dest.outerHTML = src.outerHTML;
		}

		// This path appears unavoidable for IE9. When cloning an object
		// element in IE9, the outerHTML strategy above is not sufficient.
		// If the src has innerHTML and the destination does not,
		// copy the src.innerHTML into the dest.innerHTML. #10324
		if ( jQuery.support.html5Clone && (src.innerHTML && !jQuery.trim(dest.innerHTML)) ) {
			dest.innerHTML = src.innerHTML;
		}

	} else if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		// IE6-8 fails to persist the checked state of a cloned checkbox
		// or radio button. Worse, IE6-7 fail to give the cloned element
		// a checked appearance if the defaultChecked value isn't also set

		dest.defaultChecked = dest.checked = src.checked;

		// IE6-7 get confused and end up setting the value of a cloned
		// checkbox/radio button to an empty string instead of "on"
		if ( dest.value !== src.value ) {
			dest.value = src.value;
		}

	// IE6-8 fails to return the selected option to the default selected
	// state when cloning options
	} else if ( nodeName === "option" ) {
		dest.selected = src.defaultSelected;

	// IE6-8 fails to set the defaultValue to the correct value when
	// cloning other types of input fields
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;

	// IE blanks contents when cloning scripts
	} else if ( nodeName === "script" && dest.text !== src.text ) {
		dest.text = src.text;
	}

	// Event data gets referenced instead of copied if the expando
	// gets copied too
	dest.removeAttribute( jQuery.expando );
}

jQuery.buildFragment = function( args, context, scripts ) {
	var fragment, cacheable, cachehit,
		first = args[ 0 ];

	// Set context from what may come in as undefined or a jQuery collection or a node
	// Updated to fix #12266 where accessing context[0] could throw an exception in IE9/10 &
	// also doubles as fix for #8950 where plain objects caused createDocumentFragment exception
	context = context || document;
	context = !context.nodeType && context[0] || context;
	context = context.ownerDocument || context;

	// Only cache "small" (1/2 KB) HTML strings that are associated with the main document
	// Cloning options loses the selected state, so don't cache them
	// IE 6 doesn't like it when you put <object> or <embed> elements in a fragment
	// Also, WebKit does not clone 'checked' attributes on cloneNode, so don't cache
	// Lastly, IE6,7,8 will not correctly reuse cached fragments that were created from unknown elems #10501
	if ( args.length === 1 && typeof first === "string" && first.length < 512 && context === document &&
		first.charAt(0) === "<" && !rnocache.test( first ) &&
		(jQuery.support.checkClone || !rchecked.test( first )) &&
		(jQuery.support.html5Clone || !rnoshimcache.test( first )) ) {

		// Mark cacheable and look for a hit
		cacheable = true;
		fragment = jQuery.fragments[ first ];
		cachehit = fragment !== undefined;
	}

	if ( !fragment ) {
		fragment = context.createDocumentFragment();
		jQuery.clean( args, context, fragment, scripts );

		// Update the cache, but only store false
		// unless this is a second parsing of the same content
		if ( cacheable ) {
			jQuery.fragments[ first ] = cachehit && fragment;
		}
	}

	return { fragment: fragment, cacheable: cacheable };
};

jQuery.fragments = {};

jQuery.each({
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			i = 0,
			ret = [],
			insert = jQuery( selector ),
			l = insert.length,
			parent = this.length === 1 && this[0].parentNode;

		if ( (parent == null || parent && parent.nodeType === 11 && parent.childNodes.length === 1) && l === 1 ) {
			insert[ original ]( this[0] );
			return this;
		} else {
			for ( ; i < l; i++ ) {
				elems = ( i > 0 ? this.clone(true) : this ).get();
				jQuery( insert[i] )[ original ]( elems );
				ret = ret.concat( elems );
			}

			return this.pushStack( ret, name, insert.selector );
		}
	};
});

function getAll( elem ) {
	if ( typeof elem.getElementsByTagName !== "undefined" ) {
		return elem.getElementsByTagName( "*" );

	} else if ( typeof elem.querySelectorAll !== "undefined" ) {
		return elem.querySelectorAll( "*" );

	} else {
		return [];
	}
}

// Used in clean, fixes the defaultChecked property
function fixDefaultChecked( elem ) {
	if ( rcheckableType.test( elem.type ) ) {
		elem.defaultChecked = elem.checked;
	}
}

jQuery.extend({
	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var srcElements,
			destElements,
			i,
			clone;

		if ( jQuery.support.html5Clone || jQuery.isXMLDoc(elem) || !rnoshimcache.test( "<" + elem.nodeName + ">" ) ) {
			clone = elem.cloneNode( true );

		// IE<=8 does not properly clone detached, unknown element nodes
		} else {
			fragmentDiv.innerHTML = elem.outerHTML;
			fragmentDiv.removeChild( clone = fragmentDiv.firstChild );
		}

		if ( (!jQuery.support.noCloneEvent || !jQuery.support.noCloneChecked) &&
				(elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem) ) {
			// IE copies events bound via attachEvent when using cloneNode.
			// Calling detachEvent on the clone will also remove the events
			// from the original. In order to get around this, we use some
			// proprietary methods to clear the events. Thanks to MooTools
			// guys for this hotness.

			cloneFixAttributes( elem, clone );

			// Using Sizzle here is crazy slow, so we use getElementsByTagName instead
			srcElements = getAll( elem );
			destElements = getAll( clone );

			// Weird iteration because IE will replace the length property
			// with an element if you are cloning the body and one of the
			// elements on the page has a name or id of "length"
			for ( i = 0; srcElements[i]; ++i ) {
				// Ensure that the destination node is not null; Fixes #9587
				if ( destElements[i] ) {
					cloneFixAttributes( srcElements[i], destElements[i] );
				}
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			cloneCopyEvent( elem, clone );

			if ( deepDataAndEvents ) {
				srcElements = getAll( elem );
				destElements = getAll( clone );

				for ( i = 0; srcElements[i]; ++i ) {
					cloneCopyEvent( srcElements[i], destElements[i] );
				}
			}
		}

		srcElements = destElements = null;

		// Return the cloned set
		return clone;
	},

	clean: function( elems, context, fragment, scripts ) {
		var i, j, elem, tag, wrap, depth, div, hasBody, tbody, len, handleScript, jsTags,
			safe = context === document && safeFragment,
			ret = [];

		// Ensure that context is a document
		if ( !context || typeof context.createDocumentFragment === "undefined" ) {
			context = document;
		}

		// Use the already-created safe fragment if context permits
		for ( i = 0; (elem = elems[i]) != null; i++ ) {
			if ( typeof elem === "number" ) {
				elem += "";
			}

			if ( !elem ) {
				continue;
			}

			// Convert html string into DOM nodes
			if ( typeof elem === "string" ) {
				if ( !rhtml.test( elem ) ) {
					elem = context.createTextNode( elem );
				} else {
					// Ensure a safe container in which to render the html
					safe = safe || createSafeFragment( context );
					div = context.createElement("div");
					safe.appendChild( div );

					// Fix "XHTML"-style tags in all browsers
					elem = elem.replace(rxhtmlTag, "<$1></$2>");

					// Go to html and back, then peel off extra wrappers
					tag = ( rtagName.exec( elem ) || ["", ""] )[1].toLowerCase();
					wrap = wrapMap[ tag ] || wrapMap._default;
					depth = wrap[0];
					div.innerHTML = wrap[1] + elem + wrap[2];

					// Move to the right depth
					while ( depth-- ) {
						div = div.lastChild;
					}

					// Remove IE's autoinserted <tbody> from table fragments
					if ( !jQuery.support.tbody ) {

						// String was a <table>, *may* have spurious <tbody>
						hasBody = rtbody.test(elem);
							tbody = tag === "table" && !hasBody ?
								div.firstChild && div.firstChild.childNodes :

								// String was a bare <thead> or <tfoot>
								wrap[1] === "<table>" && !hasBody ?
									div.childNodes :
									[];

						for ( j = tbody.length - 1; j >= 0 ; --j ) {
							if ( jQuery.nodeName( tbody[ j ], "tbody" ) && !tbody[ j ].childNodes.length ) {
								tbody[ j ].parentNode.removeChild( tbody[ j ] );
							}
						}
					}

					// IE completely kills leading whitespace when innerHTML is used
					if ( !jQuery.support.leadingWhitespace && rleadingWhitespace.test( elem ) ) {
						div.insertBefore( context.createTextNode( rleadingWhitespace.exec(elem)[0] ), div.firstChild );
					}

					elem = div.childNodes;

					// Take out of fragment container (we need a fresh div each time)
					div.parentNode.removeChild( div );
				}
			}

			if ( elem.nodeType ) {
				ret.push( elem );
			} else {
				jQuery.merge( ret, elem );
			}
		}

		// Fix #11356: Clear elements from safeFragment
		if ( div ) {
			elem = div = safe = null;
		}

		// Reset defaultChecked for any radios and checkboxes
		// about to be appended to the DOM in IE 6/7 (#8060)
		if ( !jQuery.support.appendChecked ) {
			for ( i = 0; (elem = ret[i]) != null; i++ ) {
				if ( jQuery.nodeName( elem, "input" ) ) {
					fixDefaultChecked( elem );
				} else if ( typeof elem.getElementsByTagName !== "undefined" ) {
					jQuery.grep( elem.getElementsByTagName("input"), fixDefaultChecked );
				}
			}
		}

		// Append elements to a provided document fragment
		if ( fragment ) {
			// Special handling of each script element
			handleScript = function( elem ) {
				// Check if we consider it executable
				if ( !elem.type || rscriptType.test( elem.type ) ) {
					// Detach the script and store it in the scripts array (if provided) or the fragment
					// Return truthy to indicate that it has been handled
					return scripts ?
						scripts.push( elem.parentNode ? elem.parentNode.removeChild( elem ) : elem ) :
						fragment.appendChild( elem );
				}
			};

			for ( i = 0; (elem = ret[i]) != null; i++ ) {
				// Check if we're done after handling an executable script
				if ( !( jQuery.nodeName( elem, "script" ) && handleScript( elem ) ) ) {
					// Append to fragment and handle embedded scripts
					fragment.appendChild( elem );
					if ( typeof elem.getElementsByTagName !== "undefined" ) {
						// handleScript alters the DOM, so use jQuery.merge to ensure snapshot iteration
						jsTags = jQuery.grep( jQuery.merge( [], elem.getElementsByTagName("script") ), handleScript );

						// Splice the scripts into ret after their former ancestor and advance our index beyond them
						ret.splice.apply( ret, [i + 1, 0].concat( jsTags ) );
						i += jsTags.length;
					}
				}
			}
		}

		return ret;
	},

	cleanData: function( elems, /* internal */ acceptData ) {
		var data, id, elem, type,
			i = 0,
			internalKey = jQuery.expando,
			cache = jQuery.cache,
			deleteExpando = jQuery.support.deleteExpando,
			special = jQuery.event.special;

		for ( ; (elem = elems[i]) != null; i++ ) {

			if ( acceptData || jQuery.acceptData( elem ) ) {

				id = elem[ internalKey ];
				data = id && cache[ id ];

				if ( data ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Remove cache only if it was not already removed by jQuery.event.remove
					if ( cache[ id ] ) {

						delete cache[ id ];

						// IE does not allow us to delete expando properties from nodes,
						// nor does it have a removeAttribute function on Document nodes;
						// we must handle all of these cases
						if ( deleteExpando ) {
							delete elem[ internalKey ];

						} else if ( elem.removeAttribute ) {
							elem.removeAttribute( internalKey );

						} else {
							elem[ internalKey ] = null;
						}

						jQuery.deletedIds.push( id );
					}
				}
			}
		}
	}
});
// Limit scope pollution from any deprecated API
(function() {

var matched, browser;

// Use of jQuery.browser is frowned upon.
// More details: http://api.jquery.com/jQuery.browser
// jQuery.uaMatch maintained for back-compat
jQuery.uaMatch = function( ua ) {
	ua = ua.toLowerCase();

	var match = /(chrome)[ \/]([\w.]+)/.exec( ua ) ||
		/(webkit)[ \/]([\w.]+)/.exec( ua ) ||
		/(opera)(?:.*version|)[ \/]([\w.]+)/.exec( ua ) ||
		/(msie) ([\w.]+)/.exec( ua ) ||
		ua.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec( ua ) ||
		[];

	return {
		browser: match[ 1 ] || "",
		version: match[ 2 ] || "0"
	};
};

matched = jQuery.uaMatch( navigator.userAgent );
browser = {};

if ( matched.browser ) {
	browser[ matched.browser ] = true;
	browser.version = matched.version;
}

// Chrome is Webkit, but Webkit is also Safari.
if ( browser.chrome ) {
	browser.webkit = true;
} else if ( browser.webkit ) {
	browser.safari = true;
}

jQuery.browser = browser;

jQuery.sub = function() {
	function jQuerySub( selector, context ) {
		return new jQuerySub.fn.init( selector, context );
	}
	jQuery.extend( true, jQuerySub, this );
	jQuerySub.superclass = this;
	jQuerySub.fn = jQuerySub.prototype = this();
	jQuerySub.fn.constructor = jQuerySub;
	jQuerySub.sub = this.sub;
	jQuerySub.fn.init = function init( selector, context ) {
		if ( context && context instanceof jQuery && !(context instanceof jQuerySub) ) {
			context = jQuerySub( context );
		}

		return jQuery.fn.init.call( this, selector, context, rootjQuerySub );
	};
	jQuerySub.fn.init.prototype = jQuerySub.fn;
	var rootjQuerySub = jQuerySub(document);
	return jQuerySub;
};

})();
var curCSS, iframe, iframeDoc,
	ralpha = /alpha\([^)]*\)/i,
	ropacity = /opacity=([^)]*)/,
	rposition = /^(top|right|bottom|left)$/,
	// swappable if display is none or starts with table except "table", "table-cell", or "table-caption"
	// see here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	rmargin = /^margin/,
	rnumsplit = new RegExp( "^(" + core_pnum + ")(.*)$", "i" ),
	rnumnonpx = new RegExp( "^(" + core_pnum + ")(?!px)[a-z%]+$", "i" ),
	rrelNum = new RegExp( "^([-+])=(" + core_pnum + ")", "i" ),
	elemdisplay = {},

	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: 0,
		fontWeight: 400
	},

	cssExpand = [ "Top", "Right", "Bottom", "Left" ],
	cssPrefixes = [ "Webkit", "O", "Moz", "ms" ],

	eventsToggle = jQuery.fn.toggle;

// return a css property mapped to a potentially vendor prefixed property
function vendorPropName( style, name ) {

	// shortcut for names that are not vendor prefixed
	if ( name in style ) {
		return name;
	}

	// check for vendor prefixed names
	var capName = name.charAt(0).toUpperCase() + name.slice(1),
		origName = name,
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in style ) {
			return name;
		}
	}

	return origName;
}

function isHidden( elem, el ) {
	elem = el || elem;
	return jQuery.css( elem, "display" ) === "none" || !jQuery.contains( elem.ownerDocument, elem );
}

function showHide( elements, show ) {
	var elem, display,
		values = [],
		index = 0,
		length = elements.length;

	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}
		values[ index ] = jQuery._data( elem, "olddisplay" );
		if ( show ) {
			// Reset the inline display of this element to learn if it is
			// being hidden by cascaded rules or not
			if ( !values[ index ] && elem.style.display === "none" ) {
				elem.style.display = "";
			}

			// Set elements which have been overridden with display: none
			// in a stylesheet to whatever the default browser style is
			// for such an element
			if ( elem.style.display === "" && isHidden( elem ) ) {
				values[ index ] = jQuery._data( elem, "olddisplay", css_defaultDisplay(elem.nodeName) );
			}
		} else {
			display = curCSS( elem, "display" );

			if ( !values[ index ] && display !== "none" ) {
				jQuery._data( elem, "olddisplay", display );
			}
		}
	}

	// Set the display of most of the elements in a second loop
	// to avoid the constant reflow
	for ( index = 0; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}
		if ( !show || elem.style.display === "none" || elem.style.display === "" ) {
			elem.style.display = show ? values[ index ] || "" : "none";
		}
	}

	return elements;
}

jQuery.fn.extend({
	css: function( name, value ) {
		return jQuery.access( this, function( elem, name, value ) {
			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	},
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state, fn2 ) {
		var bool = typeof state === "boolean";

		if ( jQuery.isFunction( state ) && jQuery.isFunction( fn2 ) ) {
			return eventsToggle.apply( this, arguments );
		}

		return this.each(function() {
			if ( bool ? state : isHidden( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		});
	}
});

jQuery.extend({
	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {
					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;

				}
			}
		}
	},

	// Exclude the following css properties to add px
	cssNumber: {
		"fillOpacity": true,
		"fontWeight": true,
		"lineHeight": true,
		"opacity": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {
		// normalize float css property
		"float": jQuery.support.cssFloat ? "cssFloat" : "styleFloat"
	},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {
		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = jQuery.camelCase( name ),
			style = elem.style;

		name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( style, origName ) );

		// gets hook for the prefixed version
		// followed by the unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// convert relative number strings (+= or -=) to relative numbers. #7345
			if ( type === "string" && (ret = rrelNum.exec( value )) ) {
				value = ( ret[1] + 1 ) * ret[2] + parseFloat( jQuery.css( elem, name ) );
				// Fixes bug #9237
				type = "number";
			}

			// Make sure that NaN and null values aren't set. See: #7116
			if ( value == null || type === "number" && isNaN( value ) ) {
				return;
			}

			// If a number was passed in, add 'px' to the (except for certain CSS properties)
			if ( type === "number" && !jQuery.cssNumber[ origName ] ) {
				value += "px";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !("set" in hooks) || (value = hooks.set( elem, value, extra )) !== undefined ) {
				// Wrapped to prevent IE from throwing errors when 'invalid' values are provided
				// Fixes bug #5509
				try {
					style[ name ] = value;
				} catch(e) {}
			}

		} else {
			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks && (ret = hooks.get( elem, false, extra )) !== undefined ) {
				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, numeric, extra ) {
		var val, num, hooks,
			origName = jQuery.camelCase( name );

		// Make sure that we're working with the right name
		name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( elem.style, origName ) );

		// gets hook for the prefixed version
		// followed by the unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name );
		}

		//convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Return, converting to number if forced or a qualifier was provided and val looks numeric
		if ( numeric || extra !== undefined ) {
			num = parseFloat( val );
			return numeric || jQuery.isNumeric( num ) ? num || 0 : val;
		}
		return val;
	},

	// A method for quickly swapping in/out CSS properties to get correct calculations
	swap: function( elem, options, callback ) {
		var ret, name,
			old = {};

		// Remember the old values, and insert the new ones
		for ( name in options ) {
			old[ name ] = elem.style[ name ];
			elem.style[ name ] = options[ name ];
		}

		ret = callback.call( elem );

		// Revert the old values
		for ( name in options ) {
			elem.style[ name ] = old[ name ];
		}

		return ret;
	}
});

// NOTE: To any future maintainer, we've window.getComputedStyle
// because jsdom on node.js will break without it.
if ( window.getComputedStyle ) {
	curCSS = function( elem, name ) {
		var ret, width, minWidth, maxWidth,
			computed = window.getComputedStyle( elem, null ),
			style = elem.style;

		if ( computed ) {

			ret = computed[ name ];
			if ( ret === "" && !jQuery.contains( elem.ownerDocument, elem ) ) {
				ret = jQuery.style( elem, name );
			}

			// A tribute to the "awesome hack by Dean Edwards"
			// Chrome < 17 and Safari 5.0 uses "computed value" instead of "used value" for margin-right
			// Safari 5.1.7 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels
			// this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values
			if ( rnumnonpx.test( ret ) && rmargin.test( name ) ) {
				width = style.width;
				minWidth = style.minWidth;
				maxWidth = style.maxWidth;

				style.minWidth = style.maxWidth = style.width = ret;
				ret = computed.width;

				style.width = width;
				style.minWidth = minWidth;
				style.maxWidth = maxWidth;
			}
		}

		return ret;
	};
} else if ( document.documentElement.currentStyle ) {
	curCSS = function( elem, name ) {
		var left, rsLeft,
			ret = elem.currentStyle && elem.currentStyle[ name ],
			style = elem.style;

		// Avoid setting ret to empty string here
		// so we don't default to auto
		if ( ret == null && style && style[ name ] ) {
			ret = style[ name ];
		}

		// From the awesome hack by Dean Edwards
		// http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291

		// If we're not dealing with a regular pixel number
		// but a number that has a weird ending, we need to convert it to pixels
		// but not position css attributes, as those are proportional to the parent element instead
		// and we can't measure the parent instead because it might trigger a "stacking dolls" problem
		if ( rnumnonpx.test( ret ) && !rposition.test( name ) ) {

			// Remember the original values
			left = style.left;
			rsLeft = elem.runtimeStyle && elem.runtimeStyle.left;

			// Put in the new values to get a computed value out
			if ( rsLeft ) {
				elem.runtimeStyle.left = elem.currentStyle.left;
			}
			style.left = name === "fontSize" ? "1em" : ret;
			ret = style.pixelLeft + "px";

			// Revert the changed values
			style.left = left;
			if ( rsLeft ) {
				elem.runtimeStyle.left = rsLeft;
			}
		}

		return ret === "" ? "auto" : ret;
	};
}

function setPositiveNumber( elem, value, subtract ) {
	var matches = rnumsplit.exec( value );
	return matches ?
			Math.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || "px" ) :
			value;
}

function augmentWidthOrHeight( elem, name, extra, isBorderBox ) {
	var i = extra === ( isBorderBox ? "border" : "content" ) ?
		// If we already have the right measurement, avoid augmentation
		4 :
		// Otherwise initialize for horizontal or vertical properties
		name === "width" ? 1 : 0,

		val = 0;

	for ( ; i < 4; i += 2 ) {
		// both box models exclude margin, so add it if we want it
		if ( extra === "margin" ) {
			// we use jQuery.css instead of curCSS here
			// because of the reliableMarginRight CSS hook!
			val += jQuery.css( elem, extra + cssExpand[ i ], true );
		}

		// From this point on we use curCSS for maximum performance (relevant in animations)
		if ( isBorderBox ) {
			// border-box includes padding, so remove it if we want content
			if ( extra === "content" ) {
				val -= parseFloat( curCSS( elem, "padding" + cssExpand[ i ] ) ) || 0;
			}

			// at this point, extra isn't border nor margin, so remove border
			if ( extra !== "margin" ) {
				val -= parseFloat( curCSS( elem, "border" + cssExpand[ i ] + "Width" ) ) || 0;
			}
		} else {
			// at this point, extra isn't content, so add padding
			val += parseFloat( curCSS( elem, "padding" + cssExpand[ i ] ) ) || 0;

			// at this point, extra isn't content nor padding, so add border
			if ( extra !== "padding" ) {
				val += parseFloat( curCSS( elem, "border" + cssExpand[ i ] + "Width" ) ) || 0;
			}
		}
	}

	return val;
}

function getWidthOrHeight( elem, name, extra ) {

	// Start with offset property, which is equivalent to the border-box value
	var val = name === "width" ? elem.offsetWidth : elem.offsetHeight,
		valueIsBorderBox = true,
		isBorderBox = jQuery.support.boxSizing && jQuery.css( elem, "boxSizing" ) === "border-box";

	// some non-html elements return undefined for offsetWidth, so check for null/undefined
	// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285
	// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668
	if ( val <= 0 || val == null ) {
		// Fall back to computed then uncomputed css if necessary
		val = curCSS( elem, name );
		if ( val < 0 || val == null ) {
			val = elem.style[ name ];
		}

		// Computed unit is not pixels. Stop here and return.
		if ( rnumnonpx.test(val) ) {
			return val;
		}

		// we need the check for style in case a browser which returns unreliable values
		// for getComputedStyle silently falls back to the reliable elem.style
		valueIsBorderBox = isBorderBox && ( jQuery.support.boxSizingReliable || val === elem.style[ name ] );

		// Normalize "", auto, and prepare for extra
		val = parseFloat( val ) || 0;
	}

	// use the active box-sizing model to add/subtract irrelevant styles
	return ( val +
		augmentWidthOrHeight(
			elem,
			name,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox
		)
	) + "px";
}


// Try to determine the default display value of an element
function css_defaultDisplay( nodeName ) {
	if ( elemdisplay[ nodeName ] ) {
		return elemdisplay[ nodeName ];
	}

	var elem = jQuery( "<" + nodeName + ">" ).appendTo( document.body ),
		display = elem.css("display");
	elem.remove();

	// If the simple way fails,
	// get element's real default display by attaching it to a temp iframe
	if ( display === "none" || display === "" ) {
		// Use the already-created iframe if possible
		iframe = document.body.appendChild(
			iframe || jQuery.extend( document.createElement("iframe"), {
				frameBorder: 0,
				width: 0,
				height: 0
			})
		);

		// Create a cacheable copy of the iframe document on first call.
		// IE and Opera will allow us to reuse the iframeDoc without re-writing the fake HTML
		// document to it; WebKit & Firefox won't allow reusing the iframe document.
		if ( !iframeDoc || !iframe.createElement ) {
			iframeDoc = ( iframe.contentWindow || iframe.contentDocument ).document;
			iframeDoc.write("<!doctype html><html><body>");
			iframeDoc.close();
		}

		elem = iframeDoc.body.appendChild( iframeDoc.createElement(nodeName) );

		display = curCSS( elem, "display" );
		document.body.removeChild( iframe );
	}

	// Store the correct default display
	elemdisplay[ nodeName ] = display;

	return display;
}

jQuery.each([ "height", "width" ], function( i, name ) {
	jQuery.cssHooks[ name ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {
				// certain elements can have dimension info if we invisibly show them
				// however, it must have a current display style that would benefit from this
				if ( elem.offsetWidth === 0 && rdisplayswap.test( curCSS( elem, "display" ) ) ) {
					return jQuery.swap( elem, cssShow, function() {
						return getWidthOrHeight( elem, name, extra );
					});
				} else {
					return getWidthOrHeight( elem, name, extra );
				}
			}
		},

		set: function( elem, value, extra ) {
			return setPositiveNumber( elem, value, extra ?
				augmentWidthOrHeight(
					elem,
					name,
					extra,
					jQuery.support.boxSizing && jQuery.css( elem, "boxSizing" ) === "border-box"
				) : 0
			);
		}
	};
});

if ( !jQuery.support.opacity ) {
	jQuery.cssHooks.opacity = {
		get: function( elem, computed ) {
			// IE uses filters for opacity
			return ropacity.test( (computed && elem.currentStyle ? elem.currentStyle.filter : elem.style.filter) || "" ) ?
				( 0.01 * parseFloat( RegExp.$1 ) ) + "" :
				computed ? "1" : "";
		},

		set: function( elem, value ) {
			var style = elem.style,
				currentStyle = elem.currentStyle,
				opacity = jQuery.isNumeric( value ) ? "alpha(opacity=" + value * 100 + ")" : "",
				filter = currentStyle && currentStyle.filter || style.filter || "";

			// IE has trouble with opacity if it does not have layout
			// Force it by setting the zoom level
			style.zoom = 1;

			// if setting opacity to 1, and no other filters exist - attempt to remove filter attribute #6652
			if ( value >= 1 && jQuery.trim( filter.replace( ralpha, "" ) ) === "" &&
				style.removeAttribute ) {

				// Setting style.filter to null, "" & " " still leave "filter:" in the cssText
				// if "filter:" is present at all, clearType is disabled, we want to avoid this
				// style.removeAttribute is IE Only, but so apparently is this code path...
				style.removeAttribute( "filter" );

				// if there there is no filter style applied in a css rule, we are done
				if ( currentStyle && !currentStyle.filter ) {
					return;
				}
			}

			// otherwise, set new filter values
			style.filter = ralpha.test( filter ) ?
				filter.replace( ralpha, opacity ) :
				filter + " " + opacity;
		}
	};
}

// These hooks cannot be added until DOM ready because the support test
// for it is not run until after DOM ready
jQuery(function() {
	if ( !jQuery.support.reliableMarginRight ) {
		jQuery.cssHooks.marginRight = {
			get: function( elem, computed ) {
				// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
				// Work around by temporarily setting element display to inline-block
				return jQuery.swap( elem, { "display": "inline-block" }, function() {
					if ( computed ) {
						return curCSS( elem, "marginRight" );
					}
				});
			}
		};
	}

	// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
	// getComputedStyle returns percent when specified for top/left/bottom/right
	// rather than make the css module depend on the offset module, we just check for it here
	if ( !jQuery.support.pixelPosition && jQuery.fn.position ) {
		jQuery.each( [ "top", "left" ], function( i, prop ) {
			jQuery.cssHooks[ prop ] = {
				get: function( elem, computed ) {
					if ( computed ) {
						var ret = curCSS( elem, prop );
						// if curCSS returns percentage, fallback to offset
						return rnumnonpx.test( ret ) ? jQuery( elem ).position()[ prop ] + "px" : ret;
					}
				}
			};
		});
	}

});

if ( jQuery.expr && jQuery.expr.filters ) {
	jQuery.expr.filters.hidden = function( elem ) {
		return ( elem.offsetWidth === 0 && elem.offsetHeight === 0 ) || (!jQuery.support.reliableHiddenOffsets && ((elem.style && elem.style.display) || curCSS( elem, "display" )) === "none");
	};

	jQuery.expr.filters.visible = function( elem ) {
		return !jQuery.expr.filters.hidden( elem );
	};
}

// These hooks are used by animate to expand properties
jQuery.each({
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i,

				// assumes a single number if not a string
				parts = typeof value === "string" ? value.split(" ") : [ value ],
				expanded = {};

			for ( i = 0; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( !rmargin.test( prefix ) ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
});
var r20 = /%20/g,
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rinput = /^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,
	rselectTextarea = /^(?:select|textarea)/i;

jQuery.fn.extend({
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map(function(){
			return this.elements ? jQuery.makeArray( this.elements ) : this;
		})
		.filter(function(){
			return this.name && !this.disabled &&
				( this.checked || rselectTextarea.test( this.nodeName ) ||
					rinput.test( this.type ) );
		})
		.map(function( i, elem ){
			var val = jQuery( this ).val();

			return val == null ?
				null :
				jQuery.isArray( val ) ?
					jQuery.map( val, function( val, i ){
						return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
					}) :
					{ name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		}).get();
	}
});

//Serialize an array of form elements or a set of
//key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, value ) {
			// If value is a function, invoke it and return its value
			value = jQuery.isFunction( value ) ? value() : ( value == null ? "" : value );
			s[ s.length ] = encodeURIComponent( key ) + "=" + encodeURIComponent( value );
		};

	// Set traditional to true for jQuery <= 1.3.2 behavior.
	if ( traditional === undefined ) {
		traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;
	}

	// If an array was passed in, assume that it is an array of form elements.
	if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {
		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		});

	} else {
		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" ).replace( r20, "+" );
};

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( jQuery.isArray( obj ) ) {
		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {
				// Treat each array item as a scalar.
				add( prefix, v );

			} else {
				// If array item is non-scalar (array or object), encode its
				// numeric index to resolve deserialization ambiguity issues.
				// Note that rack (as of 1.0.0) can't currently deserialize
				// nested arrays properly, and attempting to do so may cause
				// a server error. Possible fixes are to modify rack's
				// deserialization algorithm or to provide an option or flag
				// to force array serialization to be shallow.
				buildParams( prefix + "[" + ( typeof v === "object" ? i : "" ) + "]", v, traditional, add );
			}
		});

	} else if ( !traditional && jQuery.type( obj ) === "object" ) {
		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {
		// Serialize scalar item.
		add( prefix, obj );
	}
}
var
	// Document location
	ajaxLocParts,
	ajaxLocation,

	rhash = /#.*$/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg, // IE leaves an \r character at EOL
	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,
	rquery = /\?/,
	rscript = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,
	rts = /([?&])_=[^&]*/,
	rurl = /^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/,

	// Keep a copy of the old load method
	_load = jQuery.fn.load,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = ["*/"] + ["*"];

// #8138, IE may throw an exception when accessing
// a field from window.location if document.domain has been set
try {
	ajaxLocation = location.href;
} catch( e ) {
	// Use the href attribute of an A element
	// since IE will modify it given document.location
	ajaxLocation = document.createElement( "a" );
	ajaxLocation.href = "";
	ajaxLocation = ajaxLocation.href;
}

// Segment location into parts
ajaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType, list, placeBefore,
			dataTypes = dataTypeExpression.toLowerCase().split( core_rspace ),
			i = 0,
			length = dataTypes.length;

		if ( jQuery.isFunction( func ) ) {
			// For each dataType in the dataTypeExpression
			for ( ; i < length; i++ ) {
				dataType = dataTypes[ i ];
				// We control if we're asked to add before
				// any existing element
				placeBefore = /^\+/.test( dataType );
				if ( placeBefore ) {
					dataType = dataType.substr( 1 ) || "*";
				}
				list = structure[ dataType ] = structure[ dataType ] || [];
				// then we add to the structure accordingly
				list[ placeBefore ? "unshift" : "push" ]( func );
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR,
		dataType /* internal */, inspected /* internal */ ) {

	dataType = dataType || options.dataTypes[ 0 ];
	inspected = inspected || {};

	inspected[ dataType ] = true;

	var selection,
		list = structure[ dataType ],
		i = 0,
		length = list ? list.length : 0,
		executeOnly = ( structure === prefilters );

	for ( ; i < length && ( executeOnly || !selection ); i++ ) {
		selection = list[ i ]( options, originalOptions, jqXHR );
		// If we got redirected to another dataType
		// we try there if executing only and not done already
		if ( typeof selection === "string" ) {
			if ( !executeOnly || inspected[ selection ] ) {
				selection = undefined;
			} else {
				options.dataTypes.unshift( selection );
				selection = inspectPrefiltersOrTransports(
						structure, options, originalOptions, jqXHR, selection, inspected );
			}
		}
	}
	// If we're only executing or nothing was selected
	// we try the catchall dataType if not done already
	if ( ( executeOnly || !selection ) && !inspected[ "*" ] ) {
		selection = inspectPrefiltersOrTransports(
				structure, options, originalOptions, jqXHR, "*", inspected );
	}
	// unnecessary when only executing (prefilters)
	// but it'll be ignored by the caller in that case
	return selection;
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};
	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}
}

jQuery.fn.load = function( url, params, callback ) {
	if ( typeof url !== "string" && _load ) {
		return _load.apply( this, arguments );
	}

	// Don't do a request if no elements are being requested
	if ( !this.length ) {
		return this;
	}

	var selector, type, response,
		self = this,
		off = url.indexOf(" ");

	if ( off >= 0 ) {
		selector = url.slice( off, url.length );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( jQuery.isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// Request the remote document
	jQuery.ajax({
		url: url,

		// if "type" variable is undefined, then "GET" method will be used
		type: type,
		dataType: "html",
		data: params,
		complete: function( jqXHR, status ) {
			if ( callback ) {
				self.each( callback, response || [ jqXHR.responseText, status, jqXHR ] );
			}
		}
	}).done(function( responseText ) {

		// Save response for use in complete callback
		response = arguments;

		// See if a selector was specified
		self.html( selector ?

			// Create a dummy div to hold the results
			jQuery("<div>")

				// inject the contents of the document in, removing the scripts
				// to avoid any 'Permission Denied' errors in IE
				.append( responseText.replace( rscript, "" ) )

				// Locate the specified elements
				.find( selector ) :

			// If not, just inject the full result
			responseText );

	});

	return this;
};

// Attach a bunch of functions for handling common AJAX events
jQuery.each( "ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split( " " ), function( i, o ){
	jQuery.fn[ o ] = function( f ){
		return this.on( o, f );
	};
});

jQuery.each( [ "get", "post" ], function( i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {
		// shift arguments if data argument was omitted
		if ( jQuery.isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		return jQuery.ajax({
			type: method,
			url: url,
			data: data,
			success: callback,
			dataType: type
		});
	};
});

jQuery.extend({

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		if ( settings ) {
			// Building a settings object
			ajaxExtend( target, jQuery.ajaxSettings );
		} else {
			// Extending ajaxSettings
			settings = target;
			target = jQuery.ajaxSettings;
		}
		ajaxExtend( target, settings );
		return target;
	},

	ajaxSettings: {
		url: ajaxLocation,
		isLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),
		global: true,
		type: "GET",
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",
		processData: true,
		async: true,
		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			xml: "application/xml, text/xml",
			html: "text/html",
			text: "text/plain",
			json: "application/json, text/javascript",
			"*": allTypes
		},

		contents: {
			xml: /xml/,
			html: /html/,
			json: /json/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText"
		},

		// List of data converters
		// 1) key format is "source_type destination_type" (a single space in-between)
		// 2) the catchall symbol "*" can be used for source_type
		converters: {

			// Convert anything to text
			"* text": window.String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": jQuery.parseJSON,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			context: true,
			url: true
		}
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var // ifModified key
			ifModifiedKey,
			// Response headers
			responseHeadersString,
			responseHeaders,
			// transport
			transport,
			// timeout handle
			timeoutTimer,
			// Cross-domain detection vars
			parts,
			// To know if global events are to be dispatched
			fireGlobals,
			// Loop variable
			i,
			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),
			// Callbacks context
			callbackContext = s.context || s,
			// Context for global events
			// It's the callbackContext if one was provided in the options
			// and if it's a DOM node or a jQuery collection
			globalEventContext = callbackContext !== s &&
				( callbackContext.nodeType || callbackContext instanceof jQuery ) ?
						jQuery( callbackContext ) : jQuery.event,
			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),
			// Status-dependent callbacks
			statusCode = s.statusCode || {},
			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},
			// The jqXHR state
			state = 0,
			// Default abort message
			strAbort = "canceled",
			// Fake xhr
			jqXHR = {

				readyState: 0,

				// Caches the header
				setRequestHeader: function( name, value ) {
					if ( !state ) {
						var lname = name.toLowerCase();
						name = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Raw string
				getAllResponseHeaders: function() {
					return state === 2 ? responseHeadersString : null;
				},

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( state === 2 ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[1].toLowerCase() ] = match[ 2 ];
							}
						}
						match = responseHeaders[ key.toLowerCase() ];
					}
					return match === undefined ? null : match;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( !state ) {
						s.mimeType = type;
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					statusText = statusText || strAbort;
					if ( transport ) {
						transport.abort( statusText );
					}
					done( 0, statusText );
					return this;
				}
			};

		// Callback for when everything is done
		// It is defined here because jslint complains if it is declared
		// at the end of the function (which would be more logical and readable)
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Called once
			if ( state === 2 ) {
				return;
			}

			// State is "done" now
			state = 2;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// If successful, handle type chaining
			if ( status >= 200 && status < 300 || status === 304 ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {

					modified = jqXHR.getResponseHeader("Last-Modified");
					if ( modified ) {
						jQuery.lastModified[ ifModifiedKey ] = modified;
					}
					modified = jqXHR.getResponseHeader("Etag");
					if ( modified ) {
						jQuery.etag[ ifModifiedKey ] = modified;
					}
				}

				// If not modified
				if ( status === 304 ) {

					statusText = "notmodified";
					isSuccess = true;

				// If we have data
				} else {

					isSuccess = ajaxConvert( s, response );
					statusText = isSuccess.state;
					success = isSuccess.data;
					error = isSuccess.error;
					isSuccess = !error;
				}
			} else {
				// We extract error from statusText
				// then normalize statusText and status for non-aborts
				error = statusText;
				if ( !statusText || status ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajax" + ( isSuccess ? "Success" : "Error" ),
						[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );
				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		// Attach deferreds
		deferred.promise( jqXHR );
		jqXHR.success = jqXHR.done;
		jqXHR.error = jqXHR.fail;
		jqXHR.complete = completeDeferred.add;

		// Status-dependent callbacks
		jqXHR.statusCode = function( map ) {
			if ( map ) {
				var tmp;
				if ( state < 2 ) {
					for ( tmp in map ) {
						statusCode[ tmp ] = [ statusCode[tmp], map[tmp] ];
					}
				} else {
					tmp = map[ jqXHR.status ];
					jqXHR.always( tmp );
				}
			}
			return this;
		};

		// Remove hash character (#7531: and string promotion)
		// Add protocol if not provided (#5866: IE7 issue with protocol-less urls)
		// We also use the url parameter if available
		s.url = ( ( url || s.url ) + "" ).replace( rhash, "" ).replace( rprotocol, ajaxLocParts[ 1 ] + "//" );

		// Extract dataTypes list
		s.dataTypes = jQuery.trim( s.dataType || "*" ).toLowerCase().split( core_rspace );

		// A cross-domain request is in order when we have a protocol:host:port mismatch
		if ( s.crossDomain == null ) {
			parts = rurl.exec( s.url.toLowerCase() ) || false;
			s.crossDomain = parts && ( parts.join(":") + ( parts[ 3 ] ? "" : parts[ 1 ] === "http:" ? 80 : 443 ) ) !==
				( ajaxLocParts.join(":") + ( ajaxLocParts[ 3 ] ? "" : ajaxLocParts[ 1 ] === "http:" ? 80 : 443 ) );
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( state === 2 ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		fireGlobals = s.global;

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// If data is available, append data to url
			if ( s.data ) {
				s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.data;
				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Get ifModifiedKey before adding the anti-cache parameter
			ifModifiedKey = s.url;

			// Add anti-cache in url if needed
			if ( s.cache === false ) {

				var ts = jQuery.now(),
					// try replacing _= if it is there
					ret = s.url.replace( rts, "$1_=" + ts );

				// if nothing was replaced, add timestamp to the end
				s.url = ret + ( ( ret === s.url ) ? ( rquery.test( s.url ) ? "&" : "?" ) + "_=" + ts : "" );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			ifModifiedKey = ifModifiedKey || s.url;
			if ( jQuery.lastModified[ ifModifiedKey ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ ifModifiedKey ] );
			}
			if ( jQuery.etag[ ifModifiedKey ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ ifModifiedKey ] );
			}
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?
				s.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {
				// Abort if not done already and return
				return jqXHR.abort();

		}

		// aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		for ( i in { success: 1, error: 1, complete: 1 } ) {
			jqXHR[ i ]( s[ i ] );
		}

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;
			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}
			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = setTimeout( function(){
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				state = 1;
				transport.send( requestHeaders, done );
			} catch (e) {
				// Propagate exception as error if not done
				if ( state < 2 ) {
					done( -1, e );
				// Simply rethrow otherwise
				} else {
					throw e;
				}
			}
		}

		return jqXHR;
	},

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {}

});

/* Handles responses to an ajax request:
 * - sets all responseXXX fields accordingly
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var ct, type, finalDataType, firstDataType,
		contents = s.contents,
		dataTypes = s.dataTypes,
		responseFields = s.responseFields;

	// Fill responseXXX fields
	for ( type in responseFields ) {
		if ( type in responses ) {
			jqXHR[ responseFields[type] ] = responses[ type ];
		}
	}

	// Remove auto dataType and get content-type in the process
	while( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "content-type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {
		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[0] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}
		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

// Chain conversions given the request and the original response
function ajaxConvert( s, response ) {

	var conv, conv2, current, tmp,
		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice(),
		prev = dataTypes[ 0 ],
		converters = {},
		i = 0;

	// Apply the dataFilter if provided
	if ( s.dataFilter ) {
		response = s.dataFilter( response, s.dataType );
	}

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	// Convert to each sequential dataType, tolerating list modification
	for ( ; (current = dataTypes[++i]); ) {

		// There's only work to do if current dataType is non-auto
		if ( current !== "*" ) {

			// Convert response if prev dataType is non-auto and differs from current
			if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split(" ");
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {
								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.splice( i--, 0, current );
								}

								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s["throws"] ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return { state: "parsererror", error: conv ? e : "No conversion from " + prev + " to " + current };
						}
					}
				}
			}

			// Update prev for next iteration
			prev = current;
		}
	}

	return { state: "success", data: response };
}
var oldCallbacks = [],
	rquestion = /\?/,
	rjsonp = /(=)\?(?=&|$)|\?\?/,
	nonce = jQuery.now();

// Default jsonp settings
jQuery.ajaxSetup({
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );
		this[ callback ] = true;
		return callback;
	}
});

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		data = s.data,
		url = s.url,
		hasCallback = s.jsonp !== false,
		replaceInUrl = hasCallback && rjsonp.test( url ),
		replaceInData = hasCallback && !replaceInUrl && typeof data === "string" &&
			!( s.contentType || "" ).indexOf("application/x-www-form-urlencoded") &&
			rjsonp.test( data );

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( s.dataTypes[ 0 ] === "jsonp" || replaceInUrl || replaceInData ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;
		overwritten = window[ callbackName ];

		// Insert callback into url or form data
		if ( replaceInUrl ) {
			s.url = url.replace( rjsonp, "$1" + callbackName );
		} else if ( replaceInData ) {
			s.data = data.replace( rjsonp, "$1" + callbackName );
		} else if ( hasCallback ) {
			s.url += ( rquestion.test( url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters["script json"] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always(function() {
			// Restore preexisting value
			window[ callbackName ] = overwritten;

			// Save back as free
			if ( s[ callbackName ] ) {
				// make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && jQuery.isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		});

		// Delegate to script
		return "script";
	}
});
// Install script dataType
jQuery.ajaxSetup({
	accepts: {
		script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /javascript|ecmascript/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
});

// Handle cache's special case and global
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
		s.global = false;
	}
});

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function(s) {

	// This transport only deals with cross domain requests
	if ( s.crossDomain ) {

		var script,
			head = document.head || document.getElementsByTagName( "head" )[0] || document.documentElement;

		return {

			send: function( _, callback ) {

				script = document.createElement( "script" );

				script.async = "async";

				if ( s.scriptCharset ) {
					script.charset = s.scriptCharset;
				}

				script.src = s.url;

				// Attach handlers for all browsers
				script.onload = script.onreadystatechange = function( _, isAbort ) {

					if ( isAbort || !script.readyState || /loaded|complete/.test( script.readyState ) ) {

						// Handle memory leak in IE
						script.onload = script.onreadystatechange = null;

						// Remove the script
						if ( head && script.parentNode ) {
							head.removeChild( script );
						}

						// Dereference the script
						script = undefined;

						// Callback if not abort
						if ( !isAbort ) {
							callback( 200, "success" );
						}
					}
				};
				// Use insertBefore instead of appendChild  to circumvent an IE6 bug.
				// This arises when a base node is used (#2709 and #4378).
				head.insertBefore( script, head.firstChild );
			},

			abort: function() {
				if ( script ) {
					script.onload( 0, 1 );
				}
			}
		};
	}
});
var xhrCallbacks,
	// #5280: Internet Explorer will keep connections alive if we don't abort on unload
	xhrOnUnloadAbort = window.ActiveXObject ? function() {
		// Abort all pending requests
		for ( var key in xhrCallbacks ) {
			xhrCallbacks[ key ]( 0, 1 );
		}
	} : false,
	xhrId = 0;

// Functions to create xhrs
function createStandardXHR() {
	try {
		return new window.XMLHttpRequest();
	} catch( e ) {}
}

function createActiveXHR() {
	try {
		return new window.ActiveXObject( "Microsoft.XMLHTTP" );
	} catch( e ) {}
}

// Create the request object
// (This is still attached to ajaxSettings for backward compatibility)
jQuery.ajaxSettings.xhr = window.ActiveXObject ?
	/* Microsoft failed to properly
	 * implement the XMLHttpRequest in IE7 (can't request local files),
	 * so we use the ActiveXObject when it is available
	 * Additionally XMLHttpRequest can be disabled in IE7/IE8 so
	 * we need a fallback.
	 */
	function() {
		return !this.isLocal && createStandardXHR() || createActiveXHR();
	} :
	// For all other browsers, use the standard XMLHttpRequest object
	createStandardXHR;

// Determine support properties
(function( xhr ) {
	jQuery.extend( jQuery.support, {
		ajax: !!xhr,
		cors: !!xhr && ( "withCredentials" in xhr )
	});
})( jQuery.ajaxSettings.xhr() );

// Create transport if the browser can provide an xhr
if ( jQuery.support.ajax ) {

	jQuery.ajaxTransport(function( s ) {
		// Cross domain only allowed if supported through XMLHttpRequest
		if ( !s.crossDomain || jQuery.support.cors ) {

			var callback;

			return {
				send: function( headers, complete ) {

					// Get a new xhr
					var handle, i,
						xhr = s.xhr();

					// Open the socket
					// Passing null username, generates a login popup on Opera (#2865)
					if ( s.username ) {
						xhr.open( s.type, s.url, s.async, s.username, s.password );
					} else {
						xhr.open( s.type, s.url, s.async );
					}

					// Apply custom fields if provided
					if ( s.xhrFields ) {
						for ( i in s.xhrFields ) {
							xhr[ i ] = s.xhrFields[ i ];
						}
					}

					// Override mime type if needed
					if ( s.mimeType && xhr.overrideMimeType ) {
						xhr.overrideMimeType( s.mimeType );
					}

					// X-Requested-With header
					// For cross-domain requests, seeing as conditions for a preflight are
					// akin to a jigsaw puzzle, we simply never set it to be sure.
					// (it can always be set on a per-request basis or even using ajaxSetup)
					// For same-domain requests, won't change header if already provided.
					if ( !s.crossDomain && !headers["X-Requested-With"] ) {
						headers[ "X-Requested-With" ] = "XMLHttpRequest";
					}

					// Need an extra try/catch for cross domain requests in Firefox 3
					try {
						for ( i in headers ) {
							xhr.setRequestHeader( i, headers[ i ] );
						}
					} catch( _ ) {}

					// Do send the request
					// This may raise an exception which is actually
					// handled in jQuery.ajax (so no try/catch here)
					xhr.send( ( s.hasContent && s.data ) || null );

					// Listener
					callback = function( _, isAbort ) {

						var status,
							statusText,
							responseHeaders,
							responses,
							xml;

						// Firefox throws exceptions when accessing properties
						// of an xhr when a network error occurred
						// http://helpful.knobs-dials.com/index.php/Component_returned_failure_code:_0x80040111_(NS_ERROR_NOT_AVAILABLE)
						try {

							// Was never called and is aborted or complete
							if ( callback && ( isAbort || xhr.readyState === 4 ) ) {

								// Only called once
								callback = undefined;

								// Do not keep as active anymore
								if ( handle ) {
									xhr.onreadystatechange = jQuery.noop;
									if ( xhrOnUnloadAbort ) {
										delete xhrCallbacks[ handle ];
									}
								}

								// If it's an abort
								if ( isAbort ) {
									// Abort it manually if needed
									if ( xhr.readyState !== 4 ) {
										xhr.abort();
									}
								} else {
									status = xhr.status;
									responseHeaders = xhr.getAllResponseHeaders();
									responses = {};
									xml = xhr.responseXML;

									// Construct response list
									if ( xml && xml.documentElement /* #4958 */ ) {
										responses.xml = xml;
									}

									// When requesting binary data, IE6-9 will throw an exception
									// on any attempt to access responseText (#11426)
									try {
										responses.text = xhr.responseText;
									} catch( _ ) {
									}

									// Firefox throws an exception when accessing
									// statusText for faulty cross-domain requests
									try {
										statusText = xhr.statusText;
									} catch( e ) {
										// We normalize with Webkit giving an empty statusText
										statusText = "";
									}

									// Filter status for non standard behaviors

									// If the request is local and we have data: assume a success
									// (success with no data won't get notified, that's the best we
									// can do given current implementations)
									if ( !status && s.isLocal && !s.crossDomain ) {
										status = responses.text ? 200 : 404;
									// IE - #1450: sometimes returns 1223 when it should be 204
									} else if ( status === 1223 ) {
										status = 204;
									}
								}
							}
						} catch( firefoxAccessException ) {
							if ( !isAbort ) {
								complete( -1, firefoxAccessException );
							}
						}

						// Call complete if needed
						if ( responses ) {
							complete( status, statusText, responses, responseHeaders );
						}
					};

					if ( !s.async ) {
						// if we're in sync mode we fire the callback
						callback();
					} else if ( xhr.readyState === 4 ) {
						// (IE6 & IE7) if it's in cache and has been
						// retrieved directly we need to fire the callback
						setTimeout( callback, 0 );
					} else {
						handle = ++xhrId;
						if ( xhrOnUnloadAbort ) {
							// Create the active xhrs callbacks list if needed
							// and attach the unload handler
							if ( !xhrCallbacks ) {
								xhrCallbacks = {};
								jQuery( window ).unload( xhrOnUnloadAbort );
							}
							// Add to list of active xhrs callbacks
							xhrCallbacks[ handle ] = callback;
						}
						xhr.onreadystatechange = callback;
					}
				},

				abort: function() {
					if ( callback ) {
						callback(0,1);
					}
				}
			};
		}
	});
}
var fxNow, timerId,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rfxnum = new RegExp( "^(?:([-+])=|)(" + core_pnum + ")([a-z%]*)$", "i" ),
	rrun = /queueHooks$/,
	animationPrefilters = [ defaultPrefilter ],
	tweeners = {
		"*": [function( prop, value ) {
			var end, unit,
				tween = this.createTween( prop, value ),
				parts = rfxnum.exec( value ),
				target = tween.cur(),
				start = +target || 0,
				scale = 1,
				maxIterations = 20;

			if ( parts ) {
				end = +parts[2];
				unit = parts[3] || ( jQuery.cssNumber[ prop ] ? "" : "px" );

				// We need to compute starting value
				if ( unit !== "px" && start ) {
					// Iteratively approximate from a nonzero starting point
					// Prefer the current property, because this process will be trivial if it uses the same units
					// Fallback to end or a simple constant
					start = jQuery.css( tween.elem, prop, true ) || end || 1;

					do {
						// If previous iteration zeroed out, double until we get *something*
						// Use a string for doubling factor so we don't accidentally see scale as unchanged below
						scale = scale || ".5";

						// Adjust and apply
						start = start / scale;
						jQuery.style( tween.elem, prop, start + unit );

					// Update scale, tolerating zero or NaN from tween.cur()
					// And breaking the loop if scale is unchanged or perfect, or if we've just had enough
					} while ( scale !== (scale = tween.cur() / target) && scale !== 1 && --maxIterations );
				}

				tween.unit = unit;
				tween.start = start;
				// If a +=/-= token was provided, we're doing a relative animation
				tween.end = parts[1] ? start + ( parts[1] + 1 ) * end : end;
			}
			return tween;
		}]
	};

// Animations created synchronously will run synchronously
function createFxNow() {
	setTimeout(function() {
		fxNow = undefined;
	}, 0 );
	return ( fxNow = jQuery.now() );
}

function createTweens( animation, props ) {
	jQuery.each( props, function( prop, value ) {
		var collection = ( tweeners[ prop ] || [] ).concat( tweeners[ "*" ] ),
			index = 0,
			length = collection.length;
		for ( ; index < length; index++ ) {
			if ( collection[ index ].call( animation, prop, value ) ) {

				// we're done with this property
				return;
			}
		}
	});
}

function Animation( elem, properties, options ) {
	var result,
		index = 0,
		tweenerIndex = 0,
		length = animationPrefilters.length,
		deferred = jQuery.Deferred().always( function() {
			// don't match elem in the :animated selector
			delete tick.elem;
		}),
		tick = function() {
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),
				percent = 1 - ( remaining / animation.duration || 0 ),
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length ; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ]);

			if ( percent < 1 && length ) {
				return remaining;
			} else {
				deferred.resolveWith( elem, [ animation ] );
				return false;
			}
		},
		animation = deferred.promise({
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, { specialEasing: {} }, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end, easing ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
						animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,
					// if we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;

				for ( ; index < length ; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// resolve when we played the last frame
				// otherwise, reject
				if ( gotoEnd ) {
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		}),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length ; index++ ) {
		result = animationPrefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			return result;
		}
	}

	createTweens( animation, props );

	if ( jQuery.isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	jQuery.fx.timer(
		jQuery.extend( tick, {
			anim: animation,
			queue: animation.opts.queue,
			elem: elem
		})
	);

	// attach callbacks from options
	return animation.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = jQuery.camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( jQuery.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// not quite $.extend, this wont overwrite keys already present.
			// also - reusing 'index' from above because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

jQuery.Animation = jQuery.extend( Animation, {

	tweener: function( props, callback ) {
		if ( jQuery.isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.split(" ");
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length ; index++ ) {
			prop = props[ index ];
			tweeners[ prop ] = tweeners[ prop ] || [];
			tweeners[ prop ].unshift( callback );
		}
	},

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			animationPrefilters.unshift( callback );
		} else {
			animationPrefilters.push( callback );
		}
	}
});

function defaultPrefilter( elem, props, opts ) {
	var index, prop, value, length, dataShow, tween, hooks, oldfire,
		anim = this,
		style = elem.style,
		orig = {},
		handled = [],
		hidden = elem.nodeType && isHidden( elem );

	// handle queue: false promises
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always(function() {
			// doing this makes sure that the complete handler will be called
			// before this completes
			anim.always(function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			});
		});
	}

	// height/width overflow pass
	if ( elem.nodeType === 1 && ( "height" in props || "width" in props ) ) {
		// Make sure that nothing sneaks out
		// Record all 3 overflow attributes because IE does not
		// change the overflow attribute when overflowX and
		// overflowY are set to the same value
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Set display property to inline-block for height/width
		// animations on inline elements that are having width/height animated
		if ( jQuery.css( elem, "display" ) === "inline" &&
				jQuery.css( elem, "float" ) === "none" ) {

			// inline-level elements accept inline-block;
			// block-level elements need to be inline with layout
			if ( !jQuery.support.inlineBlockNeedsLayout || css_defaultDisplay( elem.nodeName ) === "inline" ) {
				style.display = "inline-block";

			} else {
				style.zoom = 1;
			}
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		if ( !jQuery.support.shrinkWrapBlocks ) {
			anim.done(function() {
				style.overflow = opts.overflow[ 0 ];
				style.overflowX = opts.overflow[ 1 ];
				style.overflowY = opts.overflow[ 2 ];
			});
		}
	}


	// show/hide pass
	for ( index in props ) {
		value = props[ index ];
		if ( rfxtypes.exec( value ) ) {
			delete props[ index ];
			if ( value === ( hidden ? "hide" : "show" ) ) {
				continue;
			}
			handled.push( index );
		}
	}

	length = handled.length;
	if ( length ) {
		dataShow = jQuery._data( elem, "fxshow" ) || jQuery._data( elem, "fxshow", {} );
		if ( hidden ) {
			jQuery( elem ).show();
		} else {
			anim.done(function() {
				jQuery( elem ).hide();
			});
		}
		anim.done(function() {
			var prop;
			jQuery.removeData( elem, "fxshow", true );
			for ( prop in orig ) {
				jQuery.style( elem, prop, orig[ prop ] );
			}
		});
		for ( index = 0 ; index < length ; index++ ) {
			prop = handled[ index ];
			tween = anim.createTween( prop, hidden ? dataShow[ prop ] : 0 );
			orig[ prop ] = dataShow[ prop ] || jQuery.style( elem, prop );

			if ( !( prop in dataShow ) ) {
				dataShow[ prop ] = tween.start;
				if ( hidden ) {
					tween.end = tween.start;
					tween.start = prop === "width" || prop === "height" ? 1 : 0;
				}
			}
		}
	}
}

function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || "swing";
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			if ( tween.elem[ tween.prop ] != null &&
				(!tween.elem.style || tween.elem.style[ tween.prop ] == null) ) {
				return tween.elem[ tween.prop ];
			}

			// passing any value as a 4th parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails
			// so, simple values such as "10px" are parsed to Float.
			// complex values such as "rotate(1rad)" are returned as is.
			result = jQuery.css( tween.elem, tween.prop, false, "" );
			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {
			// use step hook for back compat - use cssHook if its there - use .style if its
			// available and use plain properties where available
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.style && ( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null || jQuery.cssHooks[ tween.prop ] ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Remove in 2.0 - this supports IE8's panic based approach
// to setting things on disconnected nodes

Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.each([ "toggle", "show", "hide" ], function( i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ||
			// special check for .toggle( handler, handler, ... )
			( !i && jQuery.isFunction( speed ) && jQuery.isFunction( easing ) ) ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
});

jQuery.fn.extend({
	fadeTo: function( speed, to, easing, callback ) {

		// show any hidden elements after setting opacity to 0
		return this.filter( isHidden ).css( "opacity", 0 ).show()

			// animate to the value specified
			.end().animate({ opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {
				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations resolve immediately
				if ( empty ) {
					anim.stop( true );
				}
			};

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue && type !== false ) {
			this.queue( type || "fx", [] );
		}

		return this.each(function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = jQuery._data( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && (type == null || timers[ index ].queue === type) ) {
					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// start the next in the queue if the last step wasn't forced
			// timers currently will call their complete callbacks, which will dequeue
			// but only if they were gotoEnd
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		});
	}
});

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		attrs = { height: type },
		i = 0;

	// if we include width, step value is 1 to do all cssExpand values,
	// if we don't include width, step value is 2 to skip over Left and Right
	includeWidth = includeWidth? 1 : 0;
	for( ; i < 4 ; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

// Generate shortcuts for custom animations
jQuery.each({
	slideDown: genFx("show"),
	slideUp: genFx("hide"),
	slideToggle: genFx("toggle"),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
});

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			jQuery.isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing
	};

	opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration :
		opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;

	// normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( jQuery.isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p*Math.PI ) / 2;
	}
};

jQuery.timers = [];
jQuery.fx = Tween.prototype.init;
jQuery.fx.tick = function() {
	var timer,
		timers = jQuery.timers,
		i = 0;

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];
		// Checks the timer has not already been removed
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
};

jQuery.fx.timer = function( timer ) {
	if ( timer() && jQuery.timers.push( timer ) && !timerId ) {
		timerId = setInterval( jQuery.fx.tick, jQuery.fx.interval );
	}
};

jQuery.fx.interval = 13;

jQuery.fx.stop = function() {
	clearInterval( timerId );
	timerId = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,
	// Default speed
	_default: 400
};

// Back Compat <1.8 extension point
jQuery.fx.step = {};

if ( jQuery.expr && jQuery.expr.filters ) {
	jQuery.expr.filters.animated = function( elem ) {
		return jQuery.grep(jQuery.timers, function( fn ) {
			return elem === fn.elem;
		}).length;
	};
}
var rroot = /^(?:body|html)$/i;

jQuery.fn.offset = function( options ) {
	if ( arguments.length ) {
		return options === undefined ?
			this :
			this.each(function( i ) {
				jQuery.offset.setOffset( this, options, i );
			});
	}

	var docElem, body, win, clientTop, clientLeft, scrollTop, scrollLeft,
		box = { top: 0, left: 0 },
		elem = this[ 0 ],
		doc = elem && elem.ownerDocument;

	if ( !doc ) {
		return;
	}

	if ( (body = doc.body) === elem ) {
		return jQuery.offset.bodyOffset( elem );
	}

	docElem = doc.documentElement;

	// Make sure it's not a disconnected DOM node
	if ( !jQuery.contains( docElem, elem ) ) {
		return box;
	}

	// If we don't have gBCR, just use 0,0 rather than error
	// BlackBerry 5, iOS 3 (original iPhone)
	if ( typeof elem.getBoundingClientRect !== "undefined" ) {
		box = elem.getBoundingClientRect();
	}
	win = getWindow( doc );
	clientTop  = docElem.clientTop  || body.clientTop  || 0;
	clientLeft = docElem.clientLeft || body.clientLeft || 0;
	scrollTop  = win.pageYOffset || docElem.scrollTop;
	scrollLeft = win.pageXOffset || docElem.scrollLeft;
	return {
		top: box.top  + scrollTop  - clientTop,
		left: box.left + scrollLeft - clientLeft
	};
};

jQuery.offset = {

	bodyOffset: function( body ) {
		var top = body.offsetTop,
			left = body.offsetLeft;

		if ( jQuery.support.doesNotIncludeMarginInBodyOffset ) {
			top  += parseFloat( jQuery.css(body, "marginTop") ) || 0;
			left += parseFloat( jQuery.css(body, "marginLeft") ) || 0;
		}

		return { top: top, left: left };
	},

	setOffset: function( elem, options, i ) {
		var position = jQuery.css( elem, "position" );

		// set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		var curElem = jQuery( elem ),
			curOffset = curElem.offset(),
			curCSSTop = jQuery.css( elem, "top" ),
			curCSSLeft = jQuery.css( elem, "left" ),
			calculatePosition = ( position === "absolute" || position === "fixed" ) && jQuery.inArray("auto", [curCSSTop, curCSSLeft]) > -1,
			props = {}, curPosition = {}, curTop, curLeft;

		// need to be able to calculate position if either top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;
		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( jQuery.isFunction( options ) ) {
			options = options.call( elem, i, curOffset );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );
		} else {
			curElem.css( props );
		}
	}
};


jQuery.fn.extend({

	position: function() {
		if ( !this[0] ) {
			return;
		}

		var elem = this[0],

		// Get *real* offsetParent
		offsetParent = this.offsetParent(),

		// Get correct offsets
		offset       = this.offset(),
		parentOffset = rroot.test(offsetParent[0].nodeName) ? { top: 0, left: 0 } : offsetParent.offset();

		// Subtract element margins
		// note: when an element has margin: auto the offsetLeft and marginLeft
		// are the same in Safari causing offset.left to incorrectly be 0
		offset.top  -= parseFloat( jQuery.css(elem, "marginTop") ) || 0;
		offset.left -= parseFloat( jQuery.css(elem, "marginLeft") ) || 0;

		// Add offsetParent borders
		parentOffset.top  += parseFloat( jQuery.css(offsetParent[0], "borderTopWidth") ) || 0;
		parentOffset.left += parseFloat( jQuery.css(offsetParent[0], "borderLeftWidth") ) || 0;

		// Subtract the two offsets
		return {
			top:  offset.top  - parentOffset.top,
			left: offset.left - parentOffset.left
		};
	},

	offsetParent: function() {
		return this.map(function() {
			var offsetParent = this.offsetParent || document.body;
			while ( offsetParent && (!rroot.test(offsetParent.nodeName) && jQuery.css(offsetParent, "position") === "static") ) {
				offsetParent = offsetParent.offsetParent;
			}
			return offsetParent || document.body;
		});
	}
});


// Create scrollLeft and scrollTop methods
jQuery.each( {scrollLeft: "pageXOffset", scrollTop: "pageYOffset"}, function( method, prop ) {
	var top = /Y/.test( prop );

	jQuery.fn[ method ] = function( val ) {
		return jQuery.access( this, function( elem, method, val ) {
			var win = getWindow( elem );

			if ( val === undefined ) {
				return win ? (prop in win) ? win[ prop ] :
					win.document.documentElement[ method ] :
					elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : jQuery( win ).scrollLeft(),
					 top ? val : jQuery( win ).scrollTop()
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length, null );
	};
});

function getWindow( elem ) {
	return jQuery.isWindow( elem ) ?
		elem :
		elem.nodeType === 9 ?
			elem.defaultView || elem.parentWindow :
			false;
}
// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name }, function( defaultExtra, funcName ) {
		// margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return jQuery.access( this, function( elem, type, value ) {
				var doc;

				if ( jQuery.isWindow( elem ) ) {
					// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there
					// isn't a whole lot we can do. See pull request at this URL for discussion:
					// https://github.com/jquery/jquery/pull/764
					return elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height], whichever is greatest
					// unfortunately, this causes bug #3838 in IE6/8 only, but there is currently no good, small way to fix it.
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?
					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, value, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable, null );
		};
	});
});
// Expose jQuery to the global object
window.jQuery = window.$ = jQuery;

// Expose jQuery as an AMD module, but only for AMD loaders that
// understand the issues with loading multiple versions of jQuery
// in a page that all might call define(). The loader will indicate
// they have special allowances for multiple jQuery versions by
// specifying define.amd.jQuery = true. Register as a named module,
// since jQuery can be concatenated with other files that may use define,
// but not use a proper concatenation script that understands anonymous
// AMD modules. A named AMD is safest and most robust way to register.
// Lowercase jquery is used because AMD module names are derived from
// file names, and jQuery is normally delivered in a lowercase file name.
// Do this after creating the global so that if an AMD module wants to call
// noConflict to hide this version of jQuery, it will work.
if ( typeof define === "function" && define.amd && define.amd.jQuery ) {
	define( "jquery", [], function () { return jQuery; } );
}

})( window );
 
/*! jQuery UI - v1.9.0 - 2012-10-24
* http://jqueryui.com
* Includes: jquery.ui.core.js, jquery.ui.widget.js, jquery.ui.mouse.js, jquery.ui.position.js, jquery.ui.draggable.js, jquery.ui.droppable.js, jquery.ui.resizable.js, jquery.ui.selectable.js, jquery.ui.sortable.js, jquery.ui.accordion.js, jquery.ui.autocomplete.js, jquery.ui.button.js, jquery.ui.datepicker.js, jquery.ui.dialog.js, jquery.ui.menu.js, jquery.ui.progressbar.js, jquery.ui.slider.js, jquery.ui.spinner.js, jquery.ui.tabs.js, jquery.ui.tooltip.js, jquery.ui.effect.js, jquery.ui.effect-blind.js, jquery.ui.effect-bounce.js, jquery.ui.effect-clip.js, jquery.ui.effect-drop.js, jquery.ui.effect-explode.js, jquery.ui.effect-fade.js, jquery.ui.effect-fold.js, jquery.ui.effect-highlight.js, jquery.ui.effect-pulsate.js, jquery.ui.effect-scale.js, jquery.ui.effect-shake.js, jquery.ui.effect-slide.js, jquery.ui.effect-transfer.js
* Copyright (c) 2012 jQuery Foundation and other contributors Licensed MIT */

(function( $, undefined ) {

var uuid = 0,
	runiqueId = /^ui-id-\d+$/;

// prevent duplicate loading
// this is only a problem because we proxy existing functions
// and we don't want to double proxy them
$.ui = $.ui || {};
if ( $.ui.version ) {
	return;
}

$.extend( $.ui, {
	version: "1.9.0",

	keyCode: {
		BACKSPACE: 8,
		COMMA: 188,
		DELETE: 46,
		DOWN: 40,
		END: 35,
		ENTER: 13,
		ESCAPE: 27,
		HOME: 36,
		LEFT: 37,
		NUMPAD_ADD: 107,
		NUMPAD_DECIMAL: 110,
		NUMPAD_DIVIDE: 111,
		NUMPAD_ENTER: 108,
		NUMPAD_MULTIPLY: 106,
		NUMPAD_SUBTRACT: 109,
		PAGE_DOWN: 34,
		PAGE_UP: 33,
		PERIOD: 190,
		RIGHT: 39,
		SPACE: 32,
		TAB: 9,
		UP: 38
	}
});

// plugins
$.fn.extend({
	_focus: $.fn.focus,
	focus: function( delay, fn ) {
		return typeof delay === "number" ?
			this.each(function() {
				var elem = this;
				setTimeout(function() {
					$( elem ).focus();
					if ( fn ) {
						fn.call( elem );
					}
				}, delay );
			}) :
			this._focus.apply( this, arguments );
	},

	scrollParent: function() {
		var scrollParent;
		if (($.browser.msie && (/(static|relative)/).test(this.css('position'))) || (/absolute/).test(this.css('position'))) {
			scrollParent = this.parents().filter(function() {
				return (/(relative|absolute|fixed)/).test($.css(this,'position')) && (/(auto|scroll)/).test($.css(this,'overflow')+$.css(this,'overflow-y')+$.css(this,'overflow-x'));
			}).eq(0);
		} else {
			scrollParent = this.parents().filter(function() {
				return (/(auto|scroll)/).test($.css(this,'overflow')+$.css(this,'overflow-y')+$.css(this,'overflow-x'));
			}).eq(0);
		}

		return (/fixed/).test(this.css('position')) || !scrollParent.length ? $(document) : scrollParent;
	},

	zIndex: function( zIndex ) {
		if ( zIndex !== undefined ) {
			return this.css( "zIndex", zIndex );
		}

		if ( this.length ) {
			var elem = $( this[ 0 ] ), position, value;
			while ( elem.length && elem[ 0 ] !== document ) {
				// Ignore z-index if position is set to a value where z-index is ignored by the browser
				// This makes behavior of this function consistent across browsers
				// WebKit always returns auto if the element is positioned
				position = elem.css( "position" );
				if ( position === "absolute" || position === "relative" || position === "fixed" ) {
					// IE returns 0 when zIndex is not specified
					// other browsers return a string
					// we ignore the case of nested elements with an explicit value of 0
					// <div style="z-index: -10;"><div style="z-index: 0;"></div></div>
					value = parseInt( elem.css( "zIndex" ), 10 );
					if ( !isNaN( value ) && value !== 0 ) {
						return value;
					}
				}
				elem = elem.parent();
			}
		}

		return 0;
	},

	uniqueId: function() {
		return this.each(function() {
			if ( !this.id ) {
				this.id = "ui-id-" + (++uuid);
			}
		});
	},

	removeUniqueId: function() {
		return this.each(function() {
			if ( runiqueId.test( this.id ) ) {
				$( this ).removeAttr( "id" );
			}
		});
	}
});

// support: jQuery <1.8
if ( !$( "<a>" ).outerWidth( 1 ).jquery ) {
	$.each( [ "Width", "Height" ], function( i, name ) {
		var side = name === "Width" ? [ "Left", "Right" ] : [ "Top", "Bottom" ],
			type = name.toLowerCase(),
			orig = {
				innerWidth: $.fn.innerWidth,
				innerHeight: $.fn.innerHeight,
				outerWidth: $.fn.outerWidth,
				outerHeight: $.fn.outerHeight
			};

		function reduce( elem, size, border, margin ) {
			$.each( side, function() {
				size -= parseFloat( $.css( elem, "padding" + this ) ) || 0;
				if ( border ) {
					size -= parseFloat( $.css( elem, "border" + this + "Width" ) ) || 0;
				}
				if ( margin ) {
					size -= parseFloat( $.css( elem, "margin" + this ) ) || 0;
				}
			});
			return size;
		}

		$.fn[ "inner" + name ] = function( size ) {
			if ( size === undefined ) {
				return orig[ "inner" + name ].call( this );
			}

			return this.each(function() {
				$( this ).css( type, reduce( this, size ) + "px" );
			});
		};

		$.fn[ "outer" + name] = function( size, margin ) {
			if ( typeof size !== "number" ) {
				return orig[ "outer" + name ].call( this, size );
			}

			return this.each(function() {
				$( this).css( type, reduce( this, size, true, margin ) + "px" );
			});
		};
	});
}

// selectors
function focusable( element, isTabIndexNotNaN ) {
	var map, mapName, img,
		nodeName = element.nodeName.toLowerCase();
	if ( "area" === nodeName ) {
		map = element.parentNode;
		mapName = map.name;
		if ( !element.href || !mapName || map.nodeName.toLowerCase() !== "map" ) {
			return false;
		}
		img = $( "img[usemap=#" + mapName + "]" )[0];
		return !!img && visible( img );
	}
	return ( /input|select|textarea|button|object/.test( nodeName ) ?
		!element.disabled :
		"a" === nodeName ?
			element.href || isTabIndexNotNaN :
			isTabIndexNotNaN) &&
		// the element and all of its ancestors must be visible
		visible( element );
}

function visible( element ) {
	return !$( element ).parents().andSelf().filter(function() {
		return $.css( this, "visibility" ) === "hidden" ||
			$.expr.filters.hidden( this );
	}).length;
}

$.extend( $.expr[ ":" ], {
	data: $.expr.createPseudo ?
		$.expr.createPseudo(function( dataName ) {
			return function( elem ) {
				return !!$.data( elem, dataName );
			};
		}) :
		// support: jQuery <1.8
		function( elem, i, match ) {
			return !!$.data( elem, match[ 3 ] );
		},

	focusable: function( element ) {
		return focusable( element, !isNaN( $.attr( element, "tabindex" ) ) );
	},

	tabbable: function( element ) {
		var tabIndex = $.attr( element, "tabindex" ),
			isTabIndexNaN = isNaN( tabIndex );
		return ( isTabIndexNaN || tabIndex >= 0 ) && focusable( element, !isTabIndexNaN );
	}
});

// support
$(function() {
	var body = document.body,
		div = body.appendChild( div = document.createElement( "div" ) );

	// access offsetHeight before setting the style to prevent a layout bug
	// in IE 9 which causes the element to continue to take up space even
	// after it is removed from the DOM (#8026)
	div.offsetHeight;

	$.extend( div.style, {
		minHeight: "100px",
		height: "auto",
		padding: 0,
		borderWidth: 0
	});

	$.support.minHeight = div.offsetHeight === 100;
	$.support.selectstart = "onselectstart" in div;

	// set display to none to avoid a layout bug in IE
	// http://dev.jquery.com/ticket/4014
	body.removeChild( div ).style.display = "none";
});





// deprecated

$.fn.extend({
	disableSelection: function() {
		return this.bind( ( $.support.selectstart ? "selectstart" : "mousedown" ) +
			".ui-disableSelection", function( event ) {
				event.preventDefault();
			});
	},

	enableSelection: function() {
		return this.unbind( ".ui-disableSelection" );
	}
});

$.extend( $.ui, {
	// $.ui.plugin is deprecated.  Use the proxy pattern instead.
	plugin: {
		add: function( module, option, set ) {
			var i,
				proto = $.ui[ module ].prototype;
			for ( i in set ) {
				proto.plugins[ i ] = proto.plugins[ i ] || [];
				proto.plugins[ i ].push( [ option, set[ i ] ] );
			}
		},
		call: function( instance, name, args ) {
			var i,
				set = instance.plugins[ name ];
			if ( !set || !instance.element[ 0 ].parentNode || instance.element[ 0 ].parentNode.nodeType === 11 ) {
				return;
			}

			for ( i = 0; i < set.length; i++ ) {
				if ( instance.options[ set[ i ][ 0 ] ] ) {
					set[ i ][ 1 ].apply( instance.element, args );
				}
			}
		}
	},

	contains: $.contains,

	// only used by resizable
	hasScroll: function( el, a ) {

		//If overflow is hidden, the element might have extra content, but the user wants to hide it
		if ( $( el ).css( "overflow" ) === "hidden") {
			return false;
		}

		var scroll = ( a && a === "left" ) ? "scrollLeft" : "scrollTop",
			has = false;

		if ( el[ scroll ] > 0 ) {
			return true;
		}

		// TODO: determine which cases actually cause this to happen
		// if the element doesn't have the scroll set, see if it's possible to
		// set the scroll
		el[ scroll ] = 1;
		has = ( el[ scroll ] > 0 );
		el[ scroll ] = 0;
		return has;
	},

	// these are odd functions, fix the API or move into individual plugins
	isOverAxis: function( x, reference, size ) {
		//Determines when x coordinate is over "b" element axis
		return ( x > reference ) && ( x < ( reference + size ) );
	},
	isOver: function( y, x, top, left, height, width ) {
		//Determines when x, y coordinates is over "b" element
		return $.ui.isOverAxis( y, top, height ) && $.ui.isOverAxis( x, left, width );
	}
});

})( jQuery );
(function( $, undefined ) {

var uuid = 0,
	slice = Array.prototype.slice,
	_cleanData = $.cleanData;
$.cleanData = function( elems ) {
	for ( var i = 0, elem; (elem = elems[i]) != null; i++ ) {
		try {
			$( elem ).triggerHandler( "remove" );
		// http://bugs.jquery.com/ticket/8235
		} catch( e ) {}
	}
	_cleanData( elems );
};

$.widget = function( name, base, prototype ) {
	var fullName, existingConstructor, constructor, basePrototype,
		namespace = name.split( "." )[ 0 ];

	name = name.split( "." )[ 1 ];
	fullName = namespace + "-" + name;

	if ( !prototype ) {
		prototype = base;
		base = $.Widget;
	}

	// create selector for plugin
	$.expr[ ":" ][ fullName.toLowerCase() ] = function( elem ) {
		return !!$.data( elem, fullName );
	};

	$[ namespace ] = $[ namespace ] || {};
	existingConstructor = $[ namespace ][ name ];
	constructor = $[ namespace ][ name ] = function( options, element ) {
		// allow instantiation without "new" keyword
		if ( !this._createWidget ) {
			return new constructor( options, element );
		}

		// allow instantiation without initializing for simple inheritance
		// must use "new" keyword (the code above always passes args)
		if ( arguments.length ) {
			this._createWidget( options, element );
		}
	};
	// extend with the existing constructor to carry over any static properties
	$.extend( constructor, existingConstructor, {
		version: prototype.version,
		// copy the object used to create the prototype in case we need to
		// redefine the widget later
		_proto: $.extend( {}, prototype ),
		// track widgets that inherit from this widget in case this widget is
		// redefined after a widget inherits from it
		_childConstructors: []
	});

	basePrototype = new base();
	// we need to make the options hash a property directly on the new instance
	// otherwise we'll modify the options hash on the prototype that we're
	// inheriting from
	basePrototype.options = $.widget.extend( {}, basePrototype.options );
	$.each( prototype, function( prop, value ) {
		if ( $.isFunction( value ) ) {
			prototype[ prop ] = (function() {
				var _super = function() {
						return base.prototype[ prop ].apply( this, arguments );
					},
					_superApply = function( args ) {
						return base.prototype[ prop ].apply( this, args );
					};
				return function() {
					var __super = this._super,
						__superApply = this._superApply,
						returnValue;

					this._super = _super;
					this._superApply = _superApply;

					returnValue = value.apply( this, arguments );

					this._super = __super;
					this._superApply = __superApply;

					return returnValue;
				};
			})();
		}
	});
	constructor.prototype = $.widget.extend( basePrototype, {
		// TODO: remove support for widgetEventPrefix
		// always use the name + a colon as the prefix, e.g., draggable:start
		// don't prefix for widgets that aren't DOM-based
		widgetEventPrefix: name
	}, prototype, {
		constructor: constructor,
		namespace: namespace,
		widgetName: name,
		// TODO remove widgetBaseClass, see #8155
		widgetBaseClass: fullName,
		widgetFullName: fullName
	});

	// If this widget is being redefined then we need to find all widgets that
	// are inheriting from it and redefine all of them so that they inherit from
	// the new version of this widget. We're essentially trying to replace one
	// level in the prototype chain.
	if ( existingConstructor ) {
		$.each( existingConstructor._childConstructors, function( i, child ) {
			var childPrototype = child.prototype;

			// redefine the child widget using the same prototype that was
			// originally used, but inherit from the new version of the base
			$.widget( childPrototype.namespace + "." + childPrototype.widgetName, constructor, child._proto );
		});
		// remove the list of existing child constructors from the old constructor
		// so the old child constructors can be garbage collected
		delete existingConstructor._childConstructors;
	} else {
		base._childConstructors.push( constructor );
	}

	$.widget.bridge( name, constructor );
};

$.widget.extend = function( target ) {
	var input = slice.call( arguments, 1 ),
		inputIndex = 0,
		inputLength = input.length,
		key,
		value;
	for ( ; inputIndex < inputLength; inputIndex++ ) {
		for ( key in input[ inputIndex ] ) {
			value = input[ inputIndex ][ key ];
			if (input[ inputIndex ].hasOwnProperty( key ) && value !== undefined ) {
				target[ key ] = $.isPlainObject( value ) ? $.widget.extend( {}, target[ key ], value ) : value;
			}
		}
	}
	return target;
};

$.widget.bridge = function( name, object ) {
	var fullName = object.prototype.widgetFullName;
	$.fn[ name ] = function( options ) {
		var isMethodCall = typeof options === "string",
			args = slice.call( arguments, 1 ),
			returnValue = this;

		// allow multiple hashes to be passed on init
		options = !isMethodCall && args.length ?
			$.widget.extend.apply( null, [ options ].concat(args) ) :
			options;

		if ( isMethodCall ) {
			this.each(function() {
				var methodValue,
					instance = $.data( this, fullName );
				if ( !instance ) {
					return $.error( "cannot call methods on " + name + " prior to initialization; " +
						"attempted to call method '" + options + "'" );
				}
				if ( !$.isFunction( instance[options] ) || options.charAt( 0 ) === "_" ) {
					return $.error( "no such method '" + options + "' for " + name + " widget instance" );
				}
				methodValue = instance[ options ].apply( instance, args );
				if ( methodValue !== instance && methodValue !== undefined ) {
					returnValue = methodValue && methodValue.jquery ?
						returnValue.pushStack( methodValue.get() ) :
						methodValue;
					return false;
				}
			});
		} else {
			this.each(function() {
				var instance = $.data( this, fullName );
				if ( instance ) {
					instance.option( options || {} )._init();
				} else {
					new object( options, this );
				}
			});
		}

		return returnValue;
	};
};

$.Widget = function( options, element ) {};
$.Widget._childConstructors = [];

$.Widget.prototype = {
	widgetName: "widget",
	widgetEventPrefix: "",
	defaultElement: "<div>",
	options: {
		disabled: false,

		// callbacks
		create: null
	},
	_createWidget: function( options, element ) {
		element = $( element || this.defaultElement || this )[ 0 ];
		this.element = $( element );
		this.uuid = uuid++;
		this.eventNamespace = "." + this.widgetName + this.uuid;
		this.options = $.widget.extend( {},
			this.options,
			this._getCreateOptions(),
			options );

		this.bindings = $();
		this.hoverable = $();
		this.focusable = $();

		if ( element !== this ) {
			// 1.9 BC for #7810
			// TODO remove dual storage
			$.data( element, this.widgetName, this );
			$.data( element, this.widgetFullName, this );
			this._on({ remove: "destroy" });
			this.document = $( element.style ?
				// element within the document
				element.ownerDocument :
				// element is window or document
				element.document || element );
			this.window = $( this.document[0].defaultView || this.document[0].parentWindow );
		}

		this._create();
		this._trigger( "create", null, this._getCreateEventData() );
		this._init();
	},
	_getCreateOptions: $.noop,
	_getCreateEventData: $.noop,
	_create: $.noop,
	_init: $.noop,

	destroy: function() {
		this._destroy();
		// we can probably remove the unbind calls in 2.0
		// all event bindings should go through this._on()
		this.element
			.unbind( this.eventNamespace )
			// 1.9 BC for #7810
			// TODO remove dual storage
			.removeData( this.widgetName )
			.removeData( this.widgetFullName )
			// support: jquery <1.6.3
			// http://bugs.jquery.com/ticket/9413
			.removeData( $.camelCase( this.widgetFullName ) );
		this.widget()
			.unbind( this.eventNamespace )
			.removeAttr( "aria-disabled" )
			.removeClass(
				this.widgetFullName + "-disabled " +
				"ui-state-disabled" );

		// clean up events and states
		this.bindings.unbind( this.eventNamespace );
		this.hoverable.removeClass( "ui-state-hover" );
		this.focusable.removeClass( "ui-state-focus" );
	},
	_destroy: $.noop,

	widget: function() {
		return this.element;
	},

	option: function( key, value ) {
		var options = key,
			parts,
			curOption,
			i;

		if ( arguments.length === 0 ) {
			// don't return a reference to the internal hash
			return $.widget.extend( {}, this.options );
		}

		if ( typeof key === "string" ) {
			// handle nested keys, e.g., "foo.bar" => { foo: { bar: ___ } }
			options = {};
			parts = key.split( "." );
			key = parts.shift();
			if ( parts.length ) {
				curOption = options[ key ] = $.widget.extend( {}, this.options[ key ] );
				for ( i = 0; i < parts.length - 1; i++ ) {
					curOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};
					curOption = curOption[ parts[ i ] ];
				}
				key = parts.pop();
				if ( value === undefined ) {
					return curOption[ key ] === undefined ? null : curOption[ key ];
				}
				curOption[ key ] = value;
			} else {
				if ( value === undefined ) {
					return this.options[ key ] === undefined ? null : this.options[ key ];
				}
				options[ key ] = value;
			}
		}

		this._setOptions( options );

		return this;
	},
	_setOptions: function( options ) {
		var key;

		for ( key in options ) {
			this._setOption( key, options[ key ] );
		}

		return this;
	},
	_setOption: function( key, value ) {
		this.options[ key ] = value;

		if ( key === "disabled" ) {
			this.widget()
				.toggleClass( this.widgetFullName + "-disabled ui-state-disabled", !!value )
				.attr( "aria-disabled", value );
			this.hoverable.removeClass( "ui-state-hover" );
			this.focusable.removeClass( "ui-state-focus" );
		}

		return this;
	},

	enable: function() {
		return this._setOption( "disabled", false );
	},
	disable: function() {
		return this._setOption( "disabled", true );
	},

	_on: function( element, handlers ) {
		// no element argument, shuffle and use this.element
		if ( !handlers ) {
			handlers = element;
			element = this.element;
		} else {
			// accept selectors, DOM elements
			element = $( element );
			this.bindings = this.bindings.add( element );
		}

		var instance = this;
		$.each( handlers, function( event, handler ) {
			function handlerProxy() {
				// allow widgets to customize the disabled handling
				// - disabled as an array instead of boolean
				// - disabled class as method for disabling individual parts
				if ( instance.options.disabled === true ||
						$( this ).hasClass( "ui-state-disabled" ) ) {
					return;
				}
				return ( typeof handler === "string" ? instance[ handler ] : handler )
					.apply( instance, arguments );
			}

			// copy the guid so direct unbinding works
			if ( typeof handler !== "string" ) {
				handlerProxy.guid = handler.guid =
					handler.guid || handlerProxy.guid || $.guid++;
			}

			var match = event.match( /^(\w+)\s*(.*)$/ ),
				eventName = match[1] + instance.eventNamespace,
				selector = match[2];
			if ( selector ) {
				instance.widget().delegate( selector, eventName, handlerProxy );
			} else {
				element.bind( eventName, handlerProxy );
			}
		});
	},

	_off: function( element, eventName ) {
		eventName = (eventName || "").split( " " ).join( this.eventNamespace + " " ) + this.eventNamespace;
		element.unbind( eventName ).undelegate( eventName );
	},

	_delay: function( handler, delay ) {
		function handlerProxy() {
			return ( typeof handler === "string" ? instance[ handler ] : handler )
				.apply( instance, arguments );
		}
		var instance = this;
		return setTimeout( handlerProxy, delay || 0 );
	},

	_hoverable: function( element ) {
		this.hoverable = this.hoverable.add( element );
		this._on( element, {
			mouseenter: function( event ) {
				$( event.currentTarget ).addClass( "ui-state-hover" );
			},
			mouseleave: function( event ) {
				$( event.currentTarget ).removeClass( "ui-state-hover" );
			}
		});
	},

	_focusable: function( element ) {
		this.focusable = this.focusable.add( element );
		this._on( element, {
			focusin: function( event ) {
				$( event.currentTarget ).addClass( "ui-state-focus" );
			},
			focusout: function( event ) {
				$( event.currentTarget ).removeClass( "ui-state-focus" );
			}
		});
	},

	_trigger: function( type, event, data ) {
		var prop, orig,
			callback = this.options[ type ];

		data = data || {};
		event = $.Event( event );
		event.type = ( type === this.widgetEventPrefix ?
			type :
			this.widgetEventPrefix + type ).toLowerCase();
		// the original event may come from any element
		// so we need to reset the target on the new event
		event.target = this.element[ 0 ];

		// copy original event properties over to the new event
		orig = event.originalEvent;
		if ( orig ) {
			for ( prop in orig ) {
				if ( !( prop in event ) ) {
					event[ prop ] = orig[ prop ];
				}
			}
		}

		this.element.trigger( event, data );
		return !( $.isFunction( callback ) &&
			callback.apply( this.element[0], [ event ].concat( data ) ) === false ||
			event.isDefaultPrevented() );
	}
};

$.each( { show: "fadeIn", hide: "fadeOut" }, function( method, defaultEffect ) {
	$.Widget.prototype[ "_" + method ] = function( element, options, callback ) {
		if ( typeof options === "string" ) {
			options = { effect: options };
		}
		var hasOptions,
			effectName = !options ?
				method :
				options === true || typeof options === "number" ?
					defaultEffect :
					options.effect || defaultEffect;
		options = options || {};
		if ( typeof options === "number" ) {
			options = { duration: options };
		}
		hasOptions = !$.isEmptyObject( options );
		options.complete = callback;
		if ( options.delay ) {
			element.delay( options.delay );
		}
		if ( hasOptions && $.effects && ( $.effects.effect[ effectName ] || $.uiBackCompat !== false && $.effects[ effectName ] ) ) {
			element[ method ]( options );
		} else if ( effectName !== method && element[ effectName ] ) {
			element[ effectName ]( options.duration, options.easing, callback );
		} else {
			element.queue(function( next ) {
				$( this )[ method ]();
				if ( callback ) {
					callback.call( element[ 0 ] );
				}
				next();
			});
		}
	};
});

// DEPRECATED
if ( $.uiBackCompat !== false ) {
	$.Widget.prototype._getCreateOptions = function() {
		return $.metadata && $.metadata.get( this.element[0] )[ this.widgetName ];
	};
}

})( jQuery );
(function( $, undefined ) {

var mouseHandled = false;
$( document ).mouseup( function( e ) {
	mouseHandled = false;
});

$.widget("ui.mouse", {
	version: "1.9.0",
	options: {
		cancel: 'input,textarea,button,select,option',
		distance: 1,
		delay: 0
	},
	_mouseInit: function() {
		var that = this;

		this.element
			.bind('mousedown.'+this.widgetName, function(event) {
				return that._mouseDown(event);
			})
			.bind('click.'+this.widgetName, function(event) {
				if (true === $.data(event.target, that.widgetName + '.preventClickEvent')) {
					$.removeData(event.target, that.widgetName + '.preventClickEvent');
					event.stopImmediatePropagation();
					return false;
				}
			});

		this.started = false;
	},

	// TODO: make sure destroying one instance of mouse doesn't mess with
	// other instances of mouse
	_mouseDestroy: function() {
		this.element.unbind('.'+this.widgetName);
		if ( this._mouseMoveDelegate ) {
			$(document)
				.unbind('mousemove.'+this.widgetName, this._mouseMoveDelegate)
				.unbind('mouseup.'+this.widgetName, this._mouseUpDelegate);
		}
	},

	_mouseDown: function(event) {
		// don't let more than one widget handle mouseStart
		if( mouseHandled ) { return; }

		// we may have missed mouseup (out of window)
		(this._mouseStarted && this._mouseUp(event));

		this._mouseDownEvent = event;

		var that = this,
			btnIsLeft = (event.which === 1),
			// event.target.nodeName works around a bug in IE 8 with
			// disabled inputs (#7620)
			elIsCancel = (typeof this.options.cancel === "string" && event.target.nodeName ? $(event.target).closest(this.options.cancel).length : false);
		if (!btnIsLeft || elIsCancel || !this._mouseCapture(event)) {
			return true;
		}

		this.mouseDelayMet = !this.options.delay;
		if (!this.mouseDelayMet) {
			this._mouseDelayTimer = setTimeout(function() {
				that.mouseDelayMet = true;
			}, this.options.delay);
		}

		if (this._mouseDistanceMet(event) && this._mouseDelayMet(event)) {
			this._mouseStarted = (this._mouseStart(event) !== false);
			if (!this._mouseStarted) {
				event.preventDefault();
				return true;
			}
		}

		// Click event may never have fired (Gecko & Opera)
		if (true === $.data(event.target, this.widgetName + '.preventClickEvent')) {
			$.removeData(event.target, this.widgetName + '.preventClickEvent');
		}

		// these delegates are required to keep context
		this._mouseMoveDelegate = function(event) {
			return that._mouseMove(event);
		};
		this._mouseUpDelegate = function(event) {
			return that._mouseUp(event);
		};
		$(document)
			.bind('mousemove.'+this.widgetName, this._mouseMoveDelegate)
			.bind('mouseup.'+this.widgetName, this._mouseUpDelegate);

		event.preventDefault();
		
		mouseHandled = true;
		return true;
	},

	_mouseMove: function(event) {
		// IE mouseup check - mouseup happened when mouse was out of window
		if ($.browser.msie && !(document.documentMode >= 9) && !event.button) {
			return this._mouseUp(event);
		}

		if (this._mouseStarted) {
			this._mouseDrag(event);
			return event.preventDefault();
		}

		if (this._mouseDistanceMet(event) && this._mouseDelayMet(event)) {
			this._mouseStarted =
				(this._mouseStart(this._mouseDownEvent, event) !== false);
			(this._mouseStarted ? this._mouseDrag(event) : this._mouseUp(event));
		}

		return !this._mouseStarted;
	},

	_mouseUp: function(event) {
		$(document)
			.unbind('mousemove.'+this.widgetName, this._mouseMoveDelegate)
			.unbind('mouseup.'+this.widgetName, this._mouseUpDelegate);

		if (this._mouseStarted) {
			this._mouseStarted = false;

			if (event.target === this._mouseDownEvent.target) {
				$.data(event.target, this.widgetName + '.preventClickEvent', true);
			}

			this._mouseStop(event);
		}

		return false;
	},

	_mouseDistanceMet: function(event) {
		return (Math.max(
				Math.abs(this._mouseDownEvent.pageX - event.pageX),
				Math.abs(this._mouseDownEvent.pageY - event.pageY)
			) >= this.options.distance
		);
	},

	_mouseDelayMet: function(event) {
		return this.mouseDelayMet;
	},

	// These are placeholder methods, to be overriden by extending plugin
	_mouseStart: function(event) {},
	_mouseDrag: function(event) {},
	_mouseStop: function(event) {},
	_mouseCapture: function(event) { return true; }
});

})(jQuery);
(function( $, undefined ) {

$.ui = $.ui || {};

var cachedScrollbarWidth,
	max = Math.max,
	abs = Math.abs,
	round = Math.round,
	rhorizontal = /left|center|right/,
	rvertical = /top|center|bottom/,
	roffset = /[\+\-]\d+%?/,
	rposition = /^\w+/,
	rpercent = /%$/,
	_position = $.fn.position;

function getOffsets( offsets, width, height ) {
	return [
		parseInt( offsets[ 0 ], 10 ) * ( rpercent.test( offsets[ 0 ] ) ? width / 100 : 1 ),
		parseInt( offsets[ 1 ], 10 ) * ( rpercent.test( offsets[ 1 ] ) ? height / 100 : 1 )
	];
}
function parseCss( element, property ) {
	return parseInt( $.css( element, property ), 10 ) || 0;
}

$.position = {
	scrollbarWidth: function() {
		if ( cachedScrollbarWidth !== undefined ) {
			return cachedScrollbarWidth;
		}
		var w1, w2,
			div = $( "<div style='display:block;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>" ),
			innerDiv = div.children()[0];

		$( "body" ).append( div );
		w1 = innerDiv.offsetWidth;
		div.css( "overflow", "scroll" );

		w2 = innerDiv.offsetWidth;

		if ( w1 === w2 ) {
			w2 = div[0].clientWidth;
		}

		div.remove();

		return (cachedScrollbarWidth = w1 - w2);
	},
	getScrollInfo: function( within ) {
		var overflowX = within.isWindow ? "" : within.element.css( "overflow-x" ),
			overflowY = within.isWindow ? "" : within.element.css( "overflow-y" ),
			hasOverflowX = overflowX === "scroll" ||
				( overflowX === "auto" && within.width < within.element[0].scrollWidth ),
			hasOverflowY = overflowY === "scroll" ||
				( overflowY === "auto" && within.height < within.element[0].scrollHeight );
		return {
			width: hasOverflowX ? $.position.scrollbarWidth() : 0,
			height: hasOverflowY ? $.position.scrollbarWidth() : 0
		};
	},
	getWithinInfo: function( element ) {
		var withinElement = $( element || window ),
			isWindow = $.isWindow( withinElement[0] );
		return {
			element: withinElement,
			isWindow: isWindow,
			offset: withinElement.offset() || { left: 0, top: 0 },
			scrollLeft: withinElement.scrollLeft(),
			scrollTop: withinElement.scrollTop(),
			width: isWindow ? withinElement.width() : withinElement.outerWidth(),
			height: isWindow ? withinElement.height() : withinElement.outerHeight()
		};
	}
};

$.fn.position = function( options ) {
	if ( !options || !options.of ) {
		return _position.apply( this, arguments );
	}

	// make a copy, we don't want to modify arguments
	options = $.extend( {}, options );

	var atOffset, targetWidth, targetHeight, targetOffset, basePosition,
		target = $( options.of ),
		within = $.position.getWithinInfo( options.within ),
		scrollInfo = $.position.getScrollInfo( within ),
		targetElem = target[0],
		collision = ( options.collision || "flip" ).split( " " ),
		offsets = {};

	if ( targetElem.nodeType === 9 ) {
		targetWidth = target.width();
		targetHeight = target.height();
		targetOffset = { top: 0, left: 0 };
	} else if ( $.isWindow( targetElem ) ) {
		targetWidth = target.width();
		targetHeight = target.height();
		targetOffset = { top: target.scrollTop(), left: target.scrollLeft() };
	} else if ( targetElem.preventDefault ) {
		// force left top to allow flipping
		options.at = "left top";
		targetWidth = targetHeight = 0;
		targetOffset = { top: targetElem.pageY, left: targetElem.pageX };
	} else {
		targetWidth = target.outerWidth();
		targetHeight = target.outerHeight();
		targetOffset = target.offset();
	}
	// clone to reuse original targetOffset later
	basePosition = $.extend( {}, targetOffset );

	// force my and at to have valid horizontal and vertical positions
	// if a value is missing or invalid, it will be converted to center
	$.each( [ "my", "at" ], function() {
		var pos = ( options[ this ] || "" ).split( " " ),
			horizontalOffset,
			verticalOffset;

		if ( pos.length === 1) {
			pos = rhorizontal.test( pos[ 0 ] ) ?
				pos.concat( [ "center" ] ) :
				rvertical.test( pos[ 0 ] ) ?
					[ "center" ].concat( pos ) :
					[ "center", "center" ];
		}
		pos[ 0 ] = rhorizontal.test( pos[ 0 ] ) ? pos[ 0 ] : "center";
		pos[ 1 ] = rvertical.test( pos[ 1 ] ) ? pos[ 1 ] : "center";

		// calculate offsets
		horizontalOffset = roffset.exec( pos[ 0 ] );
		verticalOffset = roffset.exec( pos[ 1 ] );
		offsets[ this ] = [
			horizontalOffset ? horizontalOffset[ 0 ] : 0,
			verticalOffset ? verticalOffset[ 0 ] : 0
		];

		// reduce to just the positions without the offsets
		options[ this ] = [
			rposition.exec( pos[ 0 ] )[ 0 ],
			rposition.exec( pos[ 1 ] )[ 0 ]
		];
	});

	// normalize collision option
	if ( collision.length === 1 ) {
		collision[ 1 ] = collision[ 0 ];
	}

	if ( options.at[ 0 ] === "right" ) {
		basePosition.left += targetWidth;
	} else if ( options.at[ 0 ] === "center" ) {
		basePosition.left += targetWidth / 2;
	}

	if ( options.at[ 1 ] === "bottom" ) {
		basePosition.top += targetHeight;
	} else if ( options.at[ 1 ] === "center" ) {
		basePosition.top += targetHeight / 2;
	}

	atOffset = getOffsets( offsets.at, targetWidth, targetHeight );
	basePosition.left += atOffset[ 0 ];
	basePosition.top += atOffset[ 1 ];

	return this.each(function() {
		var collisionPosition, using,
			elem = $( this ),
			elemWidth = elem.outerWidth(),
			elemHeight = elem.outerHeight(),
			marginLeft = parseCss( this, "marginLeft" ),
			marginTop = parseCss( this, "marginTop" ),
			collisionWidth = elemWidth + marginLeft + parseCss( this, "marginRight" ) + scrollInfo.width,
			collisionHeight = elemHeight + marginTop + parseCss( this, "marginBottom" ) + scrollInfo.height,
			position = $.extend( {}, basePosition ),
			myOffset = getOffsets( offsets.my, elem.outerWidth(), elem.outerHeight() );

		if ( options.my[ 0 ] === "right" ) {
			position.left -= elemWidth;
		} else if ( options.my[ 0 ] === "center" ) {
			position.left -= elemWidth / 2;
		}

		if ( options.my[ 1 ] === "bottom" ) {
			position.top -= elemHeight;
		} else if ( options.my[ 1 ] === "center" ) {
			position.top -= elemHeight / 2;
		}

		position.left += myOffset[ 0 ];
		position.top += myOffset[ 1 ];

		// if the browser doesn't support fractions, then round for consistent results
		if ( !$.support.offsetFractions ) {
			position.left = round( position.left );
			position.top = round( position.top );
		}

		collisionPosition = {
			marginLeft: marginLeft,
			marginTop: marginTop
		};

		$.each( [ "left", "top" ], function( i, dir ) {
			if ( $.ui.position[ collision[ i ] ] ) {
				$.ui.position[ collision[ i ] ][ dir ]( position, {
					targetWidth: targetWidth,
					targetHeight: targetHeight,
					elemWidth: elemWidth,
					elemHeight: elemHeight,
					collisionPosition: collisionPosition,
					collisionWidth: collisionWidth,
					collisionHeight: collisionHeight,
					offset: [ atOffset[ 0 ] + myOffset[ 0 ], atOffset [ 1 ] + myOffset[ 1 ] ],
					my: options.my,
					at: options.at,
					within: within,
					elem : elem
				});
			}
		});

		if ( $.fn.bgiframe ) {
			elem.bgiframe();
		}

		if ( options.using ) {
			// adds feedback as second argument to using callback, if present
			using = function( props ) {
				var left = targetOffset.left - position.left,
					right = left + targetWidth - elemWidth,
					top = targetOffset.top - position.top,
					bottom = top + targetHeight - elemHeight,
					feedback = {
						target: {
							element: target,
							left: targetOffset.left,
							top: targetOffset.top,
							width: targetWidth,
							height: targetHeight
						},
						element: {
							element: elem,
							left: position.left,
							top: position.top,
							width: elemWidth,
							height: elemHeight
						},
						horizontal: right < 0 ? "left" : left > 0 ? "right" : "center",
						vertical: bottom < 0 ? "top" : top > 0 ? "bottom" : "middle"
					};
				if ( targetWidth < elemWidth && abs( left + right ) < targetWidth ) {
					feedback.horizontal = "center";
				}
				if ( targetHeight < elemHeight && abs( top + bottom ) < targetHeight ) {
					feedback.vertical = "middle";
				}
				if ( max( abs( left ), abs( right ) ) > max( abs( top ), abs( bottom ) ) ) {
					feedback.important = "horizontal";
				} else {
					feedback.important = "vertical";
				}
				options.using.call( this, props, feedback );
			};
		}

		elem.offset( $.extend( position, { using: using } ) );
	});
};

$.ui.position = {
	fit: {
		left: function( position, data ) {
			var within = data.within,
				withinOffset = within.isWindow ? within.scrollLeft : within.offset.left,
				outerWidth = within.width,
				collisionPosLeft = position.left - data.collisionPosition.marginLeft,
				overLeft = withinOffset - collisionPosLeft,
				overRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset,
				newOverRight;

			// element is wider than within
			if ( data.collisionWidth > outerWidth ) {
				// element is initially over the left side of within
				if ( overLeft > 0 && overRight <= 0 ) {
					newOverRight = position.left + overLeft + data.collisionWidth - outerWidth - withinOffset;
					position.left += overLeft - newOverRight;
				// element is initially over right side of within
				} else if ( overRight > 0 && overLeft <= 0 ) {
					position.left = withinOffset;
				// element is initially over both left and right sides of within
				} else {
					if ( overLeft > overRight ) {
						position.left = withinOffset + outerWidth - data.collisionWidth;
					} else {
						position.left = withinOffset;
					}
				}
			// too far left -> align with left edge
			} else if ( overLeft > 0 ) {
				position.left += overLeft;
			// too far right -> align with right edge
			} else if ( overRight > 0 ) {
				position.left -= overRight;
			// adjust based on position and margin
			} else {
				position.left = max( position.left - collisionPosLeft, position.left );
			}
		},
		top: function( position, data ) {
			var within = data.within,
				withinOffset = within.isWindow ? within.scrollTop : within.offset.top,
				outerHeight = data.within.height,
				collisionPosTop = position.top - data.collisionPosition.marginTop,
				overTop = withinOffset - collisionPosTop,
				overBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset,
				newOverBottom;

			// element is taller than within
			if ( data.collisionHeight > outerHeight ) {
				// element is initially over the top of within
				if ( overTop > 0 && overBottom <= 0 ) {
					newOverBottom = position.top + overTop + data.collisionHeight - outerHeight - withinOffset;
					position.top += overTop - newOverBottom;
				// element is initially over bottom of within
				} else if ( overBottom > 0 && overTop <= 0 ) {
					position.top = withinOffset;
				// element is initially over both top and bottom of within
				} else {
					if ( overTop > overBottom ) {
						position.top = withinOffset + outerHeight - data.collisionHeight;
					} else {
						position.top = withinOffset;
					}
				}
			// too far up -> align with top
			} else if ( overTop > 0 ) {
				position.top += overTop;
			// too far down -> align with bottom edge
			} else if ( overBottom > 0 ) {
				position.top -= overBottom;
			// adjust based on position and margin
			} else {
				position.top = max( position.top - collisionPosTop, position.top );
			}
		}
	},
	flip: {
		left: function( position, data ) {
			var within = data.within,
				withinOffset = within.offset.left + within.scrollLeft,
				outerWidth = within.width,
				offsetLeft = within.isWindow ? within.scrollLeft : within.offset.left,
				collisionPosLeft = position.left - data.collisionPosition.marginLeft,
				overLeft = collisionPosLeft - offsetLeft,
				overRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,
				myOffset = data.my[ 0 ] === "left" ?
					-data.elemWidth :
					data.my[ 0 ] === "right" ?
						data.elemWidth :
						0,
				atOffset = data.at[ 0 ] === "left" ?
					data.targetWidth :
					data.at[ 0 ] === "right" ?
						-data.targetWidth :
						0,
				offset = -2 * data.offset[ 0 ],
				newOverRight,
				newOverLeft;

			if ( overLeft < 0 ) {
				newOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth - outerWidth - withinOffset;
				if ( newOverRight < 0 || newOverRight < abs( overLeft ) ) {
					position.left += myOffset + atOffset + offset;
				}
			}
			else if ( overRight > 0 ) {
				newOverLeft = position.left - data.collisionPosition.marginLeft + myOffset + atOffset + offset - offsetLeft;
				if ( newOverLeft > 0 || abs( newOverLeft ) < overRight ) {
					position.left += myOffset + atOffset + offset;
				}
			}
		},
		top: function( position, data ) {
			var within = data.within,
				withinOffset = within.offset.top + within.scrollTop,
				outerHeight = within.height,
				offsetTop = within.isWindow ? within.scrollTop : within.offset.top,
				collisionPosTop = position.top - data.collisionPosition.marginTop,
				overTop = collisionPosTop - offsetTop,
				overBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop,
				top = data.my[ 1 ] === "top",
				myOffset = top ?
					-data.elemHeight :
					data.my[ 1 ] === "bottom" ?
						data.elemHeight :
						0,
				atOffset = data.at[ 1 ] === "top" ?
					data.targetHeight :
					data.at[ 1 ] === "bottom" ?
						-data.targetHeight :
						0,
				offset = -2 * data.offset[ 1 ],
				newOverTop,
				newOverBottom;
			if ( overTop < 0 ) {
				newOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight - outerHeight - withinOffset;
				if ( ( position.top + myOffset + atOffset + offset) > overTop && ( newOverBottom < 0 || newOverBottom < abs( overTop ) ) ) {
					position.top += myOffset + atOffset + offset;
				}
			}
			else if ( overBottom > 0 ) {
				newOverTop = position.top -  data.collisionPosition.marginTop + myOffset + atOffset + offset - offsetTop;
				if ( ( position.top + myOffset + atOffset + offset) > overBottom && ( newOverTop > 0 || abs( newOverTop ) < overBottom ) ) {
					position.top += myOffset + atOffset + offset;
				}
			}
		}
	},
	flipfit: {
		left: function() {
			$.ui.position.flip.left.apply( this, arguments );
			$.ui.position.fit.left.apply( this, arguments );
		},
		top: function() {
			$.ui.position.flip.top.apply( this, arguments );
			$.ui.position.fit.top.apply( this, arguments );
		}
	}
};

// fraction support test
(function () {
	var testElement, testElementParent, testElementStyle, offsetLeft, i,
		body = document.getElementsByTagName( "body" )[ 0 ],
		div = document.createElement( "div" );

	//Create a "fake body" for testing based on method used in jQuery.support
	testElement = document.createElement( body ? "div" : "body" );
	testElementStyle = {
		visibility: "hidden",
		width: 0,
		height: 0,
		border: 0,
		margin: 0,
		background: "none"
	};
	if ( body ) {
		$.extend( testElementStyle, {
			position: "absolute",
			left: "-1000px",
			top: "-1000px"
		});
	}
	for ( i in testElementStyle ) {
		testElement.style[ i ] = testElementStyle[ i ];
	}
	testElement.appendChild( div );
	testElementParent = body || document.documentElement;
	testElementParent.insertBefore( testElement, testElementParent.firstChild );

	div.style.cssText = "position: absolute; left: 10.7432222px;";

	offsetLeft = $( div ).offset().left;
	$.support.offsetFractions = offsetLeft > 10 && offsetLeft < 11;

	testElement.innerHTML = "";
	testElementParent.removeChild( testElement );
})();

// DEPRECATED
if ( $.uiBackCompat !== false ) {
	// offset option
	(function( $ ) {
		var _position = $.fn.position;
		$.fn.position = function( options ) {
			if ( !options || !options.offset ) {
				return _position.call( this, options );
			}
			var offset = options.offset.split( " " ),
				at = options.at.split( " " );
			if ( offset.length === 1 ) {
				offset[ 1 ] = offset[ 0 ];
			}
			if ( /^\d/.test( offset[ 0 ] ) ) {
				offset[ 0 ] = "+" + offset[ 0 ];
			}
			if ( /^\d/.test( offset[ 1 ] ) ) {
				offset[ 1 ] = "+" + offset[ 1 ];
			}
			if ( at.length === 1 ) {
				if ( /left|center|right/.test( at[ 0 ] ) ) {
					at[ 1 ] = "center";
				} else {
					at[ 1 ] = at[ 0 ];
					at[ 0 ] = "center";
				}
			}
			return _position.call( this, $.extend( options, {
				at: at[ 0 ] + offset[ 0 ] + " " + at[ 1 ] + offset[ 1 ],
				offset: undefined
			} ) );
		};
	}( jQuery ) );
}

}( jQuery ) );
(function( $, undefined ) {

$.widget("ui.draggable", $.ui.mouse, {
	version: "1.9.0",
	widgetEventPrefix: "drag",
	options: {
		addClasses: true,
		appendTo: "parent",
		axis: false,
		connectToSortable: false,
		containment: false,
		cursor: "auto",
		cursorAt: false,
		grid: false,
		handle: false,
		helper: "original",
		iframeFix: false,
		opacity: false,
		refreshPositions: false,
		revert: false,
		revertDuration: 500,
		scope: "default",
		scroll: true,
		scrollSensitivity: 20,
		scrollSpeed: 20,
		snap: false,
		snapMode: "both",
		snapTolerance: 20,
		stack: false,
		zIndex: false
	},
	_create: function() {

		if (this.options.helper == 'original' && !(/^(?:r|a|f)/).test(this.element.css("position")))
			this.element[0].style.position = 'relative';

		(this.options.addClasses && this.element.addClass("ui-draggable"));
		(this.options.disabled && this.element.addClass("ui-draggable-disabled"));

		this._mouseInit();

	},

	_destroy: function() {
		this.element.removeClass( "ui-draggable ui-draggable-dragging ui-draggable-disabled" );
		this._mouseDestroy();
	},

	_mouseCapture: function(event) {

		var o = this.options;

		// among others, prevent a drag on a resizable-handle
		if (this.helper || o.disabled || $(event.target).is('.ui-resizable-handle'))
			return false;

		//Quit if we're not on a valid handle
		this.handle = this._getHandle(event);
		if (!this.handle)
			return false;
		
		$(o.iframeFix === true ? "iframe" : o.iframeFix).each(function() {
			$('<div class="ui-draggable-iframeFix" style="background: #fff;"></div>')
			.css({
				width: this.offsetWidth+"px", height: this.offsetHeight+"px",
				position: "absolute", opacity: "0.001", zIndex: 1000
			})
			.css($(this).offset())
			.appendTo("body");
		});

		return true;

	},

	_mouseStart: function(event) {

		var o = this.options;

		//Create and append the visible helper
		this.helper = this._createHelper(event);

		this.helper.addClass("ui-draggable-dragging");

		//Cache the helper size
		this._cacheHelperProportions();

		//If ddmanager is used for droppables, set the global draggable
		if($.ui.ddmanager)
			$.ui.ddmanager.current = this;

		/*
		 * - Position generation -
		 * This block generates everything position related - it's the core of draggables.
		 */

		//Cache the margins of the original element
		this._cacheMargins();

		//Store the helper's css position
		this.cssPosition = this.helper.css("position");
		this.scrollParent = this.helper.scrollParent();

		//The element's absolute position on the page minus margins
		this.offset = this.positionAbs = this.element.offset();
		this.offset = {
			top: this.offset.top - this.margins.top,
			left: this.offset.left - this.margins.left
		};

		$.extend(this.offset, {
			click: { //Where the click happened, relative to the element
				left: event.pageX - this.offset.left,
				top: event.pageY - this.offset.top
			},
			parent: this._getParentOffset(),
			relative: this._getRelativeOffset() //This is a relative to absolute position minus the actual position calculation - only used for relative positioned helper
		});

		//Generate the original position
		this.originalPosition = this.position = this._generatePosition(event);
		this.originalPageX = event.pageX;
		this.originalPageY = event.pageY;

		//Adjust the mouse offset relative to the helper if 'cursorAt' is supplied
		(o.cursorAt && this._adjustOffsetFromHelper(o.cursorAt));

		//Set a containment if given in the options
		if(o.containment)
			this._setContainment();

		//Trigger event + callbacks
		if(this._trigger("start", event) === false) {
			this._clear();
			return false;
		}

		//Recache the helper size
		this._cacheHelperProportions();

		//Prepare the droppable offsets
		if ($.ui.ddmanager && !o.dropBehaviour)
			$.ui.ddmanager.prepareOffsets(this, event);

		
		this._mouseDrag(event, true); //Execute the drag once - this causes the helper not to be visible before getting its correct position
		
		//If the ddmanager is used for droppables, inform the manager that dragging has started (see #5003)
		if ( $.ui.ddmanager ) $.ui.ddmanager.dragStart(this, event);
		
		return true;
	},

	_mouseDrag: function(event, noPropagation) {

		//Compute the helpers position
		this.position = this._generatePosition(event);
		this.positionAbs = this._convertPositionTo("absolute");

		//Call plugins and callbacks and use the resulting position if something is returned
		if (!noPropagation) {
			var ui = this._uiHash();
			if(this._trigger('drag', event, ui) === false) {
				this._mouseUp({});
				return false;
			}
			this.position = ui.position;
		}

		if(!this.options.axis || this.options.axis != "y") this.helper[0].style.left = this.position.left+'px';
		if(!this.options.axis || this.options.axis != "x") this.helper[0].style.top = this.position.top+'px';
		if($.ui.ddmanager) $.ui.ddmanager.drag(this, event);

		return false;
	},

	_mouseStop: function(event) {

		//If we are using droppables, inform the manager about the drop
		var dropped = false;
		if ($.ui.ddmanager && !this.options.dropBehaviour)
			dropped = $.ui.ddmanager.drop(this, event);

		//if a drop comes from outside (a sortable)
		if(this.dropped) {
			dropped = this.dropped;
			this.dropped = false;
		}
		
		//if the original element is no longer in the DOM don't bother to continue (see #8269)
		var element = this.element[0], elementInDom = false;
		while ( element && (element = element.parentNode) ) {
			if (element == document ) {
				elementInDom = true;
			}
		}
		if ( !elementInDom && this.options.helper === "original" )
			return false;

		if((this.options.revert == "invalid" && !dropped) || (this.options.revert == "valid" && dropped) || this.options.revert === true || ($.isFunction(this.options.revert) && this.options.revert.call(this.element, dropped))) {
			var that = this;
			$(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function() {
				if(that._trigger("stop", event) !== false) {
					that._clear();
				}
			});
		} else {
			if(this._trigger("stop", event) !== false) {
				this._clear();
			}
		}

		return false;
	},
	
	_mouseUp: function(event) {
		//Remove frame helpers
		$("div.ui-draggable-iframeFix").each(function() { 
			this.parentNode.removeChild(this); 
		});
		
		//If the ddmanager is used for droppables, inform the manager that dragging has stopped (see #5003)
		if( $.ui.ddmanager ) $.ui.ddmanager.dragStop(this, event);
		
		return $.ui.mouse.prototype._mouseUp.call(this, event);
	},
	
	cancel: function() {
		
		if(this.helper.is(".ui-draggable-dragging")) {
			this._mouseUp({});
		} else {
			this._clear();
		}
		
		return this;
		
	},

	_getHandle: function(event) {

		var handle = !this.options.handle || !$(this.options.handle, this.element).length ? true : false;
		$(this.options.handle, this.element)
			.find("*")
			.andSelf()
			.each(function() {
				if(this == event.target) handle = true;
			});

		return handle;

	},

	_createHelper: function(event) {

		var o = this.options;
		var helper = $.isFunction(o.helper) ? $(o.helper.apply(this.element[0], [event])) : (o.helper == 'clone' ? this.element.clone().removeAttr('id') : this.element);

		if(!helper.parents('body').length)
			helper.appendTo((o.appendTo == 'parent' ? this.element[0].parentNode : o.appendTo));

		if(helper[0] != this.element[0] && !(/(fixed|absolute)/).test(helper.css("position")))
			helper.css("position", "absolute");

		return helper;

	},

	_adjustOffsetFromHelper: function(obj) {
		if (typeof obj == 'string') {
			obj = obj.split(' ');
		}
		if ($.isArray(obj)) {
			obj = {left: +obj[0], top: +obj[1] || 0};
		}
		if ('left' in obj) {
			this.offset.click.left = obj.left + this.margins.left;
		}
		if ('right' in obj) {
			this.offset.click.left = this.helperProportions.width - obj.right + this.margins.left;
		}
		if ('top' in obj) {
			this.offset.click.top = obj.top + this.margins.top;
		}
		if ('bottom' in obj) {
			this.offset.click.top = this.helperProportions.height - obj.bottom + this.margins.top;
		}
	},

	_getParentOffset: function() {

		//Get the offsetParent and cache its position
		this.offsetParent = this.helper.offsetParent();
		var po = this.offsetParent.offset();

		// This is a special case where we need to modify a offset calculated on start, since the following happened:
		// 1. The position of the helper is absolute, so it's position is calculated based on the next positioned parent
		// 2. The actual offset parent is a child of the scroll parent, and the scroll parent isn't the document, which means that
		//    the scroll is included in the initial calculation of the offset of the parent, and never recalculated upon drag
		if(this.cssPosition == 'absolute' && this.scrollParent[0] != document && $.contains(this.scrollParent[0], this.offsetParent[0])) {
			po.left += this.scrollParent.scrollLeft();
			po.top += this.scrollParent.scrollTop();
		}

		if((this.offsetParent[0] == document.body) //This needs to be actually done for all browsers, since pageX/pageY includes this information
		|| (this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() == 'html' && $.browser.msie)) //Ugly IE fix
			po = { top: 0, left: 0 };

		return {
			top: po.top + (parseInt(this.offsetParent.css("borderTopWidth"),10) || 0),
			left: po.left + (parseInt(this.offsetParent.css("borderLeftWidth"),10) || 0)
		};

	},

	_getRelativeOffset: function() {

		if(this.cssPosition == "relative") {
			var p = this.element.position();
			return {
				top: p.top - (parseInt(this.helper.css("top"),10) || 0) + this.scrollParent.scrollTop(),
				left: p.left - (parseInt(this.helper.css("left"),10) || 0) + this.scrollParent.scrollLeft()
			};
		} else {
			return { top: 0, left: 0 };
		}

	},

	_cacheMargins: function() {
		this.margins = {
			left: (parseInt(this.element.css("marginLeft"),10) || 0),
			top: (parseInt(this.element.css("marginTop"),10) || 0),
			right: (parseInt(this.element.css("marginRight"),10) || 0),
			bottom: (parseInt(this.element.css("marginBottom"),10) || 0)
		};
	},

	_cacheHelperProportions: function() {
		this.helperProportions = {
			width: this.helper.outerWidth(),
			height: this.helper.outerHeight()
		};
	},

	_setContainment: function() {

		var o = this.options;
		if(o.containment == 'parent') o.containment = this.helper[0].parentNode;
		if(o.containment == 'document' || o.containment == 'window') this.containment = [
			o.containment == 'document' ? 0 : $(window).scrollLeft() - this.offset.relative.left - this.offset.parent.left,
			o.containment == 'document' ? 0 : $(window).scrollTop() - this.offset.relative.top - this.offset.parent.top,
			(o.containment == 'document' ? 0 : $(window).scrollLeft()) + $(o.containment == 'document' ? document : window).width() - this.helperProportions.width - this.margins.left,
			(o.containment == 'document' ? 0 : $(window).scrollTop()) + ($(o.containment == 'document' ? document : window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top
		];

		if(!(/^(document|window|parent)$/).test(o.containment) && o.containment.constructor != Array) {
			var c = $(o.containment);
			var ce = c[0]; if(!ce) return;
			var co = c.offset();
			var over = ($(ce).css("overflow") != 'hidden');

			this.containment = [
				(parseInt($(ce).css("borderLeftWidth"),10) || 0) + (parseInt($(ce).css("paddingLeft"),10) || 0),
				(parseInt($(ce).css("borderTopWidth"),10) || 0) + (parseInt($(ce).css("paddingTop"),10) || 0),
				(over ? Math.max(ce.scrollWidth,ce.offsetWidth) : ce.offsetWidth) - (parseInt($(ce).css("borderLeftWidth"),10) || 0) - (parseInt($(ce).css("paddingRight"),10) || 0) - this.helperProportions.width - this.margins.left - this.margins.right,
				(over ? Math.max(ce.scrollHeight,ce.offsetHeight) : ce.offsetHeight) - (parseInt($(ce).css("borderTopWidth"),10) || 0) - (parseInt($(ce).css("paddingBottom"),10) || 0) - this.helperProportions.height - this.margins.top  - this.margins.bottom
			];
			this.relative_container = c;

		} else if(o.containment.constructor == Array) {
			this.containment = o.containment;
		}

	},

	_convertPositionTo: function(d, pos) {

		if(!pos) pos = this.position;
		var mod = d == "absolute" ? 1 : -1;
		var o = this.options, scroll = this.cssPosition == 'absolute' && !(this.scrollParent[0] != document && $.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent, scrollIsRootNode = (/(html|body)/i).test(scroll[0].tagName);

		return {
			top: (
				pos.top																	// The absolute mouse position
				+ this.offset.relative.top * mod										// Only for relative positioned nodes: Relative offset from element to offset parent
				+ this.offset.parent.top * mod											// The offsetParent's offset without borders (offset + border)
				- ( ( this.cssPosition == 'fixed' ? -this.scrollParent.scrollTop() : ( scrollIsRootNode ? 0 : scroll.scrollTop() ) ) * mod)
			),
			left: (
				pos.left																// The absolute mouse position
				+ this.offset.relative.left * mod										// Only for relative positioned nodes: Relative offset from element to offset parent
				+ this.offset.parent.left * mod											// The offsetParent's offset without borders (offset + border)
				- ( ( this.cssPosition == 'fixed' ? -this.scrollParent.scrollLeft() : scrollIsRootNode ? 0 : scroll.scrollLeft() ) * mod)
			)
		};

	},

	_generatePosition: function(event) {

		var o = this.options, scroll = this.cssPosition == 'absolute' && !(this.scrollParent[0] != document && $.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent, scrollIsRootNode = (/(html|body)/i).test(scroll[0].tagName);
		var pageX = event.pageX;
		var pageY = event.pageY;

		/*
		 * - Position constraining -
		 * Constrain the position to a mix of grid, containment.
		 */

		if(this.originalPosition) { //If we are not dragging yet, we won't check for options
			var containment;
			if(this.containment) {
			if (this.relative_container){
				var co = this.relative_container.offset();
				containment = [ this.containment[0] + co.left,
					this.containment[1] + co.top,
					this.containment[2] + co.left,
					this.containment[3] + co.top ];
			}
			else {
				containment = this.containment;
			}

				if(event.pageX - this.offset.click.left < containment[0]) pageX = containment[0] + this.offset.click.left;
				if(event.pageY - this.offset.click.top < containment[1]) pageY = containment[1] + this.offset.click.top;
				if(event.pageX - this.offset.click.left > containment[2]) pageX = containment[2] + this.offset.click.left;
				if(event.pageY - this.offset.click.top > containment[3]) pageY = containment[3] + this.offset.click.top;
			}

			if(o.grid) {
				//Check for grid elements set to 0 to prevent divide by 0 error causing invalid argument errors in IE (see ticket #6950)
				var top = o.grid[1] ? this.originalPageY + Math.round((pageY - this.originalPageY) / o.grid[1]) * o.grid[1] : this.originalPageY;
				pageY = containment ? (!(top - this.offset.click.top < containment[1] || top - this.offset.click.top > containment[3]) ? top : (!(top - this.offset.click.top < containment[1]) ? top - o.grid[1] : top + o.grid[1])) : top;

				var left = o.grid[0] ? this.originalPageX + Math.round((pageX - this.originalPageX) / o.grid[0]) * o.grid[0] : this.originalPageX;
				pageX = containment ? (!(left - this.offset.click.left < containment[0] || left - this.offset.click.left > containment[2]) ? left : (!(left - this.offset.click.left < containment[0]) ? left - o.grid[0] : left + o.grid[0])) : left;
			}

		}

		return {
			top: (
				pageY																// The absolute mouse position
				- this.offset.click.top													// Click offset (relative to the element)
				- this.offset.relative.top												// Only for relative positioned nodes: Relative offset from element to offset parent
				- this.offset.parent.top												// The offsetParent's offset without borders (offset + border)
				+ ( ( this.cssPosition == 'fixed' ? -this.scrollParent.scrollTop() : ( scrollIsRootNode ? 0 : scroll.scrollTop() ) ))
			),
			left: (
				pageX																// The absolute mouse position
				- this.offset.click.left												// Click offset (relative to the element)
				- this.offset.relative.left												// Only for relative positioned nodes: Relative offset from element to offset parent
				- this.offset.parent.left												// The offsetParent's offset without borders (offset + border)
				+ ( ( this.cssPosition == 'fixed' ? -this.scrollParent.scrollLeft() : scrollIsRootNode ? 0 : scroll.scrollLeft() ))
			)
		};

	},

	_clear: function() {
		this.helper.removeClass("ui-draggable-dragging");
		if(this.helper[0] != this.element[0] && !this.cancelHelperRemoval) this.helper.remove();
		//if($.ui.ddmanager) $.ui.ddmanager.current = null;
		this.helper = null;
		this.cancelHelperRemoval = false;
	},

	// From now on bulk stuff - mainly helpers

	_trigger: function(type, event, ui) {
		ui = ui || this._uiHash();
		$.ui.plugin.call(this, type, [event, ui]);
		if(type == "drag") this.positionAbs = this._convertPositionTo("absolute"); //The absolute position has to be recalculated after plugins
		return $.Widget.prototype._trigger.call(this, type, event, ui);
	},

	plugins: {},

	_uiHash: function(event) {
		return {
			helper: this.helper,
			position: this.position,
			originalPosition: this.originalPosition,
			offset: this.positionAbs
		};
	}

});

$.ui.plugin.add("draggable", "connectToSortable", {
	start: function(event, ui) {

		var inst = $(this).data("draggable"), o = inst.options,
			uiSortable = $.extend({}, ui, { item: inst.element });
		inst.sortables = [];
		$(o.connectToSortable).each(function() {
			var sortable = $.data(this, 'sortable');
			if (sortable && !sortable.options.disabled) {
				inst.sortables.push({
					instance: sortable,
					shouldRevert: sortable.options.revert
				});
				sortable.refreshPositions();	// Call the sortable's refreshPositions at drag start to refresh the containerCache since the sortable container cache is used in drag and needs to be up to date (this will ensure it's initialised as well as being kept in step with any changes that might have happened on the page).
				sortable._trigger("activate", event, uiSortable);
			}
		});

	},
	stop: function(event, ui) {

		//If we are still over the sortable, we fake the stop event of the sortable, but also remove helper
		var inst = $(this).data("draggable"),
			uiSortable = $.extend({}, ui, { item: inst.element });

		$.each(inst.sortables, function() {
			if(this.instance.isOver) {

				this.instance.isOver = 0;

				inst.cancelHelperRemoval = true; //Don't remove the helper in the draggable instance
				this.instance.cancelHelperRemoval = false; //Remove it in the sortable instance (so sortable plugins like revert still work)

				//The sortable revert is supported, and we have to set a temporary dropped variable on the draggable to support revert: 'valid/invalid'
				if(this.shouldRevert) this.instance.options.revert = true;

				//Trigger the stop of the sortable
				this.instance._mouseStop(event);

				this.instance.options.helper = this.instance.options._helper;

				//If the helper has been the original item, restore properties in the sortable
				if(inst.options.helper == 'original')
					this.instance.currentItem.css({ top: 'auto', left: 'auto' });

			} else {
				this.instance.cancelHelperRemoval = false; //Remove the helper in the sortable instance
				this.instance._trigger("deactivate", event, uiSortable);
			}

		});

	},
	drag: function(event, ui) {

		var inst = $(this).data("draggable"), that = this;

		var checkPos = function(o) {
			var dyClick = this.offset.click.top, dxClick = this.offset.click.left;
			var helperTop = this.positionAbs.top, helperLeft = this.positionAbs.left;
			var itemHeight = o.height, itemWidth = o.width;
			var itemTop = o.top, itemLeft = o.left;

			return $.ui.isOver(helperTop + dyClick, helperLeft + dxClick, itemTop, itemLeft, itemHeight, itemWidth);
		};

		$.each(inst.sortables, function(i) {
			
			//Copy over some variables to allow calling the sortable's native _intersectsWith
			this.instance.positionAbs = inst.positionAbs;
			this.instance.helperProportions = inst.helperProportions;
			this.instance.offset.click = inst.offset.click;
			
			if(this.instance._intersectsWith(this.instance.containerCache)) {

				//If it intersects, we use a little isOver variable and set it once, so our move-in stuff gets fired only once
				if(!this.instance.isOver) {

					this.instance.isOver = 1;
					//Now we fake the start of dragging for the sortable instance,
					//by cloning the list group item, appending it to the sortable and using it as inst.currentItem
					//We can then fire the start event of the sortable with our passed browser event, and our own helper (so it doesn't create a new one)
					this.instance.currentItem = $(that).clone().removeAttr('id').appendTo(this.instance.element).data("sortable-item", true);
					this.instance.options._helper = this.instance.options.helper; //Store helper option to later restore it
					this.instance.options.helper = function() { return ui.helper[0]; };

					event.target = this.instance.currentItem[0];
					this.instance._mouseCapture(event, true);
					this.instance._mouseStart(event, true, true);

					//Because the browser event is way off the new appended portlet, we modify a couple of variables to reflect the changes
					this.instance.offset.click.top = inst.offset.click.top;
					this.instance.offset.click.left = inst.offset.click.left;
					this.instance.offset.parent.left -= inst.offset.parent.left - this.instance.offset.parent.left;
					this.instance.offset.parent.top -= inst.offset.parent.top - this.instance.offset.parent.top;

					inst._trigger("toSortable", event);
					inst.dropped = this.instance.element; //draggable revert needs that
					//hack so receive/update callbacks work (mostly)
					inst.currentItem = inst.element;
					this.instance.fromOutside = inst;

				}

				//Provided we did all the previous steps, we can fire the drag event of the sortable on every draggable drag, when it intersects with the sortable
				if(this.instance.currentItem) this.instance._mouseDrag(event);

			} else {

				//If it doesn't intersect with the sortable, and it intersected before,
				//we fake the drag stop of the sortable, but make sure it doesn't remove the helper by using cancelHelperRemoval
				if(this.instance.isOver) {

					this.instance.isOver = 0;
					this.instance.cancelHelperRemoval = true;
					
					//Prevent reverting on this forced stop
					this.instance.options.revert = false;
					
					// The out event needs to be triggered independently
					this.instance._trigger('out', event, this.instance._uiHash(this.instance));
					
					this.instance._mouseStop(event, true);
					this.instance.options.helper = this.instance.options._helper;

					//Now we remove our currentItem, the list group clone again, and the placeholder, and animate the helper back to it's original size
					this.instance.currentItem.remove();
					if(this.instance.placeholder) this.instance.placeholder.remove();

					inst._trigger("fromSortable", event);
					inst.dropped = false; //draggable revert needs that
				}

			};

		});

	}
});

$.ui.plugin.add("draggable", "cursor", {
	start: function(event, ui) {
		var t = $('body'), o = $(this).data('draggable').options;
		if (t.css("cursor")) o._cursor = t.css("cursor");
		t.css("cursor", o.cursor);
	},
	stop: function(event, ui) {
		var o = $(this).data('draggable').options;
		if (o._cursor) $('body').css("cursor", o._cursor);
	}
});

$.ui.plugin.add("draggable", "opacity", {
	start: function(event, ui) {
		var t = $(ui.helper), o = $(this).data('draggable').options;
		if(t.css("opacity")) o._opacity = t.css("opacity");
		t.css('opacity', o.opacity);
	},
	stop: function(event, ui) {
		var o = $(this).data('draggable').options;
		if(o._opacity) $(ui.helper).css('opacity', o._opacity);
	}
});

$.ui.plugin.add("draggable", "scroll", {
	start: function(event, ui) {
		var i = $(this).data("draggable");
		if(i.scrollParent[0] != document && i.scrollParent[0].tagName != 'HTML') i.overflowOffset = i.scrollParent.offset();
	},
	drag: function(event, ui) {

		var i = $(this).data("draggable"), o = i.options, scrolled = false;

		if(i.scrollParent[0] != document && i.scrollParent[0].tagName != 'HTML') {

			if(!o.axis || o.axis != 'x') {
				if((i.overflowOffset.top + i.scrollParent[0].offsetHeight) - event.pageY < o.scrollSensitivity)
					i.scrollParent[0].scrollTop = scrolled = i.scrollParent[0].scrollTop + o.scrollSpeed;
				else if(event.pageY - i.overflowOffset.top < o.scrollSensitivity)
					i.scrollParent[0].scrollTop = scrolled = i.scrollParent[0].scrollTop - o.scrollSpeed;
			}

			if(!o.axis || o.axis != 'y') {
				if((i.overflowOffset.left + i.scrollParent[0].offsetWidth) - event.pageX < o.scrollSensitivity)
					i.scrollParent[0].scrollLeft = scrolled = i.scrollParent[0].scrollLeft + o.scrollSpeed;
				else if(event.pageX - i.overflowOffset.left < o.scrollSensitivity)
					i.scrollParent[0].scrollLeft = scrolled = i.scrollParent[0].scrollLeft - o.scrollSpeed;
			}

		} else {

			if(!o.axis || o.axis != 'x') {
				if(event.pageY - $(document).scrollTop() < o.scrollSensitivity)
					scrolled = $(document).scrollTop($(document).scrollTop() - o.scrollSpeed);
				else if($(window).height() - (event.pageY - $(document).scrollTop()) < o.scrollSensitivity)
					scrolled = $(document).scrollTop($(document).scrollTop() + o.scrollSpeed);
			}

			if(!o.axis || o.axis != 'y') {
				if(event.pageX - $(document).scrollLeft() < o.scrollSensitivity)
					scrolled = $(document).scrollLeft($(document).scrollLeft() - o.scrollSpeed);
				else if($(window).width() - (event.pageX - $(document).scrollLeft()) < o.scrollSensitivity)
					scrolled = $(document).scrollLeft($(document).scrollLeft() + o.scrollSpeed);
			}

		}

		if(scrolled !== false && $.ui.ddmanager && !o.dropBehaviour)
			$.ui.ddmanager.prepareOffsets(i, event);

	}
});

$.ui.plugin.add("draggable", "snap", {
	start: function(event, ui) {

		var i = $(this).data("draggable"), o = i.options;
		i.snapElements = [];

		$(o.snap.constructor != String ? ( o.snap.items || ':data(draggable)' ) : o.snap).each(function() {
			var $t = $(this); var $o = $t.offset();
			if(this != i.element[0]) i.snapElements.push({
				item: this,
				width: $t.outerWidth(), height: $t.outerHeight(),
				top: $o.top, left: $o.left
			});
		});

	},
	drag: function(event, ui) {

		var inst = $(this).data("draggable"), o = inst.options;
		var d = o.snapTolerance;

		var x1 = ui.offset.left, x2 = x1 + inst.helperProportions.width,
			y1 = ui.offset.top, y2 = y1 + inst.helperProportions.height;

		for (var i = inst.snapElements.length - 1; i >= 0; i--){

			var l = inst.snapElements[i].left, r = l + inst.snapElements[i].width,
				t = inst.snapElements[i].top, b = t + inst.snapElements[i].height;

			//Yes, I know, this is insane ;)
			if(!((l-d < x1 && x1 < r+d && t-d < y1 && y1 < b+d) || (l-d < x1 && x1 < r+d && t-d < y2 && y2 < b+d) || (l-d < x2 && x2 < r+d && t-d < y1 && y1 < b+d) || (l-d < x2 && x2 < r+d && t-d < y2 && y2 < b+d))) {
				if(inst.snapElements[i].snapping) (inst.options.snap.release && inst.options.snap.release.call(inst.element, event, $.extend(inst._uiHash(), { snapItem: inst.snapElements[i].item })));
				inst.snapElements[i].snapping = false;
				continue;
			}

			if(o.snapMode != 'inner') {
				var ts = Math.abs(t - y2) <= d;
				var bs = Math.abs(b - y1) <= d;
				var ls = Math.abs(l - x2) <= d;
				var rs = Math.abs(r - x1) <= d;
				if(ts) ui.position.top = inst._convertPositionTo("relative", { top: t - inst.helperProportions.height, left: 0 }).top - inst.margins.top;
				if(bs) ui.position.top = inst._convertPositionTo("relative", { top: b, left: 0 }).top - inst.margins.top;
				if(ls) ui.position.left = inst._convertPositionTo("relative", { top: 0, left: l - inst.helperProportions.width }).left - inst.margins.left;
				if(rs) ui.position.left = inst._convertPositionTo("relative", { top: 0, left: r }).left - inst.margins.left;
			}

			var first = (ts || bs || ls || rs);

			if(o.snapMode != 'outer') {
				var ts = Math.abs(t - y1) <= d;
				var bs = Math.abs(b - y2) <= d;
				var ls = Math.abs(l - x1) <= d;
				var rs = Math.abs(r - x2) <= d;
				if(ts) ui.position.top = inst._convertPositionTo("relative", { top: t, left: 0 }).top - inst.margins.top;
				if(bs) ui.position.top = inst._convertPositionTo("relative", { top: b - inst.helperProportions.height, left: 0 }).top - inst.margins.top;
				if(ls) ui.position.left = inst._convertPositionTo("relative", { top: 0, left: l }).left - inst.margins.left;
				if(rs) ui.position.left = inst._convertPositionTo("relative", { top: 0, left: r - inst.helperProportions.width }).left - inst.margins.left;
			}

			if(!inst.snapElements[i].snapping && (ts || bs || ls || rs || first))
				(inst.options.snap.snap && inst.options.snap.snap.call(inst.element, event, $.extend(inst._uiHash(), { snapItem: inst.snapElements[i].item })));
			inst.snapElements[i].snapping = (ts || bs || ls || rs || first);

		};

	}
});

$.ui.plugin.add("draggable", "stack", {
	start: function(event, ui) {

		var o = $(this).data("draggable").options;

		var group = $.makeArray($(o.stack)).sort(function(a,b) {
			return (parseInt($(a).css("zIndex"),10) || 0) - (parseInt($(b).css("zIndex"),10) || 0);
		});
		if (!group.length) { return; }
		
		var min = parseInt(group[0].style.zIndex) || 0;
		$(group).each(function(i) {
			this.style.zIndex = min + i;
		});

		this[0].style.zIndex = min + group.length;

	}
});

$.ui.plugin.add("draggable", "zIndex", {
	start: function(event, ui) {
		var t = $(ui.helper), o = $(this).data("draggable").options;
		if(t.css("zIndex")) o._zIndex = t.css("zIndex");
		t.css('zIndex', o.zIndex);
	},
	stop: function(event, ui) {
		var o = $(this).data("draggable").options;
		if(o._zIndex) $(ui.helper).css('zIndex', o._zIndex);
	}
});

})(jQuery);
(function( $, undefined ) {

$.widget("ui.droppable", {
	version: "1.9.0",
	widgetEventPrefix: "drop",
	options: {
		accept: '*',
		activeClass: false,
		addClasses: true,
		greedy: false,
		hoverClass: false,
		scope: 'default',
		tolerance: 'intersect'
	},
	_create: function() {

		var o = this.options, accept = o.accept;
		this.isover = 0; this.isout = 1;

		this.accept = $.isFunction(accept) ? accept : function(d) {
			return d.is(accept);
		};

		//Store the droppable's proportions
		this.proportions = { width: this.element[0].offsetWidth, height: this.element[0].offsetHeight };

		// Add the reference and positions to the manager
		$.ui.ddmanager.droppables[o.scope] = $.ui.ddmanager.droppables[o.scope] || [];
		$.ui.ddmanager.droppables[o.scope].push(this);

		(o.addClasses && this.element.addClass("ui-droppable"));

	},

	_destroy: function() {
		var drop = $.ui.ddmanager.droppables[this.options.scope];
		for ( var i = 0; i < drop.length; i++ )
			if ( drop[i] == this )
				drop.splice(i, 1);

		this.element.removeClass("ui-droppable ui-droppable-disabled");
	},

	_setOption: function(key, value) {

		if(key == 'accept') {
			this.accept = $.isFunction(value) ? value : function(d) {
				return d.is(value);
			};
		}
		$.Widget.prototype._setOption.apply(this, arguments);
	},

	_activate: function(event) {
		var draggable = $.ui.ddmanager.current;
		if(this.options.activeClass) this.element.addClass(this.options.activeClass);
		(draggable && this._trigger('activate', event, this.ui(draggable)));
	},

	_deactivate: function(event) {
		var draggable = $.ui.ddmanager.current;
		if(this.options.activeClass) this.element.removeClass(this.options.activeClass);
		(draggable && this._trigger('deactivate', event, this.ui(draggable)));
	},

	_over: function(event) {

		var draggable = $.ui.ddmanager.current;
		if (!draggable || (draggable.currentItem || draggable.element)[0] == this.element[0]) return; // Bail if draggable and droppable are same element

		if (this.accept.call(this.element[0],(draggable.currentItem || draggable.element))) {
			if(this.options.hoverClass) this.element.addClass(this.options.hoverClass);
			this._trigger('over', event, this.ui(draggable));
		}

	},

	_out: function(event) {

		var draggable = $.ui.ddmanager.current;
		if (!draggable || (draggable.currentItem || draggable.element)[0] == this.element[0]) return; // Bail if draggable and droppable are same element

		if (this.accept.call(this.element[0],(draggable.currentItem || draggable.element))) {
			if(this.options.hoverClass) this.element.removeClass(this.options.hoverClass);
			this._trigger('out', event, this.ui(draggable));
		}

	},

	_drop: function(event,custom) {

		var draggable = custom || $.ui.ddmanager.current;
		if (!draggable || (draggable.currentItem || draggable.element)[0] == this.element[0]) return false; // Bail if draggable and droppable are same element

		var childrenIntersection = false;
		this.element.find(":data(droppable)").not(".ui-draggable-dragging").each(function() {
			var inst = $.data(this, 'droppable');
			if(
				inst.options.greedy
				&& !inst.options.disabled
				&& inst.options.scope == draggable.options.scope
				&& inst.accept.call(inst.element[0], (draggable.currentItem || draggable.element))
				&& $.ui.intersect(draggable, $.extend(inst, { offset: inst.element.offset() }), inst.options.tolerance)
			) { childrenIntersection = true; return false; }
		});
		if(childrenIntersection) return false;

		if(this.accept.call(this.element[0],(draggable.currentItem || draggable.element))) {
			if(this.options.activeClass) this.element.removeClass(this.options.activeClass);
			if(this.options.hoverClass) this.element.removeClass(this.options.hoverClass);
			this._trigger('drop', event, this.ui(draggable));
			return this.element;
		}

		return false;

	},

	ui: function(c) {
		return {
			draggable: (c.currentItem || c.element),
			helper: c.helper,
			position: c.position,
			offset: c.positionAbs
		};
	}

});

$.ui.intersect = function(draggable, droppable, toleranceMode) {

	if (!droppable.offset) return false;

	var x1 = (draggable.positionAbs || draggable.position.absolute).left, x2 = x1 + draggable.helperProportions.width,
		y1 = (draggable.positionAbs || draggable.position.absolute).top, y2 = y1 + draggable.helperProportions.height;
	var l = droppable.offset.left, r = l + droppable.proportions.width,
		t = droppable.offset.top, b = t + droppable.proportions.height;

	switch (toleranceMode) {
		case 'fit':
			return (l <= x1 && x2 <= r
				&& t <= y1 && y2 <= b);
			break;
		case 'intersect':
			return (l < x1 + (draggable.helperProportions.width / 2) // Right Half
				&& x2 - (draggable.helperProportions.width / 2) < r // Left Half
				&& t < y1 + (draggable.helperProportions.height / 2) // Bottom Half
				&& y2 - (draggable.helperProportions.height / 2) < b ); // Top Half
			break;
		case 'pointer':
			var draggableLeft = ((draggable.positionAbs || draggable.position.absolute).left + (draggable.clickOffset || draggable.offset.click).left),
				draggableTop = ((draggable.positionAbs || draggable.position.absolute).top + (draggable.clickOffset || draggable.offset.click).top),
				isOver = $.ui.isOver(draggableTop, draggableLeft, t, l, droppable.proportions.height, droppable.proportions.width);
			return isOver;
			break;
		case 'touch':
			return (
					(y1 >= t && y1 <= b) ||	// Top edge touching
					(y2 >= t && y2 <= b) ||	// Bottom edge touching
					(y1 < t && y2 > b)		// Surrounded vertically
				) && (
					(x1 >= l && x1 <= r) ||	// Left edge touching
					(x2 >= l && x2 <= r) ||	// Right edge touching
					(x1 < l && x2 > r)		// Surrounded horizontally
				);
			break;
		default:
			return false;
			break;
		}

};

/*
	This manager tracks offsets of draggables and droppables
*/
$.ui.ddmanager = {
	current: null,
	droppables: { 'default': [] },
	prepareOffsets: function(t, event) {

		var m = $.ui.ddmanager.droppables[t.options.scope] || [];
		var type = event ? event.type : null; // workaround for #2317
		var list = (t.currentItem || t.element).find(":data(droppable)").andSelf();

		droppablesLoop: for (var i = 0; i < m.length; i++) {

			if(m[i].options.disabled || (t && !m[i].accept.call(m[i].element[0],(t.currentItem || t.element)))) continue;	//No disabled and non-accepted
			for (var j=0; j < list.length; j++) { if(list[j] == m[i].element[0]) { m[i].proportions.height = 0; continue droppablesLoop; } }; //Filter out elements in the current dragged item
			m[i].visible = m[i].element.css("display") != "none"; if(!m[i].visible) continue; 									//If the element is not visible, continue

			if(type == "mousedown") m[i]._activate.call(m[i], event); //Activate the droppable if used directly from draggables

			m[i].offset = m[i].element.offset();
			m[i].proportions = { width: m[i].element[0].offsetWidth, height: m[i].element[0].offsetHeight };

		}

	},
	drop: function(draggable, event) {

		var dropped = false;
		$.each($.ui.ddmanager.droppables[draggable.options.scope] || [], function() {

			if(!this.options) return;
			if (!this.options.disabled && this.visible && $.ui.intersect(draggable, this, this.options.tolerance))
				dropped = this._drop.call(this, event) || dropped;

			if (!this.options.disabled && this.visible && this.accept.call(this.element[0],(draggable.currentItem || draggable.element))) {
				this.isout = 1; this.isover = 0;
				this._deactivate.call(this, event);
			}

		});
		return dropped;

	},
	dragStart: function( draggable, event ) {
		//Listen for scrolling so that if the dragging causes scrolling the position of the droppables can be recalculated (see #5003)
		draggable.element.parentsUntil( "body" ).bind( "scroll.droppable", function() {
			if( !draggable.options.refreshPositions ) $.ui.ddmanager.prepareOffsets( draggable, event );
		});
	},
	drag: function(draggable, event) {

		//If you have a highly dynamic page, you might try this option. It renders positions every time you move the mouse.
		if(draggable.options.refreshPositions) $.ui.ddmanager.prepareOffsets(draggable, event);

		//Run through all droppables and check their positions based on specific tolerance options
		$.each($.ui.ddmanager.droppables[draggable.options.scope] || [], function() {

			if(this.options.disabled || this.greedyChild || !this.visible) return;
			var intersects = $.ui.intersect(draggable, this, this.options.tolerance);

			var c = !intersects && this.isover == 1 ? 'isout' : (intersects && this.isover == 0 ? 'isover' : null);
			if(!c) return;

			var parentInstance;
			if (this.options.greedy) {
				// find droppable parents with same scope
				var scope = this.options.scope;
				var parent = this.element.parents(':data(droppable)').filter(function () {
					return $.data(this, 'droppable').options.scope === scope;
				});

				if (parent.length) {
					parentInstance = $.data(parent[0], 'droppable');
					parentInstance.greedyChild = (c == 'isover' ? 1 : 0);
				}
			}

			// we just moved into a greedy child
			if (parentInstance && c == 'isover') {
				parentInstance['isover'] = 0;
				parentInstance['isout'] = 1;
				parentInstance._out.call(parentInstance, event);
			}

			this[c] = 1; this[c == 'isout' ? 'isover' : 'isout'] = 0;
			this[c == "isover" ? "_over" : "_out"].call(this, event);

			// we just moved out of a greedy child
			if (parentInstance && c == 'isout') {
				parentInstance['isout'] = 0;
				parentInstance['isover'] = 1;
				parentInstance._over.call(parentInstance, event);
			}
		});

	},
	dragStop: function( draggable, event ) {
		draggable.element.parentsUntil( "body" ).unbind( "scroll.droppable" );
		//Call prepareOffsets one final time since IE does not fire return scroll events when overflow was caused by drag (see #5003)
		if( !draggable.options.refreshPositions ) $.ui.ddmanager.prepareOffsets( draggable, event );
	}
};

})(jQuery);
(function( $, undefined ) {

$.widget("ui.resizable", $.ui.mouse, {
	version: "1.9.0",
	widgetEventPrefix: "resize",
	options: {
		alsoResize: false,
		animate: false,
		animateDuration: "slow",
		animateEasing: "swing",
		aspectRatio: false,
		autoHide: false,
		containment: false,
		ghost: false,
		grid: false,
		handles: "e,s,se",
		helper: false,
		maxHeight: null,
		maxWidth: null,
		minHeight: 10,
		minWidth: 10,
		zIndex: 1000
	},
	_create: function() {

		var that = this, o = this.options;
		this.element.addClass("ui-resizable");

		$.extend(this, {
			_aspectRatio: !!(o.aspectRatio),
			aspectRatio: o.aspectRatio,
			originalElement: this.element,
			_proportionallyResizeElements: [],
			_helper: o.helper || o.ghost || o.animate ? o.helper || 'ui-resizable-helper' : null
		});

		//Wrap the element if it cannot hold child nodes
		if(this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i)) {

			//Create a wrapper element and set the wrapper to the new current internal element
			this.element.wrap(
				$('<div class="ui-wrapper" style="overflow: hidden;"></div>').css({
					position: this.element.css('position'),
					width: this.element.outerWidth(),
					height: this.element.outerHeight(),
					top: this.element.css('top'),
					left: this.element.css('left')
				})
			);

			//Overwrite the original this.element
			this.element = this.element.parent().data(
				"resizable", this.element.data('resizable')
			);

			this.elementIsWrapper = true;

			//Move margins to the wrapper
			this.element.css({ marginLeft: this.originalElement.css("marginLeft"), marginTop: this.originalElement.css("marginTop"), marginRight: this.originalElement.css("marginRight"), marginBottom: this.originalElement.css("marginBottom") });
			this.originalElement.css({ marginLeft: 0, marginTop: 0, marginRight: 0, marginBottom: 0});

			//Prevent Safari textarea resize
			this.originalResizeStyle = this.originalElement.css('resize');
			this.originalElement.css('resize', 'none');

			//Push the actual element to our proportionallyResize internal array
			this._proportionallyResizeElements.push(this.originalElement.css({ position: 'static', zoom: 1, display: 'block' }));

			// avoid IE jump (hard set the margin)
			this.originalElement.css({ margin: this.originalElement.css('margin') });

			// fix handlers offset
			this._proportionallyResize();

		}

		this.handles = o.handles || (!$('.ui-resizable-handle', this.element).length ? "e,s,se" : { n: '.ui-resizable-n', e: '.ui-resizable-e', s: '.ui-resizable-s', w: '.ui-resizable-w', se: '.ui-resizable-se', sw: '.ui-resizable-sw', ne: '.ui-resizable-ne', nw: '.ui-resizable-nw' });
		if(this.handles.constructor == String) {

			if(this.handles == 'all') this.handles = 'n,e,s,w,se,sw,ne,nw';
			var n = this.handles.split(","); this.handles = {};

			for(var i = 0; i < n.length; i++) {

				var handle = $.trim(n[i]), hname = 'ui-resizable-'+handle;
				var axis = $('<div class="ui-resizable-handle ' + hname + '"></div>');

				// Apply zIndex to all handles - see #7960
				axis.css({ zIndex: o.zIndex });

				//TODO : What's going on here?
				if ('se' == handle) {
					axis.addClass('ui-icon ui-icon-gripsmall-diagonal-se');
				};

				//Insert into internal handles object and append to element
				this.handles[handle] = '.ui-resizable-'+handle;
				this.element.append(axis);
			}

		}

		this._renderAxis = function(target) {

			target = target || this.element;

			for(var i in this.handles) {

				if(this.handles[i].constructor == String)
					this.handles[i] = $(this.handles[i], this.element).show();

				//Apply pad to wrapper element, needed to fix axis position (textarea, inputs, scrolls)
				if (this.elementIsWrapper && this.originalElement[0].nodeName.match(/textarea|input|select|button/i)) {

					var axis = $(this.handles[i], this.element), padWrapper = 0;

					//Checking the correct pad and border
					padWrapper = /sw|ne|nw|se|n|s/.test(i) ? axis.outerHeight() : axis.outerWidth();

					//The padding type i have to apply...
					var padPos = [ 'padding',
						/ne|nw|n/.test(i) ? 'Top' :
						/se|sw|s/.test(i) ? 'Bottom' :
						/^e$/.test(i) ? 'Right' : 'Left' ].join("");

					target.css(padPos, padWrapper);

					this._proportionallyResize();

				}

				//TODO: What's that good for? There's not anything to be executed left
				if(!$(this.handles[i]).length)
					continue;

			}
		};

		//TODO: make renderAxis a prototype function
		this._renderAxis(this.element);

		this._handles = $('.ui-resizable-handle', this.element)
			.disableSelection();

		//Matching axis name
		this._handles.mouseover(function() {
			if (!that.resizing) {
				if (this.className)
					var axis = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i);
				//Axis, default = se
				that.axis = axis && axis[1] ? axis[1] : 'se';
			}
		});

		//If we want to auto hide the elements
		if (o.autoHide) {
			this._handles.hide();
			$(this.element)
				.addClass("ui-resizable-autohide")
				.mouseenter(function() {
					if (o.disabled) return;
					$(this).removeClass("ui-resizable-autohide");
					that._handles.show();
				})
				.mouseleave(function(){
					if (o.disabled) return;
					if (!that.resizing) {
						$(this).addClass("ui-resizable-autohide");
						that._handles.hide();
					}
				});
		}

		//Initialize the mouse interaction
		this._mouseInit();

	},

	_destroy: function() {

		this._mouseDestroy();

		var _destroy = function(exp) {
			$(exp).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing")
				.removeData("resizable").removeData("ui-resizable").unbind(".resizable").find('.ui-resizable-handle').remove();
		};

		//TODO: Unwrap at same DOM position
		if (this.elementIsWrapper) {
			_destroy(this.element);
			var wrapper = this.element;
			wrapper.after(
				this.originalElement.css({
					position: wrapper.css('position'),
					width: wrapper.outerWidth(),
					height: wrapper.outerHeight(),
					top: wrapper.css('top'),
					left: wrapper.css('left')
				})
			).remove();
		}

		this.originalElement.css('resize', this.originalResizeStyle);
		_destroy(this.originalElement);

		return this;
	},

	_mouseCapture: function(event) {
		var handle = false;
		for (var i in this.handles) {
			if ($(this.handles[i])[0] == event.target) {
				handle = true;
			}
		}

		return !this.options.disabled && handle;
	},

	_mouseStart: function(event) {

		var o = this.options, iniPos = this.element.position(), el = this.element;

		this.resizing = true;
		this.documentScroll = { top: $(document).scrollTop(), left: $(document).scrollLeft() };

		// bugfix for http://dev.jquery.com/ticket/1749
		if (el.is('.ui-draggable') || (/absolute/).test(el.css('position'))) {
			el.css({ position: 'absolute', top: iniPos.top, left: iniPos.left });
		}

		this._renderProxy();

		var curleft = num(this.helper.css('left')), curtop = num(this.helper.css('top'));

		if (o.containment) {
			curleft += $(o.containment).scrollLeft() || 0;
			curtop += $(o.containment).scrollTop() || 0;
		}

		//Store needed variables
		this.offset = this.helper.offset();
		this.position = { left: curleft, top: curtop };
		this.size = this._helper ? { width: el.outerWidth(), height: el.outerHeight() } : { width: el.width(), height: el.height() };
		this.originalSize = this._helper ? { width: el.outerWidth(), height: el.outerHeight() } : { width: el.width(), height: el.height() };
		this.originalPosition = { left: curleft, top: curtop };
		this.sizeDiff = { width: el.outerWidth() - el.width(), height: el.outerHeight() - el.height() };
		this.originalMousePosition = { left: event.pageX, top: event.pageY };

		//Aspect Ratio
		this.aspectRatio = (typeof o.aspectRatio == 'number') ? o.aspectRatio : ((this.originalSize.width / this.originalSize.height) || 1);

		var cursor = $('.ui-resizable-' + this.axis).css('cursor');
		$('body').css('cursor', cursor == 'auto' ? this.axis + '-resize' : cursor);

		el.addClass("ui-resizable-resizing");
		this._propagate("start", event);
		return true;
	},

	_mouseDrag: function(event) {

		//Increase performance, avoid regex
		var el = this.helper, o = this.options, props = {},
			that = this, smp = this.originalMousePosition, a = this.axis;

		var dx = (event.pageX-smp.left)||0, dy = (event.pageY-smp.top)||0;
		var trigger = this._change[a];
		if (!trigger) return false;

		// Calculate the attrs that will be change
		var data = trigger.apply(this, [event, dx, dy]);

		// Put this in the mouseDrag handler since the user can start pressing shift while resizing
		this._updateVirtualBoundaries(event.shiftKey);
		if (this._aspectRatio || event.shiftKey)
			data = this._updateRatio(data, event);

		data = this._respectSize(data, event);

		// plugins callbacks need to be called first
		this._propagate("resize", event);

		el.css({
			top: this.position.top + "px", left: this.position.left + "px",
			width: this.size.width + "px", height: this.size.height + "px"
		});

		if (!this._helper && this._proportionallyResizeElements.length)
			this._proportionallyResize();

		this._updateCache(data);

		// calling the user callback at the end
		this._trigger('resize', event, this.ui());

		return false;
	},

	_mouseStop: function(event) {

		this.resizing = false;
		var o = this.options, that = this;

		if(this._helper) {
			var pr = this._proportionallyResizeElements, ista = pr.length && (/textarea/i).test(pr[0].nodeName),
				soffseth = ista && $.ui.hasScroll(pr[0], 'left') /* TODO - jump height */ ? 0 : that.sizeDiff.height,
				soffsetw = ista ? 0 : that.sizeDiff.width;

			var s = { width: (that.helper.width()  - soffsetw), height: (that.helper.height() - soffseth) },
				left = (parseInt(that.element.css('left'), 10) + (that.position.left - that.originalPosition.left)) || null,
				top = (parseInt(that.element.css('top'), 10) + (that.position.top - that.originalPosition.top)) || null;

			if (!o.animate)
				this.element.css($.extend(s, { top: top, left: left }));

			that.helper.height(that.size.height);
			that.helper.width(that.size.width);

			if (this._helper && !o.animate) this._proportionallyResize();
		}

		$('body').css('cursor', 'auto');

		this.element.removeClass("ui-resizable-resizing");

		this._propagate("stop", event);

		if (this._helper) this.helper.remove();
		return false;

	},

	_updateVirtualBoundaries: function(forceAspectRatio) {
		var o = this.options, pMinWidth, pMaxWidth, pMinHeight, pMaxHeight, b;

		b = {
			minWidth: isNumber(o.minWidth) ? o.minWidth : 0,
			maxWidth: isNumber(o.maxWidth) ? o.maxWidth : Infinity,
			minHeight: isNumber(o.minHeight) ? o.minHeight : 0,
			maxHeight: isNumber(o.maxHeight) ? o.maxHeight : Infinity
		};

		if(this._aspectRatio || forceAspectRatio) {
			// We want to create an enclosing box whose aspect ration is the requested one
			// First, compute the "projected" size for each dimension based on the aspect ratio and other dimension
			pMinWidth = b.minHeight * this.aspectRatio;
			pMinHeight = b.minWidth / this.aspectRatio;
			pMaxWidth = b.maxHeight * this.aspectRatio;
			pMaxHeight = b.maxWidth / this.aspectRatio;

			if(pMinWidth > b.minWidth) b.minWidth = pMinWidth;
			if(pMinHeight > b.minHeight) b.minHeight = pMinHeight;
			if(pMaxWidth < b.maxWidth) b.maxWidth = pMaxWidth;
			if(pMaxHeight < b.maxHeight) b.maxHeight = pMaxHeight;
		}
		this._vBoundaries = b;
	},

	_updateCache: function(data) {
		var o = this.options;
		this.offset = this.helper.offset();
		if (isNumber(data.left)) this.position.left = data.left;
		if (isNumber(data.top)) this.position.top = data.top;
		if (isNumber(data.height)) this.size.height = data.height;
		if (isNumber(data.width)) this.size.width = data.width;
	},

	_updateRatio: function(data, event) {

		var o = this.options, cpos = this.position, csize = this.size, a = this.axis;

		if (isNumber(data.height)) data.width = (data.height * this.aspectRatio);
		else if (isNumber(data.width)) data.height = (data.width / this.aspectRatio);

		if (a == 'sw') {
			data.left = cpos.left + (csize.width - data.width);
			data.top = null;
		}
		if (a == 'nw') {
			data.top = cpos.top + (csize.height - data.height);
			data.left = cpos.left + (csize.width - data.width);
		}

		return data;
	},

	_respectSize: function(data, event) {

		var el = this.helper, o = this._vBoundaries, pRatio = this._aspectRatio || event.shiftKey, a = this.axis,
				ismaxw = isNumber(data.width) && o.maxWidth && (o.maxWidth < data.width), ismaxh = isNumber(data.height) && o.maxHeight && (o.maxHeight < data.height),
					isminw = isNumber(data.width) && o.minWidth && (o.minWidth > data.width), isminh = isNumber(data.height) && o.minHeight && (o.minHeight > data.height);

		if (isminw) data.width = o.minWidth;
		if (isminh) data.height = o.minHeight;
		if (ismaxw) data.width = o.maxWidth;
		if (ismaxh) data.height = o.maxHeight;

		var dw = this.originalPosition.left + this.originalSize.width, dh = this.position.top + this.size.height;
		var cw = /sw|nw|w/.test(a), ch = /nw|ne|n/.test(a);

		if (isminw && cw) data.left = dw - o.minWidth;
		if (ismaxw && cw) data.left = dw - o.maxWidth;
		if (isminh && ch)	data.top = dh - o.minHeight;
		if (ismaxh && ch)	data.top = dh - o.maxHeight;

		// fixing jump error on top/left - bug #2330
		var isNotwh = !data.width && !data.height;
		if (isNotwh && !data.left && data.top) data.top = null;
		else if (isNotwh && !data.top && data.left) data.left = null;

		return data;
	},

	_proportionallyResize: function() {

		var o = this.options;
		if (!this._proportionallyResizeElements.length) return;
		var element = this.helper || this.element;

		for (var i=0; i < this._proportionallyResizeElements.length; i++) {

			var prel = this._proportionallyResizeElements[i];

			if (!this.borderDif) {
				var b = [prel.css('borderTopWidth'), prel.css('borderRightWidth'), prel.css('borderBottomWidth'), prel.css('borderLeftWidth')],
					p = [prel.css('paddingTop'), prel.css('paddingRight'), prel.css('paddingBottom'), prel.css('paddingLeft')];

				this.borderDif = $.map(b, function(v, i) {
					var border = parseInt(v,10)||0, padding = parseInt(p[i],10)||0;
					return border + padding;
				});
			}

			prel.css({
				height: (element.height() - this.borderDif[0] - this.borderDif[2]) || 0,
				width: (element.width() - this.borderDif[1] - this.borderDif[3]) || 0
			});

		};

	},

	_renderProxy: function() {

		var el = this.element, o = this.options;
		this.elementOffset = el.offset();

		if(this._helper) {

			this.helper = this.helper || $('<div style="overflow:hidden;"></div>');

			// fix ie6 offset TODO: This seems broken
			var ie6 = $.browser.msie && $.browser.version < 7, ie6offset = (ie6 ? 1 : 0),
			pxyoffset = ( ie6 ? 2 : -1 );

			this.helper.addClass(this._helper).css({
				width: this.element.outerWidth() + pxyoffset,
				height: this.element.outerHeight() + pxyoffset,
				position: 'absolute',
				left: this.elementOffset.left - ie6offset +'px',
				top: this.elementOffset.top - ie6offset +'px',
				zIndex: ++o.zIndex //TODO: Don't modify option
			});

			this.helper
				.appendTo("body")
				.disableSelection();

		} else {
			this.helper = this.element;
		}

	},

	_change: {
		e: function(event, dx, dy) {
			return { width: this.originalSize.width + dx };
		},
		w: function(event, dx, dy) {
			var o = this.options, cs = this.originalSize, sp = this.originalPosition;
			return { left: sp.left + dx, width: cs.width - dx };
		},
		n: function(event, dx, dy) {
			var o = this.options, cs = this.originalSize, sp = this.originalPosition;
			return { top: sp.top + dy, height: cs.height - dy };
		},
		s: function(event, dx, dy) {
			return { height: this.originalSize.height + dy };
		},
		se: function(event, dx, dy) {
			return $.extend(this._change.s.apply(this, arguments), this._change.e.apply(this, [event, dx, dy]));
		},
		sw: function(event, dx, dy) {
			return $.extend(this._change.s.apply(this, arguments), this._change.w.apply(this, [event, dx, dy]));
		},
		ne: function(event, dx, dy) {
			return $.extend(this._change.n.apply(this, arguments), this._change.e.apply(this, [event, dx, dy]));
		},
		nw: function(event, dx, dy) {
			return $.extend(this._change.n.apply(this, arguments), this._change.w.apply(this, [event, dx, dy]));
		}
	},

	_propagate: function(n, event) {
		$.ui.plugin.call(this, n, [event, this.ui()]);
		(n != "resize" && this._trigger(n, event, this.ui()));
	},

	plugins: {},

	ui: function() {
		return {
			originalElement: this.originalElement,
			element: this.element,
			helper: this.helper,
			position: this.position,
			size: this.size,
			originalSize: this.originalSize,
			originalPosition: this.originalPosition
		};
	}

});

/*
 * Resizable Extensions
 */

$.ui.plugin.add("resizable", "alsoResize", {

	start: function (event, ui) {
		var that = $(this).data("resizable"), o = that.options;

		var _store = function (exp) {
			$(exp).each(function() {
				var el = $(this);
				el.data("resizable-alsoresize", {
					width: parseInt(el.width(), 10), height: parseInt(el.height(), 10),
					left: parseInt(el.css('left'), 10), top: parseInt(el.css('top'), 10)
				});
			});
		};

		if (typeof(o.alsoResize) == 'object' && !o.alsoResize.parentNode) {
			if (o.alsoResize.length) { o.alsoResize = o.alsoResize[0]; _store(o.alsoResize); }
			else { $.each(o.alsoResize, function (exp) { _store(exp); }); }
		}else{
			_store(o.alsoResize);
		}
	},

	resize: function (event, ui) {
		var that = $(this).data("resizable"), o = that.options, os = that.originalSize, op = that.originalPosition;

		var delta = {
			height: (that.size.height - os.height) || 0, width: (that.size.width - os.width) || 0,
			top: (that.position.top - op.top) || 0, left: (that.position.left - op.left) || 0
		},

		_alsoResize = function (exp, c) {
			$(exp).each(function() {
				var el = $(this), start = $(this).data("resizable-alsoresize"), style = {}, 
					css = c && c.length ? c : el.parents(ui.originalElement[0]).length ? ['width', 'height'] : ['width', 'height', 'top', 'left'];

				$.each(css, function (i, prop) {
					var sum = (start[prop]||0) + (delta[prop]||0);
					if (sum && sum >= 0)
						style[prop] = sum || null;
				});

				el.css(style);
			});
		};

		if (typeof(o.alsoResize) == 'object' && !o.alsoResize.nodeType) {
			$.each(o.alsoResize, function (exp, c) { _alsoResize(exp, c); });
		}else{
			_alsoResize(o.alsoResize);
		}
	},

	stop: function (event, ui) {
		$(this).removeData("resizable-alsoresize");
	}
});

$.ui.plugin.add("resizable", "animate", {

	stop: function(event, ui) {
		var that = $(this).data("resizable"), o = that.options;

		var pr = that._proportionallyResizeElements, ista = pr.length && (/textarea/i).test(pr[0].nodeName),
					soffseth = ista && $.ui.hasScroll(pr[0], 'left') /* TODO - jump height */ ? 0 : that.sizeDiff.height,
						soffsetw = ista ? 0 : that.sizeDiff.width;

		var style = { width: (that.size.width - soffsetw), height: (that.size.height - soffseth) },
					left = (parseInt(that.element.css('left'), 10) + (that.position.left - that.originalPosition.left)) || null,
						top = (parseInt(that.element.css('top'), 10) + (that.position.top - that.originalPosition.top)) || null;

		that.element.animate(
			$.extend(style, top && left ? { top: top, left: left } : {}), {
				duration: o.animateDuration,
				easing: o.animateEasing,
				step: function() {

					var data = {
						width: parseInt(that.element.css('width'), 10),
						height: parseInt(that.element.css('height'), 10),
						top: parseInt(that.element.css('top'), 10),
						left: parseInt(that.element.css('left'), 10)
					};

					if (pr && pr.length) $(pr[0]).css({ width: data.width, height: data.height });

					// propagating resize, and updating values for each animation step
					that._updateCache(data);
					that._propagate("resize", event);

				}
			}
		);
	}

});

$.ui.plugin.add("resizable", "containment", {

	start: function(event, ui) {
		var that = $(this).data("resizable"), o = that.options, el = that.element;
		var oc = o.containment,	ce = (oc instanceof $) ? oc.get(0) : (/parent/.test(oc)) ? el.parent().get(0) : oc;
		if (!ce) return;

		that.containerElement = $(ce);

		if (/document/.test(oc) || oc == document) {
			that.containerOffset = { left: 0, top: 0 };
			that.containerPosition = { left: 0, top: 0 };

			that.parentData = {
				element: $(document), left: 0, top: 0,
				width: $(document).width(), height: $(document).height() || document.body.parentNode.scrollHeight
			};
		}

		// i'm a node, so compute top, left, right, bottom
		else {
			var element = $(ce), p = [];
			$([ "Top", "Right", "Left", "Bottom" ]).each(function(i, name) { p[i] = num(element.css("padding" + name)); });

			that.containerOffset = element.offset();
			that.containerPosition = element.position();
			that.containerSize = { height: (element.innerHeight() - p[3]), width: (element.innerWidth() - p[1]) };

			var co = that.containerOffset, ch = that.containerSize.height,	cw = that.containerSize.width,
						width = ($.ui.hasScroll(ce, "left") ? ce.scrollWidth : cw ), height = ($.ui.hasScroll(ce) ? ce.scrollHeight : ch);

			that.parentData = {
				element: ce, left: co.left, top: co.top, width: width, height: height
			};
		}
	},

	resize: function(event, ui) {
		var that = $(this).data("resizable"), o = that.options,
				ps = that.containerSize, co = that.containerOffset, cs = that.size, cp = that.position,
				pRatio = that._aspectRatio || event.shiftKey, cop = { top:0, left:0 }, ce = that.containerElement;

		if (ce[0] != document && (/static/).test(ce.css('position'))) cop = co;

		if (cp.left < (that._helper ? co.left : 0)) {
			that.size.width = that.size.width + (that._helper ? (that.position.left - co.left) : (that.position.left - cop.left));
			if (pRatio) that.size.height = that.size.width / that.aspectRatio;
			that.position.left = o.helper ? co.left : 0;
		}

		if (cp.top < (that._helper ? co.top : 0)) {
			that.size.height = that.size.height + (that._helper ? (that.position.top - co.top) : that.position.top);
			if (pRatio) that.size.width = that.size.height * that.aspectRatio;
			that.position.top = that._helper ? co.top : 0;
		}

		that.offset.left = that.parentData.left+that.position.left;
		that.offset.top = that.parentData.top+that.position.top;

		var woset = Math.abs( (that._helper ? that.offset.left - cop.left : (that.offset.left - cop.left)) + that.sizeDiff.width ),
					hoset = Math.abs( (that._helper ? that.offset.top - cop.top : (that.offset.top - co.top)) + that.sizeDiff.height );

		var isParent = that.containerElement.get(0) == that.element.parent().get(0),
			isOffsetRelative = /relative|absolute/.test(that.containerElement.css('position'));

		if(isParent && isOffsetRelative) woset -= that.parentData.left;

		if (woset + that.size.width >= that.parentData.width) {
			that.size.width = that.parentData.width - woset;
			if (pRatio) that.size.height = that.size.width / that.aspectRatio;
		}

		if (hoset + that.size.height >= that.parentData.height) {
			that.size.height = that.parentData.height - hoset;
			if (pRatio) that.size.width = that.size.height * that.aspectRatio;
		}
	},

	stop: function(event, ui){
		var that = $(this).data("resizable"), o = that.options, cp = that.position,
				co = that.containerOffset, cop = that.containerPosition, ce = that.containerElement;

		var helper = $(that.helper), ho = helper.offset(), w = helper.outerWidth() - that.sizeDiff.width, h = helper.outerHeight() - that.sizeDiff.height;

		if (that._helper && !o.animate && (/relative/).test(ce.css('position')))
			$(this).css({ left: ho.left - cop.left - co.left, width: w, height: h });

		if (that._helper && !o.animate && (/static/).test(ce.css('position')))
			$(this).css({ left: ho.left - cop.left - co.left, width: w, height: h });

	}
});

$.ui.plugin.add("resizable", "ghost", {

	start: function(event, ui) {

		var that = $(this).data("resizable"), o = that.options, cs = that.size;

		that.ghost = that.originalElement.clone();
		that.ghost
			.css({ opacity: .25, display: 'block', position: 'relative', height: cs.height, width: cs.width, margin: 0, left: 0, top: 0 })
			.addClass('ui-resizable-ghost')
			.addClass(typeof o.ghost == 'string' ? o.ghost : '');

		that.ghost.appendTo(that.helper);

	},

	resize: function(event, ui){
		var that = $(this).data("resizable"), o = that.options;
		if (that.ghost) that.ghost.css({ position: 'relative', height: that.size.height, width: that.size.width });
	},

	stop: function(event, ui){
		var that = $(this).data("resizable"), o = that.options;
		if (that.ghost && that.helper) that.helper.get(0).removeChild(that.ghost.get(0));
	}

});

$.ui.plugin.add("resizable", "grid", {

	resize: function(event, ui) {
		var that = $(this).data("resizable"), o = that.options, cs = that.size, os = that.originalSize, op = that.originalPosition, a = that.axis, ratio = o._aspectRatio || event.shiftKey;
		o.grid = typeof o.grid == "number" ? [o.grid, o.grid] : o.grid;
		var ox = Math.round((cs.width - os.width) / (o.grid[0]||1)) * (o.grid[0]||1), oy = Math.round((cs.height - os.height) / (o.grid[1]||1)) * (o.grid[1]||1);

		if (/^(se|s|e)$/.test(a)) {
			that.size.width = os.width + ox;
			that.size.height = os.height + oy;
		}
		else if (/^(ne)$/.test(a)) {
			that.size.width = os.width + ox;
			that.size.height = os.height + oy;
			that.position.top = op.top - oy;
		}
		else if (/^(sw)$/.test(a)) {
			that.size.width = os.width + ox;
			that.size.height = os.height + oy;
			that.position.left = op.left - ox;
		}
		else {
			that.size.width = os.width + ox;
			that.size.height = os.height + oy;
			that.position.top = op.top - oy;
			that.position.left = op.left - ox;
		}
	}

});

var num = function(v) {
	return parseInt(v, 10) || 0;
};

var isNumber = function(value) {
	return !isNaN(parseInt(value, 10));
};

})(jQuery);
(function( $, undefined ) {

$.widget("ui.selectable", $.ui.mouse, {
	version: "1.9.0",
	options: {
		appendTo: 'body',
		autoRefresh: true,
		distance: 0,
		filter: '*',
		tolerance: 'touch'
	},
	_create: function() {
		var that = this;

		this.element.addClass("ui-selectable");

		this.dragged = false;

		// cache selectee children based on filter
		var selectees;
		this.refresh = function() {
			selectees = $(that.options.filter, that.element[0]);
			selectees.addClass("ui-selectee");
			selectees.each(function() {
				var $this = $(this);
				var pos = $this.offset();
				$.data(this, "selectable-item", {
					element: this,
					$element: $this,
					left: pos.left,
					top: pos.top,
					right: pos.left + $this.outerWidth(),
					bottom: pos.top + $this.outerHeight(),
					startselected: false,
					selected: $this.hasClass('ui-selected'),
					selecting: $this.hasClass('ui-selecting'),
					unselecting: $this.hasClass('ui-unselecting')
				});
			});
		};
		this.refresh();

		this.selectees = selectees.addClass("ui-selectee");

		this._mouseInit();

		this.helper = $("<div class='ui-selectable-helper'></div>");
	},

	_destroy: function() {
		this.selectees
			.removeClass("ui-selectee")
			.removeData("selectable-item");
		this.element
			.removeClass("ui-selectable ui-selectable-disabled");
		this._mouseDestroy();
	},

	_mouseStart: function(event) {
		var that = this;

		this.opos = [event.pageX, event.pageY];

		if (this.options.disabled)
			return;

		var options = this.options;

		this.selectees = $(options.filter, this.element[0]);

		this._trigger("start", event);

		$(options.appendTo).append(this.helper);
		// position helper (lasso)
		this.helper.css({
			"left": event.clientX,
			"top": event.clientY,
			"width": 0,
			"height": 0
		});

		if (options.autoRefresh) {
			this.refresh();
		}

		this.selectees.filter('.ui-selected').each(function() {
			var selectee = $.data(this, "selectable-item");
			selectee.startselected = true;
			if (!event.metaKey && !event.ctrlKey) {
				selectee.$element.removeClass('ui-selected');
				selectee.selected = false;
				selectee.$element.addClass('ui-unselecting');
				selectee.unselecting = true;
				// selectable UNSELECTING callback
				that._trigger("unselecting", event, {
					unselecting: selectee.element
				});
			}
		});

		$(event.target).parents().andSelf().each(function() {
			var selectee = $.data(this, "selectable-item");
			if (selectee) {
				var doSelect = (!event.metaKey && !event.ctrlKey) || !selectee.$element.hasClass('ui-selected');
				selectee.$element
					.removeClass(doSelect ? "ui-unselecting" : "ui-selected")
					.addClass(doSelect ? "ui-selecting" : "ui-unselecting");
				selectee.unselecting = !doSelect;
				selectee.selecting = doSelect;
				selectee.selected = doSelect;
				// selectable (UN)SELECTING callback
				if (doSelect) {
					that._trigger("selecting", event, {
						selecting: selectee.element
					});
				} else {
					that._trigger("unselecting", event, {
						unselecting: selectee.element
					});
				}
				return false;
			}
		});

	},

	_mouseDrag: function(event) {
		var that = this;
		this.dragged = true;

		if (this.options.disabled)
			return;

		var options = this.options;

		var x1 = this.opos[0], y1 = this.opos[1], x2 = event.pageX, y2 = event.pageY;
		if (x1 > x2) { var tmp = x2; x2 = x1; x1 = tmp; }
		if (y1 > y2) { var tmp = y2; y2 = y1; y1 = tmp; }
		this.helper.css({left: x1, top: y1, width: x2-x1, height: y2-y1});

		this.selectees.each(function() {
			var selectee = $.data(this, "selectable-item");
			//prevent helper from being selected if appendTo: selectable
			if (!selectee || selectee.element == that.element[0])
				return;
			var hit = false;
			if (options.tolerance == 'touch') {
				hit = ( !(selectee.left > x2 || selectee.right < x1 || selectee.top > y2 || selectee.bottom < y1) );
			} else if (options.tolerance == 'fit') {
				hit = (selectee.left > x1 && selectee.right < x2 && selectee.top > y1 && selectee.bottom < y2);
			}

			if (hit) {
				// SELECT
				if (selectee.selected) {
					selectee.$element.removeClass('ui-selected');
					selectee.selected = false;
				}
				if (selectee.unselecting) {
					selectee.$element.removeClass('ui-unselecting');
					selectee.unselecting = false;
				}
				if (!selectee.selecting) {
					selectee.$element.addClass('ui-selecting');
					selectee.selecting = true;
					// selectable SELECTING callback
					that._trigger("selecting", event, {
						selecting: selectee.element
					});
				}
			} else {
				// UNSELECT
				if (selectee.selecting) {
					if ((event.metaKey || event.ctrlKey) && selectee.startselected) {
						selectee.$element.removeClass('ui-selecting');
						selectee.selecting = false;
						selectee.$element.addClass('ui-selected');
						selectee.selected = true;
					} else {
						selectee.$element.removeClass('ui-selecting');
						selectee.selecting = false;
						if (selectee.startselected) {
							selectee.$element.addClass('ui-unselecting');
							selectee.unselecting = true;
						}
						// selectable UNSELECTING callback
						that._trigger("unselecting", event, {
							unselecting: selectee.element
						});
					}
				}
				if (selectee.selected) {
					if (!event.metaKey && !event.ctrlKey && !selectee.startselected) {
						selectee.$element.removeClass('ui-selected');
						selectee.selected = false;

						selectee.$element.addClass('ui-unselecting');
						selectee.unselecting = true;
						// selectable UNSELECTING callback
						that._trigger("unselecting", event, {
							unselecting: selectee.element
						});
					}
				}
			}
		});

		return false;
	},

	_mouseStop: function(event) {
		var that = this;

		this.dragged = false;

		var options = this.options;

		$('.ui-unselecting', this.element[0]).each(function() {
			var selectee = $.data(this, "selectable-item");
			selectee.$element.removeClass('ui-unselecting');
			selectee.unselecting = false;
			selectee.startselected = false;
			that._trigger("unselected", event, {
				unselected: selectee.element
			});
		});
		$('.ui-selecting', this.element[0]).each(function() {
			var selectee = $.data(this, "selectable-item");
			selectee.$element.removeClass('ui-selecting').addClass('ui-selected');
			selectee.selecting = false;
			selectee.selected = true;
			selectee.startselected = true;
			that._trigger("selected", event, {
				selected: selectee.element
			});
		});
		this._trigger("stop", event);

		this.helper.remove();

		return false;
	}

});

})(jQuery);
(function( $, undefined ) {

$.widget("ui.sortable", $.ui.mouse, {
	version: "1.9.0",
	widgetEventPrefix: "sort",
	ready: false,
	options: {
		appendTo: "parent",
		axis: false,
		connectWith: false,
		containment: false,
		cursor: 'auto',
		cursorAt: false,
		dropOnEmpty: true,
		forcePlaceholderSize: false,
		forceHelperSize: false,
		grid: false,
		handle: false,
		helper: "original",
		items: '> *',
		opacity: false,
		placeholder: false,
		revert: false,
		scroll: true,
		scrollSensitivity: 20,
		scrollSpeed: 20,
		scope: "default",
		tolerance: "intersect",
		zIndex: 1000
	},
	_create: function() {

		var o = this.options;
		this.containerCache = {};
		this.element.addClass("ui-sortable");

		//Get the items
		this.refresh();

		//Let's determine if the items are being displayed horizontally
		this.floating = this.items.length ? o.axis === 'x' || (/left|right/).test(this.items[0].item.css('float')) || (/inline|table-cell/).test(this.items[0].item.css('display')) : false;

		//Let's determine the parent's offset
		this.offset = this.element.offset();

		//Initialize mouse events for interaction
		this._mouseInit();

		//We're ready to go
		this.ready = true

	},

	_destroy: function() {
		this.element
			.removeClass("ui-sortable ui-sortable-disabled");
		this._mouseDestroy();

		for ( var i = this.items.length - 1; i >= 0; i-- )
			this.items[i].item.removeData(this.widgetName + "-item");

		return this;
	},

	_setOption: function(key, value){
		if ( key === "disabled" ) {
			this.options[ key ] = value;

			this.widget().toggleClass( "ui-sortable-disabled", !!value );
		} else {
			// Don't call widget base _setOption for disable as it adds ui-state-disabled class
			$.Widget.prototype._setOption.apply(this, arguments);
		}
	},

	_mouseCapture: function(event, overrideHandle) {
		var that = this;

		if (this.reverting) {
			return false;
		}

		if(this.options.disabled || this.options.type == 'static') return false;

		//We have to refresh the items data once first
		this._refreshItems(event);

		//Find out if the clicked node (or one of its parents) is a actual item in this.items
		var currentItem = null, nodes = $(event.target).parents().each(function() {
			if($.data(this, that.widgetName + '-item') == that) {
				currentItem = $(this);
				return false;
			}
		});
		if($.data(event.target, that.widgetName + '-item') == that) currentItem = $(event.target);

		if(!currentItem) return false;
		if(this.options.handle && !overrideHandle) {
			var validHandle = false;

			$(this.options.handle, currentItem).find("*").andSelf().each(function() { if(this == event.target) validHandle = true; });
			if(!validHandle) return false;
		}

		this.currentItem = currentItem;
		this._removeCurrentsFromItems();
		return true;

	},

	_mouseStart: function(event, overrideHandle, noActivation) {

		var o = this.options;
		this.currentContainer = this;

		//We only need to call refreshPositions, because the refreshItems call has been moved to mouseCapture
		this.refreshPositions();

		//Create and append the visible helper
		this.helper = this._createHelper(event);

		//Cache the helper size
		this._cacheHelperProportions();

		/*
		 * - Position generation -
		 * This block generates everything position related - it's the core of draggables.
		 */

		//Cache the margins of the original element
		this._cacheMargins();

		//Get the next scrolling parent
		this.scrollParent = this.helper.scrollParent();

		//The element's absolute position on the page minus margins
		this.offset = this.currentItem.offset();
		this.offset = {
			top: this.offset.top - this.margins.top,
			left: this.offset.left - this.margins.left
		};

		$.extend(this.offset, {
			click: { //Where the click happened, relative to the element
				left: event.pageX - this.offset.left,
				top: event.pageY - this.offset.top
			},
			parent: this._getParentOffset(),
			relative: this._getRelativeOffset() //This is a relative to absolute position minus the actual position calculation - only used for relative positioned helper
		});

		// Only after we got the offset, we can change the helper's position to absolute
		// TODO: Still need to figure out a way to make relative sorting possible
		this.helper.css("position", "absolute");
		this.cssPosition = this.helper.css("position");

		//Generate the original position
		this.originalPosition = this._generatePosition(event);
		this.originalPageX = event.pageX;
		this.originalPageY = event.pageY;

		//Adjust the mouse offset relative to the helper if 'cursorAt' is supplied
		(o.cursorAt && this._adjustOffsetFromHelper(o.cursorAt));

		//Cache the former DOM position
		this.domPosition = { prev: this.currentItem.prev()[0], parent: this.currentItem.parent()[0] };

		//If the helper is not the original, hide the original so it's not playing any role during the drag, won't cause anything bad this way
		if(this.helper[0] != this.currentItem[0]) {
			this.currentItem.hide();
		}

		//Create the placeholder
		this._createPlaceholder();

		//Set a containment if given in the options
		if(o.containment)
			this._setContainment();

		if(o.cursor) { // cursor option
			if ($('body').css("cursor")) this._storedCursor = $('body').css("cursor");
			$('body').css("cursor", o.cursor);
		}

		if(o.opacity) { // opacity option
			if (this.helper.css("opacity")) this._storedOpacity = this.helper.css("opacity");
			this.helper.css("opacity", o.opacity);
		}

		if(o.zIndex) { // zIndex option
			if (this.helper.css("zIndex")) this._storedZIndex = this.helper.css("zIndex");
			this.helper.css("zIndex", o.zIndex);
		}

		//Prepare scrolling
		if(this.scrollParent[0] != document && this.scrollParent[0].tagName != 'HTML')
			this.overflowOffset = this.scrollParent.offset();

		//Call callbacks
		this._trigger("start", event, this._uiHash());

		//Recache the helper size
		if(!this._preserveHelperProportions)
			this._cacheHelperProportions();


		//Post 'activate' events to possible containers
		if(!noActivation) {
			 for (var i = this.containers.length - 1; i >= 0; i--) { this.containers[i]._trigger("activate", event, this._uiHash(this)); }
		}

		//Prepare possible droppables
		if($.ui.ddmanager)
			$.ui.ddmanager.current = this;

		if ($.ui.ddmanager && !o.dropBehaviour)
			$.ui.ddmanager.prepareOffsets(this, event);

		this.dragging = true;

		this.helper.addClass("ui-sortable-helper");
		this._mouseDrag(event); //Execute the drag once - this causes the helper not to be visible before getting its correct position
		return true;

	},

	_mouseDrag: function(event) {

		//Compute the helpers position
		this.position = this._generatePosition(event);
		this.positionAbs = this._convertPositionTo("absolute");

		if (!this.lastPositionAbs) {
			this.lastPositionAbs = this.positionAbs;
		}

		//Do scrolling
		if(this.options.scroll) {
			var o = this.options, scrolled = false;
			if(this.scrollParent[0] != document && this.scrollParent[0].tagName != 'HTML') {

				if((this.overflowOffset.top + this.scrollParent[0].offsetHeight) - event.pageY < o.scrollSensitivity)
					this.scrollParent[0].scrollTop = scrolled = this.scrollParent[0].scrollTop + o.scrollSpeed;
				else if(event.pageY - this.overflowOffset.top < o.scrollSensitivity)
					this.scrollParent[0].scrollTop = scrolled = this.scrollParent[0].scrollTop - o.scrollSpeed;

				if((this.overflowOffset.left + this.scrollParent[0].offsetWidth) - event.pageX < o.scrollSensitivity)
					this.scrollParent[0].scrollLeft = scrolled = this.scrollParent[0].scrollLeft + o.scrollSpeed;
				else if(event.pageX - this.overflowOffset.left < o.scrollSensitivity)
					this.scrollParent[0].scrollLeft = scrolled = this.scrollParent[0].scrollLeft - o.scrollSpeed;

			} else {

				if(event.pageY - $(document).scrollTop() < o.scrollSensitivity)
					scrolled = $(document).scrollTop($(document).scrollTop() - o.scrollSpeed);
				else if($(window).height() - (event.pageY - $(document).scrollTop()) < o.scrollSensitivity)
					scrolled = $(document).scrollTop($(document).scrollTop() + o.scrollSpeed);

				if(event.pageX - $(document).scrollLeft() < o.scrollSensitivity)
					scrolled = $(document).scrollLeft($(document).scrollLeft() - o.scrollSpeed);
				else if($(window).width() - (event.pageX - $(document).scrollLeft()) < o.scrollSensitivity)
					scrolled = $(document).scrollLeft($(document).scrollLeft() + o.scrollSpeed);

			}

			if(scrolled !== false && $.ui.ddmanager && !o.dropBehaviour)
				$.ui.ddmanager.prepareOffsets(this, event);
		}

		//Regenerate the absolute position used for position checks
		this.positionAbs = this._convertPositionTo("absolute");

		//Set the helper position
		if(!this.options.axis || this.options.axis != "y") this.helper[0].style.left = this.position.left+'px';
		if(!this.options.axis || this.options.axis != "x") this.helper[0].style.top = this.position.top+'px';

		//Rearrange
		for (var i = this.items.length - 1; i >= 0; i--) {

			//Cache variables and intersection, continue if no intersection
			var item = this.items[i], itemElement = item.item[0], intersection = this._intersectsWithPointer(item);
			if (!intersection) continue;

			// Only put the placeholder inside the current Container, skip all
			// items form other containers. This works because when moving
			// an item from one container to another the
			// currentContainer is switched before the placeholder is moved.
			//
			// Without this moving items in "sub-sortables" can cause the placeholder to jitter
			// beetween the outer and inner container.
			if (item.instance !== this.currentContainer) continue;

			if (itemElement != this.currentItem[0] //cannot intersect with itself
				&&	this.placeholder[intersection == 1 ? "next" : "prev"]()[0] != itemElement //no useless actions that have been done before
				&&	!$.contains(this.placeholder[0], itemElement) //no action if the item moved is the parent of the item checked
				&& (this.options.type == 'semi-dynamic' ? !$.contains(this.element[0], itemElement) : true)
				//&& itemElement.parentNode == this.placeholder[0].parentNode // only rearrange items within the same container
			) {

				this.direction = intersection == 1 ? "down" : "up";

				if (this.options.tolerance == "pointer" || this._intersectsWithSides(item)) {
					this._rearrange(event, item);
				} else {
					break;
				}

				this._trigger("change", event, this._uiHash());
				break;
			}
		}

		//Post events to containers
		this._contactContainers(event);

		//Interconnect with droppables
		if($.ui.ddmanager) $.ui.ddmanager.drag(this, event);

		//Call callbacks
		this._trigger('sort', event, this._uiHash());

		this.lastPositionAbs = this.positionAbs;
		return false;

	},

	_mouseStop: function(event, noPropagation) {

		if(!event) return;

		//If we are using droppables, inform the manager about the drop
		if ($.ui.ddmanager && !this.options.dropBehaviour)
			$.ui.ddmanager.drop(this, event);

		if(this.options.revert) {
			var that = this;
			var cur = this.placeholder.offset();

			this.reverting = true;

			$(this.helper).animate({
				left: cur.left - this.offset.parent.left - this.margins.left + (this.offsetParent[0] == document.body ? 0 : this.offsetParent[0].scrollLeft),
				top: cur.top - this.offset.parent.top - this.margins.top + (this.offsetParent[0] == document.body ? 0 : this.offsetParent[0].scrollTop)
			}, parseInt(this.options.revert, 10) || 500, function() {
				that._clear(event);
			});
		} else {
			this._clear(event, noPropagation);
		}

		return false;

	},

	cancel: function() {

		if(this.dragging) {

			this._mouseUp({ target: null });

			if(this.options.helper == "original")
				this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper");
			else
				this.currentItem.show();

			//Post deactivating events to containers
			for (var i = this.containers.length - 1; i >= 0; i--){
				this.containers[i]._trigger("deactivate", null, this._uiHash(this));
				if(this.containers[i].containerCache.over) {
					this.containers[i]._trigger("out", null, this._uiHash(this));
					this.containers[i].containerCache.over = 0;
				}
			}

		}

		if (this.placeholder) {
			//$(this.placeholder[0]).remove(); would have been the jQuery way - unfortunately, it unbinds ALL events from the original node!
			if(this.placeholder[0].parentNode) this.placeholder[0].parentNode.removeChild(this.placeholder[0]);
			if(this.options.helper != "original" && this.helper && this.helper[0].parentNode) this.helper.remove();

			$.extend(this, {
				helper: null,
				dragging: false,
				reverting: false,
				_noFinalSort: null
			});

			if(this.domPosition.prev) {
				$(this.domPosition.prev).after(this.currentItem);
			} else {
				$(this.domPosition.parent).prepend(this.currentItem);
			}
		}

		return this;

	},

	serialize: function(o) {

		var items = this._getItemsAsjQuery(o && o.connected);
		var str = []; o = o || {};

		$(items).each(function() {
			var res = ($(o.item || this).attr(o.attribute || 'id') || '').match(o.expression || (/(.+)[-=_](.+)/));
			if(res) str.push((o.key || res[1]+'[]')+'='+(o.key && o.expression ? res[1] : res[2]));
		});

		if(!str.length && o.key) {
			str.push(o.key + '=');
		}

		return str.join('&');

	},

	toArray: function(o) {

		var items = this._getItemsAsjQuery(o && o.connected);
		var ret = []; o = o || {};

		items.each(function() { ret.push($(o.item || this).attr(o.attribute || 'id') || ''); });
		return ret;

	},

	/* Be careful with the following core functions */
	_intersectsWith: function(item) {

		var x1 = this.positionAbs.left,
			x2 = x1 + this.helperProportions.width,
			y1 = this.positionAbs.top,
			y2 = y1 + this.helperProportions.height;

		var l = item.left,
			r = l + item.width,
			t = item.top,
			b = t + item.height;

		var dyClick = this.offset.click.top,
			dxClick = this.offset.click.left;

		var isOverElement = (y1 + dyClick) > t && (y1 + dyClick) < b && (x1 + dxClick) > l && (x1 + dxClick) < r;

		if(	   this.options.tolerance == "pointer"
			|| this.options.forcePointerForContainers
			|| (this.options.tolerance != "pointer" && this.helperProportions[this.floating ? 'width' : 'height'] > item[this.floating ? 'width' : 'height'])
		) {
			return isOverElement;
		} else {

			return (l < x1 + (this.helperProportions.width / 2) // Right Half
				&& x2 - (this.helperProportions.width / 2) < r // Left Half
				&& t < y1 + (this.helperProportions.height / 2) // Bottom Half
				&& y2 - (this.helperProportions.height / 2) < b ); // Top Half

		}
	},

	_intersectsWithPointer: function(item) {

		var isOverElementHeight = (this.options.axis === 'x') || $.ui.isOverAxis(this.positionAbs.top + this.offset.click.top, item.top, item.height),
			isOverElementWidth = (this.options.axis === 'y') || $.ui.isOverAxis(this.positionAbs.left + this.offset.click.left, item.left, item.width),
			isOverElement = isOverElementHeight && isOverElementWidth,
			verticalDirection = this._getDragVerticalDirection(),
			horizontalDirection = this._getDragHorizontalDirection();

		if (!isOverElement)
			return false;

		return this.floating ?
			( ((horizontalDirection && horizontalDirection == "right") || verticalDirection == "down") ? 2 : 1 )
			: ( verticalDirection && (verticalDirection == "down" ? 2 : 1) );

	},

	_intersectsWithSides: function(item) {

		var isOverBottomHalf = $.ui.isOverAxis(this.positionAbs.top + this.offset.click.top, item.top + (item.height/2), item.height),
			isOverRightHalf = $.ui.isOverAxis(this.positionAbs.left + this.offset.click.left, item.left + (item.width/2), item.width),
			verticalDirection = this._getDragVerticalDirection(),
			horizontalDirection = this._getDragHorizontalDirection();

		if (this.floating && horizontalDirection) {
			return ((horizontalDirection == "right" && isOverRightHalf) || (horizontalDirection == "left" && !isOverRightHalf));
		} else {
			return verticalDirection && ((verticalDirection == "down" && isOverBottomHalf) || (verticalDirection == "up" && !isOverBottomHalf));
		}

	},

	_getDragVerticalDirection: function() {
		var delta = this.positionAbs.top - this.lastPositionAbs.top;
		return delta != 0 && (delta > 0 ? "down" : "up");
	},

	_getDragHorizontalDirection: function() {
		var delta = this.positionAbs.left - this.lastPositionAbs.left;
		return delta != 0 && (delta > 0 ? "right" : "left");
	},

	refresh: function(event) {
		this._refreshItems(event);
		this.refreshPositions();
		return this;
	},

	_connectWith: function() {
		var options = this.options;
		return options.connectWith.constructor == String
			? [options.connectWith]
			: options.connectWith;
	},

	_getItemsAsjQuery: function(connected) {

		var items = [];
		var queries = [];
		var connectWith = this._connectWith();

		if(connectWith && connected) {
			for (var i = connectWith.length - 1; i >= 0; i--){
				var cur = $(connectWith[i]);
				for (var j = cur.length - 1; j >= 0; j--){
					var inst = $.data(cur[j], this.widgetName);
					if(inst && inst != this && !inst.options.disabled) {
						queries.push([$.isFunction(inst.options.items) ? inst.options.items.call(inst.element) : $(inst.options.items, inst.element).not(".ui-sortable-helper").not('.ui-sortable-placeholder'), inst]);
					}
				};
			};
		}

		queries.push([$.isFunction(this.options.items) ? this.options.items.call(this.element, null, { options: this.options, item: this.currentItem }) : $(this.options.items, this.element).not(".ui-sortable-helper").not('.ui-sortable-placeholder'), this]);

		for (var i = queries.length - 1; i >= 0; i--){
			queries[i][0].each(function() {
				items.push(this);
			});
		};

		return $(items);

	},

	_removeCurrentsFromItems: function() {

		var list = this.currentItem.find(":data(" + this.widgetName + "-item)");

		for (var i=0; i < this.items.length; i++) {

			for (var j=0; j < list.length; j++) {
				if(list[j] == this.items[i].item[0])
					this.items.splice(i,1);
			};

		};

	},

	_refreshItems: function(event) {

		this.items = [];
		this.containers = [this];
		var items = this.items;
		var queries = [[$.isFunction(this.options.items) ? this.options.items.call(this.element[0], event, { item: this.currentItem }) : $(this.options.items, this.element), this]];
		var connectWith = this._connectWith();

		if(connectWith && this.ready) { //Shouldn't be run the first time through due to massive slow-down
			for (var i = connectWith.length - 1; i >= 0; i--){
				var cur = $(connectWith[i]);
				for (var j = cur.length - 1; j >= 0; j--){
					var inst = $.data(cur[j], this.widgetName);
					if(inst && inst != this && !inst.options.disabled) {
						queries.push([$.isFunction(inst.options.items) ? inst.options.items.call(inst.element[0], event, { item: this.currentItem }) : $(inst.options.items, inst.element), inst]);
						this.containers.push(inst);
					}
				};
			};
		}

		for (var i = queries.length - 1; i >= 0; i--) {
			var targetData = queries[i][1];
			var _queries = queries[i][0];

			for (var j=0, queriesLength = _queries.length; j < queriesLength; j++) {
				var item = $(_queries[j]);

				item.data(this.widgetName + '-item', targetData); // Data for target checking (mouse manager)

				items.push({
					item: item,
					instance: targetData,
					width: 0, height: 0,
					left: 0, top: 0
				});
			};
		};

	},

	refreshPositions: function(fast) {

		//This has to be redone because due to the item being moved out/into the offsetParent, the offsetParent's position will change
		if(this.offsetParent && this.helper) {
			this.offset.parent = this._getParentOffset();
		}

		for (var i = this.items.length - 1; i >= 0; i--){
			var item = this.items[i];

			//We ignore calculating positions of all connected containers when we're not over them
			if(item.instance != this.currentContainer && this.currentContainer && item.item[0] != this.currentItem[0])
				continue;

			var t = this.options.toleranceElement ? $(this.options.toleranceElement, item.item) : item.item;

			if (!fast) {
				item.width = t.outerWidth();
				item.height = t.outerHeight();
			}

			var p = t.offset();
			item.left = p.left;
			item.top = p.top;
		};

		if(this.options.custom && this.options.custom.refreshContainers) {
			this.options.custom.refreshContainers.call(this);
		} else {
			for (var i = this.containers.length - 1; i >= 0; i--){
				var p = this.containers[i].element.offset();
				this.containers[i].containerCache.left = p.left;
				this.containers[i].containerCache.top = p.top;
				this.containers[i].containerCache.width	= this.containers[i].element.outerWidth();
				this.containers[i].containerCache.height = this.containers[i].element.outerHeight();
			};
		}

		return this;
	},

	_createPlaceholder: function(that) {
		that = that || this;
		var o = that.options;

		if(!o.placeholder || o.placeholder.constructor == String) {
			var className = o.placeholder;
			o.placeholder = {
				element: function() {

					var el = $(document.createElement(that.currentItem[0].nodeName))
						.addClass(className || that.currentItem[0].className+" ui-sortable-placeholder")
						.removeClass("ui-sortable-helper")[0];

					if(!className)
						el.style.visibility = "hidden";

					return el;
				},
				update: function(container, p) {

					// 1. If a className is set as 'placeholder option, we don't force sizes - the class is responsible for that
					// 2. The option 'forcePlaceholderSize can be enabled to force it even if a class name is specified
					if(className && !o.forcePlaceholderSize) return;

					//If the element doesn't have a actual height by itself (without styles coming from a stylesheet), it receives the inline height from the dragged item
					if(!p.height()) { p.height(that.currentItem.innerHeight() - parseInt(that.currentItem.css('paddingTop')||0, 10) - parseInt(that.currentItem.css('paddingBottom')||0, 10)); };
					if(!p.width()) { p.width(that.currentItem.innerWidth() - parseInt(that.currentItem.css('paddingLeft')||0, 10) - parseInt(that.currentItem.css('paddingRight')||0, 10)); };
				}
			};
		}

		//Create the placeholder
		that.placeholder = $(o.placeholder.element.call(that.element, that.currentItem));

		//Append it after the actual current item
		that.currentItem.after(that.placeholder);

		//Update the size of the placeholder (TODO: Logic to fuzzy, see line 316/317)
		o.placeholder.update(that, that.placeholder);

	},

	_contactContainers: function(event) {

		// get innermost container that intersects with item
		var innermostContainer = null, innermostIndex = null;


		for (var i = this.containers.length - 1; i >= 0; i--){

			// never consider a container that's located within the item itself
			if($.contains(this.currentItem[0], this.containers[i].element[0]))
				continue;

			if(this._intersectsWith(this.containers[i].containerCache)) {

				// if we've already found a container and it's more "inner" than this, then continue
				if(innermostContainer && $.contains(this.containers[i].element[0], innermostContainer.element[0]))
					continue;

				innermostContainer = this.containers[i];
				innermostIndex = i;

			} else {
				// container doesn't intersect. trigger "out" event if necessary
				if(this.containers[i].containerCache.over) {
					this.containers[i]._trigger("out", event, this._uiHash(this));
					this.containers[i].containerCache.over = 0;
				}
			}

		}

		// if no intersecting containers found, return
		if(!innermostContainer) return;

		// move the item into the container if it's not there already
		if(this.containers.length === 1) {
			this.containers[innermostIndex]._trigger("over", event, this._uiHash(this));
			this.containers[innermostIndex].containerCache.over = 1;
		} else if(this.currentContainer != this.containers[innermostIndex]) {

			//When entering a new container, we will find the item with the least distance and append our item near it
			var dist = 10000; var itemWithLeastDistance = null; var base = this.positionAbs[this.containers[innermostIndex].floating ? 'left' : 'top'];
			for (var j = this.items.length - 1; j >= 0; j--) {
				if(!$.contains(this.containers[innermostIndex].element[0], this.items[j].item[0])) continue;
				var cur = this.containers[innermostIndex].floating ? this.items[j].item.offset().left : this.items[j].item.offset().top;
				if(Math.abs(cur - base) < dist) {
					dist = Math.abs(cur - base); itemWithLeastDistance = this.items[j];
					this.direction = (cur - base > 0) ? 'down' : 'up';
				}
			}

			if(!itemWithLeastDistance && !this.options.dropOnEmpty) //Check if dropOnEmpty is enabled
				return;

			this.currentContainer = this.containers[innermostIndex];
			itemWithLeastDistance ? this._rearrange(event, itemWithLeastDistance, null, true) : this._rearrange(event, null, this.containers[innermostIndex].element, true);
			this._trigger("change", event, this._uiHash());
			this.containers[innermostIndex]._trigger("change", event, this._uiHash(this));

			//Update the placeholder
			this.options.placeholder.update(this.currentContainer, this.placeholder);

			this.containers[innermostIndex]._trigger("over", event, this._uiHash(this));
			this.containers[innermostIndex].containerCache.over = 1;
		}


	},

	_createHelper: function(event) {

		var o = this.options;
		var helper = $.isFunction(o.helper) ? $(o.helper.apply(this.element[0], [event, this.currentItem])) : (o.helper == 'clone' ? this.currentItem.clone() : this.currentItem);

		if(!helper.parents('body').length) //Add the helper to the DOM if that didn't happen already
			$(o.appendTo != 'parent' ? o.appendTo : this.currentItem[0].parentNode)[0].appendChild(helper[0]);

		if(helper[0] == this.currentItem[0])
			this._storedCSS = { width: this.currentItem[0].style.width, height: this.currentItem[0].style.height, position: this.currentItem.css("position"), top: this.currentItem.css("top"), left: this.currentItem.css("left") };

		if(helper[0].style.width == '' || o.forceHelperSize) helper.width(this.currentItem.width());
		if(helper[0].style.height == '' || o.forceHelperSize) helper.height(this.currentItem.height());

		return helper;

	},

	_adjustOffsetFromHelper: function(obj) {
		if (typeof obj == 'string') {
			obj = obj.split(' ');
		}
		if ($.isArray(obj)) {
			obj = {left: +obj[0], top: +obj[1] || 0};
		}
		if ('left' in obj) {
			this.offset.click.left = obj.left + this.margins.left;
		}
		if ('right' in obj) {
			this.offset.click.left = this.helperProportions.width - obj.right + this.margins.left;
		}
		if ('top' in obj) {
			this.offset.click.top = obj.top + this.margins.top;
		}
		if ('bottom' in obj) {
			this.offset.click.top = this.helperProportions.height - obj.bottom + this.margins.top;
		}
	},

	_getParentOffset: function() {


		//Get the offsetParent and cache its position
		this.offsetParent = this.helper.offsetParent();
		var po = this.offsetParent.offset();

		// This is a special case where we need to modify a offset calculated on start, since the following happened:
		// 1. The position of the helper is absolute, so it's position is calculated based on the next positioned parent
		// 2. The actual offset parent is a child of the scroll parent, and the scroll parent isn't the document, which means that
		//    the scroll is included in the initial calculation of the offset of the parent, and never recalculated upon drag
		if(this.cssPosition == 'absolute' && this.scrollParent[0] != document && $.contains(this.scrollParent[0], this.offsetParent[0])) {
			po.left += this.scrollParent.scrollLeft();
			po.top += this.scrollParent.scrollTop();
		}

		if((this.offsetParent[0] == document.body) //This needs to be actually done for all browsers, since pageX/pageY includes this information
		|| (this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() == 'html' && $.browser.msie)) //Ugly IE fix
			po = { top: 0, left: 0 };

		return {
			top: po.top + (parseInt(this.offsetParent.css("borderTopWidth"),10) || 0),
			left: po.left + (parseInt(this.offsetParent.css("borderLeftWidth"),10) || 0)
		};

	},

	_getRelativeOffset: function() {

		if(this.cssPosition == "relative") {
			var p = this.currentItem.position();
			return {
				top: p.top - (parseInt(this.helper.css("top"),10) || 0) + this.scrollParent.scrollTop(),
				left: p.left - (parseInt(this.helper.css("left"),10) || 0) + this.scrollParent.scrollLeft()
			};
		} else {
			return { top: 0, left: 0 };
		}

	},

	_cacheMargins: function() {
		this.margins = {
			left: (parseInt(this.currentItem.css("marginLeft"),10) || 0),
			top: (parseInt(this.currentItem.css("marginTop"),10) || 0)
		};
	},

	_cacheHelperProportions: function() {
		this.helperProportions = {
			width: this.helper.outerWidth(),
			height: this.helper.outerHeight()
		};
	},

	_setContainment: function() {

		var o = this.options;
		if(o.containment == 'parent') o.containment = this.helper[0].parentNode;
		if(o.containment == 'document' || o.containment == 'window') this.containment = [
			0 - this.offset.relative.left - this.offset.parent.left,
			0 - this.offset.relative.top - this.offset.parent.top,
			$(o.containment == 'document' ? document : window).width() - this.helperProportions.width - this.margins.left,
			($(o.containment == 'document' ? document : window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top
		];

		if(!(/^(document|window|parent)$/).test(o.containment)) {
			var ce = $(o.containment)[0];
			var co = $(o.containment).offset();
			var over = ($(ce).css("overflow") != 'hidden');

			this.containment = [
				co.left + (parseInt($(ce).css("borderLeftWidth"),10) || 0) + (parseInt($(ce).css("paddingLeft"),10) || 0) - this.margins.left,
				co.top + (parseInt($(ce).css("borderTopWidth"),10) || 0) + (parseInt($(ce).css("paddingTop"),10) || 0) - this.margins.top,
				co.left+(over ? Math.max(ce.scrollWidth,ce.offsetWidth) : ce.offsetWidth) - (parseInt($(ce).css("borderLeftWidth"),10) || 0) - (parseInt($(ce).css("paddingRight"),10) || 0) - this.helperProportions.width - this.margins.left,
				co.top+(over ? Math.max(ce.scrollHeight,ce.offsetHeight) : ce.offsetHeight) - (parseInt($(ce).css("borderTopWidth"),10) || 0) - (parseInt($(ce).css("paddingBottom"),10) || 0) - this.helperProportions.height - this.margins.top
			];
		}

	},

	_convertPositionTo: function(d, pos) {

		if(!pos) pos = this.position;
		var mod = d == "absolute" ? 1 : -1;
		var o = this.options, scroll = this.cssPosition == 'absolute' && !(this.scrollParent[0] != document && $.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent, scrollIsRootNode = (/(html|body)/i).test(scroll[0].tagName);

		return {
			top: (
				pos.top																	// The absolute mouse position
				+ this.offset.relative.top * mod										// Only for relative positioned nodes: Relative offset from element to offset parent
				+ this.offset.parent.top * mod											// The offsetParent's offset without borders (offset + border)
				- ( ( this.cssPosition == 'fixed' ? -this.scrollParent.scrollTop() : ( scrollIsRootNode ? 0 : scroll.scrollTop() ) ) * mod)
			),
			left: (
				pos.left																// The absolute mouse position
				+ this.offset.relative.left * mod										// Only for relative positioned nodes: Relative offset from element to offset parent
				+ this.offset.parent.left * mod											// The offsetParent's offset without borders (offset + border)
				- ( ( this.cssPosition == 'fixed' ? -this.scrollParent.scrollLeft() : scrollIsRootNode ? 0 : scroll.scrollLeft() ) * mod)
			)
		};

	},

	_generatePosition: function(event) {

		var o = this.options, scroll = this.cssPosition == 'absolute' && !(this.scrollParent[0] != document && $.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent, scrollIsRootNode = (/(html|body)/i).test(scroll[0].tagName);

		// This is another very weird special case that only happens for relative elements:
		// 1. If the css position is relative
		// 2. and the scroll parent is the document or similar to the offset parent
		// we have to refresh the relative offset during the scroll so there are no jumps
		if(this.cssPosition == 'relative' && !(this.scrollParent[0] != document && this.scrollParent[0] != this.offsetParent[0])) {
			this.offset.relative = this._getRelativeOffset();
		}

		var pageX = event.pageX;
		var pageY = event.pageY;

		/*
		 * - Position constraining -
		 * Constrain the position to a mix of grid, containment.
		 */

		if(this.originalPosition) { //If we are not dragging yet, we won't check for options

			if(this.containment) {
				if(event.pageX - this.offset.click.left < this.containment[0]) pageX = this.containment[0] + this.offset.click.left;
				if(event.pageY - this.offset.click.top < this.containment[1]) pageY = this.containment[1] + this.offset.click.top;
				if(event.pageX - this.offset.click.left > this.containment[2]) pageX = this.containment[2] + this.offset.click.left;
				if(event.pageY - this.offset.click.top > this.containment[3]) pageY = this.containment[3] + this.offset.click.top;
			}

			if(o.grid) {
				var top = this.originalPageY + Math.round((pageY - this.originalPageY) / o.grid[1]) * o.grid[1];
				pageY = this.containment ? (!(top - this.offset.click.top < this.containment[1] || top - this.offset.click.top > this.containment[3]) ? top : (!(top - this.offset.click.top < this.containment[1]) ? top - o.grid[1] : top + o.grid[1])) : top;

				var left = this.originalPageX + Math.round((pageX - this.originalPageX) / o.grid[0]) * o.grid[0];
				pageX = this.containment ? (!(left - this.offset.click.left < this.containment[0] || left - this.offset.click.left > this.containment[2]) ? left : (!(left - this.offset.click.left < this.containment[0]) ? left - o.grid[0] : left + o.grid[0])) : left;
			}

		}

		return {
			top: (
				pageY																// The absolute mouse position
				- this.offset.click.top													// Click offset (relative to the element)
				- this.offset.relative.top												// Only for relative positioned nodes: Relative offset from element to offset parent
				- this.offset.parent.top												// The offsetParent's offset without borders (offset + border)
				+ ( ( this.cssPosition == 'fixed' ? -this.scrollParent.scrollTop() : ( scrollIsRootNode ? 0 : scroll.scrollTop() ) ))
			),
			left: (
				pageX																// The absolute mouse position
				- this.offset.click.left												// Click offset (relative to the element)
				- this.offset.relative.left												// Only for relative positioned nodes: Relative offset from element to offset parent
				- this.offset.parent.left												// The offsetParent's offset without borders (offset + border)
				+ ( ( this.cssPosition == 'fixed' ? -this.scrollParent.scrollLeft() : scrollIsRootNode ? 0 : scroll.scrollLeft() ))
			)
		};

	},

	_rearrange: function(event, i, a, hardRefresh) {

		a ? a[0].appendChild(this.placeholder[0]) : i.item[0].parentNode.insertBefore(this.placeholder[0], (this.direction == 'down' ? i.item[0] : i.item[0].nextSibling));

		//Various things done here to improve the performance:
		// 1. we create a setTimeout, that calls refreshPositions
		// 2. on the instance, we have a counter variable, that get's higher after every append
		// 3. on the local scope, we copy the counter variable, and check in the timeout, if it's still the same
		// 4. this lets only the last addition to the timeout stack through
		this.counter = this.counter ? ++this.counter : 1;
		var counter = this.counter;

		this._delay(function() {
			if(counter == this.counter) this.refreshPositions(!hardRefresh); //Precompute after each DOM insertion, NOT on mousemove
		});

	},

	_clear: function(event, noPropagation) {

		this.reverting = false;
		// We delay all events that have to be triggered to after the point where the placeholder has been removed and
		// everything else normalized again
		var delayedTriggers = [];

		// We first have to update the dom position of the actual currentItem
		// Note: don't do it if the current item is already removed (by a user), or it gets reappended (see #4088)
		if(!this._noFinalSort && this.currentItem.parent().length) this.placeholder.before(this.currentItem);
		this._noFinalSort = null;

		if(this.helper[0] == this.currentItem[0]) {
			for(var i in this._storedCSS) {
				if(this._storedCSS[i] == 'auto' || this._storedCSS[i] == 'static') this._storedCSS[i] = '';
			}
			this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper");
		} else {
			this.currentItem.show();
		}

		if(this.fromOutside && !noPropagation) delayedTriggers.push(function(event) { this._trigger("receive", event, this._uiHash(this.fromOutside)); });
		if((this.fromOutside || this.domPosition.prev != this.currentItem.prev().not(".ui-sortable-helper")[0] || this.domPosition.parent != this.currentItem.parent()[0]) && !noPropagation) delayedTriggers.push(function(event) { this._trigger("update", event, this._uiHash()); }); //Trigger update callback if the DOM position has changed

		// Check if the items Container has Changed and trigger appropriate
		// events.
		if (this !== this.currentContainer) {
			if(!noPropagation) {
				delayedTriggers.push(function(event) { this._trigger("remove", event, this._uiHash()); });
				delayedTriggers.push((function(c) { return function(event) { c._trigger("receive", event, this._uiHash(this)); };  }).call(this, this.currentContainer));
				delayedTriggers.push((function(c) { return function(event) { c._trigger("update", event, this._uiHash(this));  }; }).call(this, this.currentContainer));
			}
		}


		//Post events to containers
		for (var i = this.containers.length - 1; i >= 0; i--){
			if(!noPropagation) delayedTriggers.push((function(c) { return function(event) { c._trigger("deactivate", event, this._uiHash(this)); };  }).call(this, this.containers[i]));
			if(this.containers[i].containerCache.over) {
				delayedTriggers.push((function(c) { return function(event) { c._trigger("out", event, this._uiHash(this)); };  }).call(this, this.containers[i]));
				this.containers[i].containerCache.over = 0;
			}
		}

		//Do what was originally in plugins
		if(this._storedCursor) $('body').css("cursor", this._storedCursor); //Reset cursor
		if(this._storedOpacity) this.helper.css("opacity", this._storedOpacity); //Reset opacity
		if(this._storedZIndex) this.helper.css("zIndex", this._storedZIndex == 'auto' ? '' : this._storedZIndex); //Reset z-index

		this.dragging = false;
		if(this.cancelHelperRemoval) {
			if(!noPropagation) {
				this._trigger("beforeStop", event, this._uiHash());
				for (var i=0; i < delayedTriggers.length; i++) { delayedTriggers[i].call(this, event); }; //Trigger all delayed events
				this._trigger("stop", event, this._uiHash());
			}

			this.fromOutside = false;
			return false;
		}

		if(!noPropagation) this._trigger("beforeStop", event, this._uiHash());

		//$(this.placeholder[0]).remove(); would have been the jQuery way - unfortunately, it unbinds ALL events from the original node!
		this.placeholder[0].parentNode.removeChild(this.placeholder[0]);

		if(this.helper[0] != this.currentItem[0]) this.helper.remove(); this.helper = null;

		if(!noPropagation) {
			for (var i=0; i < delayedTriggers.length; i++) { delayedTriggers[i].call(this, event); }; //Trigger all delayed events
			this._trigger("stop", event, this._uiHash());
		}

		this.fromOutside = false;
		return true;

	},

	_trigger: function() {
		if ($.Widget.prototype._trigger.apply(this, arguments) === false) {
			this.cancel();
		}
	},

	_uiHash: function(_inst) {
		var inst = _inst || this;
		return {
			helper: inst.helper,
			placeholder: inst.placeholder || $([]),
			position: inst.position,
			originalPosition: inst.originalPosition,
			offset: inst.positionAbs,
			item: inst.currentItem,
			sender: _inst ? _inst.element : null
		};
	}

});

})(jQuery);
(function( $, undefined ) {

var uid = 0,
	hideProps = {},
	showProps = {};

hideProps.height = hideProps.paddingTop = hideProps.paddingBottom =
	hideProps.borderTopWidth = hideProps.borderBottomWidth = "hide";
showProps.height = showProps.paddingTop = showProps.paddingBottom =
	showProps.borderTopWidth = showProps.borderBottomWidth = "show";

$.widget( "ui.accordion", {
	version: "1.9.0",
	options: {
		active: 0,
		animate: {},
		collapsible: false,
		event: "click",
		header: "> li > :first-child,> :not(li):even",
		heightStyle: "auto",
		icons: {
			activeHeader: "ui-icon-triangle-1-s",
			header: "ui-icon-triangle-1-e"
		},

		// callbacks
		activate: null,
		beforeActivate: null
	},

	_create: function() {
		var accordionId = this.accordionId = "ui-accordion-" +
				(this.element.attr( "id" ) || ++uid),
			options = this.options;

		this.prevShow = this.prevHide = $();
		this.element.addClass( "ui-accordion ui-widget ui-helper-reset" );

		this.headers = this.element.find( options.header )
			.addClass( "ui-accordion-header ui-helper-reset ui-state-default ui-corner-all" );
		this._hoverable( this.headers );
		this._focusable( this.headers );

		this.headers.next()
			.addClass( "ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom" )
			.hide();

		// don't allow collapsible: false and active: false
		if ( !options.collapsible && options.active === false ) {
			options.active = 0;
		}
		// handle negative values
		if ( options.active < 0 ) {
			options.active += this.headers.length;
		}
		this.active = this._findActive( options.active )
			.addClass( "ui-accordion-header-active ui-state-active" )
			.toggleClass( "ui-corner-all ui-corner-top" );
		this.active.next()
			.addClass( "ui-accordion-content-active" )
			.show();

		this._createIcons();
		this.originalHeight = this.element[0].style.height;
		this.refresh();

		// ARIA
		this.element.attr( "role", "tablist" );

		this.headers
			.attr( "role", "tab" )
			.each(function( i ) {
				var header = $( this ),
					headerId = header.attr( "id" ),
					panel = header.next(),
					panelId = panel.attr( "id" );
				if ( !headerId ) {
					headerId = accordionId + "-header-" + i;
					header.attr( "id", headerId );
				}
				if ( !panelId ) {
					panelId = accordionId + "-panel-" + i;
					panel.attr( "id", panelId );
				}
				header.attr( "aria-controls", panelId );
				panel.attr( "aria-labelledby", headerId );
			})
			.next()
				.attr( "role", "tabpanel" );

		this.headers
			.not( this.active )
			.attr({
				"aria-selected": "false",
				tabIndex: -1
			})
			.next()
				.attr({
					"aria-expanded": "false",
					"aria-hidden": "true"
				})
				.hide();

		// make sure at least one header is in the tab order
		if ( !this.active.length ) {
			this.headers.eq( 0 ).attr( "tabIndex", 0 );
		} else {
			this.active.attr({
				"aria-selected": "true",
				tabIndex: 0
			})
			.next()
				.attr({
					"aria-expanded": "true",
					"aria-hidden": "false"
				});
		}

		this._on( this.headers, { keydown: "_keydown" });
		this._on( this.headers.next(), { keydown: "_panelKeyDown" });
		this._setupEvents( options.event );
	},

	_getCreateEventData: function() {
		return {
			header: this.active,
			content: !this.active.length ? $() : this.active.next()
		};
	},

	_createIcons: function() {
		var icons = this.options.icons;
		if ( icons ) {
			$( "<span>" )
				.addClass( "ui-accordion-header-icon ui-icon " + icons.header )
				.prependTo( this.headers );
			this.active.children( ".ui-accordion-header-icon" )
				.removeClass( icons.header )
				.addClass( icons.activeHeader );
			this.headers.addClass( "ui-accordion-icons" );
		}
	},

	_destroyIcons: function() {
		this.headers
			.removeClass( "ui-accordion-icons" )
			.children( ".ui-accordion-header-icon" )
				.remove();
	},

	_destroy: function() {
		var contents;

		// clean up main element
		this.element
			.removeClass( "ui-accordion ui-widget ui-helper-reset" )
			.removeAttr( "role" );

		// clean up headers
		this.headers
			.removeClass( "ui-accordion-header ui-accordion-header-active ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top" )
			.removeAttr( "role" )
			.removeAttr( "aria-selected" )
			.removeAttr( "aria-controls" )
			.removeAttr( "tabIndex" )
			.each(function() {
				if ( /^ui-accordion/.test( this.id ) ) {
					this.removeAttribute( "id" );
				}
			});
		this._destroyIcons();

		// clean up content panels
		contents = this.headers.next()
			.css( "display", "" )
			.removeAttr( "role" )
			.removeAttr( "aria-expanded" )
			.removeAttr( "aria-hidden" )
			.removeAttr( "aria-labelledby" )
			.removeClass( "ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-state-disabled" )
			.each(function() {
				if ( /^ui-accordion/.test( this.id ) ) {
					this.removeAttribute( "id" );
				}
			});
		if ( this.options.heightStyle !== "content" ) {
			this.element.css( "height", this.originalHeight );
			contents.css( "height", "" );
		}
	},

	_setOption: function( key, value ) {
		if ( key === "active" ) {
			// _activate() will handle invalid values and update this.options
			this._activate( value );
			return;
		}

		if ( key === "event" ) {
			if ( this.options.event ) {
				this._off( this.headers, this.options.event );
			}
			this._setupEvents( value );
		}

		this._super( key, value );

		// setting collapsible: false while collapsed; open first panel
		if ( key === "collapsible" && !value && this.options.active === false ) {
			this._activate( 0 );
		}

		if ( key === "icons" ) {
			this._destroyIcons();
			if ( value ) {
				this._createIcons();
			}
		}

		// #5332 - opacity doesn't cascade to positioned elements in IE
		// so we need to add the disabled class to the headers and panels
		if ( key === "disabled" ) {
			this.headers.add( this.headers.next() )
				.toggleClass( "ui-state-disabled", !!value );
		}
	},

	_keydown: function( event ) {
		if ( event.altKey || event.ctrlKey ) {
			return;
		}

		var keyCode = $.ui.keyCode,
			length = this.headers.length,
			currentIndex = this.headers.index( event.target ),
			toFocus = false;

		switch ( event.keyCode ) {
			case keyCode.RIGHT:
			case keyCode.DOWN:
				toFocus = this.headers[ ( currentIndex + 1 ) % length ];
				break;
			case keyCode.LEFT:
			case keyCode.UP:
				toFocus = this.headers[ ( currentIndex - 1 + length ) % length ];
				break;
			case keyCode.SPACE:
			case keyCode.ENTER:
				this._eventHandler( event );
				break;
			case keyCode.HOME:
				toFocus = this.headers[ 0 ];
				break;
			case keyCode.END:
				toFocus = this.headers[ length - 1 ];
				break;
		}

		if ( toFocus ) {
			$( event.target ).attr( "tabIndex", -1 );
			$( toFocus ).attr( "tabIndex", 0 );
			toFocus.focus();
			event.preventDefault();
		}
	},

	_panelKeyDown : function( event ) {
		if ( event.keyCode === $.ui.keyCode.UP && event.ctrlKey ) {
			$( event.currentTarget ).prev().focus();
		}
	},

	refresh: function() {
		var maxHeight, overflow,
			heightStyle = this.options.heightStyle,
			parent = this.element.parent();

		this.element.css( "height", this.originalHeight );

		if ( heightStyle === "fill" ) {
			// IE 6 treats height like minHeight, so we need to turn off overflow
			// in order to get a reliable height
			// we use the minHeight support test because we assume that only
			// browsers that don't support minHeight will treat height as minHeight
			if ( !$.support.minHeight ) {
				overflow = parent.css( "overflow" );
				parent.css( "overflow", "hidden");
			}
			maxHeight = parent.height();
			this.element.siblings( ":visible" ).each(function() {
				var elem = $( this ),
					position = elem.css( "position" );

				if ( position === "absolute" || position === "fixed" ) {
					return;
				}
				maxHeight -= elem.outerHeight( true );
			});
			if ( overflow ) {
				parent.css( "overflow", overflow );
			}

			this.headers.each(function() {
				maxHeight -= $( this ).outerHeight( true );
			});

			this.headers.next()
				.each(function() {
					$( this ).height( Math.max( 0, maxHeight -
						$( this ).innerHeight() + $( this ).height() ) );
				})
				.css( "overflow", "auto" );
		} else if ( heightStyle === "auto" ) {
			maxHeight = 0;
			this.headers.next()
				.each(function() {
					maxHeight = Math.max( maxHeight, $( this ).height( "" ).height() );
				})
				.height( maxHeight );
		}

		if ( heightStyle !== "content" ) {
			this.element.height( this.element.height() );
		}
	},

	_activate: function( index ) {
		var active = this._findActive( index )[ 0 ];

		// trying to activate the already active panel
		if ( active === this.active[ 0 ] ) {
			return;
		}

		// trying to collapse, simulate a click on the currently active header
		active = active || this.active[ 0 ];

		this._eventHandler({
			target: active,
			currentTarget: active,
			preventDefault: $.noop
		});
	},

	_findActive: function( selector ) {
		return typeof selector === "number" ? this.headers.eq( selector ) : $();
	},

	_setupEvents: function( event ) {
		var events = {};
		if ( !event ) {
			return;
		}
		$.each( event.split(" "), function( index, eventName ) {
			events[ eventName ] = "_eventHandler";
		});
		this._on( this.headers, events );
	},

	_eventHandler: function( event ) {
		var options = this.options,
			active = this.active,
			clicked = $( event.currentTarget ),
			clickedIsActive = clicked[ 0 ] === active[ 0 ],
			collapsing = clickedIsActive && options.collapsible,
			toShow = collapsing ? $() : clicked.next(),
			toHide = active.next(),
			eventData = {
				oldHeader: active,
				oldPanel: toHide,
				newHeader: collapsing ? $() : clicked,
				newPanel: toShow
			};

		event.preventDefault();

		if (
				// click on active header, but not collapsible
				( clickedIsActive && !options.collapsible ) ||
				// allow canceling activation
				( this._trigger( "beforeActivate", event, eventData ) === false ) ) {
			return;
		}

		options.active = collapsing ? false : this.headers.index( clicked );

		// when the call to ._toggle() comes after the class changes
		// it causes a very odd bug in IE 8 (see #6720)
		this.active = clickedIsActive ? $() : clicked;
		this._toggle( eventData );

		// switch classes
		// corner classes on the previously active header stay after the animation
		active.removeClass( "ui-accordion-header-active ui-state-active" );
		if ( options.icons ) {
			active.children( ".ui-accordion-header-icon" )
				.removeClass( options.icons.activeHeader )
				.addClass( options.icons.header );
		}

		if ( !clickedIsActive ) {
			clicked
				.removeClass( "ui-corner-all" )
				.addClass( "ui-accordion-header-active ui-state-active ui-corner-top" );
			if ( options.icons ) {
				clicked.children( ".ui-accordion-header-icon" )
					.removeClass( options.icons.header )
					.addClass( options.icons.activeHeader );
			}

			clicked
				.next()
				.addClass( "ui-accordion-content-active" );
		}
	},

	_toggle: function( data ) {
		var toShow = data.newPanel,
			toHide = this.prevShow.length ? this.prevShow : data.oldPanel;

		// handle activating a panel during the animation for another activation
		this.prevShow.add( this.prevHide ).stop( true, true );
		this.prevShow = toShow;
		this.prevHide = toHide;

		if ( this.options.animate ) {
			this._animate( toShow, toHide, data );
		} else {
			toHide.hide();
			toShow.show();
			this._toggleComplete( data );
		}

		toHide.attr({
			"aria-expanded": "false",
			"aria-hidden": "true"
		});
		toHide.prev().attr( "aria-selected", "false" );
		// if we're switching panels, remove the old header from the tab order
		// if we're opening from collapsed state, remove the previous header from the tab order
		// if we're collapsing, then keep the collapsing header in the tab order
		if ( toShow.length && toHide.length ) {
			toHide.prev().attr( "tabIndex", -1 );
		} else if ( toShow.length ) {
			this.headers.filter(function() {
				return $( this ).attr( "tabIndex" ) === 0;
			})
			.attr( "tabIndex", -1 );
		}

		toShow
			.attr({
				"aria-expanded": "true",
				"aria-hidden": "false"
			})
			.prev()
				.attr({
					"aria-selected": "true",
					tabIndex: 0
				});
	},

	_animate: function( toShow, toHide, data ) {
		var total, easing, duration,
			that = this,
			adjust = 0,
			down = toShow.length &&
				( !toHide.length || ( toShow.index() < toHide.index() ) ),
			animate = this.options.animate || {},
			options = down && animate.down || animate,
			complete = function() {
				that._toggleComplete( data );
			};

		if ( typeof options === "number" ) {
			duration = options;
		}
		if ( typeof options === "string" ) {
			easing = options;
		}
		// fall back from options to animation in case of partial down settings
		easing = easing || options.easing || animate.easing;
		duration = duration || options.duration || animate.duration;

		if ( !toHide.length ) {
			return toShow.animate( showProps, duration, easing, complete );
		}
		if ( !toShow.length ) {
			return toHide.animate( hideProps, duration, easing, complete );
		}

		total = toShow.show().outerHeight();
		toHide.animate( hideProps, {
			duration: duration,
			easing: easing,
			step: function( now, fx ) {
				fx.now = Math.round( now );
			}
		});
		toShow
			.hide()
			.animate( showProps, {
				duration: duration,
				easing: easing,
				complete: complete,
				step: function( now, fx ) {
					fx.now = Math.round( now );
					if ( fx.prop !== "height" ) {
						adjust += fx.now;
					} else if ( that.options.heightStyle !== "content" ) {
						fx.now = Math.round( total - toHide.outerHeight() - adjust );
						adjust = 0;
					}
				}
			});
	},

	_toggleComplete: function( data ) {
		var toHide = data.oldPanel;

		toHide
			.removeClass( "ui-accordion-content-active" )
			.prev()
				.removeClass( "ui-corner-top" )
				.addClass( "ui-corner-all" );

		// Work around for rendering bug in IE (#5421)
		if ( toHide.length ) {
			toHide.parent()[0].className = toHide.parent()[0].className;
		}

		this._trigger( "activate", null, data );
	}
});



// DEPRECATED
if ( $.uiBackCompat !== false ) {
	// navigation options
	(function( $, prototype ) {
		$.extend( prototype.options, {
			navigation: false,
			navigationFilter: function() {
				return this.href.toLowerCase() === location.href.toLowerCase();
			}
		});

		var _create = prototype._create;
		prototype._create = function() {
			if ( this.options.navigation ) {
				var that = this,
					headers = this.element.find( this.options.header ),
					content = headers.next(),
					current = headers.add( content )
						.find( "a" )
						.filter( this.options.navigationFilter )
						[ 0 ];
				if ( current ) {
					headers.add( content ).each( function( index ) {
						if ( $.contains( this, current ) ) {
							that.options.active = Math.floor( index / 2 );
							return false;
						}
					});
				}
			}
			_create.call( this );
		};
	}( jQuery, jQuery.ui.accordion.prototype ) );

	// height options
	(function( $, prototype ) {
		$.extend( prototype.options, {
			heightStyle: null, // remove default so we fall back to old values
			autoHeight: true, // use heightStyle: "auto"
			clearStyle: false, // use heightStyle: "content"
			fillSpace: false // use heightStyle: "fill"
		});

		var _create = prototype._create,
			_setOption = prototype._setOption;

		$.extend( prototype, {
			_create: function() {
				this.options.heightStyle = this.options.heightStyle ||
					this._mergeHeightStyle();

				_create.call( this );
			},

			_setOption: function( key, value ) {
				if ( key === "autoHeight" || key === "clearStyle" || key === "fillSpace" ) {
					this.options.heightStyle = this._mergeHeightStyle();
				}
				_setOption.apply( this, arguments );
			},

			_mergeHeightStyle: function() {
				var options = this.options;

				if ( options.fillSpace ) {
					return "fill";
				}

				if ( options.clearStyle ) {
					return "content";
				}

				if ( options.autoHeight ) {
					return "auto";
				}
			}
		});
	}( jQuery, jQuery.ui.accordion.prototype ) );

	// icon options
	(function( $, prototype ) {
		$.extend( prototype.options.icons, {
			activeHeader: null, // remove default so we fall back to old values
			headerSelected: "ui-icon-triangle-1-s"
		});

		var _createIcons = prototype._createIcons;
		prototype._createIcons = function() {
			if ( this.options.icons ) {
				this.options.icons.activeHeader = this.options.icons.activeHeader ||
					this.options.icons.headerSelected;
			}
			_createIcons.call( this );
		};
	}( jQuery, jQuery.ui.accordion.prototype ) );

	// expanded active option, activate method
	(function( $, prototype ) {
		prototype.activate = prototype._activate;

		var _findActive = prototype._findActive;
		prototype._findActive = function( index ) {
			if ( index === -1 ) {
				index = false;
			}
			if ( index && typeof index !== "number" ) {
				index = this.headers.index( this.headers.filter( index ) );
				if ( index === -1 ) {
					index = false;
				}
			}
			return _findActive.call( this, index );
		};
	}( jQuery, jQuery.ui.accordion.prototype ) );

	// resize method
	jQuery.ui.accordion.prototype.resize = jQuery.ui.accordion.prototype.refresh;

	// change events
	(function( $, prototype ) {
		$.extend( prototype.options, {
			change: null,
			changestart: null
		});

		var _trigger = prototype._trigger;
		prototype._trigger = function( type, event, data ) {
			var ret = _trigger.apply( this, arguments );
			if ( !ret ) {
				return false;
			}

			if ( type === "beforeActivate" ) {
				ret = _trigger.call( this, "changestart", event, {
					oldHeader: data.oldHeader,
					oldContent: data.oldPanel,
					newHeader: data.newHeader,
					newContent: data.newPanel
				});
			} else if ( type === "activate" ) {
				ret = _trigger.call( this, "change", event, {
					oldHeader: data.oldHeader,
					oldContent: data.oldPanel,
					newHeader: data.newHeader,
					newContent: data.newPanel
				});
			}
			return ret;
		};
	}( jQuery, jQuery.ui.accordion.prototype ) );

	// animated option
	// NOTE: this only provides support for "slide", "bounceslide", and easings
	// not the full $.ui.accordion.animations API
	(function( $, prototype ) {
		$.extend( prototype.options, {
			animate: null,
			animated: "slide"
		});

		var _create = prototype._create;
		prototype._create = function() {
			var options = this.options;
			if ( options.animate === null ) {
				if ( !options.animated ) {
					options.animate = false;
				} else if ( options.animated === "slide" ) {
					options.animate = 300;
				} else if ( options.animated === "bounceslide" ) {
					options.animate = {
						duration: 200,
						down: {
							easing: "easeOutBounce",
							duration: 1000
						}
					};
				} else {
					options.animate = options.animated;
				}
			}

			_create.call( this );
		};
	}( jQuery, jQuery.ui.accordion.prototype ) );
}

})( jQuery );
(function( $, undefined ) {

// used to prevent race conditions with remote data sources
var requestIndex = 0;

$.widget( "ui.autocomplete", {
	version: "1.9.0",
	defaultElement: "<input>",
	options: {
		appendTo: "body",
		autoFocus: false,
		delay: 300,
		minLength: 1,
		position: {
			my: "left top",
			at: "left bottom",
			collision: "none"
		},
		source: null,

		// callbacks
		change: null,
		close: null,
		focus: null,
		open: null,
		response: null,
		search: null,
		select: null
	},

	pending: 0,

	_create: function() {
		// Some browsers only repeat keydown events, not keypress events,
		// so we use the suppressKeyPress flag to determine if we've already
		// handled the keydown event. #7269
		// Unfortunately the code for & in keypress is the same as the up arrow,
		// so we use the suppressKeyPressRepeat flag to avoid handling keypress
		// events when we know the keydown event was used to modify the
		// search term. #7799
		var suppressKeyPress, suppressKeyPressRepeat, suppressInput;

		this.isMultiLine = this._isMultiLine();
		this.valueMethod = this.element[ this.element.is( "input,textarea" ) ? "val" : "text" ];
		this.isNewMenu = true;

		this.element
			.addClass( "ui-autocomplete-input" )
			.attr( "autocomplete", "off" );

		this._on({
			keydown: function( event ) {
				if ( this.element.prop( "readOnly" ) ) {
					suppressKeyPress = true;
					suppressInput = true;
					suppressKeyPressRepeat = true;
					return;
				}

				suppressKeyPress = false;
				suppressInput = false;
				suppressKeyPressRepeat = false;
				var keyCode = $.ui.keyCode;
				switch( event.keyCode ) {
				case keyCode.PAGE_UP:
					suppressKeyPress = true;
					this._move( "previousPage", event );
					break;
				case keyCode.PAGE_DOWN:
					suppressKeyPress = true;
					this._move( "nextPage", event );
					break;
				case keyCode.UP:
					suppressKeyPress = true;
					this._keyEvent( "previous", event );
					break;
				case keyCode.DOWN:
					suppressKeyPress = true;
					this._keyEvent( "next", event );
					break;
				case keyCode.ENTER:
				case keyCode.NUMPAD_ENTER:
					// when menu is open and has focus
					if ( this.menu.active ) {
						// #6055 - Opera still allows the keypress to occur
						// which causes forms to submit
						suppressKeyPress = true;
						event.preventDefault();
						this.menu.select( event );
					}
					break;
				case keyCode.TAB:
					if ( this.menu.active ) {
						this.menu.select( event );
					}
					break;
				case keyCode.ESCAPE:
					if ( this.menu.element.is( ":visible" ) ) {
						this._value( this.term );
						this.close( event );
						// Different browsers have different default behavior for escape
						// Single press can mean undo or clear
						// Double press in IE means clear the whole form
						event.preventDefault();
					}
					break;
				default:
					suppressKeyPressRepeat = true;
					// search timeout should be triggered before the input value is changed
					this._searchTimeout( event );
					break;
				}
			},
			keypress: function( event ) {
				if ( suppressKeyPress ) {
					suppressKeyPress = false;
					event.preventDefault();
					return;
				}
				if ( suppressKeyPressRepeat ) {
					return;
				}

				// replicate some key handlers to allow them to repeat in Firefox and Opera
				var keyCode = $.ui.keyCode;
				switch( event.keyCode ) {
				case keyCode.PAGE_UP:
					this._move( "previousPage", event );
					break;
				case keyCode.PAGE_DOWN:
					this._move( "nextPage", event );
					break;
				case keyCode.UP:
					this._keyEvent( "previous", event );
					break;
				case keyCode.DOWN:
					this._keyEvent( "next", event );
					break;
				}
			},
			input: function( event ) {
				if ( suppressInput ) {
					suppressInput = false;
					event.preventDefault();
					return;
				}
				this._searchTimeout( event );
			},
			focus: function() {
				this.selectedItem = null;
				this.previous = this._value();
			},
			blur: function( event ) {
				if ( this.cancelBlur ) {
					delete this.cancelBlur;
					return;
				}

				clearTimeout( this.searching );
				this.close( event );
				this._change( event );
			}
		});

		this._initSource();
		this.menu = $( "<ul>" )
			.addClass( "ui-autocomplete" )
			.appendTo( this.document.find( this.options.appendTo || "body" )[ 0 ] )
			.menu({
				// custom key handling for now
				input: $(),
				// disable ARIA support, the live region takes care of that
				role: null
			})
			.zIndex( this.element.zIndex() + 1 )
			.hide()
			.data( "menu" );
		this._on( this.menu.element, {
			mousedown: function( event ) {
				// prevent moving focus out of the text field
				event.preventDefault();

				// IE doesn't prevent moving focus even with event.preventDefault()
				// so we set a flag to know when we should ignore the blur event
				this.cancelBlur = true;
				this._delay(function() {
					delete this.cancelBlur;
				});

				// clicking on the scrollbar causes focus to shift to the body
				// but we can't detect a mouseup or a click immediately afterward
				// so we have to track the next mousedown and close the menu if
				// the user clicks somewhere outside of the autocomplete
				var menuElement = this.menu.element[ 0 ];
				if ( !$( event.target ).closest( ".ui-menu-item" ).length ) {
					this._delay(function() {
						var that = this;
						this.document.one( "mousedown", function( event ) {
							if ( event.target !== that.element[ 0 ] &&
									event.target !== menuElement &&
									!$.contains( menuElement, event.target ) ) {
								that.close();
							}
						});
					});
				}
			},
			menufocus: function( event, ui ) {
				// #7024 - Prevent accidental activation of menu items in Firefox
				if ( this.isNewMenu ) {
					this.isNewMenu = false;
					if ( event.originalEvent && /^mouse/.test( event.originalEvent.type ) ) {
						this.menu.blur();

						this.document.one( "mousemove", function() {
							$( event.target ).trigger( event.originalEvent );
						});

						return;
					}
				}

				// back compat for _renderItem using item.autocomplete, via #7810
				// TODO remove the fallback, see #8156
				var item = ui.item.data( "ui-autocomplete-item" ) || ui.item.data( "item.autocomplete" );
				if ( false !== this._trigger( "focus", event, { item: item } ) ) {
					// use value to match what will end up in the input, if it was a key event
					if ( event.originalEvent && /^key/.test( event.originalEvent.type ) ) {
						this._value( item.value );
					}
				} else {
					// Normally the input is populated with the item's value as the
					// menu is navigated, causing screen readers to notice a change and
					// announce the item. Since the focus event was canceled, this doesn't
					// happen, so we update the live region so that screen readers can
					// still notice the change and announce it.
					this.liveRegion.text( item.value );
				}
			},
			menuselect: function( event, ui ) {
				// back compat for _renderItem using item.autocomplete, via #7810
				// TODO remove the fallback, see #8156
				var item = ui.item.data( "ui-autocomplete-item" ) || ui.item.data( "item.autocomplete" ),
					previous = this.previous;

				// only trigger when focus was lost (click on menu)
				if ( this.element[0] !== this.document[0].activeElement ) {
					this.element.focus();
					this.previous = previous;
					// #6109 - IE triggers two focus events and the second
					// is asynchronous, so we need to reset the previous
					// term synchronously and asynchronously :-(
					this._delay(function() {
						this.previous = previous;
						this.selectedItem = item;
					});
				}

				if ( false !== this._trigger( "select", event, { item: item } ) ) {
					this._value( item.value );
				}
				// reset the term after the select event
				// this allows custom select handling to work properly
				this.term = this._value();

				this.close( event );
				this.selectedItem = item;
			}
		});

		this.liveRegion = $( "<span>", {
				role: "status",
				"aria-live": "polite"
			})
			.addClass( "ui-helper-hidden-accessible" )
			.insertAfter( this.element );

		if ( $.fn.bgiframe ) {
			 this.menu.element.bgiframe();
		}

		// turning off autocomplete prevents the browser from remembering the
		// value when navigating through history, so we re-enable autocomplete
		// if the page is unloaded before the widget is destroyed. #7790
		this._on( this.window, {
			beforeunload: function() {
				this.element.removeAttr( "autocomplete" );
			}
		});
	},

	_destroy: function() {
		clearTimeout( this.searching );
		this.element
			.removeClass( "ui-autocomplete-input" )
			.removeAttr( "autocomplete" );
		this.menu.element.remove();
		this.liveRegion.remove();
	},

	_setOption: function( key, value ) {
		this._super( key, value );
		if ( key === "source" ) {
			this._initSource();
		}
		if ( key === "appendTo" ) {
			this.menu.element.appendTo( this.document.find( value || "body" )[0] );
		}
		if ( key === "disabled" && value && this.xhr ) {
			this.xhr.abort();
		}
	},

	_isMultiLine: function() {
		// Textareas are always multi-line
		if ( this.element.is( "textarea" ) ) {
			return true;
		}
		// Inputs are always single-line, even if inside a contentEditable element
		// IE also treats inputs as contentEditable
		if ( this.element.is( "input" ) ) {
			return false;
		}
		// All other element types are determined by whether or not they're contentEditable
		return this.element.prop( "isContentEditable" );
	},

	_initSource: function() {
		var array, url,
			that = this;
		if ( $.isArray(this.options.source) ) {
			array = this.options.source;
			this.source = function( request, response ) {
				response( $.ui.autocomplete.filter( array, request.term ) );
			};
		} else if ( typeof this.options.source === "string" ) {
			url = this.options.source;
			this.source = function( request, response ) {
				if ( that.xhr ) {
					that.xhr.abort();
				}
				that.xhr = $.ajax({
					url: url,
					data: request,
					dataType: "json",
					success: function( data, status ) {
						response( data );
					},
					error: function() {
						response( [] );
					}
				});
			};
		} else {
			this.source = this.options.source;
		}
	},

	_searchTimeout: function( event ) {
		clearTimeout( this.searching );
		this.searching = this._delay(function() {
			// only search if the value has changed
			if ( this.term !== this._value() ) {
				this.selectedItem = null;
				this.search( null, event );
			}
		}, this.options.delay );
	},

	search: function( value, event ) {
		value = value != null ? value : this._value();

		// always save the actual value, not the one passed as an argument
		this.term = this._value();

		if ( value.length < this.options.minLength ) {
			return this.close( event );
		}

		if ( this._trigger( "search", event ) === false ) {
			return;
		}

		return this._search( value );
	},

	_search: function( value ) {
		this.pending++;
		this.element.addClass( "ui-autocomplete-loading" );
		this.cancelSearch = false;

		this.source( { term: value }, this._response() );
	},

	_response: function() {
		var that = this,
			index = ++requestIndex;

		return function( content ) {
			if ( index === requestIndex ) {
				that.__response( content );
			}

			that.pending--;
			if ( !that.pending ) {
				that.element.removeClass( "ui-autocomplete-loading" );
			}
		};
	},

	__response: function( content ) {
		if ( content ) {
			content = this._normalize( content );
		}
		this._trigger( "response", null, { content: content } );
		if ( !this.options.disabled && content && content.length && !this.cancelSearch ) {
			this._suggest( content );
			this._trigger( "open" );
		} else {
			// use ._close() instead of .close() so we don't cancel future searches
			this._close();
		}
	},

	close: function( event ) {
		this.cancelSearch = true;
		this._close( event );
	},

	_close: function( event ) {
		if ( this.menu.element.is( ":visible" ) ) {
			this.menu.element.hide();
			this.menu.blur();
			this.isNewMenu = true;
			this._trigger( "close", event );
		}
	},

	_change: function( event ) {
		if ( this.previous !== this._value() ) {
			this._trigger( "change", event, { item: this.selectedItem } );
		}
	},

	_normalize: function( items ) {
		// assume all items have the right format when the first item is complete
		if ( items.length && items[0].label && items[0].value ) {
			return items;
		}
		return $.map( items, function( item ) {
			if ( typeof item === "string" ) {
				return {
					label: item,
					value: item
				};
			}
			return $.extend({
				label: item.label || item.value,
				value: item.value || item.label
			}, item );
		});
	},

	_suggest: function( items ) {
		var ul = this.menu.element
			.empty()
			.zIndex( this.element.zIndex() + 1 );
		this._renderMenu( ul, items );
		this.menu.refresh();

		// size and position menu
		ul.show();
		this._resizeMenu();
		ul.position( $.extend({
			of: this.element
		}, this.options.position ));

		if ( this.options.autoFocus ) {
			this.menu.next();
		}
	},

	_resizeMenu: function() {
		var ul = this.menu.element;
		ul.outerWidth( Math.max(
			// Firefox wraps long text (possibly a rounding bug)
			// so we add 1px to avoid the wrapping (#7513)
			ul.width( "" ).outerWidth() + 1,
			this.element.outerWidth()
		) );
	},

	_renderMenu: function( ul, items ) {
		var that = this;
		$.each( items, function( index, item ) {
			that._renderItemData( ul, item );
		});
	},

	_renderItemData: function( ul, item ) {
		return this._renderItem( ul, item ).data( "ui-autocomplete-item", item );
	},

	_renderItem: function( ul, item ) {
		return $( "<li>" )
			.append( $( "<a>" ).text( item.label ) )
			.appendTo( ul );
	},

	_move: function( direction, event ) {
		if ( !this.menu.element.is( ":visible" ) ) {
			this.search( null, event );
			return;
		}
		if ( this.menu.isFirstItem() && /^previous/.test( direction ) ||
				this.menu.isLastItem() && /^next/.test( direction ) ) {
			this._value( this.term );
			this.menu.blur();
			return;
		}
		this.menu[ direction ]( event );
	},

	widget: function() {
		return this.menu.element;
	},

	_value: function( value ) {
		return this.valueMethod.apply( this.element, arguments );
	},

	_keyEvent: function( keyEvent, event ) {
		if ( !this.isMultiLine || this.menu.element.is( ":visible" ) ) {
			this._move( keyEvent, event );

			// prevents moving cursor to beginning/end of the text field in some browsers
			event.preventDefault();
		}
	}
});

$.extend( $.ui.autocomplete, {
	escapeRegex: function( value ) {
		return value.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
	},
	filter: function(array, term) {
		var matcher = new RegExp( $.ui.autocomplete.escapeRegex(term), "i" );
		return $.grep( array, function(value) {
			return matcher.test( value.label || value.value || value );
		});
	}
});


// live region extension, adding a `messages` option
// NOTE: This is an experimental API. We are still investigating
// a full solution for string manipulation and internationalization.
$.widget( "ui.autocomplete", $.ui.autocomplete, {
	options: {
		messages: {
			noResults: "No search results.",
			results: function( amount ) {
				return amount + ( amount > 1 ? " results are" : " result is" ) +
					" available, use up and down arrow keys to navigate.";
			}
		}
	},

	__response: function( content ) {
		var message;
		this._superApply( arguments );
		if ( this.options.disabled || this.cancelSearch ) {
			return;
		}
		if ( content && content.length ) {
			message = this.options.messages.results( content.length );
		} else {
			message = this.options.messages.noResults;
		}
		this.liveRegion.text( message );
	}
});


}( jQuery ));
(function( $, undefined ) {

var lastActive, startXPos, startYPos, clickDragged,
	baseClasses = "ui-button ui-widget ui-state-default ui-corner-all",
	stateClasses = "ui-state-hover ui-state-active ",
	typeClasses = "ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only",
	formResetHandler = function() {
		var buttons = $( this ).find( ":ui-button" );
		setTimeout(function() {
			buttons.button( "refresh" );
		}, 1 );
	},
	radioGroup = function( radio ) {
		var name = radio.name,
			form = radio.form,
			radios = $( [] );
		if ( name ) {
			if ( form ) {
				radios = $( form ).find( "[name='" + name + "']" );
			} else {
				radios = $( "[name='" + name + "']", radio.ownerDocument )
					.filter(function() {
						return !this.form;
					});
			}
		}
		return radios;
	};

$.widget( "ui.button", {
	version: "1.9.0",
	defaultElement: "<button>",
	options: {
		disabled: null,
		text: true,
		label: null,
		icons: {
			primary: null,
			secondary: null
		}
	},
	_create: function() {
		this.element.closest( "form" )
			.unbind( "reset" + this.eventNamespace )
			.bind( "reset" + this.eventNamespace, formResetHandler );

		if ( typeof this.options.disabled !== "boolean" ) {
			this.options.disabled = !!this.element.prop( "disabled" );
		} else {
			this.element.prop( "disabled", this.options.disabled );
		}

		this._determineButtonType();
		this.hasTitle = !!this.buttonElement.attr( "title" );

		var that = this,
			options = this.options,
			toggleButton = this.type === "checkbox" || this.type === "radio",
			hoverClass = "ui-state-hover" + ( !toggleButton ? " ui-state-active" : "" ),
			focusClass = "ui-state-focus";

		if ( options.label === null ) {
			options.label = (this.type === "input" ? this.buttonElement.val() : this.buttonElement.html());
		}

		this.buttonElement
			.addClass( baseClasses )
			.attr( "role", "button" )
			.bind( "mouseenter" + this.eventNamespace, function() {
				if ( options.disabled ) {
					return;
				}
				$( this ).addClass( "ui-state-hover" );
				if ( this === lastActive ) {
					$( this ).addClass( "ui-state-active" );
				}
			})
			.bind( "mouseleave" + this.eventNamespace, function() {
				if ( options.disabled ) {
					return;
				}
				$( this ).removeClass( hoverClass );
			})
			.bind( "click" + this.eventNamespace, function( event ) {
				if ( options.disabled ) {
					event.preventDefault();
					event.stopImmediatePropagation();
				}
			});

		this.element
			.bind( "focus" + this.eventNamespace, function() {
				// no need to check disabled, focus won't be triggered anyway
				that.buttonElement.addClass( focusClass );
			})
			.bind( "blur" + this.eventNamespace, function() {
				that.buttonElement.removeClass( focusClass );
			});

		if ( toggleButton ) {
			this.element.bind( "change" + this.eventNamespace, function() {
				if ( clickDragged ) {
					return;
				}
				that.refresh();
			});
			// if mouse moves between mousedown and mouseup (drag) set clickDragged flag
			// prevents issue where button state changes but checkbox/radio checked state
			// does not in Firefox (see ticket #6970)
			this.buttonElement
				.bind( "mousedown" + this.eventNamespace, function( event ) {
					if ( options.disabled ) {
						return;
					}
					clickDragged = false;
					startXPos = event.pageX;
					startYPos = event.pageY;
				})
				.bind( "mouseup" + this.eventNamespace, function( event ) {
					if ( options.disabled ) {
						return;
					}
					if ( startXPos !== event.pageX || startYPos !== event.pageY ) {
						clickDragged = true;
					}
			});
		}

		if ( this.type === "checkbox" ) {
			this.buttonElement.bind( "click" + this.eventNamespace, function() {
				if ( options.disabled || clickDragged ) {
					return false;
				}
				$( this ).toggleClass( "ui-state-active" );
				that.buttonElement.attr( "aria-pressed", that.element[0].checked );
			});
		} else if ( this.type === "radio" ) {
			this.buttonElement.bind( "click" + this.eventNamespace, function() {
				if ( options.disabled || clickDragged ) {
					return false;
				}
				$( this ).addClass( "ui-state-active" );
				that.buttonElement.attr( "aria-pressed", "true" );

				var radio = that.element[ 0 ];
				radioGroup( radio )
					.not( radio )
					.map(function() {
						return $( this ).button( "widget" )[ 0 ];
					})
					.removeClass( "ui-state-active" )
					.attr( "aria-pressed", "false" );
			});
		} else {
			this.buttonElement
				.bind( "mousedown" + this.eventNamespace, function() {
					if ( options.disabled ) {
						return false;
					}
					$( this ).addClass( "ui-state-active" );
					lastActive = this;
					that.document.one( "mouseup", function() {
						lastActive = null;
					});
				})
				.bind( "mouseup" + this.eventNamespace, function() {
					if ( options.disabled ) {
						return false;
					}
					$( this ).removeClass( "ui-state-active" );
				})
				.bind( "keydown" + this.eventNamespace, function(event) {
					if ( options.disabled ) {
						return false;
					}
					if ( event.keyCode === $.ui.keyCode.SPACE || event.keyCode === $.ui.keyCode.ENTER ) {
						$( this ).addClass( "ui-state-active" );
					}
				})
				.bind( "keyup" + this.eventNamespace, function() {
					$( this ).removeClass( "ui-state-active" );
				});

			if ( this.buttonElement.is("a") ) {
				this.buttonElement.keyup(function(event) {
					if ( event.keyCode === $.ui.keyCode.SPACE ) {
						// TODO pass through original event correctly (just as 2nd argument doesn't work)
						$( this ).click();
					}
				});
			}
		}

		// TODO: pull out $.Widget's handling for the disabled option into
		// $.Widget.prototype._setOptionDisabled so it's easy to proxy and can
		// be overridden by individual plugins
		this._setOption( "disabled", options.disabled );
		this._resetButton();
	},

	_determineButtonType: function() {
		var ancestor, labelSelector, checked;

		if ( this.element.is("[type=checkbox]") ) {
			this.type = "checkbox";
		} else if ( this.element.is("[type=radio]") ) {
			this.type = "radio";
		} else if ( this.element.is("input") ) {
			this.type = "input";
		} else {
			this.type = "button";
		}

		if ( this.type === "checkbox" || this.type === "radio" ) {
			// we don't search against the document in case the element
			// is disconnected from the DOM
			ancestor = this.element.parents().last();
			labelSelector = "label[for='" + this.element.attr("id") + "']";
			this.buttonElement = ancestor.find( labelSelector );
			if ( !this.buttonElement.length ) {
				ancestor = ancestor.length ? ancestor.siblings() : this.element.siblings();
				this.buttonElement = ancestor.filter( labelSelector );
				if ( !this.buttonElement.length ) {
					this.buttonElement = ancestor.find( labelSelector );
				}
			}
			this.element.addClass( "ui-helper-hidden-accessible" );

			checked = this.element.is( ":checked" );
			if ( checked ) {
				this.buttonElement.addClass( "ui-state-active" );
			}
			this.buttonElement.prop( "aria-pressed", checked );
		} else {
			this.buttonElement = this.element;
		}
	},

	widget: function() {
		return this.buttonElement;
	},

	_destroy: function() {
		this.element
			.removeClass( "ui-helper-hidden-accessible" );
		this.buttonElement
			.removeClass( baseClasses + " " + stateClasses + " " + typeClasses )
			.removeAttr( "role" )
			.removeAttr( "aria-pressed" )
			.html( this.buttonElement.find(".ui-button-text").html() );

		if ( !this.hasTitle ) {
			this.buttonElement.removeAttr( "title" );
		}
	},

	_setOption: function( key, value ) {
		this._super( key, value );
		if ( key === "disabled" ) {
			if ( value ) {
				this.element.prop( "disabled", true );
			} else {
				this.element.prop( "disabled", false );
			}
			return;
		}
		this._resetButton();
	},

	refresh: function() {
		var isDisabled = this.element.is( ":disabled" );
		if ( isDisabled !== this.options.disabled ) {
			this._setOption( "disabled", isDisabled );
		}
		if ( this.type === "radio" ) {
			radioGroup( this.element[0] ).each(function() {
				if ( $( this ).is( ":checked" ) ) {
					$( this ).button( "widget" )
						.addClass( "ui-state-active" )
						.attr( "aria-pressed", "true" );
				} else {
					$( this ).button( "widget" )
						.removeClass( "ui-state-active" )
						.attr( "aria-pressed", "false" );
				}
			});
		} else if ( this.type === "checkbox" ) {
			if ( this.element.is( ":checked" ) ) {
				this.buttonElement
					.addClass( "ui-state-active" )
					.attr( "aria-pressed", "true" );
			} else {
				this.buttonElement
					.removeClass( "ui-state-active" )
					.attr( "aria-pressed", "false" );
			}
		}
	},

	_resetButton: function() {
		if ( this.type === "input" ) {
			if ( this.options.label ) {
				this.element.val( this.options.label );
			}
			return;
		}
		var buttonElement = this.buttonElement.removeClass( typeClasses ),
			buttonText = $( "<span></span>", this.document[0] )
				.addClass( "ui-button-text" )
				.html( this.options.label )
				.appendTo( buttonElement.empty() )
				.text(),
			icons = this.options.icons,
			multipleIcons = icons.primary && icons.secondary,
			buttonClasses = [];

		if ( icons.primary || icons.secondary ) {
			if ( this.options.text ) {
				buttonClasses.push( "ui-button-text-icon" + ( multipleIcons ? "s" : ( icons.primary ? "-primary" : "-secondary" ) ) );
			}

			if ( icons.primary ) {
				buttonElement.prepend( "<span class='ui-button-icon-primary ui-icon " + icons.primary + "'></span>" );
			}

			if ( icons.secondary ) {
				buttonElement.append( "<span class='ui-button-icon-secondary ui-icon " + icons.secondary + "'></span>" );
			}

			if ( !this.options.text ) {
				buttonClasses.push( multipleIcons ? "ui-button-icons-only" : "ui-button-icon-only" );

				if ( !this.hasTitle ) {
					buttonElement.attr( "title", $.trim( buttonText ) );
				}
			}
		} else {
			buttonClasses.push( "ui-button-text-only" );
		}
		buttonElement.addClass( buttonClasses.join( " " ) );
	}
});

$.widget( "ui.buttonset", {
	version: "1.9.0",
	options: {
		items: "button, input[type=button], input[type=submit], input[type=reset], input[type=checkbox], input[type=radio], a, :data(button)"
	},

	_create: function() {
		this.element.addClass( "ui-buttonset" );
	},

	_init: function() {
		this.refresh();
	},

	_setOption: function( key, value ) {
		if ( key === "disabled" ) {
			this.buttons.button( "option", key, value );
		}

		this._super( key, value );
	},

	refresh: function() {
		var rtl = this.element.css( "direction" ) === "rtl";

		this.buttons = this.element.find( this.options.items )
			.filter( ":ui-button" )
				.button( "refresh" )
			.end()
			.not( ":ui-button" )
				.button()
			.end()
			.map(function() {
				return $( this ).button( "widget" )[ 0 ];
			})
				.removeClass( "ui-corner-all ui-corner-left ui-corner-right" )
				.filter( ":first" )
					.addClass( rtl ? "ui-corner-right" : "ui-corner-left" )
				.end()
				.filter( ":last" )
					.addClass( rtl ? "ui-corner-left" : "ui-corner-right" )
				.end()
			.end();
	},

	_destroy: function() {
		this.element.removeClass( "ui-buttonset" );
		this.buttons
			.map(function() {
				return $( this ).button( "widget" )[ 0 ];
			})
				.removeClass( "ui-corner-left ui-corner-right" )
			.end()
			.button( "destroy" );
	}
});

}( jQuery ) );
(function( $, undefined ) {

$.extend($.ui, { datepicker: { version: "1.9.0" } });

var PROP_NAME = 'datepicker';
var dpuuid = new Date().getTime();
var instActive;

/* Date picker manager.
   Use the singleton instance of this class, $.datepicker, to interact with the date picker.
   Settings for (groups of) date pickers are maintained in an instance object,
   allowing multiple different settings on the same page. */

function Datepicker() {
	this.debug = false; // Change this to true to start debugging
	this._curInst = null; // The current instance in use
	this._keyEvent = false; // If the last event was a key event
	this._disabledInputs = []; // List of date picker inputs that have been disabled
	this._datepickerShowing = false; // True if the popup picker is showing , false if not
	this._inDialog = false; // True if showing within a "dialog", false if not
	this._mainDivId = 'ui-datepicker-div'; // The ID of the main datepicker division
	this._inlineClass = 'ui-datepicker-inline'; // The name of the inline marker class
	this._appendClass = 'ui-datepicker-append'; // The name of the append marker class
	this._triggerClass = 'ui-datepicker-trigger'; // The name of the trigger marker class
	this._dialogClass = 'ui-datepicker-dialog'; // The name of the dialog marker class
	this._disableClass = 'ui-datepicker-disabled'; // The name of the disabled covering marker class
	this._unselectableClass = 'ui-datepicker-unselectable'; // The name of the unselectable cell marker class
	this._currentClass = 'ui-datepicker-current-day'; // The name of the current day marker class
	this._dayOverClass = 'ui-datepicker-days-cell-over'; // The name of the day hover marker class
	this.regional = []; // Available regional settings, indexed by language code
	this.regional[''] = { // Default regional settings
		closeText: 'Done', // Display text for close link
		prevText: 'Prev', // Display text for previous month link
		nextText: 'Next', // Display text for next month link
		currentText: 'Today', // Display text for current month link
		monthNames: ['January','February','March','April','May','June',
			'July','August','September','October','November','December'], // Names of months for drop-down and formatting
		monthNamesShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'], // For formatting
		dayNames: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'], // For formatting
		dayNamesShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'], // For formatting
		dayNamesMin: ['Su','Mo','Tu','We','Th','Fr','Sa'], // Column headings for days starting at Sunday
		weekHeader: 'Wk', // Column header for week of the year
		dateFormat: 'mm/dd/yy', // See format options on parseDate
		firstDay: 0, // The first day of the week, Sun = 0, Mon = 1, ...
		isRTL: false, // True if right-to-left language, false if left-to-right
		showMonthAfterYear: false, // True if the year select precedes month, false for month then year
		yearSuffix: '' // Additional text to append to the year in the month headers
	};
	this._defaults = { // Global defaults for all the date picker instances
		showOn: 'focus', // 'focus' for popup on focus,
			// 'button' for trigger button, or 'both' for either
		showAnim: 'fadeIn', // Name of jQuery animation for popup
		showOptions: {}, // Options for enhanced animations
		defaultDate: null, // Used when field is blank: actual date,
			// +/-number for offset from today, null for today
		appendText: '', // Display text following the input box, e.g. showing the format
		buttonText: '...', // Text for trigger button
		buttonImage: '', // URL for trigger button image
		buttonImageOnly: false, // True if the image appears alone, false if it appears on a button
		hideIfNoPrevNext: false, // True to hide next/previous month links
			// if not applicable, false to just disable them
		navigationAsDateFormat: false, // True if date formatting applied to prev/today/next links
		gotoCurrent: false, // True if today link goes back to current selection instead
		changeMonth: false, // True if month can be selected directly, false if only prev/next
		changeYear: false, // True if year can be selected directly, false if only prev/next
		yearRange: 'c-10:c+10', // Range of years to display in drop-down,
			// either relative to today's year (-nn:+nn), relative to currently displayed year
			// (c-nn:c+nn), absolute (nnnn:nnnn), or a combination of the above (nnnn:-n)
		showOtherMonths: false, // True to show dates in other months, false to leave blank
		selectOtherMonths: false, // True to allow selection of dates in other months, false for unselectable
		showWeek: false, // True to show week of the year, false to not show it
		calculateWeek: this.iso8601Week, // How to calculate the week of the year,
			// takes a Date and returns the number of the week for it
		shortYearCutoff: '+10', // Short year values < this are in the current century,
			// > this are in the previous century,
			// string value starting with '+' for current year + value
		minDate: null, // The earliest selectable date, or null for no limit
		maxDate: null, // The latest selectable date, or null for no limit
		duration: 'fast', // Duration of display/closure
		beforeShowDay: null, // Function that takes a date and returns an array with
			// [0] = true if selectable, false if not, [1] = custom CSS class name(s) or '',
			// [2] = cell title (optional), e.g. $.datepicker.noWeekends
		beforeShow: null, // Function that takes an input field and
			// returns a set of custom settings for the date picker
		onSelect: null, // Define a callback function when a date is selected
		onChangeMonthYear: null, // Define a callback function when the month or year is changed
		onClose: null, // Define a callback function when the datepicker is closed
		numberOfMonths: 1, // Number of months to show at a time
		showCurrentAtPos: 0, // The position in multipe months at which to show the current month (starting at 0)
		stepMonths: 1, // Number of months to step back/forward
		stepBigMonths: 12, // Number of months to step back/forward for the big links
		altField: '', // Selector for an alternate field to store selected dates into
		altFormat: '', // The date format to use for the alternate field
		constrainInput: true, // The input is constrained by the current date format
		showButtonPanel: false, // True to show button panel, false to not show it
		autoSize: false, // True to size the input for the date format, false to leave as is
		disabled: false // The initial disabled state
	};
	$.extend(this._defaults, this.regional['']);
	this.dpDiv = bindHover($('<div id="' + this._mainDivId + '" class="ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>'));
}

$.extend(Datepicker.prototype, {
	/* Class name added to elements to indicate already configured with a date picker. */
	markerClassName: 'hasDatepicker',
	
	//Keep track of the maximum number of rows displayed (see #7043)
	maxRows: 4,

	/* Debug logging (if enabled). */
	log: function () {
		if (this.debug)
			console.log.apply('', arguments);
	},
	
	// TODO rename to "widget" when switching to widget factory
	_widgetDatepicker: function() {
		return this.dpDiv;
	},

	/* Override the default settings for all instances of the date picker.
	   @param  settings  object - the new settings to use as defaults (anonymous object)
	   @return the manager object */
	setDefaults: function(settings) {
		extendRemove(this._defaults, settings || {});
		return this;
	},

	/* Attach the date picker to a jQuery selection.
	   @param  target    element - the target input field or division or span
	   @param  settings  object - the new settings to use for this date picker instance (anonymous) */
	_attachDatepicker: function(target, settings) {
		// check for settings on the control itself - in namespace 'date:'
		var inlineSettings = null;
		for (var attrName in this._defaults) {
			var attrValue = target.getAttribute('date:' + attrName);
			if (attrValue) {
				inlineSettings = inlineSettings || {};
				try {
					inlineSettings[attrName] = eval(attrValue);
				} catch (err) {
					inlineSettings[attrName] = attrValue;
				}
			}
		}
		var nodeName = target.nodeName.toLowerCase();
		var inline = (nodeName == 'div' || nodeName == 'span');
		if (!target.id) {
			this.uuid += 1;
			target.id = 'dp' + this.uuid;
		}
		var inst = this._newInst($(target), inline);
		inst.settings = $.extend({}, settings || {}, inlineSettings || {});
		if (nodeName == 'input') {
			this._connectDatepicker(target, inst);
		} else if (inline) {
			this._inlineDatepicker(target, inst);
		}
	},

	/* Create a new instance object. */
	_newInst: function(target, inline) {
		var id = target[0].id.replace(/([^A-Za-z0-9_-])/g, '\\\\$1'); // escape jQuery meta chars
		return {id: id, input: target, // associated target
			selectedDay: 0, selectedMonth: 0, selectedYear: 0, // current selection
			drawMonth: 0, drawYear: 0, // month being drawn
			inline: inline, // is datepicker inline or not
			dpDiv: (!inline ? this.dpDiv : // presentation div
			bindHover($('<div class="' + this._inlineClass + ' ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>')))};
	},

	/* Attach the date picker to an input field. */
	_connectDatepicker: function(target, inst) {
		var input = $(target);
		inst.append = $([]);
		inst.trigger = $([]);
		if (input.hasClass(this.markerClassName))
			return;
		this._attachments(input, inst);
		input.addClass(this.markerClassName).keydown(this._doKeyDown).
			keypress(this._doKeyPress).keyup(this._doKeyUp).
			bind("setData.datepicker", function(event, key, value) {
				inst.settings[key] = value;
			}).bind("getData.datepicker", function(event, key) {
				return this._get(inst, key);
			});
		this._autoSize(inst);
		$.data(target, PROP_NAME, inst);
		//If disabled option is true, disable the datepicker once it has been attached to the input (see ticket #5665)
		if( inst.settings.disabled ) {
			this._disableDatepicker( target );
		}
	},

	/* Make attachments based on settings. */
	_attachments: function(input, inst) {
		var appendText = this._get(inst, 'appendText');
		var isRTL = this._get(inst, 'isRTL');
		if (inst.append)
			inst.append.remove();
		if (appendText) {
			inst.append = $('<span class="' + this._appendClass + '">' + appendText + '</span>');
			input[isRTL ? 'before' : 'after'](inst.append);
		}
		input.unbind('focus', this._showDatepicker);
		if (inst.trigger)
			inst.trigger.remove();
		var showOn = this._get(inst, 'showOn');
		if (showOn == 'focus' || showOn == 'both') // pop-up date picker when in the marked field
			input.focus(this._showDatepicker);
		if (showOn == 'button' || showOn == 'both') { // pop-up date picker when button clicked
			var buttonText = this._get(inst, 'buttonText');
			var buttonImage = this._get(inst, 'buttonImage');
			inst.trigger = $(this._get(inst, 'buttonImageOnly') ?
				$('<img/>').addClass(this._triggerClass).
					attr({ src: buttonImage, alt: buttonText, title: buttonText }) :
				$('<button type="button"></button>').addClass(this._triggerClass).
					html(buttonImage == '' ? buttonText : $('<img/>').attr(
					{ src:buttonImage, alt:buttonText, title:buttonText })));
			input[isRTL ? 'before' : 'after'](inst.trigger);
			inst.trigger.click(function() {
				if ($.datepicker._datepickerShowing && $.datepicker._lastInput == input[0])
					$.datepicker._hideDatepicker();
				else if ($.datepicker._datepickerShowing && $.datepicker._lastInput != input[0]) {
					$.datepicker._hideDatepicker(); 
					$.datepicker._showDatepicker(input[0]);
				} else
					$.datepicker._showDatepicker(input[0]);
				return false;
			});
		}
	},

	/* Apply the maximum length for the date format. */
	_autoSize: function(inst) {
		if (this._get(inst, 'autoSize') && !inst.inline) {
			var date = new Date(2009, 12 - 1, 20); // Ensure double digits
			var dateFormat = this._get(inst, 'dateFormat');
			if (dateFormat.match(/[DM]/)) {
				var findMax = function(names) {
					var max = 0;
					var maxI = 0;
					for (var i = 0; i < names.length; i++) {
						if (names[i].length > max) {
							max = names[i].length;
							maxI = i;
						}
					}
					return maxI;
				};
				date.setMonth(findMax(this._get(inst, (dateFormat.match(/MM/) ?
					'monthNames' : 'monthNamesShort'))));
				date.setDate(findMax(this._get(inst, (dateFormat.match(/DD/) ?
					'dayNames' : 'dayNamesShort'))) + 20 - date.getDay());
			}
			inst.input.attr('size', this._formatDate(inst, date).length);
		}
	},

	/* Attach an inline date picker to a div. */
	_inlineDatepicker: function(target, inst) {
		var divSpan = $(target);
		if (divSpan.hasClass(this.markerClassName))
			return;
		divSpan.addClass(this.markerClassName).append(inst.dpDiv).
			bind("setData.datepicker", function(event, key, value){
				inst.settings[key] = value;
			}).bind("getData.datepicker", function(event, key){
				return this._get(inst, key);
			});
		$.data(target, PROP_NAME, inst);
		this._setDate(inst, this._getDefaultDate(inst), true);
		this._updateDatepicker(inst);
		this._updateAlternate(inst);
		//If disabled option is true, disable the datepicker before showing it (see ticket #5665)
		if( inst.settings.disabled ) {
			this._disableDatepicker( target );
		}
		// Set display:block in place of inst.dpDiv.show() which won't work on disconnected elements
		// http://bugs.jqueryui.com/ticket/7552 - A Datepicker created on a detached div has zero height
		inst.dpDiv.css( "display", "block" );
	},

	/* Pop-up the date picker in a "dialog" box.
	   @param  input     element - ignored
	   @param  date      string or Date - the initial date to display
	   @param  onSelect  function - the function to call when a date is selected
	   @param  settings  object - update the dialog date picker instance's settings (anonymous object)
	   @param  pos       int[2] - coordinates for the dialog's position within the screen or
	                     event - with x/y coordinates or
	                     leave empty for default (screen centre)
	   @return the manager object */
	_dialogDatepicker: function(input, date, onSelect, settings, pos) {
		var inst = this._dialogInst; // internal instance
		if (!inst) {
			this.uuid += 1;
			var id = 'dp' + this.uuid;
			this._dialogInput = $('<input type="text" id="' + id +
				'" style="position: absolute; top: -100px; width: 0px;"/>');
			this._dialogInput.keydown(this._doKeyDown);
			$('body').append(this._dialogInput);
			inst = this._dialogInst = this._newInst(this._dialogInput, false);
			inst.settings = {};
			$.data(this._dialogInput[0], PROP_NAME, inst);
		}
		extendRemove(inst.settings, settings || {});
		date = (date && date.constructor == Date ? this._formatDate(inst, date) : date);
		this._dialogInput.val(date);

		this._pos = (pos ? (pos.length ? pos : [pos.pageX, pos.pageY]) : null);
		if (!this._pos) {
			var browserWidth = document.documentElement.clientWidth;
			var browserHeight = document.documentElement.clientHeight;
			var scrollX = document.documentElement.scrollLeft || document.body.scrollLeft;
			var scrollY = document.documentElement.scrollTop || document.body.scrollTop;
			this._pos = // should use actual width/height below
				[(browserWidth / 2) - 100 + scrollX, (browserHeight / 2) - 150 + scrollY];
		}

		// move input on screen for focus, but hidden behind dialog
		this._dialogInput.css('left', (this._pos[0] + 20) + 'px').css('top', this._pos[1] + 'px');
		inst.settings.onSelect = onSelect;
		this._inDialog = true;
		this.dpDiv.addClass(this._dialogClass);
		this._showDatepicker(this._dialogInput[0]);
		if ($.blockUI)
			$.blockUI(this.dpDiv);
		$.data(this._dialogInput[0], PROP_NAME, inst);
		return this;
	},

	/* Detach a datepicker from its control.
	   @param  target    element - the target input field or division or span */
	_destroyDatepicker: function(target) {
		var $target = $(target);
		var inst = $.data(target, PROP_NAME);
		if (!$target.hasClass(this.markerClassName)) {
			return;
		}
		var nodeName = target.nodeName.toLowerCase();
		$.removeData(target, PROP_NAME);
		if (nodeName == 'input') {
			inst.append.remove();
			inst.trigger.remove();
			$target.removeClass(this.markerClassName).
				unbind('focus', this._showDatepicker).
				unbind('keydown', this._doKeyDown).
				unbind('keypress', this._doKeyPress).
				unbind('keyup', this._doKeyUp);
		} else if (nodeName == 'div' || nodeName == 'span')
			$target.removeClass(this.markerClassName).empty();
	},

	/* Enable the date picker to a jQuery selection.
	   @param  target    element - the target input field or division or span */
	_enableDatepicker: function(target) {
		var $target = $(target);
		var inst = $.data(target, PROP_NAME);
		if (!$target.hasClass(this.markerClassName)) {
			return;
		}
		var nodeName = target.nodeName.toLowerCase();
		if (nodeName == 'input') {
			target.disabled = false;
			inst.trigger.filter('button').
				each(function() { this.disabled = false; }).end().
				filter('img').css({opacity: '1.0', cursor: ''});
		}
		else if (nodeName == 'div' || nodeName == 'span') {
			var inline = $target.children('.' + this._inlineClass);
			inline.children().removeClass('ui-state-disabled');
			inline.find("select.ui-datepicker-month, select.ui-datepicker-year").
				prop("disabled", false);
		}
		this._disabledInputs = $.map(this._disabledInputs,
			function(value) { return (value == target ? null : value); }); // delete entry
	},

	/* Disable the date picker to a jQuery selection.
	   @param  target    element - the target input field or division or span */
	_disableDatepicker: function(target) {
		var $target = $(target);
		var inst = $.data(target, PROP_NAME);
		if (!$target.hasClass(this.markerClassName)) {
			return;
		}
		var nodeName = target.nodeName.toLowerCase();
		if (nodeName == 'input') {
			target.disabled = true;
			inst.trigger.filter('button').
				each(function() { this.disabled = true; }).end().
				filter('img').css({opacity: '0.5', cursor: 'default'});
		}
		else if (nodeName == 'div' || nodeName == 'span') {
			var inline = $target.children('.' + this._inlineClass);
			inline.children().addClass('ui-state-disabled');
			inline.find("select.ui-datepicker-month, select.ui-datepicker-year").
				prop("disabled", true);
		}
		this._disabledInputs = $.map(this._disabledInputs,
			function(value) { return (value == target ? null : value); }); // delete entry
		this._disabledInputs[this._disabledInputs.length] = target;
	},

	/* Is the first field in a jQuery collection disabled as a datepicker?
	   @param  target    element - the target input field or division or span
	   @return boolean - true if disabled, false if enabled */
	_isDisabledDatepicker: function(target) {
		if (!target) {
			return false;
		}
		for (var i = 0; i < this._disabledInputs.length; i++) {
			if (this._disabledInputs[i] == target)
				return true;
		}
		return false;
	},

	/* Retrieve the instance data for the target control.
	   @param  target  element - the target input field or division or span
	   @return  object - the associated instance data
	   @throws  error if a jQuery problem getting data */
	_getInst: function(target) {
		try {
			return $.data(target, PROP_NAME);
		}
		catch (err) {
			throw 'Missing instance data for this datepicker';
		}
	},

	/* Update or retrieve the settings for a date picker attached to an input field or division.
	   @param  target  element - the target input field or division or span
	   @param  name    object - the new settings to update or
	                   string - the name of the setting to change or retrieve,
	                   when retrieving also 'all' for all instance settings or
	                   'defaults' for all global defaults
	   @param  value   any - the new value for the setting
	                   (omit if above is an object or to retrieve a value) */
	_optionDatepicker: function(target, name, value) {
		var inst = this._getInst(target);
		if (arguments.length == 2 && typeof name == 'string') {
			return (name == 'defaults' ? $.extend({}, $.datepicker._defaults) :
				(inst ? (name == 'all' ? $.extend({}, inst.settings) :
				this._get(inst, name)) : null));
		}
		var settings = name || {};
		if (typeof name == 'string') {
			settings = {};
			settings[name] = value;
		}
		if (inst) {
			if (this._curInst == inst) {
				this._hideDatepicker();
			}
			var date = this._getDateDatepicker(target, true);
			var minDate = this._getMinMaxDate(inst, 'min');
			var maxDate = this._getMinMaxDate(inst, 'max');
			extendRemove(inst.settings, settings);
			// reformat the old minDate/maxDate values if dateFormat changes and a new minDate/maxDate isn't provided
			if (minDate !== null && settings['dateFormat'] !== undefined && settings['minDate'] === undefined)
				inst.settings.minDate = this._formatDate(inst, minDate);
			if (maxDate !== null && settings['dateFormat'] !== undefined && settings['maxDate'] === undefined)
				inst.settings.maxDate = this._formatDate(inst, maxDate);
			this._attachments($(target), inst);
			this._autoSize(inst);
			this._setDate(inst, date);
			this._updateAlternate(inst);
			this._updateDatepicker(inst);
		}
	},

	// change method deprecated
	_changeDatepicker: function(target, name, value) {
		this._optionDatepicker(target, name, value);
	},

	/* Redraw the date picker attached to an input field or division.
	   @param  target  element - the target input field or division or span */
	_refreshDatepicker: function(target) {
		var inst = this._getInst(target);
		if (inst) {
			this._updateDatepicker(inst);
		}
	},

	/* Set the dates for a jQuery selection.
	   @param  target   element - the target input field or division or span
	   @param  date     Date - the new date */
	_setDateDatepicker: function(target, date) {
		var inst = this._getInst(target);
		if (inst) {
			this._setDate(inst, date);
			this._updateDatepicker(inst);
			this._updateAlternate(inst);
		}
	},

	/* Get the date(s) for the first entry in a jQuery selection.
	   @param  target     element - the target input field or division or span
	   @param  noDefault  boolean - true if no default date is to be used
	   @return Date - the current date */
	_getDateDatepicker: function(target, noDefault) {
		var inst = this._getInst(target);
		if (inst && !inst.inline)
			this._setDateFromField(inst, noDefault);
		return (inst ? this._getDate(inst) : null);
	},

	/* Handle keystrokes. */
	_doKeyDown: function(event) {
		var inst = $.datepicker._getInst(event.target);
		var handled = true;
		var isRTL = inst.dpDiv.is('.ui-datepicker-rtl');
		inst._keyEvent = true;
		if ($.datepicker._datepickerShowing)
			switch (event.keyCode) {
				case 9: $.datepicker._hideDatepicker();
						handled = false;
						break; // hide on tab out
				case 13: var sel = $('td.' + $.datepicker._dayOverClass + ':not(.' + 
									$.datepicker._currentClass + ')', inst.dpDiv);
						if (sel[0])
							$.datepicker._selectDay(event.target, inst.selectedMonth, inst.selectedYear, sel[0]);
							var onSelect = $.datepicker._get(inst, 'onSelect');
							if (onSelect) {
								var dateStr = $.datepicker._formatDate(inst);

								// trigger custom callback
								onSelect.apply((inst.input ? inst.input[0] : null), [dateStr, inst]);
							}
						else
							$.datepicker._hideDatepicker();
						return false; // don't submit the form
						break; // select the value on enter
				case 27: $.datepicker._hideDatepicker();
						break; // hide on escape
				case 33: $.datepicker._adjustDate(event.target, (event.ctrlKey ?
							-$.datepicker._get(inst, 'stepBigMonths') :
							-$.datepicker._get(inst, 'stepMonths')), 'M');
						break; // previous month/year on page up/+ ctrl
				case 34: $.datepicker._adjustDate(event.target, (event.ctrlKey ?
							+$.datepicker._get(inst, 'stepBigMonths') :
							+$.datepicker._get(inst, 'stepMonths')), 'M');
						break; // next month/year on page down/+ ctrl
				case 35: if (event.ctrlKey || event.metaKey) $.datepicker._clearDate(event.target);
						handled = event.ctrlKey || event.metaKey;
						break; // clear on ctrl or command +end
				case 36: if (event.ctrlKey || event.metaKey) $.datepicker._gotoToday(event.target);
						handled = event.ctrlKey || event.metaKey;
						break; // current on ctrl or command +home
				case 37: if (event.ctrlKey || event.metaKey) $.datepicker._adjustDate(event.target, (isRTL ? +1 : -1), 'D');
						handled = event.ctrlKey || event.metaKey;
						// -1 day on ctrl or command +left
						if (event.originalEvent.altKey) $.datepicker._adjustDate(event.target, (event.ctrlKey ?
									-$.datepicker._get(inst, 'stepBigMonths') :
									-$.datepicker._get(inst, 'stepMonths')), 'M');
						// next month/year on alt +left on Mac
						break;
				case 38: if (event.ctrlKey || event.metaKey) $.datepicker._adjustDate(event.target, -7, 'D');
						handled = event.ctrlKey || event.metaKey;
						break; // -1 week on ctrl or command +up
				case 39: if (event.ctrlKey || event.metaKey) $.datepicker._adjustDate(event.target, (isRTL ? -1 : +1), 'D');
						handled = event.ctrlKey || event.metaKey;
						// +1 day on ctrl or command +right
						if (event.originalEvent.altKey) $.datepicker._adjustDate(event.target, (event.ctrlKey ?
									+$.datepicker._get(inst, 'stepBigMonths') :
									+$.datepicker._get(inst, 'stepMonths')), 'M');
						// next month/year on alt +right
						break;
				case 40: if (event.ctrlKey || event.metaKey) $.datepicker._adjustDate(event.target, +7, 'D');
						handled = event.ctrlKey || event.metaKey;
						break; // +1 week on ctrl or command +down
				default: handled = false;
			}
		else if (event.keyCode == 36 && event.ctrlKey) // display the date picker on ctrl+home
			$.datepicker._showDatepicker(this);
		else {
			handled = false;
		}
		if (handled) {
			event.preventDefault();
			event.stopPropagation();
		}
	},

	/* Filter entered characters - based on date format. */
	_doKeyPress: function(event) {
		var inst = $.datepicker._getInst(event.target);
		if ($.datepicker._get(inst, 'constrainInput')) {
			var chars = $.datepicker._possibleChars($.datepicker._get(inst, 'dateFormat'));
			var chr = String.fromCharCode(event.charCode == undefined ? event.keyCode : event.charCode);
			return event.ctrlKey || event.metaKey || (chr < ' ' || !chars || chars.indexOf(chr) > -1);
		}
	},

	/* Synchronise manual entry and field/alternate field. */
	_doKeyUp: function(event) {
		var inst = $.datepicker._getInst(event.target);
		if (inst.input.val() != inst.lastVal) {
			try {
				var date = $.datepicker.parseDate($.datepicker._get(inst, 'dateFormat'),
					(inst.input ? inst.input.val() : null),
					$.datepicker._getFormatConfig(inst));
				if (date) { // only if valid
					$.datepicker._setDateFromField(inst);
					$.datepicker._updateAlternate(inst);
					$.datepicker._updateDatepicker(inst);
				}
			}
			catch (err) {
				$.datepicker.log(err);
			}
		}
		return true;
	},

	/* Pop-up the date picker for a given input field.
	   If false returned from beforeShow event handler do not show. 
	   @param  input  element - the input field attached to the date picker or
	                  event - if triggered by focus */
	_showDatepicker: function(input) {
		input = input.target || input;
		if (input.nodeName.toLowerCase() != 'input') // find from button/image trigger
			input = $('input', input.parentNode)[0];
		if ($.datepicker._isDisabledDatepicker(input) || $.datepicker._lastInput == input) // already here
			return;
		var inst = $.datepicker._getInst(input);
		if ($.datepicker._curInst && $.datepicker._curInst != inst) {
			$.datepicker._curInst.dpDiv.stop(true, true);
			if ( inst && $.datepicker._datepickerShowing ) {
				$.datepicker._hideDatepicker( $.datepicker._curInst.input[0] );
			}
		}
		var beforeShow = $.datepicker._get(inst, 'beforeShow');
		var beforeShowSettings = beforeShow ? beforeShow.apply(input, [input, inst]) : {};
		if(beforeShowSettings === false){
			//false
			return;
		}
		extendRemove(inst.settings, beforeShowSettings);
		inst.lastVal = null;
		$.datepicker._lastInput = input;
		$.datepicker._setDateFromField(inst);
		if ($.datepicker._inDialog) // hide cursor
			input.value = '';
		if (!$.datepicker._pos) { // position below input
			$.datepicker._pos = $.datepicker._findPos(input);
			$.datepicker._pos[1] += input.offsetHeight; // add the height
		}
		var isFixed = false;
		$(input).parents().each(function() {
			isFixed |= $(this).css('position') == 'fixed';
			return !isFixed;
		});
		var offset = {left: $.datepicker._pos[0], top: $.datepicker._pos[1]};
		$.datepicker._pos = null;
		//to avoid flashes on Firefox
		inst.dpDiv.empty();
		// determine sizing offscreen
		inst.dpDiv.css({position: 'absolute', display: 'block', top: '-1000px'});
		$.datepicker._updateDatepicker(inst);
		// fix width for dynamic number of date pickers
		// and adjust position before showing
		offset = $.datepicker._checkOffset(inst, offset, isFixed);
		inst.dpDiv.css({position: ($.datepicker._inDialog && $.blockUI ?
			'static' : (isFixed ? 'fixed' : 'absolute')), display: 'none',
			left: offset.left + 'px', top: offset.top + 'px'});
		if (!inst.inline) {
			var showAnim = $.datepicker._get(inst, 'showAnim');
			var duration = $.datepicker._get(inst, 'duration');
			var postProcess = function() {
				var cover = inst.dpDiv.find('iframe.ui-datepicker-cover'); // IE6- only
				if( !! cover.length ){
					var borders = $.datepicker._getBorders(inst.dpDiv);
					cover.css({left: -borders[0], top: -borders[1],
						width: inst.dpDiv.outerWidth(), height: inst.dpDiv.outerHeight()});
				}
			};
			inst.dpDiv.zIndex($(input).zIndex()+1);
			$.datepicker._datepickerShowing = true;

			// DEPRECATED: after BC for 1.8.x $.effects[ showAnim ] is not needed
			if ( $.effects && ( $.effects.effect[ showAnim ] || $.effects[ showAnim ] ) )
				inst.dpDiv.show(showAnim, $.datepicker._get(inst, 'showOptions'), duration, postProcess);
			else
				inst.dpDiv[showAnim || 'show']((showAnim ? duration : null), postProcess);
			if (!showAnim || !duration)
				postProcess();
			if (inst.input.is(':visible') && !inst.input.is(':disabled'))
				inst.input.focus();
			$.datepicker._curInst = inst;
		}
	},

	/* Generate the date picker content. */
	_updateDatepicker: function(inst) {
		this.maxRows = 4; //Reset the max number of rows being displayed (see #7043)
		var borders = $.datepicker._getBorders(inst.dpDiv);
		instActive = inst; // for delegate hover events
		inst.dpDiv.empty().append(this._generateHTML(inst));
		this._attachHandlers(inst);
		var cover = inst.dpDiv.find('iframe.ui-datepicker-cover'); // IE6- only
		if( !!cover.length ){ //avoid call to outerXXXX() when not in IE6
			cover.css({left: -borders[0], top: -borders[1], width: inst.dpDiv.outerWidth(), height: inst.dpDiv.outerHeight()})
		}
		inst.dpDiv.find('.' + this._dayOverClass + ' a').mouseover();
		var numMonths = this._getNumberOfMonths(inst);
		var cols = numMonths[1];
		var width = 17;
		inst.dpDiv.removeClass('ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4').width('');
		if (cols > 1)
			inst.dpDiv.addClass('ui-datepicker-multi-' + cols).css('width', (width * cols) + 'em');
		inst.dpDiv[(numMonths[0] != 1 || numMonths[1] != 1 ? 'add' : 'remove') +
			'Class']('ui-datepicker-multi');
		inst.dpDiv[(this._get(inst, 'isRTL') ? 'add' : 'remove') +
			'Class']('ui-datepicker-rtl');
		if (inst == $.datepicker._curInst && $.datepicker._datepickerShowing && inst.input &&
				// #6694 - don't focus the input if it's already focused
				// this breaks the change event in IE
				inst.input.is(':visible') && !inst.input.is(':disabled') && inst.input[0] != document.activeElement)
			inst.input.focus();
		// deffered render of the years select (to avoid flashes on Firefox) 
		if( inst.yearshtml ){
			var origyearshtml = inst.yearshtml;
			setTimeout(function(){
				//assure that inst.yearshtml didn't change.
				if( origyearshtml === inst.yearshtml && inst.yearshtml ){
					inst.dpDiv.find('select.ui-datepicker-year:first').replaceWith(inst.yearshtml);
				}
				origyearshtml = inst.yearshtml = null;
			}, 0);
		}
	},

	/* Retrieve the size of left and top borders for an element.
	   @param  elem  (jQuery object) the element of interest
	   @return  (number[2]) the left and top borders */
	_getBorders: function(elem) {
		var convert = function(value) {
			return {thin: 1, medium: 2, thick: 3}[value] || value;
		};
		return [parseFloat(convert(elem.css('border-left-width'))),
			parseFloat(convert(elem.css('border-top-width')))];
	},

	/* Check positioning to remain on screen. */
	_checkOffset: function(inst, offset, isFixed) {
		var dpWidth = inst.dpDiv.outerWidth();
		var dpHeight = inst.dpDiv.outerHeight();
		var inputWidth = inst.input ? inst.input.outerWidth() : 0;
		var inputHeight = inst.input ? inst.input.outerHeight() : 0;
		var viewWidth = document.documentElement.clientWidth + (isFixed ? 0 : $(document).scrollLeft());
		var viewHeight = document.documentElement.clientHeight + (isFixed ? 0 : $(document).scrollTop());

		offset.left -= (this._get(inst, 'isRTL') ? (dpWidth - inputWidth) : 0);
		offset.left -= (isFixed && offset.left == inst.input.offset().left) ? $(document).scrollLeft() : 0;
		offset.top -= (isFixed && offset.top == (inst.input.offset().top + inputHeight)) ? $(document).scrollTop() : 0;

		// now check if datepicker is showing outside window viewport - move to a better place if so.
		offset.left -= Math.min(offset.left, (offset.left + dpWidth > viewWidth && viewWidth > dpWidth) ?
			Math.abs(offset.left + dpWidth - viewWidth) : 0);
		offset.top -= Math.min(offset.top, (offset.top + dpHeight > viewHeight && viewHeight > dpHeight) ?
			Math.abs(dpHeight + inputHeight) : 0);

		return offset;
	},

	/* Find an object's position on the screen. */
	_findPos: function(obj) {
		var inst = this._getInst(obj);
		var isRTL = this._get(inst, 'isRTL');
		while (obj && (obj.type == 'hidden' || obj.nodeType != 1 || $.expr.filters.hidden(obj))) {
			obj = obj[isRTL ? 'previousSibling' : 'nextSibling'];
		}
		var position = $(obj).offset();
		return [position.left, position.top];
	},

	/* Hide the date picker from view.
	   @param  input  element - the input field attached to the date picker */
	_hideDatepicker: function(input) {
		var inst = this._curInst;
		if (!inst || (input && inst != $.data(input, PROP_NAME)))
			return;
		if (this._datepickerShowing) {
			var showAnim = this._get(inst, 'showAnim');
			var duration = this._get(inst, 'duration');
			var postProcess = function() {
				$.datepicker._tidyDialog(inst);
			};

			// DEPRECATED: after BC for 1.8.x $.effects[ showAnim ] is not needed
			if ( $.effects && ( $.effects.effect[ showAnim ] || $.effects[ showAnim ] ) )
				inst.dpDiv.hide(showAnim, $.datepicker._get(inst, 'showOptions'), duration, postProcess);
			else
				inst.dpDiv[(showAnim == 'slideDown' ? 'slideUp' :
					(showAnim == 'fadeIn' ? 'fadeOut' : 'hide'))]((showAnim ? duration : null), postProcess);
			if (!showAnim)
				postProcess();
			this._datepickerShowing = false;
			var onClose = this._get(inst, 'onClose');
			if (onClose)
				onClose.apply((inst.input ? inst.input[0] : null),
					[(inst.input ? inst.input.val() : ''), inst]);
			this._lastInput = null;
			if (this._inDialog) {
				this._dialogInput.css({ position: 'absolute', left: '0', top: '-100px' });
				if ($.blockUI) {
					$.unblockUI();
					$('body').append(this.dpDiv);
				}
			}
			this._inDialog = false;
		}
	},

	/* Tidy up after a dialog display. */
	_tidyDialog: function(inst) {
		inst.dpDiv.removeClass(this._dialogClass).unbind('.ui-datepicker-calendar');
	},

	/* Close date picker if clicked elsewhere. */
	_checkExternalClick: function(event) {
		if (!$.datepicker._curInst)
			return;

		var $target = $(event.target),
			inst = $.datepicker._getInst($target[0]);

		if ( ( ( $target[0].id != $.datepicker._mainDivId &&
				$target.parents('#' + $.datepicker._mainDivId).length == 0 &&
				!$target.hasClass($.datepicker.markerClassName) &&
				!$target.closest("." + $.datepicker._triggerClass).length &&
				$.datepicker._datepickerShowing && !($.datepicker._inDialog && $.blockUI) ) ) ||
			( $target.hasClass($.datepicker.markerClassName) && $.datepicker._curInst != inst ) )
			$.datepicker._hideDatepicker();
	},

	/* Adjust one of the date sub-fields. */
	_adjustDate: function(id, offset, period) {
		var target = $(id);
		var inst = this._getInst(target[0]);
		if (this._isDisabledDatepicker(target[0])) {
			return;
		}
		this._adjustInstDate(inst, offset +
			(period == 'M' ? this._get(inst, 'showCurrentAtPos') : 0), // undo positioning
			period);
		this._updateDatepicker(inst);
	},

	/* Action for current link. */
	_gotoToday: function(id) {
		var target = $(id);
		var inst = this._getInst(target[0]);
		if (this._get(inst, 'gotoCurrent') && inst.currentDay) {
			inst.selectedDay = inst.currentDay;
			inst.drawMonth = inst.selectedMonth = inst.currentMonth;
			inst.drawYear = inst.selectedYear = inst.currentYear;
		}
		else {
			var date = new Date();
			inst.selectedDay = date.getDate();
			inst.drawMonth = inst.selectedMonth = date.getMonth();
			inst.drawYear = inst.selectedYear = date.getFullYear();
		}
		this._notifyChange(inst);
		this._adjustDate(target);
	},

	/* Action for selecting a new month/year. */
	_selectMonthYear: function(id, select, period) {
		var target = $(id);
		var inst = this._getInst(target[0]);
		inst['selected' + (period == 'M' ? 'Month' : 'Year')] =
		inst['draw' + (period == 'M' ? 'Month' : 'Year')] =
			parseInt(select.options[select.selectedIndex].value,10);
		this._notifyChange(inst);
		this._adjustDate(target);
	},

	/* Action for selecting a day. */
	_selectDay: function(id, month, year, td) {
		var target = $(id);
		if ($(td).hasClass(this._unselectableClass) || this._isDisabledDatepicker(target[0])) {
			return;
		}
		var inst = this._getInst(target[0]);
		inst.selectedDay = inst.currentDay = $('a', td).html();
		inst.selectedMonth = inst.currentMonth = month;
		inst.selectedYear = inst.currentYear = year;
		this._selectDate(id, this._formatDate(inst,
			inst.currentDay, inst.currentMonth, inst.currentYear));
	},

	/* Erase the input field and hide the date picker. */
	_clearDate: function(id) {
		var target = $(id);
		var inst = this._getInst(target[0]);
		this._selectDate(target, '');
	},

	/* Update the input field with the selected date. */
	_selectDate: function(id, dateStr) {
		var target = $(id);
		var inst = this._getInst(target[0]);
		dateStr = (dateStr != null ? dateStr : this._formatDate(inst));
		if (inst.input)
			inst.input.val(dateStr);
		this._updateAlternate(inst);
		var onSelect = this._get(inst, 'onSelect');
		if (onSelect)
			onSelect.apply((inst.input ? inst.input[0] : null), [dateStr, inst]);  // trigger custom callback
		else if (inst.input)
			inst.input.trigger('change'); // fire the change event
		if (inst.inline)
			this._updateDatepicker(inst);
		else {
			this._hideDatepicker();
			this._lastInput = inst.input[0];
			if (typeof(inst.input[0]) != 'object')
				inst.input.focus(); // restore focus
			this._lastInput = null;
		}
	},

	/* Update any alternate field to synchronise with the main field. */
	_updateAlternate: function(inst) {
		var altField = this._get(inst, 'altField');
		if (altField) { // update alternate field too
			var altFormat = this._get(inst, 'altFormat') || this._get(inst, 'dateFormat');
			var date = this._getDate(inst);
			var dateStr = this.formatDate(altFormat, date, this._getFormatConfig(inst));
			$(altField).each(function() { $(this).val(dateStr); });
		}
	},

	/* Set as beforeShowDay function to prevent selection of weekends.
	   @param  date  Date - the date to customise
	   @return [boolean, string] - is this date selectable?, what is its CSS class? */
	noWeekends: function(date) {
		var day = date.getDay();
		return [(day > 0 && day < 6), ''];
	},

	/* Set as calculateWeek to determine the week of the year based on the ISO 8601 definition.
	   @param  date  Date - the date to get the week for
	   @return  number - the number of the week within the year that contains this date */
	iso8601Week: function(date) {
		var checkDate = new Date(date.getTime());
		// Find Thursday of this week starting on Monday
		checkDate.setDate(checkDate.getDate() + 4 - (checkDate.getDay() || 7));
		var time = checkDate.getTime();
		checkDate.setMonth(0); // Compare with Jan 1
		checkDate.setDate(1);
		return Math.floor(Math.round((time - checkDate) / 86400000) / 7) + 1;
	},

	/* Parse a string value into a date object.
	   See formatDate below for the possible formats.

	   @param  format    string - the expected format of the date
	   @param  value     string - the date in the above format
	   @param  settings  Object - attributes include:
	                     shortYearCutoff  number - the cutoff year for determining the century (optional)
	                     dayNamesShort    string[7] - abbreviated names of the days from Sunday (optional)
	                     dayNames         string[7] - names of the days from Sunday (optional)
	                     monthNamesShort  string[12] - abbreviated names of the months (optional)
	                     monthNames       string[12] - names of the months (optional)
	   @return  Date - the extracted date value or null if value is blank */
	parseDate: function (format, value, settings) {
		if (format == null || value == null)
			throw 'Invalid arguments';
		value = (typeof value == 'object' ? value.toString() : value + '');
		if (value == '')
			return null;
		var shortYearCutoff = (settings ? settings.shortYearCutoff : null) || this._defaults.shortYearCutoff;
		shortYearCutoff = (typeof shortYearCutoff != 'string' ? shortYearCutoff :
				new Date().getFullYear() % 100 + parseInt(shortYearCutoff, 10));
		var dayNamesShort = (settings ? settings.dayNamesShort : null) || this._defaults.dayNamesShort;
		var dayNames = (settings ? settings.dayNames : null) || this._defaults.dayNames;
		var monthNamesShort = (settings ? settings.monthNamesShort : null) || this._defaults.monthNamesShort;
		var monthNames = (settings ? settings.monthNames : null) || this._defaults.monthNames;
		var year = -1;
		var month = -1;
		var day = -1;
		var doy = -1;
		var literal = false;
		// Check whether a format character is doubled
		var lookAhead = function(match) {
			var matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) == match);
			if (matches)
				iFormat++;
			return matches;
		};
		// Extract a number from the string value
		var getNumber = function(match) {
			var isDoubled = lookAhead(match);
			var size = (match == '@' ? 14 : (match == '!' ? 20 :
				(match == 'y' && isDoubled ? 4 : (match == 'o' ? 3 : 2))));
			var digits = new RegExp('^\\d{1,' + size + '}');
			var num = value.substring(iValue).match(digits);
			if (!num)
				throw 'Missing number at position ' + iValue;
			iValue += num[0].length;
			return parseInt(num[0], 10);
		};
		// Extract a name from the string value and convert to an index
		var getName = function(match, shortNames, longNames) {
			var names = $.map(lookAhead(match) ? longNames : shortNames, function (v, k) {
				return [ [k, v] ];
			}).sort(function (a, b) {
				return -(a[1].length - b[1].length);
			});
			var index = -1;
			$.each(names, function (i, pair) {
				var name = pair[1];
				if (value.substr(iValue, name.length).toLowerCase() == name.toLowerCase()) {
					index = pair[0];
					iValue += name.length;
					return false;
				}
			});
			if (index != -1)
				return index + 1;
			else
				throw 'Unknown name at position ' + iValue;
		};
		// Confirm that a literal character matches the string value
		var checkLiteral = function() {
			if (value.charAt(iValue) != format.charAt(iFormat))
				throw 'Unexpected literal at position ' + iValue;
			iValue++;
		};
		var iValue = 0;
		for (var iFormat = 0; iFormat < format.length; iFormat++) {
			if (literal)
				if (format.charAt(iFormat) == "'" && !lookAhead("'"))
					literal = false;
				else
					checkLiteral();
			else
				switch (format.charAt(iFormat)) {
					case 'd':
						day = getNumber('d');
						break;
					case 'D':
						getName('D', dayNamesShort, dayNames);
						break;
					case 'o':
						doy = getNumber('o');
						break;
					case 'm':
						month = getNumber('m');
						break;
					case 'M':
						month = getName('M', monthNamesShort, monthNames);
						break;
					case 'y':
						year = getNumber('y');
						break;
					case '@':
						var date = new Date(getNumber('@'));
						year = date.getFullYear();
						month = date.getMonth() + 1;
						day = date.getDate();
						break;
					case '!':
						var date = new Date((getNumber('!') - this._ticksTo1970) / 10000);
						year = date.getFullYear();
						month = date.getMonth() + 1;
						day = date.getDate();
						break;
					case "'":
						if (lookAhead("'"))
							checkLiteral();
						else
							literal = true;
						break;
					default:
						checkLiteral();
				}
		}
		if (iValue < value.length){
			var extra = value.substr(iValue);
			if (!/^\s+/.test(extra)) {
				throw "Extra/unparsed characters found in date: " + extra;
			}
		}
		if (year == -1)
			year = new Date().getFullYear();
		else if (year < 100)
			year += new Date().getFullYear() - new Date().getFullYear() % 100 +
				(year <= shortYearCutoff ? 0 : -100);
		if (doy > -1) {
			month = 1;
			day = doy;
			do {
				var dim = this._getDaysInMonth(year, month - 1);
				if (day <= dim)
					break;
				month++;
				day -= dim;
			} while (true);
		}
		var date = this._daylightSavingAdjust(new Date(year, month - 1, day));
		if (date.getFullYear() != year || date.getMonth() + 1 != month || date.getDate() != day)
			throw 'Invalid date'; // E.g. 31/02/00
		return date;
	},

	/* Standard date formats. */
	ATOM: 'yy-mm-dd', // RFC 3339 (ISO 8601)
	COOKIE: 'D, dd M yy',
	ISO_8601: 'yy-mm-dd',
	RFC_822: 'D, d M y',
	RFC_850: 'DD, dd-M-y',
	RFC_1036: 'D, d M y',
	RFC_1123: 'D, d M yy',
	RFC_2822: 'D, d M yy',
	RSS: 'D, d M y', // RFC 822
	TICKS: '!',
	TIMESTAMP: '@',
	W3C: 'yy-mm-dd', // ISO 8601

	_ticksTo1970: (((1970 - 1) * 365 + Math.floor(1970 / 4) - Math.floor(1970 / 100) +
		Math.floor(1970 / 400)) * 24 * 60 * 60 * 10000000),

	/* Format a date object into a string value.
	   The format can be combinations of the following:
	   d  - day of month (no leading zero)
	   dd - day of month (two digit)
	   o  - day of year (no leading zeros)
	   oo - day of year (three digit)
	   D  - day name short
	   DD - day name long
	   m  - month of year (no leading zero)
	   mm - month of year (two digit)
	   M  - month name short
	   MM - month name long
	   y  - year (two digit)
	   yy - year (four digit)
	   @ - Unix timestamp (ms since 01/01/1970)
	   ! - Windows ticks (100ns since 01/01/0001)
	   '...' - literal text
	   '' - single quote

	   @param  format    string - the desired format of the date
	   @param  date      Date - the date value to format
	   @param  settings  Object - attributes include:
	                     dayNamesShort    string[7] - abbreviated names of the days from Sunday (optional)
	                     dayNames         string[7] - names of the days from Sunday (optional)
	                     monthNamesShort  string[12] - abbreviated names of the months (optional)
	                     monthNames       string[12] - names of the months (optional)
	   @return  string - the date in the above format */
	formatDate: function (format, date, settings) {
		if (!date)
			return '';
		var dayNamesShort = (settings ? settings.dayNamesShort : null) || this._defaults.dayNamesShort;
		var dayNames = (settings ? settings.dayNames : null) || this._defaults.dayNames;
		var monthNamesShort = (settings ? settings.monthNamesShort : null) || this._defaults.monthNamesShort;
		var monthNames = (settings ? settings.monthNames : null) || this._defaults.monthNames;
		// Check whether a format character is doubled
		var lookAhead = function(match) {
			var matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) == match);
			if (matches)
				iFormat++;
			return matches;
		};
		// Format a number, with leading zero if necessary
		var formatNumber = function(match, value, len) {
			var num = '' + value;
			if (lookAhead(match))
				while (num.length < len)
					num = '0' + num;
			return num;
		};
		// Format a name, short or long as requested
		var formatName = function(match, value, shortNames, longNames) {
			return (lookAhead(match) ? longNames[value] : shortNames[value]);
		};
		var output = '';
		var literal = false;
		if (date)
			for (var iFormat = 0; iFormat < format.length; iFormat++) {
				if (literal)
					if (format.charAt(iFormat) == "'" && !lookAhead("'"))
						literal = false;
					else
						output += format.charAt(iFormat);
				else
					switch (format.charAt(iFormat)) {
						case 'd':
							output += formatNumber('d', date.getDate(), 2);
							break;
						case 'D':
							output += formatName('D', date.getDay(), dayNamesShort, dayNames);
							break;
						case 'o':
							output += formatNumber('o',
								Math.round((new Date(date.getFullYear(), date.getMonth(), date.getDate()).getTime() - new Date(date.getFullYear(), 0, 0).getTime()) / 86400000), 3);
							break;
						case 'm':
							output += formatNumber('m', date.getMonth() + 1, 2);
							break;
						case 'M':
							output += formatName('M', date.getMonth(), monthNamesShort, monthNames);
							break;
						case 'y':
							output += (lookAhead('y') ? date.getFullYear() :
								(date.getYear() % 100 < 10 ? '0' : '') + date.getYear() % 100);
							break;
						case '@':
							output += date.getTime();
							break;
						case '!':
							output += date.getTime() * 10000 + this._ticksTo1970;
							break;
						case "'":
							if (lookAhead("'"))
								output += "'";
							else
								literal = true;
							break;
						default:
							output += format.charAt(iFormat);
					}
			}
		return output;
	},

	/* Extract all possible characters from the date format. */
	_possibleChars: function (format) {
		var chars = '';
		var literal = false;
		// Check whether a format character is doubled
		var lookAhead = function(match) {
			var matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) == match);
			if (matches)
				iFormat++;
			return matches;
		};
		for (var iFormat = 0; iFormat < format.length; iFormat++)
			if (literal)
				if (format.charAt(iFormat) == "'" && !lookAhead("'"))
					literal = false;
				else
					chars += format.charAt(iFormat);
			else
				switch (format.charAt(iFormat)) {
					case 'd': case 'm': case 'y': case '@':
						chars += '0123456789';
						break;
					case 'D': case 'M':
						return null; // Accept anything
					case "'":
						if (lookAhead("'"))
							chars += "'";
						else
							literal = true;
						break;
					default:
						chars += format.charAt(iFormat);
				}
		return chars;
	},

	/* Get a setting value, defaulting if necessary. */
	_get: function(inst, name) {
		return inst.settings[name] !== undefined ?
			inst.settings[name] : this._defaults[name];
	},

	/* Parse existing date and initialise date picker. */
	_setDateFromField: function(inst, noDefault) {
		if (inst.input.val() == inst.lastVal) {
			return;
		}
		var dateFormat = this._get(inst, 'dateFormat');
		var dates = inst.lastVal = inst.input ? inst.input.val() : null;
		var date, defaultDate;
		date = defaultDate = this._getDefaultDate(inst);
		var settings = this._getFormatConfig(inst);
		try {
			date = this.parseDate(dateFormat, dates, settings) || defaultDate;
		} catch (event) {
			this.log(event);
			dates = (noDefault ? '' : dates);
		}
		inst.selectedDay = date.getDate();
		inst.drawMonth = inst.selectedMonth = date.getMonth();
		inst.drawYear = inst.selectedYear = date.getFullYear();
		inst.currentDay = (dates ? date.getDate() : 0);
		inst.currentMonth = (dates ? date.getMonth() : 0);
		inst.currentYear = (dates ? date.getFullYear() : 0);
		this._adjustInstDate(inst);
	},

	/* Retrieve the default date shown on opening. */
	_getDefaultDate: function(inst) {
		return this._restrictMinMax(inst,
			this._determineDate(inst, this._get(inst, 'defaultDate'), new Date()));
	},

	/* A date may be specified as an exact value or a relative one. */
	_determineDate: function(inst, date, defaultDate) {
		var offsetNumeric = function(offset) {
			var date = new Date();
			date.setDate(date.getDate() + offset);
			return date;
		};
		var offsetString = function(offset) {
			try {
				return $.datepicker.parseDate($.datepicker._get(inst, 'dateFormat'),
					offset, $.datepicker._getFormatConfig(inst));
			}
			catch (e) {
				// Ignore
			}
			var date = (offset.toLowerCase().match(/^c/) ?
				$.datepicker._getDate(inst) : null) || new Date();
			var year = date.getFullYear();
			var month = date.getMonth();
			var day = date.getDate();
			var pattern = /([+-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g;
			var matches = pattern.exec(offset);
			while (matches) {
				switch (matches[2] || 'd') {
					case 'd' : case 'D' :
						day += parseInt(matches[1],10); break;
					case 'w' : case 'W' :
						day += parseInt(matches[1],10) * 7; break;
					case 'm' : case 'M' :
						month += parseInt(matches[1],10);
						day = Math.min(day, $.datepicker._getDaysInMonth(year, month));
						break;
					case 'y': case 'Y' :
						year += parseInt(matches[1],10);
						day = Math.min(day, $.datepicker._getDaysInMonth(year, month));
						break;
				}
				matches = pattern.exec(offset);
			}
			return new Date(year, month, day);
		};
		var newDate = (date == null || date === '' ? defaultDate : (typeof date == 'string' ? offsetString(date) :
			(typeof date == 'number' ? (isNaN(date) ? defaultDate : offsetNumeric(date)) : new Date(date.getTime()))));
		newDate = (newDate && newDate.toString() == 'Invalid Date' ? defaultDate : newDate);
		if (newDate) {
			newDate.setHours(0);
			newDate.setMinutes(0);
			newDate.setSeconds(0);
			newDate.setMilliseconds(0);
		}
		return this._daylightSavingAdjust(newDate);
	},

	/* Handle switch to/from daylight saving.
	   Hours may be non-zero on daylight saving cut-over:
	   > 12 when midnight changeover, but then cannot generate
	   midnight datetime, so jump to 1AM, otherwise reset.
	   @param  date  (Date) the date to check
	   @return  (Date) the corrected date */
	_daylightSavingAdjust: function(date) {
		if (!date) return null;
		date.setHours(date.getHours() > 12 ? date.getHours() + 2 : 0);
		return date;
	},

	/* Set the date(s) directly. */
	_setDate: function(inst, date, noChange) {
		var clear = !date;
		var origMonth = inst.selectedMonth;
		var origYear = inst.selectedYear;
		var newDate = this._restrictMinMax(inst, this._determineDate(inst, date, new Date()));
		inst.selectedDay = inst.currentDay = newDate.getDate();
		inst.drawMonth = inst.selectedMonth = inst.currentMonth = newDate.getMonth();
		inst.drawYear = inst.selectedYear = inst.currentYear = newDate.getFullYear();
		if ((origMonth != inst.selectedMonth || origYear != inst.selectedYear) && !noChange)
			this._notifyChange(inst);
		this._adjustInstDate(inst);
		if (inst.input) {
			inst.input.val(clear ? '' : this._formatDate(inst));
		}
	},

	/* Retrieve the date(s) directly. */
	_getDate: function(inst) {
		var startDate = (!inst.currentYear || (inst.input && inst.input.val() == '') ? null :
			this._daylightSavingAdjust(new Date(
			inst.currentYear, inst.currentMonth, inst.currentDay)));
			return startDate;
	},

	/* Attach the onxxx handlers.  These are declared statically so
	 * they work with static code transformers like Caja.
	 */
	_attachHandlers: function(inst) {
		var stepMonths = this._get(inst, 'stepMonths');
		var id = '#' + inst.id.replace( /\\\\/g, "\\" );
		inst.dpDiv.find('[data-handler]').map(function () {
			var handler = {
				prev: function () {
					window['DP_jQuery_' + dpuuid].datepicker._adjustDate(id, -stepMonths, 'M');
				},
				next: function () {
					window['DP_jQuery_' + dpuuid].datepicker._adjustDate(id, +stepMonths, 'M');
				},
				hide: function () {
					window['DP_jQuery_' + dpuuid].datepicker._hideDatepicker();
				},
				today: function () {
					window['DP_jQuery_' + dpuuid].datepicker._gotoToday(id);
				},
				selectDay: function () {
					window['DP_jQuery_' + dpuuid].datepicker._selectDay(id, +this.getAttribute('data-month'), +this.getAttribute('data-year'), this);
					return false;
				},
				selectMonth: function () {
					window['DP_jQuery_' + dpuuid].datepicker._selectMonthYear(id, this, 'M');
					return false;
				},
				selectYear: function () {
					window['DP_jQuery_' + dpuuid].datepicker._selectMonthYear(id, this, 'Y');
					return false;
				}
			};
			$(this).bind(this.getAttribute('data-event'), handler[this.getAttribute('data-handler')]);
		});
	},
	
	/* Generate the HTML for the current state of the date picker. */
	_generateHTML: function(inst) {
		var today = new Date();
		today = this._daylightSavingAdjust(
			new Date(today.getFullYear(), today.getMonth(), today.getDate())); // clear time
		var isRTL = this._get(inst, 'isRTL');
		var showButtonPanel = this._get(inst, 'showButtonPanel');
		var hideIfNoPrevNext = this._get(inst, 'hideIfNoPrevNext');
		var navigationAsDateFormat = this._get(inst, 'navigationAsDateFormat');
		var numMonths = this._getNumberOfMonths(inst);
		var showCurrentAtPos = this._get(inst, 'showCurrentAtPos');
		var stepMonths = this._get(inst, 'stepMonths');
		var isMultiMonth = (numMonths[0] != 1 || numMonths[1] != 1);
		var currentDate = this._daylightSavingAdjust((!inst.currentDay ? new Date(9999, 9, 9) :
			new Date(inst.currentYear, inst.currentMonth, inst.currentDay)));
		var minDate = this._getMinMaxDate(inst, 'min');
		var maxDate = this._getMinMaxDate(inst, 'max');
		var drawMonth = inst.drawMonth - showCurrentAtPos;
		var drawYear = inst.drawYear;
		if (drawMonth < 0) {
			drawMonth += 12;
			drawYear--;
		}
		if (maxDate) {
			var maxDraw = this._daylightSavingAdjust(new Date(maxDate.getFullYear(),
				maxDate.getMonth() - (numMonths[0] * numMonths[1]) + 1, maxDate.getDate()));
			maxDraw = (minDate && maxDraw < minDate ? minDate : maxDraw);
			while (this._daylightSavingAdjust(new Date(drawYear, drawMonth, 1)) > maxDraw) {
				drawMonth--;
				if (drawMonth < 0) {
					drawMonth = 11;
					drawYear--;
				}
			}
		}
		inst.drawMonth = drawMonth;
		inst.drawYear = drawYear;
		var prevText = this._get(inst, 'prevText');
		prevText = (!navigationAsDateFormat ? prevText : this.formatDate(prevText,
			this._daylightSavingAdjust(new Date(drawYear, drawMonth - stepMonths, 1)),
			this._getFormatConfig(inst)));
		var prev = (this._canAdjustMonth(inst, -1, drawYear, drawMonth) ?
			'<a class="ui-datepicker-prev ui-corner-all" data-handler="prev" data-event="click"' +
			' title="' + prevText + '"><span class="ui-icon ui-icon-circle-triangle-' + ( isRTL ? 'e' : 'w') + '">' + prevText + '</span></a>' :
			(hideIfNoPrevNext ? '' : '<a class="ui-datepicker-prev ui-corner-all ui-state-disabled" title="'+ prevText +'"><span class="ui-icon ui-icon-circle-triangle-' + ( isRTL ? 'e' : 'w') + '">' + prevText + '</span></a>'));
		var nextText = this._get(inst, 'nextText');
		nextText = (!navigationAsDateFormat ? nextText : this.formatDate(nextText,
			this._daylightSavingAdjust(new Date(drawYear, drawMonth + stepMonths, 1)),
			this._getFormatConfig(inst)));
		var next = (this._canAdjustMonth(inst, +1, drawYear, drawMonth) ?
			'<a class="ui-datepicker-next ui-corner-all" data-handler="next" data-event="click"' +
			' title="' + nextText + '"><span class="ui-icon ui-icon-circle-triangle-' + ( isRTL ? 'w' : 'e') + '">' + nextText + '</span></a>' :
			(hideIfNoPrevNext ? '' : '<a class="ui-datepicker-next ui-corner-all ui-state-disabled" title="'+ nextText + '"><span class="ui-icon ui-icon-circle-triangle-' + ( isRTL ? 'w' : 'e') + '">' + nextText + '</span></a>'));
		var currentText = this._get(inst, 'currentText');
		var gotoDate = (this._get(inst, 'gotoCurrent') && inst.currentDay ? currentDate : today);
		currentText = (!navigationAsDateFormat ? currentText :
			this.formatDate(currentText, gotoDate, this._getFormatConfig(inst)));
		var controls = (!inst.inline ? '<button type="button" class="ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all" data-handler="hide" data-event="click">' +
			this._get(inst, 'closeText') + '</button>' : '');
		var buttonPanel = (showButtonPanel) ? '<div class="ui-datepicker-buttonpane ui-widget-content">' + (isRTL ? controls : '') +
			(this._isInRange(inst, gotoDate) ? '<button type="button" class="ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all" data-handler="today" data-event="click"' +
			'>' + currentText + '</button>' : '') + (isRTL ? '' : controls) + '</div>' : '';
		var firstDay = parseInt(this._get(inst, 'firstDay'),10);
		firstDay = (isNaN(firstDay) ? 0 : firstDay);
		var showWeek = this._get(inst, 'showWeek');
		var dayNames = this._get(inst, 'dayNames');
		var dayNamesShort = this._get(inst, 'dayNamesShort');
		var dayNamesMin = this._get(inst, 'dayNamesMin');
		var monthNames = this._get(inst, 'monthNames');
		var monthNamesShort = this._get(inst, 'monthNamesShort');
		var beforeShowDay = this._get(inst, 'beforeShowDay');
		var showOtherMonths = this._get(inst, 'showOtherMonths');
		var selectOtherMonths = this._get(inst, 'selectOtherMonths');
		var calculateWeek = this._get(inst, 'calculateWeek') || this.iso8601Week;
		var defaultDate = this._getDefaultDate(inst);
		var html = '';
		for (var row = 0; row < numMonths[0]; row++) {
			var group = '';
			this.maxRows = 4;
			for (var col = 0; col < numMonths[1]; col++) {
				var selectedDate = this._daylightSavingAdjust(new Date(drawYear, drawMonth, inst.selectedDay));
				var cornerClass = ' ui-corner-all';
				var calender = '';
				if (isMultiMonth) {
					calender += '<div class="ui-datepicker-group';
					if (numMonths[1] > 1)
						switch (col) {
							case 0: calender += ' ui-datepicker-group-first';
								cornerClass = ' ui-corner-' + (isRTL ? 'right' : 'left'); break;
							case numMonths[1]-1: calender += ' ui-datepicker-group-last';
								cornerClass = ' ui-corner-' + (isRTL ? 'left' : 'right'); break;
							default: calender += ' ui-datepicker-group-middle'; cornerClass = ''; break;
						}
					calender += '">';
				}
				calender += '<div class="ui-datepicker-header ui-widget-header ui-helper-clearfix' + cornerClass + '">' +
					(/all|left/.test(cornerClass) && row == 0 ? (isRTL ? next : prev) : '') +
					(/all|right/.test(cornerClass) && row == 0 ? (isRTL ? prev : next) : '') +
					this._generateMonthYearHeader(inst, drawMonth, drawYear, minDate, maxDate,
					row > 0 || col > 0, monthNames, monthNamesShort) + // draw month headers
					'</div><table class="ui-datepicker-calendar"><thead>' +
					'<tr>';
				var thead = (showWeek ? '<th class="ui-datepicker-week-col">' + this._get(inst, 'weekHeader') + '</th>' : '');
				for (var dow = 0; dow < 7; dow++) { // days of the week
					var day = (dow + firstDay) % 7;
					thead += '<th' + ((dow + firstDay + 6) % 7 >= 5 ? ' class="ui-datepicker-week-end"' : '') + '>' +
						'<span title="' + dayNames[day] + '">' + dayNamesMin[day] + '</span></th>';
				}
				calender += thead + '</tr></thead><tbody>';
				var daysInMonth = this._getDaysInMonth(drawYear, drawMonth);
				if (drawYear == inst.selectedYear && drawMonth == inst.selectedMonth)
					inst.selectedDay = Math.min(inst.selectedDay, daysInMonth);
				var leadDays = (this._getFirstDayOfMonth(drawYear, drawMonth) - firstDay + 7) % 7;
				var curRows = Math.ceil((leadDays + daysInMonth) / 7); // calculate the number of rows to generate
				var numRows = (isMultiMonth ? this.maxRows > curRows ? this.maxRows : curRows : curRows); //If multiple months, use the higher number of rows (see #7043)
				this.maxRows = numRows;
				var printDate = this._daylightSavingAdjust(new Date(drawYear, drawMonth, 1 - leadDays));
				for (var dRow = 0; dRow < numRows; dRow++) { // create date picker rows
					calender += '<tr>';
					var tbody = (!showWeek ? '' : '<td class="ui-datepicker-week-col">' +
						this._get(inst, 'calculateWeek')(printDate) + '</td>');
					for (var dow = 0; dow < 7; dow++) { // create date picker days
						var daySettings = (beforeShowDay ?
							beforeShowDay.apply((inst.input ? inst.input[0] : null), [printDate]) : [true, '']);
						var otherMonth = (printDate.getMonth() != drawMonth);
						var unselectable = (otherMonth && !selectOtherMonths) || !daySettings[0] ||
							(minDate && printDate < minDate) || (maxDate && printDate > maxDate);
						tbody += '<td class="' +
							((dow + firstDay + 6) % 7 >= 5 ? ' ui-datepicker-week-end' : '') + // highlight weekends
							(otherMonth ? ' ui-datepicker-other-month' : '') + // highlight days from other months
							((printDate.getTime() == selectedDate.getTime() && drawMonth == inst.selectedMonth && inst._keyEvent) || // user pressed key
							(defaultDate.getTime() == printDate.getTime() && defaultDate.getTime() == selectedDate.getTime()) ?
							// or defaultDate is current printedDate and defaultDate is selectedDate
							' ' + this._dayOverClass : '') + // highlight selected day
							(unselectable ? ' ' + this._unselectableClass + ' ui-state-disabled': '') +  // highlight unselectable days
							(otherMonth && !showOtherMonths ? '' : ' ' + daySettings[1] + // highlight custom dates
							(printDate.getTime() == currentDate.getTime() ? ' ' + this._currentClass : '') + // highlight selected day
							(printDate.getTime() == today.getTime() ? ' ui-datepicker-today' : '')) + '"' + // highlight today (if different)
							((!otherMonth || showOtherMonths) && daySettings[2] ? ' title="' + daySettings[2] + '"' : '') + // cell title
							(unselectable ? '' : ' data-handler="selectDay" data-event="click" data-month="' + printDate.getMonth() + '" data-year="' + printDate.getFullYear() + '"') + '>' + // actions
							(otherMonth && !showOtherMonths ? '&#xa0;' : // display for other months
							(unselectable ? '<span class="ui-state-default">' + printDate.getDate() + '</span>' : '<a class="ui-state-default' +
							(printDate.getTime() == today.getTime() ? ' ui-state-highlight' : '') +
							(printDate.getTime() == currentDate.getTime() ? ' ui-state-active' : '') + // highlight selected day
							(otherMonth ? ' ui-priority-secondary' : '') + // distinguish dates from other months
							'" href="#">' + printDate.getDate() + '</a>')) + '</td>'; // display selectable date
						printDate.setDate(printDate.getDate() + 1);
						printDate = this._daylightSavingAdjust(printDate);
					}
					calender += tbody + '</tr>';
				}
				drawMonth++;
				if (drawMonth > 11) {
					drawMonth = 0;
					drawYear++;
				}
				calender += '</tbody></table>' + (isMultiMonth ? '</div>' + 
							((numMonths[0] > 0 && col == numMonths[1]-1) ? '<div class="ui-datepicker-row-break"></div>' : '') : '');
				group += calender;
			}
			html += group;
		}
		html += buttonPanel + ($.browser.msie && parseInt($.browser.version,10) < 7 && !inst.inline ?
			'<iframe src="javascript:false;" class="ui-datepicker-cover" frameborder="0"></iframe>' : '');
		inst._keyEvent = false;
		return html;
	},

	/* Generate the month and year header. */
	_generateMonthYearHeader: function(inst, drawMonth, drawYear, minDate, maxDate,
			secondary, monthNames, monthNamesShort) {
		var changeMonth = this._get(inst, 'changeMonth');
		var changeYear = this._get(inst, 'changeYear');
		var showMonthAfterYear = this._get(inst, 'showMonthAfterYear');
		var html = '<div class="ui-datepicker-title">';
		var monthHtml = '';
		// month selection
		if (secondary || !changeMonth)
			monthHtml += '<span class="ui-datepicker-month">' + monthNames[drawMonth] + '</span>';
		else {
			var inMinYear = (minDate && minDate.getFullYear() == drawYear);
			var inMaxYear = (maxDate && maxDate.getFullYear() == drawYear);
			monthHtml += '<select class="ui-datepicker-month" data-handler="selectMonth" data-event="change">';
			for (var month = 0; month < 12; month++) {
				if ((!inMinYear || month >= minDate.getMonth()) &&
						(!inMaxYear || month <= maxDate.getMonth()))
					monthHtml += '<option value="' + month + '"' +
						(month == drawMonth ? ' selected="selected"' : '') +
						'>' + monthNamesShort[month] + '</option>';
			}
			monthHtml += '</select>';
		}
		if (!showMonthAfterYear)
			html += monthHtml + (secondary || !(changeMonth && changeYear) ? '&#xa0;' : '');
		// year selection
		if ( !inst.yearshtml ) {
			inst.yearshtml = '';
			if (secondary || !changeYear)
				html += '<span class="ui-datepicker-year">' + drawYear + '</span>';
			else {
				// determine range of years to display
				var years = this._get(inst, 'yearRange').split(':');
				var thisYear = new Date().getFullYear();
				var determineYear = function(value) {
					var year = (value.match(/c[+-].*/) ? drawYear + parseInt(value.substring(1), 10) :
						(value.match(/[+-].*/) ? thisYear + parseInt(value, 10) :
						parseInt(value, 10)));
					return (isNaN(year) ? thisYear : year);
				};
				var year = determineYear(years[0]);
				var endYear = Math.max(year, determineYear(years[1] || ''));
				year = (minDate ? Math.max(year, minDate.getFullYear()) : year);
				endYear = (maxDate ? Math.min(endYear, maxDate.getFullYear()) : endYear);
				inst.yearshtml += '<select class="ui-datepicker-year" data-handler="selectYear" data-event="change">';
				for (; year <= endYear; year++) {
					inst.yearshtml += '<option value="' + year + '"' +
						(year == drawYear ? ' selected="selected"' : '') +
						'>' + year + '</option>';
				}
				inst.yearshtml += '</select>';
				
				html += inst.yearshtml;
				inst.yearshtml = null;
			}
		}
		html += this._get(inst, 'yearSuffix');
		if (showMonthAfterYear)
			html += (secondary || !(changeMonth && changeYear) ? '&#xa0;' : '') + monthHtml;
		html += '</div>'; // Close datepicker_header
		return html;
	},

	/* Adjust one of the date sub-fields. */
	_adjustInstDate: function(inst, offset, period) {
		var year = inst.drawYear + (period == 'Y' ? offset : 0);
		var month = inst.drawMonth + (period == 'M' ? offset : 0);
		var day = Math.min(inst.selectedDay, this._getDaysInMonth(year, month)) +
			(period == 'D' ? offset : 0);
		var date = this._restrictMinMax(inst,
			this._daylightSavingAdjust(new Date(year, month, day)));
		inst.selectedDay = date.getDate();
		inst.drawMonth = inst.selectedMonth = date.getMonth();
		inst.drawYear = inst.selectedYear = date.getFullYear();
		if (period == 'M' || period == 'Y')
			this._notifyChange(inst);
	},

	/* Ensure a date is within any min/max bounds. */
	_restrictMinMax: function(inst, date) {
		var minDate = this._getMinMaxDate(inst, 'min');
		var maxDate = this._getMinMaxDate(inst, 'max');
		var newDate = (minDate && date < minDate ? minDate : date);
		newDate = (maxDate && newDate > maxDate ? maxDate : newDate);
		return newDate;
	},

	/* Notify change of month/year. */
	_notifyChange: function(inst) {
		var onChange = this._get(inst, 'onChangeMonthYear');
		if (onChange)
			onChange.apply((inst.input ? inst.input[0] : null),
				[inst.selectedYear, inst.selectedMonth + 1, inst]);
	},

	/* Determine the number of months to show. */
	_getNumberOfMonths: function(inst) {
		var numMonths = this._get(inst, 'numberOfMonths');
		return (numMonths == null ? [1, 1] : (typeof numMonths == 'number' ? [1, numMonths] : numMonths));
	},

	/* Determine the current maximum date - ensure no time components are set. */
	_getMinMaxDate: function(inst, minMax) {
		return this._determineDate(inst, this._get(inst, minMax + 'Date'), null);
	},

	/* Find the number of days in a given month. */
	_getDaysInMonth: function(year, month) {
		return 32 - this._daylightSavingAdjust(new Date(year, month, 32)).getDate();
	},

	/* Find the day of the week of the first of a month. */
	_getFirstDayOfMonth: function(year, month) {
		return new Date(year, month, 1).getDay();
	},

	/* Determines if we should allow a "next/prev" month display change. */
	_canAdjustMonth: function(inst, offset, curYear, curMonth) {
		var numMonths = this._getNumberOfMonths(inst);
		var date = this._daylightSavingAdjust(new Date(curYear,
			curMonth + (offset < 0 ? offset : numMonths[0] * numMonths[1]), 1));
		if (offset < 0)
			date.setDate(this._getDaysInMonth(date.getFullYear(), date.getMonth()));
		return this._isInRange(inst, date);
	},

	/* Is the given date in the accepted range? */
	_isInRange: function(inst, date) {
		var minDate = this._getMinMaxDate(inst, 'min');
		var maxDate = this._getMinMaxDate(inst, 'max');
		return ((!minDate || date.getTime() >= minDate.getTime()) &&
			(!maxDate || date.getTime() <= maxDate.getTime()));
	},

	/* Provide the configuration settings for formatting/parsing. */
	_getFormatConfig: function(inst) {
		var shortYearCutoff = this._get(inst, 'shortYearCutoff');
		shortYearCutoff = (typeof shortYearCutoff != 'string' ? shortYearCutoff :
			new Date().getFullYear() % 100 + parseInt(shortYearCutoff, 10));
		return {shortYearCutoff: shortYearCutoff,
			dayNamesShort: this._get(inst, 'dayNamesShort'), dayNames: this._get(inst, 'dayNames'),
			monthNamesShort: this._get(inst, 'monthNamesShort'), monthNames: this._get(inst, 'monthNames')};
	},

	/* Format the given date for display. */
	_formatDate: function(inst, day, month, year) {
		if (!day) {
			inst.currentDay = inst.selectedDay;
			inst.currentMonth = inst.selectedMonth;
			inst.currentYear = inst.selectedYear;
		}
		var date = (day ? (typeof day == 'object' ? day :
			this._daylightSavingAdjust(new Date(year, month, day))) :
			this._daylightSavingAdjust(new Date(inst.currentYear, inst.currentMonth, inst.currentDay)));
		return this.formatDate(this._get(inst, 'dateFormat'), date, this._getFormatConfig(inst));
	}
});

/*
 * Bind hover events for datepicker elements.
 * Done via delegate so the binding only occurs once in the lifetime of the parent div.
 * Global instActive, set by _updateDatepicker allows the handlers to find their way back to the active picker.
 */ 
function bindHover(dpDiv) {
	var selector = 'button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a';
	return dpDiv.delegate(selector, 'mouseout', function() {
			$(this).removeClass('ui-state-hover');
			if (this.className.indexOf('ui-datepicker-prev') != -1) $(this).removeClass('ui-datepicker-prev-hover');
			if (this.className.indexOf('ui-datepicker-next') != -1) $(this).removeClass('ui-datepicker-next-hover');
		})
		.delegate(selector, 'mouseover', function(){
			if (!$.datepicker._isDisabledDatepicker( instActive.inline ? dpDiv.parent()[0] : instActive.input[0])) {
				$(this).parents('.ui-datepicker-calendar').find('a').removeClass('ui-state-hover');
				$(this).addClass('ui-state-hover');
				if (this.className.indexOf('ui-datepicker-prev') != -1) $(this).addClass('ui-datepicker-prev-hover');
				if (this.className.indexOf('ui-datepicker-next') != -1) $(this).addClass('ui-datepicker-next-hover');
			}
		});
}

/* jQuery extend now ignores nulls! */
function extendRemove(target, props) {
	$.extend(target, props);
	for (var name in props)
		if (props[name] == null || props[name] == undefined)
			target[name] = props[name];
	return target;
};

/* Invoke the datepicker functionality.
   @param  options  string - a command, optionally followed by additional parameters or
	                Object - settings for attaching new datepicker functionality
   @return  jQuery object */
$.fn.datepicker = function(options){
	
	/* Verify an empty collection wasn't passed - Fixes #6976 */
	if ( !this.length ) {
		return this;
	}
	
	/* Initialise the date picker. */
	if (!$.datepicker.initialized) {
		$(document).mousedown($.datepicker._checkExternalClick).
			find(document.body).append($.datepicker.dpDiv);
		$.datepicker.initialized = true;
	}

	var otherArgs = Array.prototype.slice.call(arguments, 1);
	if (typeof options == 'string' && (options == 'isDisabled' || options == 'getDate' || options == 'widget'))
		return $.datepicker['_' + options + 'Datepicker'].
			apply($.datepicker, [this[0]].concat(otherArgs));
	if (options == 'option' && arguments.length == 2 && typeof arguments[1] == 'string')
		return $.datepicker['_' + options + 'Datepicker'].
			apply($.datepicker, [this[0]].concat(otherArgs));
	return this.each(function() {
		typeof options == 'string' ?
			$.datepicker['_' + options + 'Datepicker'].
				apply($.datepicker, [this].concat(otherArgs)) :
			$.datepicker._attachDatepicker(this, options);
	});
};

$.datepicker = new Datepicker(); // singleton instance
$.datepicker.initialized = false;
$.datepicker.uuid = new Date().getTime();
$.datepicker.version = "1.9.0";

// Workaround for #4055
// Add another global to avoid noConflict issues with inline event handlers
window['DP_jQuery_' + dpuuid] = $;

})(jQuery);
(function( $, undefined ) {

var uiDialogClasses = "ui-dialog ui-widget ui-widget-content ui-corner-all ",
	sizeRelatedOptions = {
		buttons: true,
		height: true,
		maxHeight: true,
		maxWidth: true,
		minHeight: true,
		minWidth: true,
		width: true
	},
	resizableRelatedOptions = {
		maxHeight: true,
		maxWidth: true,
		minHeight: true,
		minWidth: true
	};

$.widget("ui.dialog", {
	version: "1.9.0",
	options: {
		autoOpen: true,
		buttons: {},
		closeOnEscape: true,
		closeText: "close",
		dialogClass: "",
		draggable: true,
		hide: null,
		height: "auto",
		maxHeight: false,
		maxWidth: false,
		minHeight: 150,
		minWidth: 150,
		modal: false,
		position: {
			my: "center",
			at: "center",
			of: window,
			collision: "fit",
			// ensure that the titlebar is never outside the document
			using: function( pos ) {
				var topOffset = $( this ).css( pos ).offset().top;
				if ( topOffset < 0 ) {
					$( this ).css( "top", pos.top - topOffset );
				}
			}
		},
		resizable: true,
		show: null,
		stack: true,
		title: "",
		width: 300,
		zIndex: 1000
	},

	_create: function() {
		this.originalTitle = this.element.attr( "title" );
		// #5742 - .attr() might return a DOMElement
		if ( typeof this.originalTitle !== "string" ) {
			this.originalTitle = "";
		}
		this.oldPosition = {
			parent: this.element.parent(),
			index: this.element.parent().children().index( this.element )
		};
		this.options.title = this.options.title || this.originalTitle;
		var that = this,
			options = this.options,

			title = options.title || "&#160;",

			uiDialog = ( this.uiDialog = $( "<div>" ) )
				.addClass( uiDialogClasses + options.dialogClass )
				.css({
					display: "none",
					outline: 0, // TODO: move to stylesheet
					zIndex: options.zIndex
				})
				// setting tabIndex makes the div focusable
				.attr( "tabIndex", -1)
				.keydown(function( event ) {
					if ( options.closeOnEscape && !event.isDefaultPrevented() && event.keyCode &&
							event.keyCode === $.ui.keyCode.ESCAPE ) {
						that.close( event );
						event.preventDefault();
					}
				})
				.mousedown(function( event ) {
					that.moveToTop( false, event );
				})
				.appendTo( "body" ),

			uiDialogContent = this.element
				.show()
				.removeAttr( "title" )
				.addClass( "ui-dialog-content ui-widget-content" )
				.appendTo( uiDialog ),

			uiDialogTitlebar = ( this.uiDialogTitlebar = $( "<div>" ) )
				.addClass( "ui-dialog-titlebar  ui-widget-header  " +
					"ui-corner-all  ui-helper-clearfix" )
				.prependTo( uiDialog ),

			uiDialogTitlebarClose = $( "<a href='#'></a>" )
				.addClass( "ui-dialog-titlebar-close  ui-corner-all" )
				.attr( "role", "button" )
				.click(function( event ) {
					event.preventDefault();
					that.close( event );
				})
				.appendTo( uiDialogTitlebar ),

			uiDialogTitlebarCloseText = ( this.uiDialogTitlebarCloseText = $( "<span>" ) )
				.addClass( "ui-icon ui-icon-closethick" )
				.text( options.closeText )
				.appendTo( uiDialogTitlebarClose ),

			uiDialogTitle = $( "<span>" )
				.uniqueId()
				.addClass( "ui-dialog-title" )
				.html( title )
				.prependTo( uiDialogTitlebar ),

			uiDialogButtonPane = ( this.uiDialogButtonPane = $( "<div>" ) )
				.addClass( "ui-dialog-buttonpane ui-widget-content ui-helper-clearfix" ),

			uiButtonSet = ( this.uiButtonSet = $( "<div>" ) )
				.addClass( "ui-dialog-buttonset" )
				.appendTo( uiDialogButtonPane );

		uiDialog.attr({
			role: "dialog",
			"aria-labelledby": uiDialogTitle.attr( "id" )
		});

		uiDialogTitlebar.find( "*" ).add( uiDialogTitlebar ).disableSelection();
		this._hoverable( uiDialogTitlebarClose );
		this._focusable( uiDialogTitlebarClose );

		if ( options.draggable && $.fn.draggable ) {
			this._makeDraggable();
		}
		if ( options.resizable && $.fn.resizable ) {
			this._makeResizable();
		}

		this._createButtons( options.buttons );
		this._isOpen = false;

		if ( $.fn.bgiframe ) {
			uiDialog.bgiframe();
		}

		// prevent tabbing out of modal dialogs
		this._on( uiDialog, { keydown: function( event ) {
			if ( !options.modal || event.keyCode !== $.ui.keyCode.TAB ) {
				return;
			}

			var tabbables = $( ":tabbable", uiDialog ),
				first = tabbables.filter( ":first" ),
				last  = tabbables.filter( ":last" );

			if ( event.target === last[0] && !event.shiftKey ) {
				first.focus( 1 );
				return false;
			} else if ( event.target === first[0] && event.shiftKey ) {
				last.focus( 1 );
				return false;
			}
		}});
	},

	_init: function() {
		if ( this.options.autoOpen ) {
			this.open();
		}
	},

	_destroy: function() {
		var next,
			oldPosition = this.oldPosition;

		if ( this.overlay ) {
			this.overlay.destroy();
		}
		this.uiDialog.hide();
		this.element
			.removeClass( "ui-dialog-content ui-widget-content" )
			.hide()
			.appendTo( "body" );
		this.uiDialog.remove();

		if ( this.originalTitle ) {
			this.element.attr( "title", this.originalTitle );
		}

		next = oldPosition.parent.children().eq( oldPosition.index );
		// Don't try to place the dialog next to itself (#8613)
		if ( next.length && next[ 0 ] !== this.element[ 0 ] ) {
			next.before( this.element );
		} else {
			oldPosition.parent.append( this.element );
		}
	},

	widget: function() {
		return this.uiDialog;
	},

	close: function( event ) {
		var that = this,
			maxZ, thisZ;

		if ( !this._isOpen ) {
			return;
		}

		if ( false === this._trigger( "beforeClose", event ) ) {
			return;
		}

		this._isOpen = false;

		if ( this.overlay ) {
			this.overlay.destroy();
		}

		if ( this.options.hide ) {
			this.uiDialog.hide( this.options.hide, function() {
				that._trigger( "close", event );
			});
		} else {
			this.uiDialog.hide();
			this._trigger( "close", event );
		}

		$.ui.dialog.overlay.resize();

		// adjust the maxZ to allow other modal dialogs to continue to work (see #4309)
		if ( this.options.modal ) {
			maxZ = 0;
			$( ".ui-dialog" ).each(function() {
				if ( this !== that.uiDialog[0] ) {
					thisZ = $( this ).css( "z-index" );
					if ( !isNaN( thisZ ) ) {
						maxZ = Math.max( maxZ, thisZ );
					}
				}
			});
			$.ui.dialog.maxZ = maxZ;
		}

		return this;
	},

	isOpen: function() {
		return this._isOpen;
	},

	// the force parameter allows us to move modal dialogs to their correct
	// position on open
	moveToTop: function( force, event ) {
		var options = this.options,
			saveScroll;

		if ( ( options.modal && !force ) ||
				( !options.stack && !options.modal ) ) {
			return this._trigger( "focus", event );
		}

		if ( options.zIndex > $.ui.dialog.maxZ ) {
			$.ui.dialog.maxZ = options.zIndex;
		}
		if ( this.overlay ) {
			$.ui.dialog.maxZ += 1;
			$.ui.dialog.overlay.maxZ = $.ui.dialog.maxZ;
			this.overlay.$el.css( "z-index", $.ui.dialog.overlay.maxZ );
		}

		// Save and then restore scroll
		// Opera 9.5+ resets when parent z-index is changed.
		// http://bugs.jqueryui.com/ticket/3193
		saveScroll = {
			scrollTop: this.element.scrollTop(),
			scrollLeft: this.element.scrollLeft()
		};
		$.ui.dialog.maxZ += 1;
		this.uiDialog.css( "z-index", $.ui.dialog.maxZ );
		this.element.attr( saveScroll );
		this._trigger( "focus", event );

		return this;
	},

	open: function() {
		if ( this._isOpen ) {
			return;
		}

		var hasFocus,
			options = this.options,
			uiDialog = this.uiDialog;

		this._size();
		this._position( options.position );
		uiDialog.show( options.show );
		this.overlay = options.modal ? new $.ui.dialog.overlay( this ) : null;
		this.moveToTop( true );

		// set focus to the first tabbable element in the content area or the first button
		// if there are no tabbable elements, set focus on the dialog itself
		hasFocus = this.element.find( ":tabbable" );
		if ( !hasFocus.length ) {
			hasFocus = this.uiDialogButtonPane.find( ":tabbable" );
			if ( !hasFocus.length ) {
				hasFocus = uiDialog;
			}
		}
		hasFocus.eq( 0 ).focus();

		this._isOpen = true;
		this._trigger( "open" );

		return this;
	},

	_createButtons: function( buttons ) {
		var uiDialogButtonPane, uiButtonSet,
			that = this,
			hasButtons = false;

		// if we already have a button pane, remove it
		this.uiDialogButtonPane.remove();
		this.uiButtonSet.empty();

		if ( typeof buttons === "object" && buttons !== null ) {
			$.each( buttons, function() {
				return !(hasButtons = true);
			});
		}
		if ( hasButtons ) {
			$.each( buttons, function( name, props ) {
				props = $.isFunction( props ) ?
					{ click: props, text: name } :
					props;
				var button = $( "<button type='button'>" )
					.attr( props, true )
					.unbind( "click" )
					.click(function() {
						props.click.apply( that.element[0], arguments );
					})
					.appendTo( that.uiButtonSet );
				if ( $.fn.button ) {
					button.button();
				}
			});
			this.uiDialog.addClass( "ui-dialog-buttons" );
			this.uiDialogButtonPane.appendTo( this.uiDialog );
		} else {
			this.uiDialog.removeClass( "ui-dialog-buttons" );
		}
	},

	_makeDraggable: function() {
		var that = this,
			options = this.options;

		function filteredUi( ui ) {
			return {
				position: ui.position,
				offset: ui.offset
			};
		}

		this.uiDialog.draggable({
			cancel: ".ui-dialog-content, .ui-dialog-titlebar-close",
			handle: ".ui-dialog-titlebar",
			containment: "document",
			start: function( event, ui ) {
				$( this )
					.addClass( "ui-dialog-dragging" );
				that._trigger( "dragStart", event, filteredUi( ui ) );
			},
			drag: function( event, ui ) {
				that._trigger( "drag", event, filteredUi( ui ) );
			},
			stop: function( event, ui ) {
				options.position = [
					ui.position.left - that.document.scrollLeft(),
					ui.position.top - that.document.scrollTop()
				];
				$( this )
					.removeClass( "ui-dialog-dragging" );
				that._trigger( "dragStop", event, filteredUi( ui ) );
				$.ui.dialog.overlay.resize();
			}
		});
	},

	_makeResizable: function( handles ) {
		handles = (handles === undefined ? this.options.resizable : handles);
		var that = this,
			options = this.options,
			// .ui-resizable has position: relative defined in the stylesheet
			// but dialogs have to use absolute or fixed positioning
			position = this.uiDialog.css( "position" ),
			resizeHandles = typeof handles === 'string' ?
				handles	:
				"n,e,s,w,se,sw,ne,nw";

		function filteredUi( ui ) {
			return {
				originalPosition: ui.originalPosition,
				originalSize: ui.originalSize,
				position: ui.position,
				size: ui.size
			};
		}

		this.uiDialog.resizable({
			cancel: ".ui-dialog-content",
			containment: "document",
			alsoResize: this.element,
			maxWidth: options.maxWidth,
			maxHeight: options.maxHeight,
			minWidth: options.minWidth,
			minHeight: this._minHeight(),
			handles: resizeHandles,
			start: function( event, ui ) {
				$( this ).addClass( "ui-dialog-resizing" );
				that._trigger( "resizeStart", event, filteredUi( ui ) );
			},
			resize: function( event, ui ) {
				that._trigger( "resize", event, filteredUi( ui ) );
			},
			stop: function( event, ui ) {
				$( this ).removeClass( "ui-dialog-resizing" );
				options.height = $( this ).height();
				options.width = $( this ).width();
				that._trigger( "resizeStop", event, filteredUi( ui ) );
				$.ui.dialog.overlay.resize();
			}
		})
		.css( "position", position )
		.find( ".ui-resizable-se" )
			.addClass( "ui-icon ui-icon-grip-diagonal-se" );
	},

	_minHeight: function() {
		var options = this.options;

		if ( options.height === "auto" ) {
			return options.minHeight;
		} else {
			return Math.min( options.minHeight, options.height );
		}
	},

	_position: function( position ) {
		var myAt = [],
			offset = [ 0, 0 ],
			isVisible;

		if ( position ) {
			// deep extending converts arrays to objects in jQuery <= 1.3.2 :-(
	//		if (typeof position == 'string' || $.isArray(position)) {
	//			myAt = $.isArray(position) ? position : position.split(' ');

			if ( typeof position === "string" || (typeof position === "object" && "0" in position ) ) {
				myAt = position.split ? position.split( " " ) : [ position[ 0 ], position[ 1 ] ];
				if ( myAt.length === 1 ) {
					myAt[ 1 ] = myAt[ 0 ];
				}

				$.each( [ "left", "top" ], function( i, offsetPosition ) {
					if ( +myAt[ i ] === myAt[ i ] ) {
						offset[ i ] = myAt[ i ];
						myAt[ i ] = offsetPosition;
					}
				});

				position = {
					my: myAt.join( " " ),
					at: myAt.join( " " ),
					offset: offset.join( " " )
				};
			}

			position = $.extend( {}, $.ui.dialog.prototype.options.position, position );
		} else {
			position = $.ui.dialog.prototype.options.position;
		}

		// need to show the dialog to get the actual offset in the position plugin
		isVisible = this.uiDialog.is( ":visible" );
		if ( !isVisible ) {
			this.uiDialog.show();
		}
		this.uiDialog.position( position );
		if ( !isVisible ) {
			this.uiDialog.hide();
		}
	},

	_setOptions: function( options ) {
		var that = this,
			resizableOptions = {},
			resize = false;

		$.each( options, function( key, value ) {
			that._setOption( key, value );

			if ( key in sizeRelatedOptions ) {
				resize = true;
			}
			if ( key in resizableRelatedOptions ) {
				resizableOptions[ key ] = value;
			}
		});

		if ( resize ) {
			this._size();
		}
		if ( this.uiDialog.is( ":data(resizable)" ) ) {
			this.uiDialog.resizable( "option", resizableOptions );
		}
	},

	_setOption: function( key, value ) {
		var isDraggable, isResizable,
			uiDialog = this.uiDialog;

		switch ( key ) {
			case "buttons":
				this._createButtons( value );
				break;
			case "closeText":
				// ensure that we always pass a string
				this.uiDialogTitlebarCloseText.text( "" + value );
				break;
			case "dialogClass":
				uiDialog
					.removeClass( this.options.dialogClass )
					.addClass( uiDialogClasses + value );
				break;
			case "disabled":
				if ( value ) {
					uiDialog.addClass( "ui-dialog-disabled" );
				} else {
					uiDialog.removeClass( "ui-dialog-disabled" );
				}
				break;
			case "draggable":
				isDraggable = uiDialog.is( ":data(draggable)" );
				if ( isDraggable && !value ) {
					uiDialog.draggable( "destroy" );
				}

				if ( !isDraggable && value ) {
					this._makeDraggable();
				}
				break;
			case "position":
				this._position( value );
				break;
			case "resizable":
				// currently resizable, becoming non-resizable
				isResizable = uiDialog.is( ":data(resizable)" );
				if ( isResizable && !value ) {
					uiDialog.resizable( "destroy" );
				}

				// currently resizable, changing handles
				if ( isResizable && typeof value === "string" ) {
					uiDialog.resizable( "option", "handles", value );
				}

				// currently non-resizable, becoming resizable
				if ( !isResizable && value !== false ) {
					this._makeResizable( value );
				}
				break;
			case "title":
				// convert whatever was passed in o a string, for html() to not throw up
				$( ".ui-dialog-title", this.uiDialogTitlebar )
					.html( "" + ( value || "&#160;" ) );
				break;
		}

		this._super( key, value );
	},

	_size: function() {
		/* If the user has resized the dialog, the .ui-dialog and .ui-dialog-content
		 * divs will both have width and height set, so we need to reset them
		 */
		var nonContentHeight, minContentHeight, autoHeight,
			options = this.options,
			isVisible = this.uiDialog.is( ":visible" );

		// reset content sizing
		this.element.show().css({
			width: "auto",
			minHeight: 0,
			height: 0
		});

		if ( options.minWidth > options.width ) {
			options.width = options.minWidth;
		}

		// reset wrapper sizing
		// determine the height of all the non-content elements
		nonContentHeight = this.uiDialog.css({
				height: "auto",
				width: options.width
			})
			.outerHeight();
		minContentHeight = Math.max( 0, options.minHeight - nonContentHeight );

		if ( options.height === "auto" ) {
			// only needed for IE6 support
			if ( $.support.minHeight ) {
				this.element.css({
					minHeight: minContentHeight,
					height: "auto"
				});
			} else {
				this.uiDialog.show();
				autoHeight = this.element.css( "height", "auto" ).height();
				if ( !isVisible ) {
					this.uiDialog.hide();
				}
				this.element.height( Math.max( autoHeight, minContentHeight ) );
			}
		} else {
			this.element.height( Math.max( options.height - nonContentHeight, 0 ) );
		}

		if (this.uiDialog.is( ":data(resizable)" ) ) {
			this.uiDialog.resizable( "option", "minHeight", this._minHeight() );
		}
	}
});

$.extend($.ui.dialog, {
	uuid: 0,
	maxZ: 0,

	getTitleId: function($el) {
		var id = $el.attr( "id" );
		if ( !id ) {
			this.uuid += 1;
			id = this.uuid;
		}
		return "ui-dialog-title-" + id;
	},

	overlay: function( dialog ) {
		this.$el = $.ui.dialog.overlay.create( dialog );
	}
});

$.extend( $.ui.dialog.overlay, {
	instances: [],
	// reuse old instances due to IE memory leak with alpha transparency (see #5185)
	oldInstances: [],
	maxZ: 0,
	events: $.map(
		"focus,mousedown,mouseup,keydown,keypress,click".split( "," ),
		function( event ) {
			return event + ".dialog-overlay";
		}
	).join( " " ),
	create: function( dialog ) {
		if ( this.instances.length === 0 ) {
			// prevent use of anchors and inputs
			// we use a setTimeout in case the overlay is created from an
			// event that we're going to be cancelling (see #2804)
			setTimeout(function() {
				// handle $(el).dialog().dialog('close') (see #4065)
				if ( $.ui.dialog.overlay.instances.length ) {
					$( document ).bind( $.ui.dialog.overlay.events, function( event ) {
						// stop events if the z-index of the target is < the z-index of the overlay
						// we cannot return true when we don't want to cancel the event (#3523)
						if ( $( event.target ).zIndex() < $.ui.dialog.overlay.maxZ ) {
							return false;
						}
					});
				}
			}, 1 );

			// handle window resize
			$( window ).bind( "resize.dialog-overlay", $.ui.dialog.overlay.resize );
		}

		var $el = ( this.oldInstances.pop() || $( "<div>" ).addClass( "ui-widget-overlay" ) );

		// allow closing by pressing the escape key
		$( document ).bind( "keydown.dialog-overlay", function( event ) {
			var instances = $.ui.dialog.overlay.instances;
			// only react to the event if we're the top overlay
			if ( instances.length !== 0 && instances[ instances.length - 1 ] === $el &&
				dialog.options.closeOnEscape && !event.isDefaultPrevented() && event.keyCode &&
				event.keyCode === $.ui.keyCode.ESCAPE ) {

				dialog.close( event );
				event.preventDefault();
			}
		});

		$el.appendTo( document.body ).css({
			width: this.width(),
			height: this.height()
		});

		if ( $.fn.bgiframe ) {
			$el.bgiframe();
		}

		this.instances.push( $el );
		return $el;
	},

	destroy: function( $el ) {
		var indexOf = $.inArray( $el, this.instances ),
			maxZ = 0;

		if ( indexOf !== -1 ) {
			this.oldInstances.push( this.instances.splice( indexOf, 1 )[ 0 ] );
		}

		if ( this.instances.length === 0 ) {
			$( [ document, window ] ).unbind( ".dialog-overlay" );
		}

		$el.height( 0 ).width( 0 ).remove();

		// adjust the maxZ to allow other modal dialogs to continue to work (see #4309)
		$.each( this.instances, function() {
			maxZ = Math.max( maxZ, this.css( "z-index" ) );
		});
		this.maxZ = maxZ;
	},

	height: function() {
		var scrollHeight,
			offsetHeight;
		// handle IE
		if ( $.browser.msie ) {
			scrollHeight = Math.max(
				document.documentElement.scrollHeight,
				document.body.scrollHeight
			);
			offsetHeight = Math.max(
				document.documentElement.offsetHeight,
				document.body.offsetHeight
			);

			if ( scrollHeight < offsetHeight ) {
				return $( window ).height() + "px";
			} else {
				return scrollHeight + "px";
			}
		// handle "good" browsers
		} else {
			return $( document ).height() + "px";
		}
	},

	width: function() {
		var scrollWidth,
			offsetWidth;
		// handle IE
		if ( $.browser.msie ) {
			scrollWidth = Math.max(
				document.documentElement.scrollWidth,
				document.body.scrollWidth
			);
			offsetWidth = Math.max(
				document.documentElement.offsetWidth,
				document.body.offsetWidth
			);

			if ( scrollWidth < offsetWidth ) {
				return $( window ).width() + "px";
			} else {
				return scrollWidth + "px";
			}
		// handle "good" browsers
		} else {
			return $( document ).width() + "px";
		}
	},

	resize: function() {
		/* If the dialog is draggable and the user drags it past the
		 * right edge of the window, the document becomes wider so we
		 * need to stretch the overlay. If the user then drags the
		 * dialog back to the left, the document will become narrower,
		 * so we need to shrink the overlay to the appropriate size.
		 * This is handled by shrinking the overlay before setting it
		 * to the full document size.
		 */
		var $overlays = $( [] );
		$.each( $.ui.dialog.overlay.instances, function() {
			$overlays = $overlays.add( this );
		});

		$overlays.css({
			width: 0,
			height: 0
		}).css({
			width: $.ui.dialog.overlay.width(),
			height: $.ui.dialog.overlay.height()
		});
	}
});

$.extend( $.ui.dialog.overlay.prototype, {
	destroy: function() {
		$.ui.dialog.overlay.destroy( this.$el );
	}
});

}( jQuery ) );
(function( $, undefined ) {

var mouseHandled = false;

$.widget( "ui.menu", {
	version: "1.9.0",
	defaultElement: "<ul>",
	delay: 300,
	options: {
		icons: {
			submenu: "ui-icon-carat-1-e"
		},
		menus: "ul",
		position: {
			my: "left top",
			at: "right top"
		},
		role: "menu",

		// callbacks
		blur: null,
		focus: null,
		select: null
	},

	_create: function() {
		this.activeMenu = this.element;
		this.element
			.uniqueId()
			.addClass( "ui-menu ui-widget ui-widget-content ui-corner-all" )
			.toggleClass( "ui-menu-icons", !!this.element.find( ".ui-icon" ).length )
			.attr({
				role: this.options.role,
				tabIndex: 0
			})
			// need to catch all clicks on disabled menu
			// not possible through _on
			.bind( "click" + this.eventNamespace, $.proxy(function( event ) {
				if ( this.options.disabled ) {
					event.preventDefault();
				}
			}, this ));

		if ( this.options.disabled ) {
			this.element
				.addClass( "ui-state-disabled" )
				.attr( "aria-disabled", "true" );
		}

		this._on({
			// Prevent focus from sticking to links inside menu after clicking
			// them (focus should always stay on UL during navigation).
			"mousedown .ui-menu-item > a": function( event ) {
				event.preventDefault();
			},
			"click .ui-state-disabled > a": function( event ) {
				event.preventDefault();
			},
			"click .ui-menu-item:has(a)": function( event ) {
				var target = $( event.target ).closest( ".ui-menu-item" );
				if ( !mouseHandled && target.not( ".ui-state-disabled" ).length ) {
					mouseHandled = true;

					this.select( event );
					// Open submenu on click
					if ( target.has( ".ui-menu" ).length ) {
						this.expand( event );
					} else if ( !this.element.is( ":focus" ) ) {
						// Redirect focus to the menu
						this.element.trigger( "focus", [ true ] );

						// If the active item is on the top level, let it stay active.
						// Otherwise, blur the active item since it is no longer visible.
						if ( this.active && this.active.parents( ".ui-menu" ).length === 1 ) {
							clearTimeout( this.timer );
						}
					}
				}
			},
			"mouseenter .ui-menu-item": function( event ) {
				var target = $( event.currentTarget );
				// Remove ui-state-active class from siblings of the newly focused menu item
				// to avoid a jump caused by adjacent elements both having a class with a border
				target.siblings().children( ".ui-state-active" ).removeClass( "ui-state-active" );
				this.focus( event, target );
			},
			mouseleave: "collapseAll",
			"mouseleave .ui-menu": "collapseAll",
			focus: function( event, keepActiveItem ) {
				// If there's already an active item, keep it active
				// If not, activate the first item
				var item = this.active || this.element.children( ".ui-menu-item" ).eq( 0 );

				if ( !keepActiveItem ) {
					this.focus( event, item );
				}
			},
			blur: function( event ) {
				this._delay(function() {
					if ( !$.contains( this.element[0], this.document[0].activeElement ) ) {
						this.collapseAll( event );
					}
				});
			},
			keydown: "_keydown"
		});

		this.refresh();

		// Clicks outside of a menu collapse any open menus
		this._on( this.document, {
			click: function( event ) {
				if ( !$( event.target ).closest( ".ui-menu" ).length ) {
					this.collapseAll( event );
				}

				// Reset the mouseHandled flag
				mouseHandled = false;
			}
		});
	},

	_destroy: function() {
		// Destroy (sub)menus
		this.element
			.removeAttr( "aria-activedescendant" )
			.find( ".ui-menu" ).andSelf()
				.removeClass( "ui-menu ui-widget ui-widget-content ui-corner-all ui-menu-icons" )
				.removeAttr( "role" )
				.removeAttr( "tabIndex" )
				.removeAttr( "aria-labelledby" )
				.removeAttr( "aria-expanded" )
				.removeAttr( "aria-hidden" )
				.removeAttr( "aria-disabled" )
				.removeUniqueId()
				.show();

		// Destroy menu items
		this.element.find( ".ui-menu-item" )
			.removeClass( "ui-menu-item" )
			.removeAttr( "role" )
			.removeAttr( "aria-disabled" )
			.children( "a" )
				.removeUniqueId()
				.removeClass( "ui-corner-all ui-state-hover" )
				.removeAttr( "tabIndex" )
				.removeAttr( "role" )
				.removeAttr( "aria-haspopup" )
				.children().each( function() {
					var elem = $( this );
					if ( elem.data( "ui-menu-submenu-carat" ) ) {
						elem.remove();
					}
				});

		// Destroy menu dividers
		this.element.find( ".ui-menu-divider" ).removeClass( "ui-menu-divider ui-widget-content" );
	},

	_keydown: function( event ) {
		var match, prev, character, skip, regex,
			preventDefault = true;

		function escape( value ) {
			return value.replace( /[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&" );
		}

		switch ( event.keyCode ) {
		case $.ui.keyCode.PAGE_UP:
			this.previousPage( event );
			break;
		case $.ui.keyCode.PAGE_DOWN:
			this.nextPage( event );
			break;
		case $.ui.keyCode.HOME:
			this._move( "first", "first", event );
			break;
		case $.ui.keyCode.END:
			this._move( "last", "last", event );
			break;
		case $.ui.keyCode.UP:
			this.previous( event );
			break;
		case $.ui.keyCode.DOWN:
			this.next( event );
			break;
		case $.ui.keyCode.LEFT:
			this.collapse( event );
			break;
		case $.ui.keyCode.RIGHT:
			if ( this.active && !this.active.is( ".ui-state-disabled" ) ) {
				this.expand( event );
			}
			break;
		case $.ui.keyCode.ENTER:
		case $.ui.keyCode.SPACE:
			this._activate( event );
			break;
		case $.ui.keyCode.ESCAPE:
			this.collapse( event );
			break;
		default:
			preventDefault = false;
			prev = this.previousFilter || "";
			character = String.fromCharCode( event.keyCode );
			skip = false;

			clearTimeout( this.filterTimer );

			if ( character === prev ) {
				skip = true;
			} else {
				character = prev + character;
			}

			regex = new RegExp( "^" + escape( character ), "i" );
			match = this.activeMenu.children( ".ui-menu-item" ).filter(function() {
				return regex.test( $( this ).children( "a" ).text() );
			});
			match = skip && match.index( this.active.next() ) !== -1 ?
				this.active.nextAll( ".ui-menu-item" ) :
				match;

			// If no matches on the current filter, reset to the last character pressed
			// to move down the menu to the first item that starts with that character
			if ( !match.length ) {
				character = String.fromCharCode( event.keyCode );
				regex = new RegExp( "^" + escape( character ), "i" );
				match = this.activeMenu.children( ".ui-menu-item" ).filter(function() {
					return regex.test( $( this ).children( "a" ).text() );
				});
			}

			if ( match.length ) {
				this.focus( event, match );
				if ( match.length > 1 ) {
					this.previousFilter = character;
					this.filterTimer = this._delay(function() {
						delete this.previousFilter;
					}, 1000 );
				} else {
					delete this.previousFilter;
				}
			} else {
				delete this.previousFilter;
			}
		}

		if ( preventDefault ) {
			event.preventDefault();
		}
	},

	_activate: function( event ) {
		if ( !this.active.is( ".ui-state-disabled" ) ) {
			if ( this.active.children( "a[aria-haspopup='true']" ).length ) {
				this.expand( event );
			} else {
				this.select( event );
			}
		}
	},

	refresh: function() {
		// Initialize nested menus
		var menus,
			icon = this.options.icons.submenu,
			submenus = this.element.find( this.options.menus + ":not(.ui-menu)" )
				.addClass( "ui-menu ui-widget ui-widget-content ui-corner-all" )
				.hide()
				.attr({
					role: this.options.role,
					"aria-hidden": "true",
					"aria-expanded": "false"
				});

		// Don't refresh list items that are already adapted
		menus = submenus.add( this.element );

		menus.children( ":not(.ui-menu-item):has(a)" )
			.addClass( "ui-menu-item" )
			.attr( "role", "presentation" )
			.children( "a" )
				.uniqueId()
				.addClass( "ui-corner-all" )
				.attr({
					tabIndex: -1,
					role: this._itemRole()
				});

		// Initialize unlinked menu-items containing spaces and/or dashes only as dividers
		menus.children( ":not(.ui-menu-item)" ).each(function() {
			var item = $( this );
			// hyphen, em dash, en dash
			if ( !/[^\-—–\s]/.test( item.text() ) ) {
				item.addClass( "ui-widget-content ui-menu-divider" );
			}
		});

		// Add aria-disabled attribute to any disabled menu item
		menus.children( ".ui-state-disabled" ).attr( "aria-disabled", "true" );

		submenus.each(function() {
			var menu = $( this ),
				item = menu.prev( "a" ),
				submenuCarat = $( "<span>" )
					.addClass( "ui-menu-icon ui-icon " + icon )
					.data( "ui-menu-submenu-carat", true );

			item
				.attr( "aria-haspopup", "true" )
				.prepend( submenuCarat );
			menu.attr( "aria-labelledby", item.attr( "id" ) );
		});

		// If the active item has been removed, blur the menu
		if ( this.active && !$.contains( this.element[ 0 ], this.active[ 0 ] ) ) {
			this.blur();
		}
	},

	_itemRole: function() {
		return {
			menu: "menuitem",
			listbox: "option"
		}[ this.options.role ];
	},

	focus: function( event, item ) {
		var nested, focused;
		this.blur( event, event && event.type === "focus" );

		this._scrollIntoView( item );

		this.active = item.first();
		focused = this.active.children( "a" ).addClass( "ui-state-focus" );
		// Only update aria-activedescendant if there's a role
		// otherwise we assume focus is managed elsewhere
		if ( this.options.role ) {
			this.element.attr( "aria-activedescendant", focused.attr( "id" ) );
		}

		// Highlight active parent menu item, if any
		this.active
			.parent()
			.closest( ".ui-menu-item" )
			.children( "a:first" )
			.addClass( "ui-state-active" );

		if ( event && event.type === "keydown" ) {
			this._close();
		} else {
			this.timer = this._delay(function() {
				this._close();
			}, this.delay );
		}

		nested = item.children( ".ui-menu" );
		if ( nested.length && ( /^mouse/.test( event.type ) ) ) {
			this._startOpening(nested);
		}
		this.activeMenu = item.parent();

		this._trigger( "focus", event, { item: item } );
	},

	_scrollIntoView: function( item ) {
		var borderTop, paddingTop, offset, scroll, elementHeight, itemHeight;
		if ( this._hasScroll() ) {
			borderTop = parseFloat( $.css( this.activeMenu[0], "borderTopWidth" ) ) || 0;
			paddingTop = parseFloat( $.css( this.activeMenu[0], "paddingTop" ) ) || 0;
			offset = item.offset().top - this.activeMenu.offset().top - borderTop - paddingTop;
			scroll = this.activeMenu.scrollTop();
			elementHeight = this.activeMenu.height();
			itemHeight = item.height();

			if ( offset < 0 ) {
				this.activeMenu.scrollTop( scroll + offset );
			} else if ( offset + itemHeight > elementHeight ) {
				this.activeMenu.scrollTop( scroll + offset - elementHeight + itemHeight );
			}
		}
	},

	blur: function( event, fromFocus ) {
		if ( !fromFocus ) {
			clearTimeout( this.timer );
		}

		if ( !this.active ) {
			return;
		}

		this.active.children( "a" ).removeClass( "ui-state-focus" );
		this.active = null;

		this._trigger( "blur", event, { item: this.active } );
	},

	_startOpening: function( submenu ) {
		clearTimeout( this.timer );

		// Don't open if already open fixes a Firefox bug that caused a .5 pixel
		// shift in the submenu position when mousing over the carat icon
		if ( submenu.attr( "aria-hidden" ) !== "true" ) {
			return;
		}

		this.timer = this._delay(function() {
			this._close();
			this._open( submenu );
		}, this.delay );
	},

	_open: function( submenu ) {
		var position = $.extend({
			of: this.active
		}, this.options.position );

		clearTimeout( this.timer );
		this.element.find( ".ui-menu" ).not( submenu.parents( ".ui-menu" ) )
			.hide()
			.attr( "aria-hidden", "true" );

		submenu
			.show()
			.removeAttr( "aria-hidden" )
			.attr( "aria-expanded", "true" )
			.position( position );
	},

	collapseAll: function( event, all ) {
		clearTimeout( this.timer );
		this.timer = this._delay(function() {
			// If we were passed an event, look for the submenu that contains the event
			var currentMenu = all ? this.element :
				$( event && event.target ).closest( this.element.find( ".ui-menu" ) );

			// If we found no valid submenu ancestor, use the main menu to close all sub menus anyway
			if ( !currentMenu.length ) {
				currentMenu = this.element;
			}

			this._close( currentMenu );

			this.blur( event );
			this.activeMenu = currentMenu;
		}, this.delay );
	},

	// With no arguments, closes the currently active menu - if nothing is active
	// it closes all menus.  If passed an argument, it will search for menus BELOW
	_close: function( startMenu ) {
		if ( !startMenu ) {
			startMenu = this.active ? this.active.parent() : this.element;
		}

		startMenu
			.find( ".ui-menu" )
				.hide()
				.attr( "aria-hidden", "true" )
				.attr( "aria-expanded", "false" )
			.end()
			.find( "a.ui-state-active" )
				.removeClass( "ui-state-active" );
	},

	collapse: function( event ) {
		var newItem = this.active &&
			this.active.parent().closest( ".ui-menu-item", this.element );
		if ( newItem && newItem.length ) {
			this._close();
			this.focus( event, newItem );
		}
	},

	expand: function( event ) {
		var newItem = this.active &&
			this.active
				.children( ".ui-menu " )
				.children( ".ui-menu-item" )
				.first();

		if ( newItem && newItem.length ) {
			this._open( newItem.parent() );

			// Delay so Firefox will not hide activedescendant change in expanding submenu from AT
			this._delay(function() {
				this.focus( event, newItem );
			});
		}
	},

	next: function( event ) {
		this._move( "next", "first", event );
	},

	previous: function( event ) {
		this._move( "prev", "last", event );
	},

	isFirstItem: function() {
		return this.active && !this.active.prevAll( ".ui-menu-item" ).length;
	},

	isLastItem: function() {
		return this.active && !this.active.nextAll( ".ui-menu-item" ).length;
	},

	_move: function( direction, filter, event ) {
		var next;
		if ( this.active ) {
			if ( direction === "first" || direction === "last" ) {
				next = this.active
					[ direction === "first" ? "prevAll" : "nextAll" ]( ".ui-menu-item" )
					.eq( -1 );
			} else {
				next = this.active
					[ direction + "All" ]( ".ui-menu-item" )
					.eq( 0 );
			}
		}
		if ( !next || !next.length || !this.active ) {
			next = this.activeMenu.children( ".ui-menu-item" )[ filter ]();
		}

		this.focus( event, next );
	},

	nextPage: function( event ) {
		var item, base, height;

		if ( !this.active ) {
			this.next( event );
			return;
		}
		if ( this.isLastItem() ) {
			return;
		}
		if ( this._hasScroll() ) {
			base = this.active.offset().top;
			height = this.element.height();
			this.active.nextAll( ".ui-menu-item" ).each(function() {
				item = $( this );
				return item.offset().top - base - height < 0;
			});

			this.focus( event, item );
		} else {
			this.focus( event, this.activeMenu.children( ".ui-menu-item" )
				[ !this.active ? "first" : "last" ]() );
		}
	},

	previousPage: function( event ) {
		var item, base, height;
		if ( !this.active ) {
			this.next( event );
			return;
		}
		if ( this.isFirstItem() ) {
			return;
		}
		if ( this._hasScroll() ) {
			base = this.active.offset().top;
			height = this.element.height();
			this.active.prevAll( ".ui-menu-item" ).each(function() {
				item = $( this );
				return item.offset().top - base + height > 0;
			});

			this.focus( event, item );
		} else {
			this.focus( event, this.activeMenu.children( ".ui-menu-item" ).first() );
		}
	},

	_hasScroll: function() {
		return this.element.outerHeight() < this.element.prop( "scrollHeight" );
	},

	select: function( event ) {
		// TODO: It should never be possible to not have an active item at this
		// point, but the tests don't trigger mouseenter before click.
		this.active = this.active || $( event.target ).closest( ".ui-menu-item" );
		var ui = { item: this.active };
		if ( !this.active.has( ".ui-menu" ).length ) {
			this.collapseAll( event, true );
		}
		this._trigger( "select", event, ui );
	}
});

}( jQuery ));
(function( $, undefined ) {

$.widget( "ui.progressbar", {
	version: "1.9.0",
	options: {
		value: 0,
		max: 100
	},

	min: 0,

	_create: function() {
		this.element
			.addClass( "ui-progressbar ui-widget ui-widget-content ui-corner-all" )
			.attr({
				role: "progressbar",
				"aria-valuemin": this.min,
				"aria-valuemax": this.options.max,
				"aria-valuenow": this._value()
			});

		this.valueDiv = $( "<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>" )
			.appendTo( this.element );

		this.oldValue = this._value();
		this._refreshValue();
	},

	_destroy: function() {
		this.element
			.removeClass( "ui-progressbar ui-widget ui-widget-content ui-corner-all" )
			.removeAttr( "role" )
			.removeAttr( "aria-valuemin" )
			.removeAttr( "aria-valuemax" )
			.removeAttr( "aria-valuenow" );

		this.valueDiv.remove();
	},

	value: function( newValue ) {
		if ( newValue === undefined ) {
			return this._value();
		}

		this._setOption( "value", newValue );
		return this;
	},

	_setOption: function( key, value ) {
		if ( key === "value" ) {
			this.options.value = value;
			this._refreshValue();
			if ( this._value() === this.options.max ) {
				this._trigger( "complete" );
			}
		}

		this._super( key, value );
	},

	_value: function() {
		var val = this.options.value;
		// normalize invalid value
		if ( typeof val !== "number" ) {
			val = 0;
		}
		return Math.min( this.options.max, Math.max( this.min, val ) );
	},

	_percentage: function() {
		return 100 * this._value() / this.options.max;
	},

	_refreshValue: function() {
		var value = this.value(),
			percentage = this._percentage();

		if ( this.oldValue !== value ) {
			this.oldValue = value;
			this._trigger( "change" );
		}

		this.valueDiv
			.toggle( value > this.min )
			.toggleClass( "ui-corner-right", value === this.options.max )
			.width( percentage.toFixed(0) + "%" );
		this.element.attr( "aria-valuenow", value );
	}
});

})( jQuery );
(function( $, undefined ) {

// number of pages in a slider
// (how many times can you page up/down to go through the whole range)
var numPages = 5;

$.widget( "ui.slider", $.ui.mouse, {
	version: "1.9.0",
	widgetEventPrefix: "slide",

	options: {
		animate: false,
		distance: 0,
		max: 100,
		min: 0,
		orientation: "horizontal",
		range: false,
		step: 1,
		value: 0,
		values: null
	},

	_create: function() {
		var i,
			o = this.options,
			existingHandles = this.element.find( ".ui-slider-handle" ).addClass( "ui-state-default ui-corner-all" ),
			handle = "<a class='ui-slider-handle ui-state-default ui-corner-all' href='#'></a>",
			handleCount = ( o.values && o.values.length ) || 1,
			handles = [];

		this._keySliding = false;
		this._mouseSliding = false;
		this._animateOff = true;
		this._handleIndex = null;
		this._detectOrientation();
		this._mouseInit();

		this.element
			.addClass( "ui-slider" +
				" ui-slider-" + this.orientation +
				" ui-widget" +
				" ui-widget-content" +
				" ui-corner-all" +
				( o.disabled ? " ui-slider-disabled ui-disabled" : "" ) );

		this.range = $([]);

		if ( o.range ) {
			if ( o.range === true ) {
				if ( !o.values ) {
					o.values = [ this._valueMin(), this._valueMin() ];
				}
				if ( o.values.length && o.values.length !== 2 ) {
					o.values = [ o.values[0], o.values[0] ];
				}
			}

			this.range = $( "<div></div>" )
				.appendTo( this.element )
				.addClass( "ui-slider-range" +
				// note: this isn't the most fittingly semantic framework class for this element,
				// but worked best visually with a variety of themes
				" ui-widget-header" +
				( ( o.range === "min" || o.range === "max" ) ? " ui-slider-range-" + o.range : "" ) );
		}

		for ( i = existingHandles.length; i < handleCount; i++ ) {
			handles.push( handle );
		}

		this.handles = existingHandles.add( $( handles.join( "" ) ).appendTo( this.element ) );

		this.handle = this.handles.eq( 0 );

		this.handles.add( this.range ).filter( "a" )
			.click(function( event ) {
				event.preventDefault();
			})
			.mouseenter(function() {
				if ( !o.disabled ) {
					$( this ).addClass( "ui-state-hover" );
				}
			})
			.mouseleave(function() {
				$( this ).removeClass( "ui-state-hover" );
			})
			.focus(function() {
				if ( !o.disabled ) {
					$( ".ui-slider .ui-state-focus" ).removeClass( "ui-state-focus" );
					$( this ).addClass( "ui-state-focus" );
				} else {
					$( this ).blur();
				}
			})
			.blur(function() {
				$( this ).removeClass( "ui-state-focus" );
			});

		this.handles.each(function( i ) {
			$( this ).data( "ui-slider-handle-index", i );
		});

		this._on( this.handles, {
			keydown: function( event ) {
				var allowed, curVal, newVal, step,
					index = $( event.target ).data( "ui-slider-handle-index" );

				switch ( event.keyCode ) {
					case $.ui.keyCode.HOME:
					case $.ui.keyCode.END:
					case $.ui.keyCode.PAGE_UP:
					case $.ui.keyCode.PAGE_DOWN:
					case $.ui.keyCode.UP:
					case $.ui.keyCode.RIGHT:
					case $.ui.keyCode.DOWN:
					case $.ui.keyCode.LEFT:
						event.preventDefault();
						if ( !this._keySliding ) {
							this._keySliding = true;
							$( event.target ).addClass( "ui-state-active" );
							allowed = this._start( event, index );
							if ( allowed === false ) {
								return;
							}
						}
						break;
				}

				step = this.options.step;
				if ( this.options.values && this.options.values.length ) {
					curVal = newVal = this.values( index );
				} else {
					curVal = newVal = this.value();
				}

				switch ( event.keyCode ) {
					case $.ui.keyCode.HOME:
						newVal = this._valueMin();
						break;
					case $.ui.keyCode.END:
						newVal = this._valueMax();
						break;
					case $.ui.keyCode.PAGE_UP:
						newVal = this._trimAlignValue( curVal + ( (this._valueMax() - this._valueMin()) / numPages ) );
						break;
					case $.ui.keyCode.PAGE_DOWN:
						newVal = this._trimAlignValue( curVal - ( (this._valueMax() - this._valueMin()) / numPages ) );
						break;
					case $.ui.keyCode.UP:
					case $.ui.keyCode.RIGHT:
						if ( curVal === this._valueMax() ) {
							return;
						}
						newVal = this._trimAlignValue( curVal + step );
						break;
					case $.ui.keyCode.DOWN:
					case $.ui.keyCode.LEFT:
						if ( curVal === this._valueMin() ) {
							return;
						}
						newVal = this._trimAlignValue( curVal - step );
						break;
				}

				this._slide( event, index, newVal );
			},
			keyup: function( event ) {
				var index = $( event.target ).data( "ui-slider-handle-index" );

				if ( this._keySliding ) {
					this._keySliding = false;
					this._stop( event, index );
					this._change( event, index );
					$( event.target ).removeClass( "ui-state-active" );
				}
			}
		});

		this._refreshValue();

		this._animateOff = false;
	},

	_destroy: function() {
		this.handles.remove();
		this.range.remove();

		this.element
			.removeClass( "ui-slider" +
				" ui-slider-horizontal" +
				" ui-slider-vertical" +
				" ui-slider-disabled" +
				" ui-widget" +
				" ui-widget-content" +
				" ui-corner-all" );

		this._mouseDestroy();
	},

	_mouseCapture: function( event ) {
		var position, normValue, distance, closestHandle, index, allowed, offset, mouseOverHandle,
			that = this,
			o = this.options;

		if ( o.disabled ) {
			return false;
		}

		this.elementSize = {
			width: this.element.outerWidth(),
			height: this.element.outerHeight()
		};
		this.elementOffset = this.element.offset();

		position = { x: event.pageX, y: event.pageY };
		normValue = this._normValueFromMouse( position );
		distance = this._valueMax() - this._valueMin() + 1;
		this.handles.each(function( i ) {
			var thisDistance = Math.abs( normValue - that.values(i) );
			if ( distance > thisDistance ) {
				distance = thisDistance;
				closestHandle = $( this );
				index = i;
			}
		});

		// workaround for bug #3736 (if both handles of a range are at 0,
		// the first is always used as the one with least distance,
		// and moving it is obviously prevented by preventing negative ranges)
		if( o.range === true && this.values(1) === o.min ) {
			index += 1;
			closestHandle = $( this.handles[index] );
		}

		allowed = this._start( event, index );
		if ( allowed === false ) {
			return false;
		}
		this._mouseSliding = true;

		this._handleIndex = index;

		closestHandle
			.addClass( "ui-state-active" )
			.focus();

		offset = closestHandle.offset();
		mouseOverHandle = !$( event.target ).parents().andSelf().is( ".ui-slider-handle" );
		this._clickOffset = mouseOverHandle ? { left: 0, top: 0 } : {
			left: event.pageX - offset.left - ( closestHandle.width() / 2 ),
			top: event.pageY - offset.top -
				( closestHandle.height() / 2 ) -
				( parseInt( closestHandle.css("borderTopWidth"), 10 ) || 0 ) -
				( parseInt( closestHandle.css("borderBottomWidth"), 10 ) || 0) +
				( parseInt( closestHandle.css("marginTop"), 10 ) || 0)
		};

		if ( !this.handles.hasClass( "ui-state-hover" ) ) {
			this._slide( event, index, normValue );
		}
		this._animateOff = true;
		return true;
	},

	_mouseStart: function( event ) {
		return true;
	},

	_mouseDrag: function( event ) {
		var position = { x: event.pageX, y: event.pageY },
			normValue = this._normValueFromMouse( position );

		this._slide( event, this._handleIndex, normValue );

		return false;
	},

	_mouseStop: function( event ) {
		this.handles.removeClass( "ui-state-active" );
		this._mouseSliding = false;

		this._stop( event, this._handleIndex );
		this._change( event, this._handleIndex );

		this._handleIndex = null;
		this._clickOffset = null;
		this._animateOff = false;

		return false;
	},

	_detectOrientation: function() {
		this.orientation = ( this.options.orientation === "vertical" ) ? "vertical" : "horizontal";
	},

	_normValueFromMouse: function( position ) {
		var pixelTotal,
			pixelMouse,
			percentMouse,
			valueTotal,
			valueMouse;

		if ( this.orientation === "horizontal" ) {
			pixelTotal = this.elementSize.width;
			pixelMouse = position.x - this.elementOffset.left - ( this._clickOffset ? this._clickOffset.left : 0 );
		} else {
			pixelTotal = this.elementSize.height;
			pixelMouse = position.y - this.elementOffset.top - ( this._clickOffset ? this._clickOffset.top : 0 );
		}

		percentMouse = ( pixelMouse / pixelTotal );
		if ( percentMouse > 1 ) {
			percentMouse = 1;
		}
		if ( percentMouse < 0 ) {
			percentMouse = 0;
		}
		if ( this.orientation === "vertical" ) {
			percentMouse = 1 - percentMouse;
		}

		valueTotal = this._valueMax() - this._valueMin();
		valueMouse = this._valueMin() + percentMouse * valueTotal;

		return this._trimAlignValue( valueMouse );
	},

	_start: function( event, index ) {
		var uiHash = {
			handle: this.handles[ index ],
			value: this.value()
		};
		if ( this.options.values && this.options.values.length ) {
			uiHash.value = this.values( index );
			uiHash.values = this.values();
		}
		return this._trigger( "start", event, uiHash );
	},

	_slide: function( event, index, newVal ) {
		var otherVal,
			newValues,
			allowed;

		if ( this.options.values && this.options.values.length ) {
			otherVal = this.values( index ? 0 : 1 );

			if ( ( this.options.values.length === 2 && this.options.range === true ) &&
					( ( index === 0 && newVal > otherVal) || ( index === 1 && newVal < otherVal ) )
				) {
				newVal = otherVal;
			}

			if ( newVal !== this.values( index ) ) {
				newValues = this.values();
				newValues[ index ] = newVal;
				// A slide can be canceled by returning false from the slide callback
				allowed = this._trigger( "slide", event, {
					handle: this.handles[ index ],
					value: newVal,
					values: newValues
				} );
				otherVal = this.values( index ? 0 : 1 );
				if ( allowed !== false ) {
					this.values( index, newVal, true );
				}
			}
		} else {
			if ( newVal !== this.value() ) {
				// A slide can be canceled by returning false from the slide callback
				allowed = this._trigger( "slide", event, {
					handle: this.handles[ index ],
					value: newVal
				} );
				if ( allowed !== false ) {
					this.value( newVal );
				}
			}
		}
	},

	_stop: function( event, index ) {
		var uiHash = {
			handle: this.handles[ index ],
			value: this.value()
		};
		if ( this.options.values && this.options.values.length ) {
			uiHash.value = this.values( index );
			uiHash.values = this.values();
		}

		this._trigger( "stop", event, uiHash );
	},

	_change: function( event, index ) {
		if ( !this._keySliding && !this._mouseSliding ) {
			var uiHash = {
				handle: this.handles[ index ],
				value: this.value()
			};
			if ( this.options.values && this.options.values.length ) {
				uiHash.value = this.values( index );
				uiHash.values = this.values();
			}

			this._trigger( "change", event, uiHash );
		}
	},

	value: function( newValue ) {
		if ( arguments.length ) {
			this.options.value = this._trimAlignValue( newValue );
			this._refreshValue();
			this._change( null, 0 );
			return;
		}

		return this._value();
	},

	values: function( index, newValue ) {
		var vals,
			newValues,
			i;

		if ( arguments.length > 1 ) {
			this.options.values[ index ] = this._trimAlignValue( newValue );
			this._refreshValue();
			this._change( null, index );
			return;
		}

		if ( arguments.length ) {
			if ( $.isArray( arguments[ 0 ] ) ) {
				vals = this.options.values;
				newValues = arguments[ 0 ];
				for ( i = 0; i < vals.length; i += 1 ) {
					vals[ i ] = this._trimAlignValue( newValues[ i ] );
					this._change( null, i );
				}
				this._refreshValue();
			} else {
				if ( this.options.values && this.options.values.length ) {
					return this._values( index );
				} else {
					return this.value();
				}
			}
		} else {
			return this._values();
		}
	},

	_setOption: function( key, value ) {
		var i,
			valsLength = 0;

		if ( $.isArray( this.options.values ) ) {
			valsLength = this.options.values.length;
		}

		$.Widget.prototype._setOption.apply( this, arguments );

		switch ( key ) {
			case "disabled":
				if ( value ) {
					this.handles.filter( ".ui-state-focus" ).blur();
					this.handles.removeClass( "ui-state-hover" );
					this.handles.prop( "disabled", true );
					this.element.addClass( "ui-disabled" );
				} else {
					this.handles.prop( "disabled", false );
					this.element.removeClass( "ui-disabled" );
				}
				break;
			case "orientation":
				this._detectOrientation();
				this.element
					.removeClass( "ui-slider-horizontal ui-slider-vertical" )
					.addClass( "ui-slider-" + this.orientation );
				this._refreshValue();
				break;
			case "value":
				this._animateOff = true;
				this._refreshValue();
				this._change( null, 0 );
				this._animateOff = false;
				break;
			case "values":
				this._animateOff = true;
				this._refreshValue();
				for ( i = 0; i < valsLength; i += 1 ) {
					this._change( null, i );
				}
				this._animateOff = false;
				break;
		}
	},

	//internal value getter
	// _value() returns value trimmed by min and max, aligned by step
	_value: function() {
		var val = this.options.value;
		val = this._trimAlignValue( val );

		return val;
	},

	//internal values getter
	// _values() returns array of values trimmed by min and max, aligned by step
	// _values( index ) returns single value trimmed by min and max, aligned by step
	_values: function( index ) {
		var val,
			vals,
			i;

		if ( arguments.length ) {
			val = this.options.values[ index ];
			val = this._trimAlignValue( val );

			return val;
		} else {
			// .slice() creates a copy of the array
			// this copy gets trimmed by min and max and then returned
			vals = this.options.values.slice();
			for ( i = 0; i < vals.length; i+= 1) {
				vals[ i ] = this._trimAlignValue( vals[ i ] );
			}

			return vals;
		}
	},

	// returns the step-aligned value that val is closest to, between (inclusive) min and max
	_trimAlignValue: function( val ) {
		if ( val <= this._valueMin() ) {
			return this._valueMin();
		}
		if ( val >= this._valueMax() ) {
			return this._valueMax();
		}
		var step = ( this.options.step > 0 ) ? this.options.step : 1,
			valModStep = (val - this._valueMin()) % step,
			alignValue = val - valModStep;

		if ( Math.abs(valModStep) * 2 >= step ) {
			alignValue += ( valModStep > 0 ) ? step : ( -step );
		}

		// Since JavaScript has problems with large floats, round
		// the final value to 5 digits after the decimal point (see #4124)
		return parseFloat( alignValue.toFixed(5) );
	},

	_valueMin: function() {
		return this.options.min;
	},

	_valueMax: function() {
		return this.options.max;
	},

	_refreshValue: function() {
		var lastValPercent, valPercent, value, valueMin, valueMax,
			oRange = this.options.range,
			o = this.options,
			that = this,
			animate = ( !this._animateOff ) ? o.animate : false,
			_set = {};

		if ( this.options.values && this.options.values.length ) {
			this.handles.each(function( i, j ) {
				valPercent = ( that.values(i) - that._valueMin() ) / ( that._valueMax() - that._valueMin() ) * 100;
				_set[ that.orientation === "horizontal" ? "left" : "bottom" ] = valPercent + "%";
				$( this ).stop( 1, 1 )[ animate ? "animate" : "css" ]( _set, o.animate );
				if ( that.options.range === true ) {
					if ( that.orientation === "horizontal" ) {
						if ( i === 0 ) {
							that.range.stop( 1, 1 )[ animate ? "animate" : "css" ]( { left: valPercent + "%" }, o.animate );
						}
						if ( i === 1 ) {
							that.range[ animate ? "animate" : "css" ]( { width: ( valPercent - lastValPercent ) + "%" }, { queue: false, duration: o.animate } );
						}
					} else {
						if ( i === 0 ) {
							that.range.stop( 1, 1 )[ animate ? "animate" : "css" ]( { bottom: ( valPercent ) + "%" }, o.animate );
						}
						if ( i === 1 ) {
							that.range[ animate ? "animate" : "css" ]( { height: ( valPercent - lastValPercent ) + "%" }, { queue: false, duration: o.animate } );
						}
					}
				}
				lastValPercent = valPercent;
			});
		} else {
			value = this.value();
			valueMin = this._valueMin();
			valueMax = this._valueMax();
			valPercent = ( valueMax !== valueMin ) ?
					( value - valueMin ) / ( valueMax - valueMin ) * 100 :
					0;
			_set[ this.orientation === "horizontal" ? "left" : "bottom" ] = valPercent + "%";
			this.handle.stop( 1, 1 )[ animate ? "animate" : "css" ]( _set, o.animate );

			if ( oRange === "min" && this.orientation === "horizontal" ) {
				this.range.stop( 1, 1 )[ animate ? "animate" : "css" ]( { width: valPercent + "%" }, o.animate );
			}
			if ( oRange === "max" && this.orientation === "horizontal" ) {
				this.range[ animate ? "animate" : "css" ]( { width: ( 100 - valPercent ) + "%" }, { queue: false, duration: o.animate } );
			}
			if ( oRange === "min" && this.orientation === "vertical" ) {
				this.range.stop( 1, 1 )[ animate ? "animate" : "css" ]( { height: valPercent + "%" }, o.animate );
			}
			if ( oRange === "max" && this.orientation === "vertical" ) {
				this.range[ animate ? "animate" : "css" ]( { height: ( 100 - valPercent ) + "%" }, { queue: false, duration: o.animate } );
			}
		}
	}

});

}(jQuery));
(function( $ ) {

function modifier( fn ) {
	return function() {
		var previous = this.element.val();
		fn.apply( this, arguments );
		this._refresh();
		if ( previous !== this.element.val() ) {
			this._trigger( "change" );
		}
	};
}

$.widget( "ui.spinner", {
	version: "1.9.0",
	defaultElement: "<input>",
	widgetEventPrefix: "spin",
	options: {
		culture: null,
		icons: {
			down: "ui-icon-triangle-1-s",
			up: "ui-icon-triangle-1-n"
		},
		incremental: true,
		max: null,
		min: null,
		numberFormat: null,
		page: 10,
		step: 1,

		change: null,
		spin: null,
		start: null,
		stop: null
	},

	_create: function() {
		// handle string values that need to be parsed
		this._setOption( "max", this.options.max );
		this._setOption( "min", this.options.min );
		this._setOption( "step", this.options.step );

		// format the value, but don't constrain
		this._value( this.element.val(), true );

		this._draw();
		this._on( this._events );
		this._refresh();

		// turning off autocomplete prevents the browser from remembering the
		// value when navigating through history, so we re-enable autocomplete
		// if the page is unloaded before the widget is destroyed. #7790
		this._on( this.window, {
			beforeunload: function() {
				this.element.removeAttr( "autocomplete" );
			}
		});
	},

	_getCreateOptions: function() {
		var options = {},
			element = this.element;

		$.each( [ "min", "max", "step" ], function( i, option ) {
			var value = element.attr( option );
			if ( value !== undefined && value.length ) {
				options[ option ] = value;
			}
		});

		return options;
	},

	_events: {
		keydown: function( event ) {
			if ( this._start( event ) && this._keydown( event ) ) {
				event.preventDefault();
			}
		},
		keyup: "_stop",
		focus: function() {
			this.uiSpinner.addClass( "ui-state-active" );
			this.previous = this.element.val();
		},
		blur: function( event ) {
			if ( this.cancelBlur ) {
				delete this.cancelBlur;
				return;
			}

			this._refresh();
			this.uiSpinner.removeClass( "ui-state-active" );
			if ( this.previous !== this.element.val() ) {
				this._trigger( "change", event );
			}
		},
		mousewheel: function( event, delta ) {
			if ( !delta ) {
				return;
			}
			if ( !this.spinning && !this._start( event ) ) {
				return false;
			}

			this._spin( (delta > 0 ? 1 : -1) * this.options.step, event );
			clearTimeout( this.mousewheelTimer );
			this.mousewheelTimer = this._delay(function() {
				if ( this.spinning ) {
					this._stop( event );
				}
			}, 100 );
			event.preventDefault();
		},
		"mousedown .ui-spinner-button": function( event ) {
			var previous;

			// We never want the buttons to have focus; whenever the user is
			// interacting with the spinner, the focus should be on the input.
			// If the input is focused then this.previous is properly set from
			// when the input first received focus. If the input is not focused
			// then we need to set this.previous based on the value before spinning.
			previous = this.element[0] === this.document[0].activeElement ?
				this.previous : this.element.val();
			function checkFocus() {
				var isActive = this.element[0] === this.document[0].activeElement;
				if ( !isActive ) {
					this.element.focus();
					this.previous = previous;
					// support: IE
					// IE sets focus asynchronously, so we need to check if focus
					// moved off of the input because the user clicked on the button.
					this._delay(function() {
						this.previous = previous;
					});
				}
			}

			// ensure focus is on (or stays on) the text field
			event.preventDefault();
			checkFocus.call( this );

			// support: IE
			// IE doesn't prevent moving focus even with event.preventDefault()
			// so we set a flag to know when we should ignore the blur event
			// and check (again) if focus moved off of the input.
			this.cancelBlur = true;
			this._delay(function() {
				delete this.cancelBlur;
				checkFocus.call( this );
			});

			if ( this._start( event ) === false ) {
				return;
			}

			this._repeat( null, $( event.currentTarget ).hasClass( "ui-spinner-up" ) ? 1 : -1, event );
		},
		"mouseup .ui-spinner-button": "_stop",
		"mouseenter .ui-spinner-button": function( event ) {
			// button will add ui-state-active if mouse was down while mouseleave and kept down
			if ( !$( event.currentTarget ).hasClass( "ui-state-active" ) ) {
				return;
			}

			if ( this._start( event ) === false ) {
				return false;
			}
			this._repeat( null, $( event.currentTarget ).hasClass( "ui-spinner-up" ) ? 1 : -1, event );
		},
		// TODO: do we really want to consider this a stop?
		// shouldn't we just stop the repeater and wait until mouseup before
		// we trigger the stop event?
		"mouseleave .ui-spinner-button": "_stop"
	},

	_draw: function() {
		var uiSpinner = this.uiSpinner = this.element
			.addClass( "ui-spinner-input" )
			.attr( "autocomplete", "off" )
			.wrap( this._uiSpinnerHtml() )
			.parent()
				// add buttons
				.append( this._buttonHtml() );
		this._hoverable( uiSpinner );

		this.element.attr( "role", "spinbutton" );

		// button bindings
		this.buttons = uiSpinner.find( ".ui-spinner-button" )
			.attr( "tabIndex", -1 )
			.button()
			.removeClass( "ui-corner-all" );

		// IE 6 doesn't understand height: 50% for the buttons
		// unless the wrapper has an explicit height
		if ( this.buttons.height() > Math.ceil( uiSpinner.height() * 0.5 ) &&
				uiSpinner.height() > 0 ) {
			uiSpinner.height( uiSpinner.height() );
		}

		// disable spinner if element was already disabled
		if ( this.options.disabled ) {
			this.disable();
		}
	},

	_keydown: function( event ) {
		var options = this.options,
			keyCode = $.ui.keyCode;

		switch ( event.keyCode ) {
		case keyCode.UP:
			this._repeat( null, 1, event );
			return true;
		case keyCode.DOWN:
			this._repeat( null, -1, event );
			return true;
		case keyCode.PAGE_UP:
			this._repeat( null, options.page, event );
			return true;
		case keyCode.PAGE_DOWN:
			this._repeat( null, -options.page, event );
			return true;
		}

		return false;
	},

	_uiSpinnerHtml: function() {
		return "<span class='ui-spinner ui-state-default ui-widget ui-widget-content ui-corner-all'></span>";
	},

	_buttonHtml: function() {
		return "" +
			"<a class='ui-spinner-button ui-spinner-up ui-corner-tr'>" +
				"<span class='ui-icon " + this.options.icons.up + "'>&#9650;</span>" +
			"</a>" +
			"<a class='ui-spinner-button ui-spinner-down ui-corner-br'>" +
				"<span class='ui-icon " + this.options.icons.down + "'>&#9660;</span>" +
			"</a>";
	},

	_start: function( event ) {
		if ( !this.spinning && this._trigger( "start", event ) === false ) {
			return false;
		}

		if ( !this.counter ) {
			this.counter = 1;
		}
		this.spinning = true;
		return true;
	},

	_repeat: function( i, steps, event ) {
		i = i || 500;

		clearTimeout( this.timer );
		this.timer = this._delay(function() {
			this._repeat( 40, steps, event );
		}, i );

		this._spin( steps * this.options.step, event );
	},

	_spin: function( step, event ) {
		var value = this.value() || 0;

		if ( !this.counter ) {
			this.counter = 1;
		}

		value = this._adjustValue( value + step * this._increment( this.counter ) );

		if ( !this.spinning || this._trigger( "spin", event, { value: value } ) !== false) {
			this._value( value );
			this.counter++;
		}
	},

	_increment: function( i ) {
		var incremental = this.options.incremental;

		if ( incremental ) {
			return $.isFunction( incremental ) ?
				incremental( i ) :
				Math.floor( i*i*i/50000 - i*i/500 + 17*i/200 + 1 );
		}

		return 1;
	},

	_precision: function() {
		var precision = this._precisionOf( this.options.step );
		if ( this.options.min !== null ) {
			precision = Math.max( precision, this._precisionOf( this.options.min ) );
		}
		return precision;
	},

	_precisionOf: function( num ) {
		var str = num.toString(),
			decimal = str.indexOf( "." );
		return decimal === -1 ? 0 : str.length - decimal - 1;
	},

	_adjustValue: function( value ) {
		var base, aboveMin,
			options = this.options;

		// make sure we're at a valid step
		// - find out where we are relative to the base (min or 0)
		base = options.min !== null ? options.min : 0;
		aboveMin = value - base;
		// - round to the nearest step
		aboveMin = Math.round(aboveMin / options.step) * options.step;
		// - rounding is based on 0, so adjust back to our base
		value = base + aboveMin;

		// fix precision from bad JS floating point math
		value = parseFloat( value.toFixed( this._precision() ) );

		// clamp the value
		if ( options.max !== null && value > options.max) {
			return options.max;
		}
		if ( options.min !== null && value < options.min ) {
			return options.min;
		}

		return value;
	},

	_stop: function( event ) {
		if ( !this.spinning ) {
			return;
		}

		clearTimeout( this.timer );
		clearTimeout( this.mousewheelTimer );
		this.counter = 0;
		this.spinning = false;
		this._trigger( "stop", event );
	},

	_setOption: function( key, value ) {
		if ( key === "culture" || key === "numberFormat" ) {
			var prevValue = this._parse( this.element.val() );
			this.options[ key ] = value;
			this.element.val( this._format( prevValue ) );
			return;
		}

		if ( key === "max" || key === "min" || key === "step" ) {
			if ( typeof value === "string" ) {
				value = this._parse( value );
			}
		}

		this._super( key, value );

		if ( key === "disabled" ) {
			if ( value ) {
				this.element.prop( "disabled", true );
				this.buttons.button( "disable" );
			} else {
				this.element.prop( "disabled", false );
				this.buttons.button( "enable" );
			}
		}
	},

	_setOptions: modifier(function( options ) {
		this._super( options );
		this._value( this.element.val() );
	}),

	_parse: function( val ) {
		if ( typeof val === "string" && val !== "" ) {
			val = window.Globalize && this.options.numberFormat ?
				Globalize.parseFloat( val, 10, this.options.culture ) : +val;
		}
		return val === "" || isNaN( val ) ? null : val;
	},

	_format: function( value ) {
		if ( value === "" ) {
			return "";
		}
		return window.Globalize && this.options.numberFormat ?
			Globalize.format( value, this.options.numberFormat, this.options.culture ) :
			value;
	},

	_refresh: function() {
		this.element.attr({
			"aria-valuemin": this.options.min,
			"aria-valuemax": this.options.max,
			// TODO: what should we do with values that can't be parsed?
			"aria-valuenow": this._parse( this.element.val() )
		});
	},

	// update the value without triggering change
	_value: function( value, allowAny ) {
		var parsed;
		if ( value !== "" ) {
			parsed = this._parse( value );
			if ( parsed !== null ) {
				if ( !allowAny ) {
					parsed = this._adjustValue( parsed );
				}
				value = this._format( parsed );
			}
		}
		this.element.val( value );
		this._refresh();
	},

	_destroy: function() {
		this.element
			.removeClass( "ui-spinner-input" )
			.prop( "disabled", false )
			.removeAttr( "autocomplete" )
			.removeAttr( "role" )
			.removeAttr( "aria-valuemin" )
			.removeAttr( "aria-valuemax" )
			.removeAttr( "aria-valuenow" );
		this.uiSpinner.replaceWith( this.element );
	},

	stepUp: modifier(function( steps ) {
		this._stepUp( steps );
	}),
	_stepUp: function( steps ) {
		this._spin( (steps || 1) * this.options.step );
	},

	stepDown: modifier(function( steps ) {
		this._stepDown( steps );
	}),
	_stepDown: function( steps ) {
		this._spin( (steps || 1) * -this.options.step );
	},

	pageUp: modifier(function( pages ) {
		this._stepUp( (pages || 1) * this.options.page );
	}),

	pageDown: modifier(function( pages ) {
		this._stepDown( (pages || 1) * this.options.page );
	}),

	value: function( newVal ) {
		if ( !arguments.length ) {
			return this._parse( this.element.val() );
		}
		modifier( this._value ).call( this, newVal );
	},

	widget: function() {
		return this.uiSpinner;
	}
});

}( jQuery ) );
(function( $, undefined ) {

var tabId = 0,
	rhash = /#.*$/;

function getNextTabId() {
	return ++tabId;
}

function isLocal( anchor ) {
	// clone the node to work around IE 6 not normalizing the href property
	// if it's manually set, i.e., a.href = "#foo" kills the normalization
	anchor = anchor.cloneNode( false );
	return anchor.hash.length > 1 &&
		anchor.href.replace( rhash, "" ) === location.href.replace( rhash, "" );
}

$.widget( "ui.tabs", {
	version: "1.9.0",
	delay: 300,
	options: {
		active: null,
		collapsible: false,
		event: "click",
		heightStyle: "content",
		hide: null,
		show: null,

		// callbacks
		activate: null,
		beforeActivate: null,
		beforeLoad: null,
		load: null
	},

	_create: function() {
		var panel,
			that = this,
			options = this.options,
			active = options.active;

		this.running = false;

		this.element
			.addClass( "ui-tabs ui-widget ui-widget-content ui-corner-all" )
			.toggleClass( "ui-tabs-collapsible", options.collapsible )
			// Prevent users from focusing disabled tabs via click
			.delegate( ".ui-tabs-nav > li", "mousedown" + this.eventNamespace, function( event ) {
				if ( $( this ).is( ".ui-state-disabled" ) ) {
					event.preventDefault();
				}
			})
			// support: IE <9
			// Preventing the default action in mousedown doesn't prevent IE
			// from focusing the element, so if the anchor gets focused, blur.
			// We don't have to worry about focusing the previously focused
			// element since clicking on a non-focusable element should focus
			// the body anyway.
			.delegate( ".ui-tabs-anchor", "focus" + this.eventNamespace, function() {
				if ( $( this ).closest( "li" ).is( ".ui-state-disabled" ) ) {
					this.blur();
				}
			});

		this._processTabs();

		if ( active === null ) {
			// check the fragment identifier in the URL
			if ( location.hash ) {
				this.anchors.each(function( i, anchor ) {
					if ( anchor.hash === location.hash ) {
						active = i;
						return false;
					}
				});
			}

			// check for a tab marked active via a class
			if ( active === null ) {
				active = this.tabs.filter( ".ui-tabs-active" ).index();
			}

			// no active tab, set to false
			if ( active === null || active === -1 ) {
				active = this.tabs.length ? 0 : false;
			}
		}

		// handle numbers: negative, out of range
		if ( active !== false ) {
			active = this.tabs.index( this.tabs.eq( active ) );
			if ( active === -1 ) {
				active = options.collapsible ? false : 0;
			}
		}
		options.active = active;

		// don't allow collapsible: false and active: false
		if ( !options.collapsible && options.active === false && this.anchors.length ) {
			options.active = 0;
		}

		// Take disabling tabs via class attribute from HTML
		// into account and update option properly.
		if ( $.isArray( options.disabled ) ) {
			options.disabled = $.unique( options.disabled.concat(
				$.map( this.tabs.filter( ".ui-state-disabled" ), function( li ) {
					return that.tabs.index( li );
				})
			) ).sort();
		}

		// check for length avoids error when initializing empty list
		if ( this.options.active !== false && this.anchors.length ) {
			this.active = this._findActive( this.options.active );
		} else {
			this.active = $();
		}

		this._refresh();

		if ( this.active.length ) {
			this.load( options.active );
		}
	},

	_getCreateEventData: function() {
		return {
			tab: this.active,
			panel: !this.active.length ? $() : this._getPanelForTab( this.active )
		};
	},

	_tabKeydown: function( event ) {
		var focusedTab = $( this.document[0].activeElement ).closest( "li" ),
			selectedIndex = this.tabs.index( focusedTab ),
			goingForward = true;

		if ( this._handlePageNav( event ) ) {
			return;
		}

		switch ( event.keyCode ) {
			case $.ui.keyCode.RIGHT:
			case $.ui.keyCode.DOWN:
				selectedIndex++;
				break;
			case $.ui.keyCode.UP:
			case $.ui.keyCode.LEFT:
				goingForward = false;
				selectedIndex--;
				break;
			case $.ui.keyCode.END:
				selectedIndex = this.anchors.length - 1;
				break;
			case $.ui.keyCode.HOME:
				selectedIndex = 0;
				break;
			case $.ui.keyCode.SPACE:
				// Activate only, no collapsing
				event.preventDefault();
				clearTimeout( this.activating );
				this._activate( selectedIndex );
				return;
			case $.ui.keyCode.ENTER:
				// Toggle (cancel delayed activation, allow collapsing)
				event.preventDefault();
				clearTimeout( this.activating );
				// Determine if we should collapse or activate
				this._activate( selectedIndex === this.options.active ? false : selectedIndex );
				return;
			default:
				return;
		}

		// Focus the appropriate tab, based on which key was pressed
		event.preventDefault();
		clearTimeout( this.activating );
		selectedIndex = this._focusNextTab( selectedIndex, goingForward );

		// Navigating with control key will prevent automatic activation
		if ( !event.ctrlKey ) {
			// Update aria-selected immediately so that AT think the tab is already selected.
			// Otherwise AT may confuse the user by stating that they need to activate the tab,
			// but the tab will already be activated by the time the announcement finishes.
			focusedTab.attr( "aria-selected", "false" );
			this.tabs.eq( selectedIndex ).attr( "aria-selected", "true" );

			this.activating = this._delay(function() {
				this.option( "active", selectedIndex );
			}, this.delay );
		}
	},

	_panelKeydown: function( event ) {
		if ( this._handlePageNav( event ) ) {
			return;
		}

		// Ctrl+up moves focus to the current tab
		if ( event.ctrlKey && event.keyCode === $.ui.keyCode.UP ) {
			event.preventDefault();
			this.active.focus();
		}
	},

	// Alt+page up/down moves focus to the previous/next tab (and activates)
	_handlePageNav: function( event ) {
		if ( event.altKey && event.keyCode === $.ui.keyCode.PAGE_UP ) {
			this._activate( this._focusNextTab( this.options.active - 1, false ) );
			return true;
		}
		if ( event.altKey && event.keyCode === $.ui.keyCode.PAGE_DOWN ) {
			this._activate( this._focusNextTab( this.options.active + 1, true ) );
			return true;
		}
	},

	_findNextTab: function( index, goingForward ) {
		var lastTabIndex = this.tabs.length - 1;

		function constrain() {
			if ( index > lastTabIndex ) {
				index = 0;
			}
			if ( index < 0 ) {
				index = lastTabIndex;
			}
			return index;
		}

		while ( $.inArray( constrain(), this.options.disabled ) !== -1 ) {
			index = goingForward ? index + 1 : index - 1;
		}

		return index;
	},

	_focusNextTab: function( index, goingForward ) {
		index = this._findNextTab( index, goingForward );
		this.tabs.eq( index ).focus();
		return index;
	},

	_setOption: function( key, value ) {
		if ( key === "active" ) {
			// _activate() will handle invalid values and update this.options
			this._activate( value );
			return;
		}

		if ( key === "disabled" ) {
			// don't use the widget factory's disabled handling
			this._setupDisabled( value );
			return;
		}

		this._super( key, value);

		if ( key === "collapsible" ) {
			this.element.toggleClass( "ui-tabs-collapsible", value );
			// Setting collapsible: false while collapsed; open first panel
			if ( !value && this.options.active === false ) {
				this._activate( 0 );
			}
		}

		if ( key === "event" ) {
			this._setupEvents( value );
		}

		if ( key === "heightStyle" ) {
			this._setupHeightStyle( value );
		}
	},

	_tabId: function( tab ) {
		return tab.attr( "aria-controls" ) || "ui-tabs-" + getNextTabId();
	},

	_sanitizeSelector: function( hash ) {
		return hash ? hash.replace( /[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g, "\\$&" ) : "";
	},

	refresh: function() {
		var next,
			options = this.options,
			lis = this.tablist.children( ":has(a[href])" );

		// get disabled tabs from class attribute from HTML
		// this will get converted to a boolean if needed in _refresh()
		options.disabled = $.map( lis.filter( ".ui-state-disabled" ), function( tab ) {
			return lis.index( tab );
		});

		this._processTabs();

		// was collapsed or no tabs
		if ( options.active === false || !this.anchors.length ) {
			options.active = false;
			this.active = $();
		// was active, but active tab is gone
		} else if ( this.active.length && !$.contains( this.tablist[ 0 ], this.active[ 0 ] ) ) {
			// all remaining tabs are disabled
			if ( this.tabs.length === options.disabled.length ) {
				options.active = false;
				this.active = $();
			// activate previous tab
			} else {
				this._activate( this._findNextTab( Math.max( 0, options.active - 1 ), false ) );
			}
		// was active, active tab still exists
		} else {
			// make sure active index is correct
			options.active = this.tabs.index( this.active );
		}

		this._refresh();
	},

	_refresh: function() {
		this._setupDisabled( this.options.disabled );
		this._setupEvents( this.options.event );
		this._setupHeightStyle( this.options.heightStyle );

		this.tabs.not( this.active ).attr({
			"aria-selected": "false",
			tabIndex: -1
		});
		this.panels.not( this._getPanelForTab( this.active ) )
			.hide()
			.attr({
				"aria-expanded": "false",
				"aria-hidden": "true"
			});

		// Make sure one tab is in the tab order
		if ( !this.active.length ) {
			this.tabs.eq( 0 ).attr( "tabIndex", 0 );
		} else {
			this.active
				.addClass( "ui-tabs-active ui-state-active" )
				.attr({
					"aria-selected": "true",
					tabIndex: 0
				});
			this._getPanelForTab( this.active )
				.show()
				.attr({
					"aria-expanded": "true",
					"aria-hidden": "false"
				});
		}
	},

	_processTabs: function() {
		var that = this;

		this.tablist = this._getList()
			.addClass( "ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all" )
			.attr( "role", "tablist" );

		this.tabs = this.tablist.find( "> li:has(a[href])" )
			.addClass( "ui-state-default ui-corner-top" )
			.attr({
				role: "tab",
				tabIndex: -1
			});

		this.anchors = this.tabs.map(function() {
				return $( "a", this )[ 0 ];
			})
			.addClass( "ui-tabs-anchor" )
			.attr({
				role: "presentation",
				tabIndex: -1
			});

		this.panels = $();

		this.anchors.each(function( i, anchor ) {
			var selector, panel, panelId,
				anchorId = $( anchor ).uniqueId().attr( "id" ),
				tab = $( anchor ).closest( "li" ),
				originalAriaControls = tab.attr( "aria-controls" );

			// inline tab
			if ( isLocal( anchor ) ) {
				selector = anchor.hash;
				panel = that.element.find( that._sanitizeSelector( selector ) );
			// remote tab
			} else {
				panelId = that._tabId( tab );
				selector = "#" + panelId;
				panel = that.element.find( selector );
				if ( !panel.length ) {
					panel = that._createPanel( panelId );
					panel.insertAfter( that.panels[ i - 1 ] || that.tablist );
				}
				panel.attr( "aria-live", "polite" );
			}

			if ( panel.length) {
				that.panels = that.panels.add( panel );
			}
			if ( originalAriaControls ) {
				tab.data( "ui-tabs-aria-controls", originalAriaControls );
			}
			tab.attr({
				"aria-controls": selector.substring( 1 ),
				"aria-labelledby": anchorId
			});
			panel.attr( "aria-labelledby", anchorId );
		});

		this.panels
			.addClass( "ui-tabs-panel ui-widget-content ui-corner-bottom" )
			.attr( "role", "tabpanel" );
	},

	// allow overriding how to find the list for rare usage scenarios (#7715)
	_getList: function() {
		return this.element.find( "ol,ul" ).eq( 0 );
	},

	_createPanel: function( id ) {
		return $( "<div>" )
			.attr( "id", id )
			.addClass( "ui-tabs-panel ui-widget-content ui-corner-bottom" )
			.data( "ui-tabs-destroy", true );
	},

	_setupDisabled: function( disabled ) {
		if ( $.isArray( disabled ) ) {
			if ( !disabled.length ) {
				disabled = false;
			} else if ( disabled.length === this.anchors.length ) {
				disabled = true;
			}
		}

		// disable tabs
		for ( var i = 0, li; ( li = this.tabs[ i ] ); i++ ) {
			if ( disabled === true || $.inArray( i, disabled ) !== -1 ) {
				$( li )
					.addClass( "ui-state-disabled" )
					.attr( "aria-disabled", "true" );
			} else {
				$( li )
					.removeClass( "ui-state-disabled" )
					.removeAttr( "aria-disabled" );
			}
		}

		this.options.disabled = disabled;
	},

	_setupEvents: function( event ) {
		var events = {
			click: function( event ) {
				event.preventDefault();
			}
		};
		if ( event ) {
			$.each( event.split(" "), function( index, eventName ) {
				events[ eventName ] = "_eventHandler";
			});
		}

		this._off( this.anchors.add( this.tabs ).add( this.panels ) );
		this._on( this.anchors, events );
		this._on( this.tabs, { keydown: "_tabKeydown" } );
		this._on( this.panels, { keydown: "_panelKeydown" } );

		this._focusable( this.tabs );
		this._hoverable( this.tabs );
	},

	_setupHeightStyle: function( heightStyle ) {
		var maxHeight, overflow,
			parent = this.element.parent();

		if ( heightStyle === "fill" ) {
			// IE 6 treats height like minHeight, so we need to turn off overflow
			// in order to get a reliable height
			// we use the minHeight support test because we assume that only
			// browsers that don't support minHeight will treat height as minHeight
			if ( !$.support.minHeight ) {
				overflow = parent.css( "overflow" );
				parent.css( "overflow", "hidden");
			}
			maxHeight = parent.height();
			this.element.siblings( ":visible" ).each(function() {
				var elem = $( this ),
					position = elem.css( "position" );

				if ( position === "absolute" || position === "fixed" ) {
					return;
				}
				maxHeight -= elem.outerHeight( true );
			});
			if ( overflow ) {
				parent.css( "overflow", overflow );
			}

			this.element.children().not( this.panels ).each(function() {
				maxHeight -= $( this ).outerHeight( true );
			});

			this.panels.each(function() {
				$( this ).height( Math.max( 0, maxHeight -
					$( this ).innerHeight() + $( this ).height() ) );
			})
			.css( "overflow", "auto" );
		} else if ( heightStyle === "auto" ) {
			maxHeight = 0;
			this.panels.each(function() {
				maxHeight = Math.max( maxHeight, $( this ).height( "" ).height() );
			}).height( maxHeight );
		}
	},

	_eventHandler: function( event ) {
		var options = this.options,
			active = this.active,
			anchor = $( event.currentTarget ),
			tab = anchor.closest( "li" ),
			clickedIsActive = tab[ 0 ] === active[ 0 ],
			collapsing = clickedIsActive && options.collapsible,
			toShow = collapsing ? $() : this._getPanelForTab( tab ),
			toHide = !active.length ? $() : this._getPanelForTab( active ),
			eventData = {
				oldTab: active,
				oldPanel: toHide,
				newTab: collapsing ? $() : tab,
				newPanel: toShow
			};

		event.preventDefault();

		if ( tab.hasClass( "ui-state-disabled" ) ||
				// tab is already loading
				tab.hasClass( "ui-tabs-loading" ) ||
				// can't switch durning an animation
				this.running ||
				// click on active header, but not collapsible
				( clickedIsActive && !options.collapsible ) ||
				// allow canceling activation
				( this._trigger( "beforeActivate", event, eventData ) === false ) ) {
			return;
		}

		options.active = collapsing ? false : this.tabs.index( tab );

		this.active = clickedIsActive ? $() : tab;
		if ( this.xhr ) {
			this.xhr.abort();
		}

		if ( !toHide.length && !toShow.length ) {
			$.error( "jQuery UI Tabs: Mismatching fragment identifier." );
		}

		if ( toShow.length ) {
			this.load( this.tabs.index( tab ), event );
		}
		this._toggle( event, eventData );
	},

	// handles show/hide for selecting tabs
	_toggle: function( event, eventData ) {
		var that = this,
			toShow = eventData.newPanel,
			toHide = eventData.oldPanel;

		this.running = true;

		function complete() {
			that.running = false;
			that._trigger( "activate", event, eventData );
		}

		function show() {
			eventData.newTab.closest( "li" ).addClass( "ui-tabs-active ui-state-active" );

			if ( toShow.length && that.options.show ) {
				that._show( toShow, that.options.show, complete );
			} else {
				toShow.show();
				complete();
			}
		}

		// start out by hiding, then showing, then completing
		if ( toHide.length && this.options.hide ) {
			this._hide( toHide, this.options.hide, function() {
				eventData.oldTab.closest( "li" ).removeClass( "ui-tabs-active ui-state-active" );
				show();
			});
		} else {
			eventData.oldTab.closest( "li" ).removeClass( "ui-tabs-active ui-state-active" );
			toHide.hide();
			show();
		}

		toHide.attr({
			"aria-expanded": "false",
			"aria-hidden": "true"
		});
		eventData.oldTab.attr( "aria-selected", "false" );
		// If we're switching tabs, remove the old tab from the tab order.
		// If we're opening from collapsed state, remove the previous tab from the tab order.
		// If we're collapsing, then keep the collapsing tab in the tab order.
		if ( toShow.length && toHide.length ) {
			eventData.oldTab.attr( "tabIndex", -1 );
		} else if ( toShow.length ) {
			this.tabs.filter(function() {
				return $( this ).attr( "tabIndex" ) === 0;
			})
			.attr( "tabIndex", -1 );
		}

		toShow.attr({
			"aria-expanded": "true",
			"aria-hidden": "false"
		});
		eventData.newTab.attr({
			"aria-selected": "true",
			tabIndex: 0
		});
	},

	_activate: function( index ) {
		var anchor,
			active = this._findActive( index );

		// trying to activate the already active panel
		if ( active[ 0 ] === this.active[ 0 ] ) {
			return;
		}

		// trying to collapse, simulate a click on the current active header
		if ( !active.length ) {
			active = this.active;
		}

		anchor = active.find( ".ui-tabs-anchor" )[ 0 ];
		this._eventHandler({
			target: anchor,
			currentTarget: anchor,
			preventDefault: $.noop
		});
	},

	_findActive: function( index ) {
		return index === false ? $() : this.tabs.eq( index );
	},

	_getIndex: function( index ) {
		// meta-function to give users option to provide a href string instead of a numerical index.
		if ( typeof index === "string" ) {
			index = this.anchors.index( this.anchors.filter( "[href$='" + index + "']" ) );
		}

		return index;
	},

	_destroy: function() {
		if ( this.xhr ) {
			this.xhr.abort();
		}

		this.element.removeClass( "ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible" );

		this.tablist
			.removeClass( "ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all" )
			.removeAttr( "role" );

		this.anchors
			.removeClass( "ui-tabs-anchor" )
			.removeAttr( "role" )
			.removeAttr( "tabIndex" )
			.removeData( "href.tabs" )
			.removeData( "load.tabs" )
			.removeUniqueId();

		this.tabs.add( this.panels ).each(function() {
			if ( $.data( this, "ui-tabs-destroy" ) ) {
				$( this ).remove();
			} else {
				$( this )
					.removeClass( "ui-state-default ui-state-active ui-state-disabled " +
						"ui-corner-top ui-corner-bottom ui-widget-content ui-tabs-active ui-tabs-panel" )
					.removeAttr( "tabIndex" )
					.removeAttr( "aria-live" )
					.removeAttr( "aria-busy" )
					.removeAttr( "aria-selected" )
					.removeAttr( "aria-labelledby" )
					.removeAttr( "aria-hidden" )
					.removeAttr( "aria-expanded" )
					.removeAttr( "role" );
			}
		});

		this.tabs.each(function() {
			var li = $( this ),
				prev = li.data( "ui-tabs-aria-controls" );
			if ( prev ) {
				li.attr( "aria-controls", prev );
			} else {
				li.removeAttr( "aria-controls" );
			}
		});

		if ( this.options.heightStyle !== "content" ) {
			this.panels.css( "height", "" );
		}
	},

	enable: function( index ) {
		var disabled = this.options.disabled;
		if ( disabled === false ) {
			return;
		}

		if ( index === undefined ) {
			disabled = false;
		} else {
			index = this._getIndex( index );
			if ( $.isArray( disabled ) ) {
				disabled = $.map( disabled, function( num ) {
					return num !== index ? num : null;
				});
			} else {
				disabled = $.map( this.tabs, function( li, num ) {
					return num !== index ? num : null;
				});
			}
		}
		this._setupDisabled( disabled );
	},

	disable: function( index ) {
		var disabled = this.options.disabled;
		if ( disabled === true ) {
			return;
		}

		if ( index === undefined ) {
			disabled = true;
		} else {
			index = this._getIndex( index );
			if ( $.inArray( index, disabled ) !== -1 ) {
				return;
			}
			if ( $.isArray( disabled ) ) {
				disabled = $.merge( [ index ], disabled ).sort();
			} else {
				disabled = [ index ];
			}
		}
		this._setupDisabled( disabled );
	},

	load: function( index, event ) {
		index = this._getIndex( index );
		var that = this,
			tab = this.tabs.eq( index ),
			anchor = tab.find( ".ui-tabs-anchor" ),
			panel = this._getPanelForTab( tab ),
			eventData = {
				tab: tab,
				panel: panel
			};

		// not remote
		if ( isLocal( anchor[ 0 ] ) ) {
			return;
		}

		this.xhr = $.ajax( this._ajaxSettings( anchor, event, eventData ) );

		// support: jQuery <1.8
		// jQuery <1.8 returns false if the request is canceled in beforeSend,
		// but as of 1.8, $.ajax() always returns a jqXHR object.
		if ( this.xhr && this.xhr.statusText !== "canceled" ) {
			tab.addClass( "ui-tabs-loading" );
			panel.attr( "aria-busy", "true" );

			this.xhr
				.success(function( response ) {
					// support: jQuery <1.8
					// http://bugs.jquery.com/ticket/11778
					setTimeout(function() {
						panel.html( response );
						that._trigger( "load", event, eventData );
					}, 1 );
				})
				.complete(function( jqXHR, status ) {
					// support: jQuery <1.8
					// http://bugs.jquery.com/ticket/11778
					setTimeout(function() {
						if ( status === "abort" ) {
							that.panels.stop( false, true );
						}

						tab.removeClass( "ui-tabs-loading" );
						panel.removeAttr( "aria-busy" );

						if ( jqXHR === that.xhr ) {
							delete that.xhr;
						}
					}, 1 );
				});
		}
	},

	// TODO: Remove this function in 1.10 when ajaxOptions is removed
	_ajaxSettings: function( anchor, event, eventData ) {
		var that = this;
		return {
			url: anchor.attr( "href" ),
			beforeSend: function( jqXHR, settings ) {
				return that._trigger( "beforeLoad", event,
					$.extend( { jqXHR : jqXHR, ajaxSettings: settings }, eventData ) );
			}
		};
	},

	_getPanelForTab: function( tab ) {
		var id = $( tab ).attr( "aria-controls" );
		return this.element.find( this._sanitizeSelector( "#" + id ) );
	}
});

// DEPRECATED
if ( $.uiBackCompat !== false ) {

	// helper method for a lot of the back compat extensions
	$.ui.tabs.prototype._ui = function( tab, panel ) {
		return {
			tab: tab,
			panel: panel,
			index: this.anchors.index( tab )
		};
	};

	// url method
	$.widget( "ui.tabs", $.ui.tabs, {
		url: function( index, url ) {
			this.anchors.eq( index ).attr( "href", url );
		}
	});

	// TODO: Remove _ajaxSettings() method when removing this extension
	// ajaxOptions and cache options
	$.widget( "ui.tabs", $.ui.tabs, {
		options: {
			ajaxOptions: null,
			cache: false
		},

		_create: function() {
			this._super();

			var that = this;

			this._on({ tabsbeforeload: function( event, ui ) {
				// tab is already cached
				if ( $.data( ui.tab[ 0 ], "cache.tabs" ) ) {
					event.preventDefault();
					return;
				}

				ui.jqXHR.success(function() {
					if ( that.options.cache ) {
						$.data( ui.tab[ 0 ], "cache.tabs", true );
					}
				});
			}});
		},

		_ajaxSettings: function( anchor, event, ui ) {
			var ajaxOptions = this.options.ajaxOptions;
			return $.extend( {}, ajaxOptions, {
				error: function( xhr, s, e ) {
					try {
						// Passing index avoid a race condition when this method is
						// called after the user has selected another tab.
						// Pass the anchor that initiated this request allows
						// loadError to manipulate the tab content panel via $(a.hash)
						ajaxOptions.error(
							xhr, s, ui.tab.closest( "li" ).index(), ui.tab[ 0 ] );
					}
					catch ( e ) {}
				}
			}, this._superApply( arguments ) );
		},

		_setOption: function( key, value ) {
			// reset cache if switching from cached to not cached
			if ( key === "cache" && value === false ) {
				this.anchors.removeData( "cache.tabs" );
			}
			this._super( key, value );
		},

		_destroy: function() {
			this.anchors.removeData( "cache.tabs" );
			this._super();
		},

		url: function( index, url ){
			this.anchors.eq( index ).removeData( "cache.tabs" );
			this._superApply( arguments );
		}
	});

	// abort method
	$.widget( "ui.tabs", $.ui.tabs, {
		abort: function() {
			if ( this.xhr ) {
				this.xhr.abort();
			}
		}
	});

	// spinner
	$.widget( "ui.tabs", $.ui.tabs, {
		options: {
			spinner: "<em>Loading&#8230;</em>"
		},
		_create: function() {
			this._super();
			this._on({
				tabsbeforeload: function( event, ui ) {
					// Don't react to nested tabs or tabs that don't use a spinner
					if ( event.target !== this.element[ 0 ] ||
							!this.options.spinner ) {
						return;
					}

					var span = ui.tab.find( "span" ),
						html = span.html();
					span.html( this.options.spinner );
					ui.jqXHR.complete(function() {
						span.html( html );
					});
				}
			});
		}
	});

	// enable/disable events
	$.widget( "ui.tabs", $.ui.tabs, {
		options: {
			enable: null,
			disable: null
		},

		enable: function( index ) {
			var options = this.options,
				trigger;

			if ( index && options.disabled === true ||
					( $.isArray( options.disabled ) && $.inArray( index, options.disabled ) !== -1 ) ) {
				trigger = true;
			}

			this._superApply( arguments );

			if ( trigger ) {
				this._trigger( "enable", null, this._ui( this.anchors[ index ], this.panels[ index ] ) );
			}
		},

		disable: function( index ) {
			var options = this.options,
				trigger;

			if ( index && options.disabled === false ||
					( $.isArray( options.disabled ) && $.inArray( index, options.disabled ) === -1 ) ) {
				trigger = true;
			}

			this._superApply( arguments );

			if ( trigger ) {
				this._trigger( "disable", null, this._ui( this.anchors[ index ], this.panels[ index ] ) );
			}
		}
	});

	// add/remove methods and events
	$.widget( "ui.tabs", $.ui.tabs, {
		options: {
			add: null,
			remove: null,
			tabTemplate: "<li><a href='#{href}'><span>#{label}</span></a></li>"
		},

		add: function( url, label, index ) {
			if ( index === undefined ) {
				index = this.anchors.length;
			}

			var doInsertAfter, panel,
				options = this.options,
				li = $( options.tabTemplate
					.replace( /#\{href\}/g, url )
					.replace( /#\{label\}/g, label ) ),
				id = !url.indexOf( "#" ) ?
					url.replace( "#", "" ) :
					this._tabId( li );

			li.addClass( "ui-state-default ui-corner-top" ).data( "ui-tabs-destroy", true );
			li.attr( "aria-controls", id );

			doInsertAfter = index >= this.tabs.length;

			// try to find an existing element before creating a new one
			panel = this.element.find( "#" + id );
			if ( !panel.length ) {
				panel = this._createPanel( id );
				if ( doInsertAfter ) {
					if ( index > 0 ) {
						panel.insertAfter( this.panels.eq( -1 ) );
					} else {
						panel.appendTo( this.element );
					}
				} else {
					panel.insertBefore( this.panels[ index ] );
				}
			}
			panel.addClass( "ui-tabs-panel ui-widget-content ui-corner-bottom" ).hide();

			if ( doInsertAfter ) {
				li.appendTo( this.tablist );
			} else {
				li.insertBefore( this.tabs[ index ] );
			}

			options.disabled = $.map( options.disabled, function( n ) {
				return n >= index ? ++n : n;
			});

			this.refresh();
			if ( this.tabs.length === 1 && options.active === false ) {
				this.option( "active", 0 );
			}

			this._trigger( "add", null, this._ui( this.anchors[ index ], this.panels[ index ] ) );
			return this;
		},

		remove: function( index ) {
			index = this._getIndex( index );
			var options = this.options,
				tab = this.tabs.eq( index ).remove(),
				panel = this._getPanelForTab( tab ).remove();

			// If selected tab was removed focus tab to the right or
			// in case the last tab was removed the tab to the left.
			// We check for more than 2 tabs, because if there are only 2,
			// then when we remove this tab, there will only be one tab left
			// so we don't need to detect which tab to activate.
			if ( tab.hasClass( "ui-tabs-active" ) && this.anchors.length > 2 ) {
				this._activate( index + ( index + 1 < this.anchors.length ? 1 : -1 ) );
			}

			options.disabled = $.map(
				$.grep( options.disabled, function( n ) {
					return n !== index;
				}),
				function( n ) {
					return n >= index ? --n : n;
				});

			this.refresh();

			this._trigger( "remove", null, this._ui( tab.find( "a" )[ 0 ], panel[ 0 ] ) );
			return this;
		}
	});

	// length method
	$.widget( "ui.tabs", $.ui.tabs, {
		length: function() {
			return this.anchors.length;
		}
	});

	// panel ids (idPrefix option + title attribute)
	$.widget( "ui.tabs", $.ui.tabs, {
		options: {
			idPrefix: "ui-tabs-"
		},

		_tabId: function( tab ) {
			var a = tab.is( "li" ) ? tab.find( "a[href]" ) : tab;
			a = a[0];
			return $( a ).closest( "li" ).attr( "aria-controls" ) ||
				a.title && a.title.replace( /\s/g, "_" ).replace( /[^\w\u00c0-\uFFFF\-]/g, "" ) ||
				this.options.idPrefix + getNextTabId();
		}
	});

	// _createPanel method
	$.widget( "ui.tabs", $.ui.tabs, {
		options: {
			panelTemplate: "<div></div>"
		},

		_createPanel: function( id ) {
			return $( this.options.panelTemplate )
				.attr( "id", id )
				.addClass( "ui-tabs-panel ui-widget-content ui-corner-bottom" )
				.data( "ui-tabs-destroy", true );
		}
	});

	// selected option
	$.widget( "ui.tabs", $.ui.tabs, {
		_create: function() {
			var options = this.options;
			if ( options.active === null && options.selected !== undefined ) {
				options.active = options.selected === -1 ? false : options.selected;
			}
			this._super();
			options.selected = options.active;
			if ( options.selected === false ) {
				options.selected = -1;
			}
		},

		_setOption: function( key, value ) {
			if ( key !== "selected" ) {
				return this._super( key, value );
			}

			var options = this.options;
			this._super( "active", value === -1 ? false : value );
			options.selected = options.active;
			if ( options.selected === false ) {
				options.selected = -1;
			}
		},

		_eventHandler: function( event ) {
			this._superApply( arguments );
			this.options.selected = this.options.active;
			if ( this.options.selected === false ) {
				this.options.selected = -1;
			}
		}
	});

	// show and select event
	$.widget( "ui.tabs", $.ui.tabs, {
		options: {
			show: null,
			select: null
		},
		_create: function() {
			this._super();
			if ( this.options.active !== false ) {
				this._trigger( "show", null, this._ui(
					this.active.find( ".ui-tabs-anchor" )[ 0 ],
					this._getPanelForTab( this.active )[ 0 ] ) );
			}
		},
		_trigger: function( type, event, data ) {
			var ret = this._superApply( arguments );
			if ( !ret ) {
				return false;
			}
			if ( type === "beforeActivate" && data.newTab.length ) {
				ret = this._super( "select", event, {
					tab: data.newTab.find( ".ui-tabs-anchor" )[ 0],
					panel: data.newPanel[ 0 ],
					index: data.newTab.closest( "li" ).index()
				});
			} else if ( type === "activate" && data.newTab.length ) {
				ret = this._super( "show", event, {
					tab: data.newTab.find( ".ui-tabs-anchor" )[ 0 ],
					panel: data.newPanel[ 0 ],
					index: data.newTab.closest( "li" ).index()
				});
			}
			return ret;
		}
	});

	// select method
	$.widget( "ui.tabs", $.ui.tabs, {
		select: function( index ) {
			index = this._getIndex( index );
			if ( index === -1 ) {
				if ( this.options.collapsible && this.options.selected !== -1 ) {
					index = this.options.selected;
				} else {
					return;
				}
			}
			this.anchors.eq( index ).trigger( this.options.event + this.eventNamespace );
		}
	});

	// cookie option
	(function() {

	var listId = 0;

	$.widget( "ui.tabs", $.ui.tabs, {
		options: {
			cookie: null // e.g. { expires: 7, path: '/', domain: 'jquery.com', secure: true }
		},
		_create: function() {
			var options = this.options,
				active;
			if ( options.active == null && options.cookie ) {
				active = parseInt( this._cookie(), 10 );
				if ( active === -1 ) {
					active = false;
				}
				options.active = active;
			}
			this._super();
		},
		_cookie: function( active ) {
			var cookie = [ this.cookie ||
				( this.cookie = this.options.cookie.name || "ui-tabs-" + (++listId) ) ];
			if ( arguments.length ) {
				cookie.push( active === false ? -1 : active );
				cookie.push( this.options.cookie );
			}
			return $.cookie.apply( null, cookie );
		},
		_refresh: function() {
			this._super();
			if ( this.options.cookie ) {
				this._cookie( this.options.active, this.options.cookie );
			}
		},
		_eventHandler: function( event ) {
			this._superApply( arguments );
			if ( this.options.cookie ) {
				this._cookie( this.options.active, this.options.cookie );
			}
		},
		_destroy: function() {
			this._super();
			if ( this.options.cookie ) {
				this._cookie( null, this.options.cookie );
			}
		}
	});

	})();

	// load event
	$.widget( "ui.tabs", $.ui.tabs, {
		_trigger: function( type, event, data ) {
			var _data = $.extend( {}, data );
			if ( type === "load" ) {
				_data.panel = _data.panel[ 0 ];
				_data.tab = _data.tab.find( ".ui-tabs-anchor" )[ 0 ];
			}
			return this._super( type, event, _data );
		}
	});

	// fx option
	// The new animation options (show, hide) conflict with the old show callback.
	// The old fx option wins over show/hide anyway (always favor back-compat).
	// If a user wants to use the new animation API, they must give up the old API.
	$.widget( "ui.tabs", $.ui.tabs, {
		options: {
			fx: null // e.g. { height: "toggle", opacity: "toggle", duration: 200 }
		},

		_getFx: function() {
			var hide, show,
				fx = this.options.fx;

			if ( fx ) {
				if ( $.isArray( fx ) ) {
					hide = fx[ 0 ];
					show = fx[ 1 ];
				} else {
					hide = show = fx;
				}
			}

			return fx ? { show: show, hide: hide } : null;
		},

		_toggle: function( event, eventData ) {
			var that = this,
				toShow = eventData.newPanel,
				toHide = eventData.oldPanel,
				fx = this._getFx();

			if ( !fx ) {
				return this._super( event, eventData );
			}

			that.running = true;

			function complete() {
				that.running = false;
				that._trigger( "activate", event, eventData );
			}

			function show() {
				eventData.newTab.closest( "li" ).addClass( "ui-tabs-active ui-state-active" );

				if ( toShow.length && fx.show ) {
					toShow
						.animate( fx.show, fx.show.duration, function() {
							complete();
						});
				} else {
					toShow.show();
					complete();
				}
			}

			// start out by hiding, then showing, then completing
			if ( toHide.length && fx.hide ) {
				toHide.animate( fx.hide, fx.hide.duration, function() {
					eventData.oldTab.closest( "li" ).removeClass( "ui-tabs-active ui-state-active" );
					show();
				});
			} else {
				eventData.oldTab.closest( "li" ).removeClass( "ui-tabs-active ui-state-active" );
				toHide.hide();
				show();
			}
		}
	});
}

})( jQuery );
(function( $ ) {

var increments = 0;

function addDescribedBy( elem, id ) {
	var describedby = (elem.attr( "aria-describedby" ) || "").split( /\s+/ );
	describedby.push( id );
	elem
		.data( "ui-tooltip-id", id )
		.attr( "aria-describedby", $.trim( describedby.join( " " ) ) );
}

function removeDescribedBy( elem ) {
	var id = elem.data( "ui-tooltip-id" ),
		describedby = (elem.attr( "aria-describedby" ) || "").split( /\s+/ ),
		index = $.inArray( id, describedby );
	if ( index !== -1 ) {
		describedby.splice( index, 1 );
	}

	elem.removeData( "ui-tooltip-id" );
	describedby = $.trim( describedby.join( " " ) );
	if ( describedby ) {
		elem.attr( "aria-describedby", describedby );
	} else {
		elem.removeAttr( "aria-describedby" );
	}
}

$.widget( "ui.tooltip", {
	version: "1.9.0",
	options: {
		content: function() {
			return $( this ).attr( "title" );
		},
		hide: true,
		items: "[title]",
		position: {
			my: "left+15 center",
			at: "right center",
			collision: "flipfit flipfit"
		},
		show: true,
		tooltipClass: null,
		track: false,

		// callbacks
		close: null,
		open: null
	},

	_create: function() {
		this._on({
			mouseover: "open",
			focusin: "open"
		});

		// IDs of generated tooltips, needed for destroy
		this.tooltips = {};
	},

	_setOption: function( key, value ) {
		var that = this;

		if ( key === "disabled" ) {
			this[ value ? "_disable" : "_enable" ]();
			this.options[ key ] = value;
			// disable element style changes
			return;
		}

		this._super( key, value );

		if ( key === "content" ) {
			$.each( this.tooltips, function( id, element ) {
				that._updateContent( element );
			});
		}
	},

	_disable: function() {
		var that = this;

		// close open tooltips
		$.each( this.tooltips, function( id, element ) {
			var event = $.Event( "blur" );
			event.target = event.currentTarget = element[0];
			that.close( event, true );
		});

		// remove title attributes to prevent native tooltips
		this.element.find( this.options.items ).andSelf().each(function() {
			var element = $( this );
			if ( element.is( "[title]" ) ) {
				element
					.data( "ui-tooltip-title", element.attr( "title" ) )
					.attr( "title", "" );
			}
		});
	},

	_enable: function() {
		// restore title attributes
		this.element.find( this.options.items ).andSelf().each(function() {
			var element = $( this );
			if ( element.data( "ui-tooltip-title" ) ) {
				element.attr( "title", element.data( "ui-tooltip-title" ) );
			}
		});
	},

	open: function( event ) {
		var target = $( event ? event.target : this.element )
				.closest( this.options.items );

		// No element to show a tooltip for
		if ( !target.length ) {
			return;
		}

		// If the tooltip is open and we're tracking then reposition the tooltip.
		// This makes sure that a tracking tooltip doesn't obscure a focused element
		// if the user was hovering when the element gained focused.
		if ( this.options.track && target.data( "ui-tooltip-id" ) ) {
			this._find( target ).position( $.extend({
				of: target
			}, this.options.position ) );
			// Stop tracking (#8622)
			this._off( this.document, "mousemove" );
			return;
		}

		if ( target.attr( "title" ) ) {
			target.data( "ui-tooltip-title", target.attr( "title" ) );
		}

		target.data( "tooltip-open", true );

		this._updateContent( target, event );
	},

	_updateContent: function( target, event ) {
		var content,
			contentOption = this.options.content,
			that = this;

		if ( typeof contentOption === "string" ) {
			return this._open( event, target, contentOption );
		}

		content = contentOption.call( target[0], function( response ) {
			// ignore async response if tooltip was closed already
			if ( !target.data( "tooltip-open" ) ) {
				return;
			}
			// IE may instantly serve a cached response for ajax requests
			// delay this call to _open so the other call to _open runs first
			that._delay(function() {
				this._open( event, target, response );
			});
		});
		if ( content ) {
			this._open( event, target, content );
		}
	},

	_open: function( event, target, content ) {
		var tooltip, positionOption;
		if ( !content ) {
			return;
		}

		// Content can be updated multiple times. If the tooltip already
		// exists, then just update the content and bail.
		tooltip = this._find( target );
		if ( tooltip.length ) {
			tooltip.find( ".ui-tooltip-content" ).html( content );
			return;
		}

		// if we have a title, clear it to prevent the native tooltip
		// we have to check first to avoid defining a title if none exists
		// (we don't want to cause an element to start matching [title])
		//
		// We use removeAttr only for key events, to allow IE to export the correct
		// accessible attributes. For mouse events, set to empty string to avoid
		// native tooltip showing up (happens only when removing inside mouseover).
		if ( target.is( "[title]" ) ) {
			if ( event && event.type === "mouseover" ) {
				target.attr( "title", "" );
			} else {
				target.removeAttr( "title" );
			}
		}

		tooltip = this._tooltip( target );
		addDescribedBy( target, tooltip.attr( "id" ) );
		tooltip.find( ".ui-tooltip-content" ).html( content );

		function position( event ) {
			positionOption.of = event;
			tooltip.position( positionOption );
		}
		if ( this.options.track && event && /^mouse/.test( event.originalEvent.type ) ) {
			positionOption = $.extend( {}, this.options.position );
			this._on( this.document, {
				mousemove: position
			});
			// trigger once to override element-relative positioning
			position( event );
		} else {
			tooltip.position( $.extend({
				of: target
			}, this.options.position ) );
		}

		tooltip.hide();

		this._show( tooltip, this.options.show );

		this._trigger( "open", event, { tooltip: tooltip } );

		this._on( target, {
			mouseleave: "close",
			focusout: "close",
			keyup: function( event ) {
				if ( event.keyCode === $.ui.keyCode.ESCAPE ) {
					var fakeEvent = $.Event(event);
					fakeEvent.currentTarget = target[0];
					this.close( fakeEvent, true );
				}
			}
		});
	},

	close: function( event, force ) {
		var that = this,
			target = $( event ? event.currentTarget : this.element ),
			tooltip = this._find( target );

		// disabling closes the tooltip, so we need to track when we're closing
		// to avoid an infinite loop in case the tooltip becomes disabled on close
		if ( this.closing ) {
			return;
		}

		// don't close if the element has focus
		// this prevents the tooltip from closing if you hover while focused
		//
		// we have to check the event type because tabbing out of the document
		// may leave the element as the activeElement
		if ( !force && event && event.type !== "focusout" &&
				this.document[0].activeElement === target[0] ) {
			return;
		}

		// only set title if we had one before (see comment in _open())
		if ( target.data( "ui-tooltip-title" ) ) {
			target.attr( "title", target.data( "ui-tooltip-title" ) );
		}

		removeDescribedBy( target );

		tooltip.stop( true );
		this._hide( tooltip, this.options.hide, function() {
			$( this ).remove();
			delete that.tooltips[ this.id ];
		});

		target.removeData( "tooltip-open" );
		this._off( target, "mouseleave focusout keyup" );
		this._off( this.document, "mousemove" );

		this.closing = true;
		this._trigger( "close", event, { tooltip: tooltip } );
		this.closing = false;
	},

	_tooltip: function( element ) {
		var id = "ui-tooltip-" + increments++,
			tooltip = $( "<div>" )
				.attr({
					id: id,
					role: "tooltip"
				})
				.addClass( "ui-tooltip ui-widget ui-corner-all ui-widget-content " +
					( this.options.tooltipClass || "" ) );
		$( "<div>" )
			.addClass( "ui-tooltip-content" )
			.appendTo( tooltip );
		tooltip.appendTo( this.document[0].body );
		if ( $.fn.bgiframe ) {
			tooltip.bgiframe();
		}
		this.tooltips[ id ] = element;
		return tooltip;
	},

	_find: function( target ) {
		var id = target.data( "ui-tooltip-id" );
		return id ? $( "#" + id ) : $();
	},

	_destroy: function() {
		var that = this;

		// close open tooltips
		$.each( this.tooltips, function( id, element ) {
			// Delegate to close method to handle common cleanup
			var event = $.Event( "blur" );
			event.target = event.currentTarget = element[0];
			that.close( event, true );

			// Remove immediately; destroying an open tooltip doesn't use the
			// hide animation
			$( "#" + id ).remove();

			// Restore the title
			if ( element.data( "ui-tooltip-title" ) ) {
				element.attr( "title", element.data( "ui-tooltip-title" ) );
				element.removeData( "ui-tooltip-title" );
			}
		});
	}
});

}( jQuery ) );
;(jQuery.effects || (function($, undefined) {

var backCompat = $.uiBackCompat !== false,
	// prefix used for storing data on .data()
	dataSpace = "ui-effects-";

$.effects = {
	effect: {}
};

/*!
 * jQuery Color Animations v2.0.0
 * http://jquery.com/
 *
 * Copyright 2012 jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * Date: Mon Aug 13 13:41:02 2012 -0500
 */
(function( jQuery, undefined ) {

	var stepHooks = "backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor".split(" "),

	// plusequals test for += 100 -= 100
	rplusequals = /^([\-+])=\s*(\d+\.?\d*)/,
	// a set of RE's that can match strings and generate color tuples.
	stringParsers = [{
			re: /rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,
			parse: function( execResult ) {
				return [
					execResult[ 1 ],
					execResult[ 2 ],
					execResult[ 3 ],
					execResult[ 4 ]
				];
			}
		}, {
			re: /rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,
			parse: function( execResult ) {
				return [
					execResult[ 1 ] * 2.55,
					execResult[ 2 ] * 2.55,
					execResult[ 3 ] * 2.55,
					execResult[ 4 ]
				];
			}
		}, {
			// this regex ignores A-F because it's compared against an already lowercased string
			re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,
			parse: function( execResult ) {
				return [
					parseInt( execResult[ 1 ], 16 ),
					parseInt( execResult[ 2 ], 16 ),
					parseInt( execResult[ 3 ], 16 )
				];
			}
		}, {
			// this regex ignores A-F because it's compared against an already lowercased string
			re: /#([a-f0-9])([a-f0-9])([a-f0-9])/,
			parse: function( execResult ) {
				return [
					parseInt( execResult[ 1 ] + execResult[ 1 ], 16 ),
					parseInt( execResult[ 2 ] + execResult[ 2 ], 16 ),
					parseInt( execResult[ 3 ] + execResult[ 3 ], 16 )
				];
			}
		}, {
			re: /hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,
			space: "hsla",
			parse: function( execResult ) {
				return [
					execResult[ 1 ],
					execResult[ 2 ] / 100,
					execResult[ 3 ] / 100,
					execResult[ 4 ]
				];
			}
		}],

	// jQuery.Color( )
	color = jQuery.Color = function( color, green, blue, alpha ) {
		return new jQuery.Color.fn.parse( color, green, blue, alpha );
	},
	spaces = {
		rgba: {
			props: {
				red: {
					idx: 0,
					type: "byte"
				},
				green: {
					idx: 1,
					type: "byte"
				},
				blue: {
					idx: 2,
					type: "byte"
				}
			}
		},

		hsla: {
			props: {
				hue: {
					idx: 0,
					type: "degrees"
				},
				saturation: {
					idx: 1,
					type: "percent"
				},
				lightness: {
					idx: 2,
					type: "percent"
				}
			}
		}
	},
	propTypes = {
		"byte": {
			floor: true,
			max: 255
		},
		"percent": {
			max: 1
		},
		"degrees": {
			mod: 360,
			floor: true
		}
	},
	support = color.support = {},

	// element for support tests
	supportElem = jQuery( "<p>" )[ 0 ],

	// colors = jQuery.Color.names
	colors,

	// local aliases of functions called often
	each = jQuery.each;

// determine rgba support immediately
supportElem.style.cssText = "background-color:rgba(1,1,1,.5)";
support.rgba = supportElem.style.backgroundColor.indexOf( "rgba" ) > -1;

// define cache name and alpha properties
// for rgba and hsla spaces
each( spaces, function( spaceName, space ) {
	space.cache = "_" + spaceName;
	space.props.alpha = {
		idx: 3,
		type: "percent",
		def: 1
	};
});

function clamp( value, prop, allowEmpty ) {
	var type = propTypes[ prop.type ] || {};

	if ( value == null ) {
		return (allowEmpty || !prop.def) ? null : prop.def;
	}

	// ~~ is an short way of doing floor for positive numbers
	value = type.floor ? ~~value : parseFloat( value );

	// IE will pass in empty strings as value for alpha,
	// which will hit this case
	if ( isNaN( value ) ) {
		return prop.def;
	}

	if ( type.mod ) {
		// we add mod before modding to make sure that negatives values
		// get converted properly: -10 -> 350
		return (value + type.mod) % type.mod;
	}

	// for now all property types without mod have min and max
	return 0 > value ? 0 : type.max < value ? type.max : value;
}

function stringParse( string ) {
	var inst = color(),
		rgba = inst._rgba = [];

	string = string.toLowerCase();

	each( stringParsers, function( i, parser ) {
		var parsed,
			match = parser.re.exec( string ),
			values = match && parser.parse( match ),
			spaceName = parser.space || "rgba";

		if ( values ) {
			parsed = inst[ spaceName ]( values );

			// if this was an rgba parse the assignment might happen twice
			// oh well....
			inst[ spaces[ spaceName ].cache ] = parsed[ spaces[ spaceName ].cache ];
			rgba = inst._rgba = parsed._rgba;

			// exit each( stringParsers ) here because we matched
			return false;
		}
	});

	// Found a stringParser that handled it
	if ( rgba.length ) {

		// if this came from a parsed string, force "transparent" when alpha is 0
		// chrome, (and maybe others) return "transparent" as rgba(0,0,0,0)
		if ( rgba.join() === "0,0,0,0" ) {
			jQuery.extend( rgba, colors.transparent );
		}
		return inst;
	}

	// named colors
	return colors[ string ];
}

color.fn = jQuery.extend( color.prototype, {
	parse: function( red, green, blue, alpha ) {
		if ( red === undefined ) {
			this._rgba = [ null, null, null, null ];
			return this;
		}
		if ( red.jquery || red.nodeType ) {
			red = jQuery( red ).css( green );
			green = undefined;
		}

		var inst = this,
			type = jQuery.type( red ),
			rgba = this._rgba = [],
			source;

		// more than 1 argument specified - assume ( red, green, blue, alpha )
		if ( green !== undefined ) {
			red = [ red, green, blue, alpha ];
			type = "array";
		}

		if ( type === "string" ) {
			return this.parse( stringParse( red ) || colors._default );
		}

		if ( type === "array" ) {
			each( spaces.rgba.props, function( key, prop ) {
				rgba[ prop.idx ] = clamp( red[ prop.idx ], prop );
			});
			return this;
		}

		if ( type === "object" ) {
			if ( red instanceof color ) {
				each( spaces, function( spaceName, space ) {
					if ( red[ space.cache ] ) {
						inst[ space.cache ] = red[ space.cache ].slice();
					}
				});
			} else {
				each( spaces, function( spaceName, space ) {
					var cache = space.cache;
					each( space.props, function( key, prop ) {

						// if the cache doesn't exist, and we know how to convert
						if ( !inst[ cache ] && space.to ) {

							// if the value was null, we don't need to copy it
							// if the key was alpha, we don't need to copy it either
							if ( key === "alpha" || red[ key ] == null ) {
								return;
							}
							inst[ cache ] = space.to( inst._rgba );
						}

						// this is the only case where we allow nulls for ALL properties.
						// call clamp with alwaysAllowEmpty
						inst[ cache ][ prop.idx ] = clamp( red[ key ], prop, true );
					});

					// everything defined but alpha?
					if ( inst[ cache ] && $.inArray( null, inst[ cache ].slice( 0, 3 ) ) < 0 ) {
						// use the default of 1
						inst[ cache ][ 3 ] = 1;
						if ( space.from ) {
							inst._rgba = space.from( inst[ cache ] );
						}
					}
				});
			}
			return this;
		}
	},
	is: function( compare ) {
		var is = color( compare ),
			same = true,
			inst = this;

		each( spaces, function( _, space ) {
			var localCache,
				isCache = is[ space.cache ];
			if (isCache) {
				localCache = inst[ space.cache ] || space.to && space.to( inst._rgba ) || [];
				each( space.props, function( _, prop ) {
					if ( isCache[ prop.idx ] != null ) {
						same = ( isCache[ prop.idx ] === localCache[ prop.idx ] );
						return same;
					}
				});
			}
			return same;
		});
		return same;
	},
	_space: function() {
		var used = [],
			inst = this;
		each( spaces, function( spaceName, space ) {
			if ( inst[ space.cache ] ) {
				used.push( spaceName );
			}
		});
		return used.pop();
	},
	transition: function( other, distance ) {
		var end = color( other ),
			spaceName = end._space(),
			space = spaces[ spaceName ],
			startColor = this.alpha() === 0 ? color( "transparent" ) : this,
			start = startColor[ space.cache ] || space.to( startColor._rgba ),
			result = start.slice();

		end = end[ space.cache ];
		each( space.props, function( key, prop ) {
			var index = prop.idx,
				startValue = start[ index ],
				endValue = end[ index ],
				type = propTypes[ prop.type ] || {};

			// if null, don't override start value
			if ( endValue === null ) {
				return;
			}
			// if null - use end
			if ( startValue === null ) {
				result[ index ] = endValue;
			} else {
				if ( type.mod ) {
					if ( endValue - startValue > type.mod / 2 ) {
						startValue += type.mod;
					} else if ( startValue - endValue > type.mod / 2 ) {
						startValue -= type.mod;
					}
				}
				result[ index ] = clamp( ( endValue - startValue ) * distance + startValue, prop );
			}
		});
		return this[ spaceName ]( result );
	},
	blend: function( opaque ) {
		// if we are already opaque - return ourself
		if ( this._rgba[ 3 ] === 1 ) {
			return this;
		}

		var rgb = this._rgba.slice(),
			a = rgb.pop(),
			blend = color( opaque )._rgba;

		return color( jQuery.map( rgb, function( v, i ) {
			return ( 1 - a ) * blend[ i ] + a * v;
		}));
	},
	toRgbaString: function() {
		var prefix = "rgba(",
			rgba = jQuery.map( this._rgba, function( v, i ) {
				return v == null ? ( i > 2 ? 1 : 0 ) : v;
			});

		if ( rgba[ 3 ] === 1 ) {
			rgba.pop();
			prefix = "rgb(";
		}

		return prefix + rgba.join() + ")";
	},
	toHslaString: function() {
		var prefix = "hsla(",
			hsla = jQuery.map( this.hsla(), function( v, i ) {
				if ( v == null ) {
					v = i > 2 ? 1 : 0;
				}

				// catch 1 and 2
				if ( i && i < 3 ) {
					v = Math.round( v * 100 ) + "%";
				}
				return v;
			});

		if ( hsla[ 3 ] === 1 ) {
			hsla.pop();
			prefix = "hsl(";
		}
		return prefix + hsla.join() + ")";
	},
	toHexString: function( includeAlpha ) {
		var rgba = this._rgba.slice(),
			alpha = rgba.pop();

		if ( includeAlpha ) {
			rgba.push( ~~( alpha * 255 ) );
		}

		return "#" + jQuery.map( rgba, function( v, i ) {

			// default to 0 when nulls exist
			v = ( v || 0 ).toString( 16 );
			return v.length === 1 ? "0" + v : v;
		}).join("");
	},
	toString: function() {
		return this._rgba[ 3 ] === 0 ? "transparent" : this.toRgbaString();
	}
});
color.fn.parse.prototype = color.fn;

// hsla conversions adapted from:
// https://code.google.com/p/maashaack/source/browse/packages/graphics/trunk/src/graphics/colors/HUE2RGB.as?r=5021

function hue2rgb( p, q, h ) {
	h = ( h + 1 ) % 1;
	if ( h * 6 < 1 ) {
		return p + (q - p) * h * 6;
	}
	if ( h * 2 < 1) {
		return q;
	}
	if ( h * 3 < 2 ) {
		return p + (q - p) * ((2/3) - h) * 6;
	}
	return p;
}

spaces.hsla.to = function ( rgba ) {
	if ( rgba[ 0 ] == null || rgba[ 1 ] == null || rgba[ 2 ] == null ) {
		return [ null, null, null, rgba[ 3 ] ];
	}
	var r = rgba[ 0 ] / 255,
		g = rgba[ 1 ] / 255,
		b = rgba[ 2 ] / 255,
		a = rgba[ 3 ],
		max = Math.max( r, g, b ),
		min = Math.min( r, g, b ),
		diff = max - min,
		add = max + min,
		l = add * 0.5,
		h, s;

	if ( min === max ) {
		h = 0;
	} else if ( r === max ) {
		h = ( 60 * ( g - b ) / diff ) + 360;
	} else if ( g === max ) {
		h = ( 60 * ( b - r ) / diff ) + 120;
	} else {
		h = ( 60 * ( r - g ) / diff ) + 240;
	}

	if ( l === 0 || l === 1 ) {
		s = l;
	} else if ( l <= 0.5 ) {
		s = diff / add;
	} else {
		s = diff / ( 2 - add );
	}
	return [ Math.round(h) % 360, s, l, a == null ? 1 : a ];
};

spaces.hsla.from = function ( hsla ) {
	if ( hsla[ 0 ] == null || hsla[ 1 ] == null || hsla[ 2 ] == null ) {
		return [ null, null, null, hsla[ 3 ] ];
	}
	var h = hsla[ 0 ] / 360,
		s = hsla[ 1 ],
		l = hsla[ 2 ],
		a = hsla[ 3 ],
		q = l <= 0.5 ? l * ( 1 + s ) : l + s - l * s,
		p = 2 * l - q,
		r, g, b;

	return [
		Math.round( hue2rgb( p, q, h + ( 1 / 3 ) ) * 255 ),
		Math.round( hue2rgb( p, q, h ) * 255 ),
		Math.round( hue2rgb( p, q, h - ( 1 / 3 ) ) * 255 ),
		a
	];
};


each( spaces, function( spaceName, space ) {
	var props = space.props,
		cache = space.cache,
		to = space.to,
		from = space.from;

	// makes rgba() and hsla()
	color.fn[ spaceName ] = function( value ) {

		// generate a cache for this space if it doesn't exist
		if ( to && !this[ cache ] ) {
			this[ cache ] = to( this._rgba );
		}
		if ( value === undefined ) {
			return this[ cache ].slice();
		}

		var ret,
			type = jQuery.type( value ),
			arr = ( type === "array" || type === "object" ) ? value : arguments,
			local = this[ cache ].slice();

		each( props, function( key, prop ) {
			var val = arr[ type === "object" ? key : prop.idx ];
			if ( val == null ) {
				val = local[ prop.idx ];
			}
			local[ prop.idx ] = clamp( val, prop );
		});

		if ( from ) {
			ret = color( from( local ) );
			ret[ cache ] = local;
			return ret;
		} else {
			return color( local );
		}
	};

	// makes red() green() blue() alpha() hue() saturation() lightness()
	each( props, function( key, prop ) {
		// alpha is included in more than one space
		if ( color.fn[ key ] ) {
			return;
		}
		color.fn[ key ] = function( value ) {
			var vtype = jQuery.type( value ),
				fn = ( key === "alpha" ? ( this._hsla ? "hsla" : "rgba" ) : spaceName ),
				local = this[ fn ](),
				cur = local[ prop.idx ],
				match;

			if ( vtype === "undefined" ) {
				return cur;
			}

			if ( vtype === "function" ) {
				value = value.call( this, cur );
				vtype = jQuery.type( value );
			}
			if ( value == null && prop.empty ) {
				return this;
			}
			if ( vtype === "string" ) {
				match = rplusequals.exec( value );
				if ( match ) {
					value = cur + parseFloat( match[ 2 ] ) * ( match[ 1 ] === "+" ? 1 : -1 );
				}
			}
			local[ prop.idx ] = value;
			return this[ fn ]( local );
		};
	});
});

// add .fx.step functions
each( stepHooks, function( i, hook ) {
	jQuery.cssHooks[ hook ] = {
		set: function( elem, value ) {
			var parsed, curElem,
				backgroundColor = "";

			if ( jQuery.type( value ) !== "string" || ( parsed = stringParse( value ) ) ) {
				value = color( parsed || value );
				if ( !support.rgba && value._rgba[ 3 ] !== 1 ) {
					curElem = hook === "backgroundColor" ? elem.parentNode : elem;
					while (
						(backgroundColor === "" || backgroundColor === "transparent") &&
						curElem && curElem.style
					) {
						try {
							backgroundColor = jQuery.css( curElem, "backgroundColor" );
							curElem = curElem.parentNode;
						} catch ( e ) {
						}
					}

					value = value.blend( backgroundColor && backgroundColor !== "transparent" ?
						backgroundColor :
						"_default" );
				}

				value = value.toRgbaString();
			}
			try {
				elem.style[ hook ] = value;
			} catch( value ) {
				// wrapped to prevent IE from throwing errors on "invalid" values like 'auto' or 'inherit'
			}
		}
	};
	jQuery.fx.step[ hook ] = function( fx ) {
		if ( !fx.colorInit ) {
			fx.start = color( fx.elem, hook );
			fx.end = color( fx.end );
			fx.colorInit = true;
		}
		jQuery.cssHooks[ hook ].set( fx.elem, fx.start.transition( fx.end, fx.pos ) );
	};
});

jQuery.cssHooks.borderColor = {
	expand: function( value ) {
		var expanded = {};

		each( [ "Top", "Right", "Bottom", "Left" ], function( i, part ) {
			expanded[ "border" + part + "Color" ] = value;
		});
		return expanded;
	}
};

// Basic color names only.
// Usage of any of the other color names requires adding yourself or including
// jquery.color.svg-names.js.
colors = jQuery.Color.names = {
	// 4.1. Basic color keywords
	aqua: "#00ffff",
	black: "#000000",
	blue: "#0000ff",
	fuchsia: "#ff00ff",
	gray: "#808080",
	green: "#008000",
	lime: "#00ff00",
	maroon: "#800000",
	navy: "#000080",
	olive: "#808000",
	purple: "#800080",
	red: "#ff0000",
	silver: "#c0c0c0",
	teal: "#008080",
	white: "#ffffff",
	yellow: "#ffff00",

	// 4.2.3. "transparent" color keyword
	transparent: [ null, null, null, 0 ],

	_default: "#ffffff"
};

})( jQuery );



/******************************************************************************/
/****************************** CLASS ANIMATIONS ******************************/
/******************************************************************************/
(function() {

var classAnimationActions = [ "add", "remove", "toggle" ],
	shorthandStyles = {
		border: 1,
		borderBottom: 1,
		borderColor: 1,
		borderLeft: 1,
		borderRight: 1,
		borderTop: 1,
		borderWidth: 1,
		margin: 1,
		padding: 1
	};

$.each([ "borderLeftStyle", "borderRightStyle", "borderBottomStyle", "borderTopStyle" ], function( _, prop ) {
	$.fx.step[ prop ] = function( fx ) {
		if ( fx.end !== "none" && !fx.setAttr || fx.pos === 1 && !fx.setAttr ) {
			jQuery.style( fx.elem, prop, fx.end );
			fx.setAttr = true;
		}
	};
});

function getElementStyles() {
	var style = this.ownerDocument.defaultView ?
			this.ownerDocument.defaultView.getComputedStyle( this, null ) :
			this.currentStyle,
		newStyle = {},
		key,
		camelCase,
		len;

	// webkit enumerates style porperties
	if ( style && style.length && style[ 0 ] && style[ style[ 0 ] ] ) {
		len = style.length;
		while ( len-- ) {
			key = style[ len ];
			if ( typeof style[ key ] === "string" ) {
				newStyle[ $.camelCase( key ) ] = style[ key ];
			}
		}
	} else {
		for ( key in style ) {
			if ( typeof style[ key ] === "string" ) {
				newStyle[ key ] = style[ key ];
			}
		}
	}

	return newStyle;
}


function styleDifference( oldStyle, newStyle ) {
	var diff = {},
		name, value;

	for ( name in newStyle ) {
		value = newStyle[ name ];
		if ( oldStyle[ name ] !== value ) {
			if ( !shorthandStyles[ name ] ) {
				if ( $.fx.step[ name ] || !isNaN( parseFloat( value ) ) ) {
					diff[ name ] = value;
				}
			}
		}
	}

	return diff;
}

$.effects.animateClass = function( value, duration, easing, callback ) {
	var o = $.speed( duration, easing, callback );

	return this.queue( function() {
		var animated = $( this ),
			baseClass = animated.attr( "class" ) || "",
			applyClassChange,
			allAnimations = o.children ? animated.find( "*" ).andSelf() : animated;

		// map the animated objects to store the original styles.
		allAnimations = allAnimations.map(function() {
			var el = $( this );
			return {
				el: el,
				start: getElementStyles.call( this )
			};
		});

		// apply class change
		applyClassChange = function() {
			$.each( classAnimationActions, function(i, action) {
				if ( value[ action ] ) {
					animated[ action + "Class" ]( value[ action ] );
				}
			});
		};
		applyClassChange();

		// map all animated objects again - calculate new styles and diff
		allAnimations = allAnimations.map(function() {
			this.end = getElementStyles.call( this.el[ 0 ] );
			this.diff = styleDifference( this.start, this.end );
			return this;
		});

		// apply original class
		animated.attr( "class", baseClass );

		// map all animated objects again - this time collecting a promise
		allAnimations = allAnimations.map(function() {
			var styleInfo = this,
				dfd = $.Deferred(),
				opts = jQuery.extend({}, o, {
					queue: false,
					complete: function() {
						dfd.resolve( styleInfo );
					}
				});

			this.el.animate( this.diff, opts );
			return dfd.promise();
		});

		// once all animations have completed:
		$.when.apply( $, allAnimations.get() ).done(function() {

			// set the final class
			applyClassChange();

			// for each animated element,
			// clear all css properties that were animated
			$.each( arguments, function() {
				var el = this.el;
				$.each( this.diff, function(key) {
					el.css( key, '' );
				});
			});

			// this is guarnteed to be there if you use jQuery.speed()
			// it also handles dequeuing the next anim...
			o.complete.call( animated[ 0 ] );
		});
	});
};

$.fn.extend({
	_addClass: $.fn.addClass,
	addClass: function( classNames, speed, easing, callback ) {
		return speed ?
			$.effects.animateClass.call( this,
				{ add: classNames }, speed, easing, callback ) :
			this._addClass( classNames );
	},

	_removeClass: $.fn.removeClass,
	removeClass: function( classNames, speed, easing, callback ) {
		return speed ?
			$.effects.animateClass.call( this,
				{ remove: classNames }, speed, easing, callback ) :
			this._removeClass( classNames );
	},

	_toggleClass: $.fn.toggleClass,
	toggleClass: function( classNames, force, speed, easing, callback ) {
		if ( typeof force === "boolean" || force === undefined ) {
			if ( !speed ) {
				// without speed parameter
				return this._toggleClass( classNames, force );
			} else {
				return $.effects.animateClass.call( this,
					(force ? { add: classNames } : { remove: classNames }),
					speed, easing, callback );
			}
		} else {
			// without force parameter
			return $.effects.animateClass.call( this,
				{ toggle: classNames }, force, speed, easing );
		}
	},

	switchClass: function( remove, add, speed, easing, callback) {
		return $.effects.animateClass.call( this, {
			add: add,
			remove: remove
		}, speed, easing, callback );
	}
});

})();

/******************************************************************************/
/*********************************** EFFECTS **********************************/
/******************************************************************************/

(function() {

$.extend( $.effects, {
	version: "1.9.0",

	// Saves a set of properties in a data storage
	save: function( element, set ) {
		for( var i=0; i < set.length; i++ ) {
			if ( set[ i ] !== null ) {
				element.data( dataSpace + set[ i ], element[ 0 ].style[ set[ i ] ] );
			}
		}
	},

	// Restores a set of previously saved properties from a data storage
	restore: function( element, set ) {
		var val, i;
		for( i=0; i < set.length; i++ ) {
			if ( set[ i ] !== null ) {
				val = element.data( dataSpace + set[ i ] );
				// support: jQuery 1.6.2
				// http://bugs.jquery.com/ticket/9917
				// jQuery 1.6.2 incorrectly returns undefined for any falsy value.
				// We can't differentiate between "" and 0 here, so we just assume
				// empty string since it's likely to be a more common value...
				if ( val === undefined ) {
					val = "";
				}
				element.css( set[ i ], val );
			}
		}
	},

	setMode: function( el, mode ) {
		if (mode === "toggle") {
			mode = el.is( ":hidden" ) ? "show" : "hide";
		}
		return mode;
	},

	// Translates a [top,left] array into a baseline value
	// this should be a little more flexible in the future to handle a string & hash
	getBaseline: function( origin, original ) {
		var y, x;
		switch ( origin[ 0 ] ) {
			case "top": y = 0; break;
			case "middle": y = 0.5; break;
			case "bottom": y = 1; break;
			default: y = origin[ 0 ] / original.height;
		}
		switch ( origin[ 1 ] ) {
			case "left": x = 0; break;
			case "center": x = 0.5; break;
			case "right": x = 1; break;
			default: x = origin[ 1 ] / original.width;
		}
		return {
			x: x,
			y: y
		};
	},

	// Wraps the element around a wrapper that copies position properties
	createWrapper: function( element ) {

		// if the element is already wrapped, return it
		if ( element.parent().is( ".ui-effects-wrapper" )) {
			return element.parent();
		}

		// wrap the element
		var props = {
				width: element.outerWidth(true),
				height: element.outerHeight(true),
				"float": element.css( "float" )
			},
			wrapper = $( "<div></div>" )
				.addClass( "ui-effects-wrapper" )
				.css({
					fontSize: "100%",
					background: "transparent",
					border: "none",
					margin: 0,
					padding: 0
				}),
			// Store the size in case width/height are defined in % - Fixes #5245
			size = {
				width: element.width(),
				height: element.height()
			},
			active = document.activeElement;

		// support: Firefox
		// Firefox incorrectly exposes anonymous content
		// https://bugzilla.mozilla.org/show_bug.cgi?id=561664
		try {
			active.id;
		} catch( e ) {
			active = document.body;
		}

		element.wrap( wrapper );

		// Fixes #7595 - Elements lose focus when wrapped.
		if ( element[ 0 ] === active || $.contains( element[ 0 ], active ) ) {
			$( active ).focus();
		}

		wrapper = element.parent(); //Hotfix for jQuery 1.4 since some change in wrap() seems to actually lose the reference to the wrapped element

		// transfer positioning properties to the wrapper
		if ( element.css( "position" ) === "static" ) {
			wrapper.css({ position: "relative" });
			element.css({ position: "relative" });
		} else {
			$.extend( props, {
				position: element.css( "position" ),
				zIndex: element.css( "z-index" )
			});
			$.each([ "top", "left", "bottom", "right" ], function(i, pos) {
				props[ pos ] = element.css( pos );
				if ( isNaN( parseInt( props[ pos ], 10 ) ) ) {
					props[ pos ] = "auto";
				}
			});
			element.css({
				position: "relative",
				top: 0,
				left: 0,
				right: "auto",
				bottom: "auto"
			});
		}
		element.css(size);

		return wrapper.css( props ).show();
	},

	removeWrapper: function( element ) {
		var active = document.activeElement;

		if ( element.parent().is( ".ui-effects-wrapper" ) ) {
			element.parent().replaceWith( element );

			// Fixes #7595 - Elements lose focus when wrapped.
			if ( element[ 0 ] === active || $.contains( element[ 0 ], active ) ) {
				$( active ).focus();
			}
		}


		return element;
	},

	setTransition: function( element, list, factor, value ) {
		value = value || {};
		$.each( list, function( i, x ) {
			var unit = element.cssUnit( x );
			if ( unit[ 0 ] > 0 ) {
				value[ x ] = unit[ 0 ] * factor + unit[ 1 ];
			}
		});
		return value;
	}
});

// return an effect options object for the given parameters:
function _normalizeArguments( effect, options, speed, callback ) {

	// allow passing all optinos as the first parameter
	if ( $.isPlainObject( effect ) ) {
		options = effect;
		effect = effect.effect;
	}

	// convert to an object
	effect = { effect: effect };

	// catch (effect)
	if ( options === undefined ) {
		options = {};
	}

	// catch (effect, callback)
	if ( $.isFunction( options ) ) {
		callback = options;
		speed = null;
		options = {};
	}

	// catch (effect, speed, ?)
	if ( typeof options === "number" || $.fx.speeds[ options ] ) {
		callback = speed;
		speed = options;
		options = {};
	}

	// catch (effect, options, callback)
	if ( $.isFunction( speed ) ) {
		callback = speed;
		speed = null;
	}

	// add options to effect
	if ( options ) {
		$.extend( effect, options );
	}

	speed = speed || options.duration;
	effect.duration = $.fx.off ? 0 :
		typeof speed === "number" ? speed :
		speed in $.fx.speeds ? $.fx.speeds[ speed ] :
		$.fx.speeds._default;

	effect.complete = callback || options.complete;

	return effect;
}

function standardSpeed( speed ) {
	// valid standard speeds
	if ( !speed || typeof speed === "number" || $.fx.speeds[ speed ] ) {
		return true;
	}

	// invalid strings - treat as "normal" speed
	if ( typeof speed === "string" && !$.effects.effect[ speed ] ) {
		// TODO: remove in 2.0 (#7115)
		if ( backCompat && $.effects[ speed ] ) {
			return false;
		}
		return true;
	}

	return false;
}

$.fn.extend({
	effect: function( effect, options, speed, callback ) {
		var args = _normalizeArguments.apply( this, arguments ),
			mode = args.mode,
			queue = args.queue,
			effectMethod = $.effects.effect[ args.effect ],

			// DEPRECATED: remove in 2.0 (#7115)
			oldEffectMethod = !effectMethod && backCompat && $.effects[ args.effect ];

		if ( $.fx.off || !( effectMethod || oldEffectMethod ) ) {
			// delegate to the original method (e.g., .show()) if possible
			if ( mode ) {
				return this[ mode ]( args.duration, args.complete );
			} else {
				return this.each( function() {
					if ( args.complete ) {
						args.complete.call( this );
					}
				});
			}
		}

		function run( next ) {
			var elem = $( this ),
				complete = args.complete,
				mode = args.mode;

			function done() {
				if ( $.isFunction( complete ) ) {
					complete.call( elem[0] );
				}
				if ( $.isFunction( next ) ) {
					next();
				}
			}

			// if the element is hiddden and mode is hide,
			// or element is visible and mode is show
			if ( elem.is( ":hidden" ) ? mode === "hide" : mode === "show" ) {
				done();
			} else {
				effectMethod.call( elem[0], args, done );
			}
		}

		// TODO: remove this check in 2.0, effectMethod will always be true
		if ( effectMethod ) {
			return queue === false ? this.each( run ) : this.queue( queue || "fx", run );
		} else {
			// DEPRECATED: remove in 2.0 (#7115)
			return oldEffectMethod.call(this, {
				options: args,
				duration: args.duration,
				callback: args.complete,
				mode: args.mode
			});
		}
	},

	_show: $.fn.show,
	show: function( speed ) {
		if ( standardSpeed( speed ) ) {
			return this._show.apply( this, arguments );
		} else {
			var args = _normalizeArguments.apply( this, arguments );
			args.mode = "show";
			return this.effect.call( this, args );
		}
	},

	_hide: $.fn.hide,
	hide: function( speed ) {
		if ( standardSpeed( speed ) ) {
			return this._hide.apply( this, arguments );
		} else {
			var args = _normalizeArguments.apply( this, arguments );
			args.mode = "hide";
			return this.effect.call( this, args );
		}
	},

	// jQuery core overloads toggle and creates _toggle
	__toggle: $.fn.toggle,
	toggle: function( speed ) {
		if ( standardSpeed( speed ) || typeof speed === "boolean" || $.isFunction( speed ) ) {
			return this.__toggle.apply( this, arguments );
		} else {
			var args = _normalizeArguments.apply( this, arguments );
			args.mode = "toggle";
			return this.effect.call( this, args );
		}
	},

	// helper functions
	cssUnit: function(key) {
		var style = this.css( key ),
			val = [];

		$.each( [ "em", "px", "%", "pt" ], function( i, unit ) {
			if ( style.indexOf( unit ) > 0 ) {
				val = [ parseFloat( style ), unit ];
			}
		});
		return val;
	}
});

})();

/******************************************************************************/
/*********************************** EASING ***********************************/
/******************************************************************************/

(function() {

// based on easing equations from Robert Penner (http://www.robertpenner.com/easing)

var baseEasings = {};

$.each( [ "Quad", "Cubic", "Quart", "Quint", "Expo" ], function( i, name ) {
	baseEasings[ name ] = function( p ) {
		return Math.pow( p, i + 2 );
	};
});

$.extend( baseEasings, {
	Sine: function ( p ) {
		return 1 - Math.cos( p * Math.PI / 2 );
	},
	Circ: function ( p ) {
		return 1 - Math.sqrt( 1 - p * p );
	},
	Elastic: function( p ) {
		return p === 0 || p === 1 ? p :
			-Math.pow( 2, 8 * (p - 1) ) * Math.sin( ( (p - 1) * 80 - 7.5 ) * Math.PI / 15 );
	},
	Back: function( p ) {
		return p * p * ( 3 * p - 2 );
	},
	Bounce: function ( p ) {
		var pow2,
			bounce = 4;

		while ( p < ( ( pow2 = Math.pow( 2, --bounce ) ) - 1 ) / 11 ) {}
		return 1 / Math.pow( 4, 3 - bounce ) - 7.5625 * Math.pow( ( pow2 * 3 - 2 ) / 22 - p, 2 );
	}
});

$.each( baseEasings, function( name, easeIn ) {
	$.easing[ "easeIn" + name ] = easeIn;
	$.easing[ "easeOut" + name ] = function( p ) {
		return 1 - easeIn( 1 - p );
	};
	$.easing[ "easeInOut" + name ] = function( p ) {
		return p < 0.5 ?
			easeIn( p * 2 ) / 2 :
			1 - easeIn( p * -2 + 2 ) / 2;
	};
});

})();

})(jQuery));
(function( $, undefined ) {

var rvertical = /up|down|vertical/,
	rpositivemotion = /up|left|vertical|horizontal/;

$.effects.effect.blind = function( o, done ) {
	// Create element
	var el = $( this ),
		props = [ "position", "top", "bottom", "left", "right", "height", "width" ],
		mode = $.effects.setMode( el, o.mode || "hide" ),
		direction = o.direction || "up",
		vertical = rvertical.test( direction ),
		ref = vertical ? "height" : "width",
		ref2 = vertical ? "top" : "left",
		motion = rpositivemotion.test( direction ),
		animation = {},
		show = mode === "show",
		wrapper, distance, margin;

	// if already wrapped, the wrapper's properties are my property. #6245
	if ( el.parent().is( ".ui-effects-wrapper" ) ) {
		$.effects.save( el.parent(), props );
	} else {
		$.effects.save( el, props );
	}
	el.show();
	wrapper = $.effects.createWrapper( el ).css({
		overflow: "hidden"
	});

	distance = wrapper[ ref ]();
	margin = parseFloat( wrapper.css( ref2 ) ) || 0;

	animation[ ref ] = show ? distance : 0;
	if ( !motion ) {
		el
			.css( vertical ? "bottom" : "right", 0 )
			.css( vertical ? "top" : "left", "auto" )
			.css({ position: "absolute" });

		animation[ ref2 ] = show ? margin : distance + margin;
	}

	// start at 0 if we are showing
	if ( show ) {
		wrapper.css( ref, 0 );
		if ( ! motion ) {
			wrapper.css( ref2, margin + distance );
		}
	}

	// Animate
	wrapper.animate( animation, {
		duration: o.duration,
		easing: o.easing,
		queue: false,
		complete: function() {
			if ( mode === "hide" ) {
				el.hide();
			}
			$.effects.restore( el, props );
			$.effects.removeWrapper( el );
			done();
		}
	});

};

})(jQuery);
(function( $, undefined ) {

$.effects.effect.bounce = function( o, done ) {
	var el = $( this ),
		props = [ "position", "top", "bottom", "left", "right", "height", "width" ],

		// defaults:
		mode = $.effects.setMode( el, o.mode || "effect" ),
		hide = mode === "hide",
		show = mode === "show",
		direction = o.direction || "up",
		distance = o.distance,
		times = o.times || 5,

		// number of internal animations
		anims = times * 2 + ( show || hide ? 1 : 0 ),
		speed = o.duration / anims,
		easing = o.easing,

		// utility:
		ref = ( direction === "up" || direction === "down" ) ? "top" : "left",
		motion = ( direction === "up" || direction === "left" ),
		i,
		upAnim,
		downAnim,

		// we will need to re-assemble the queue to stack our animations in place
		queue = el.queue(),
		queuelen = queue.length;

	// Avoid touching opacity to prevent clearType and PNG issues in IE
	if ( show || hide ) {
		props.push( "opacity" );
	}

	$.effects.save( el, props );
	el.show();
	$.effects.createWrapper( el ); // Create Wrapper

	// default distance for the BIGGEST bounce is the outer Distance / 3
	if ( !distance ) {
		distance = el[ ref === "top" ? "outerHeight" : "outerWidth" ]() / 3;
	}

	if ( show ) {
		downAnim = { opacity: 1 };
		downAnim[ ref ] = 0;

		// if we are showing, force opacity 0 and set the initial position
		// then do the "first" animation
		el.css( "opacity", 0 )
			.css( ref, motion ? -distance * 2 : distance * 2 )
			.animate( downAnim, speed, easing );
	}

	// start at the smallest distance if we are hiding
	if ( hide ) {
		distance = distance / Math.pow( 2, times - 1 );
	}

	downAnim = {};
	downAnim[ ref ] = 0;
	// Bounces up/down/left/right then back to 0 -- times * 2 animations happen here
	for ( i = 0; i < times; i++ ) {
		upAnim = {};
		upAnim[ ref ] = ( motion ? "-=" : "+=" ) + distance;

		el.animate( upAnim, speed, easing )
			.animate( downAnim, speed, easing );

		distance = hide ? distance * 2 : distance / 2;
	}

	// Last Bounce when Hiding
	if ( hide ) {
		upAnim = { opacity: 0 };
		upAnim[ ref ] = ( motion ? "-=" : "+=" ) + distance;

		el.animate( upAnim, speed, easing );
	}

	el.queue(function() {
		if ( hide ) {
			el.hide();
		}
		$.effects.restore( el, props );
		$.effects.removeWrapper( el );
		done();
	});

	// inject all the animations we just queued to be first in line (after "inprogress")
	if ( queuelen > 1) {
		queue.splice.apply( queue,
			[ 1, 0 ].concat( queue.splice( queuelen, anims + 1 ) ) );
	}
	el.dequeue();

};

})(jQuery);
(function( $, undefined ) {

$.effects.effect.clip = function( o, done ) {
	// Create element
	var el = $( this ),
		props = [ "position", "top", "bottom", "left", "right", "height", "width" ],
		mode = $.effects.setMode( el, o.mode || "hide" ),
		show = mode === "show",
		direction = o.direction || "vertical",
		vert = direction === "vertical",
		size = vert ? "height" : "width",
		position = vert ? "top" : "left",
		animation = {},
		wrapper, animate, distance;

	// Save & Show
	$.effects.save( el, props );
	el.show();

	// Create Wrapper
	wrapper = $.effects.createWrapper( el ).css({
		overflow: "hidden"
	});
	animate = ( el[0].tagName === "IMG" ) ? wrapper : el;
	distance = animate[ size ]();

	// Shift
	if ( show ) {
		animate.css( size, 0 );
		animate.css( position, distance / 2 );
	}

	// Create Animation Object:
	animation[ size ] = show ? distance : 0;
	animation[ position ] = show ? 0 : distance / 2;

	// Animate
	animate.animate( animation, {
		queue: false,
		duration: o.duration,
		easing: o.easing,
		complete: function() {
			if ( !show ) {
				el.hide();
			}
			$.effects.restore( el, props );
			$.effects.removeWrapper( el );
			done();
		}
	});

};

})(jQuery);
(function( $, undefined ) {

$.effects.effect.drop = function( o, done ) {

	var el = $( this ),
		props = [ "position", "top", "bottom", "left", "right", "opacity", "height", "width" ],
		mode = $.effects.setMode( el, o.mode || "hide" ),
		show = mode === "show",
		direction = o.direction || "left",
		ref = ( direction === "up" || direction === "down" ) ? "top" : "left",
		motion = ( direction === "up" || direction === "left" ) ? "pos" : "neg",
		animation = {
			opacity: show ? 1 : 0
		},
		distance;

	// Adjust
	$.effects.save( el, props );
	el.show();
	$.effects.createWrapper( el );

	distance = o.distance || el[ ref === "top" ? "outerHeight": "outerWidth" ]( true ) / 2;

	if ( show ) {
		el
			.css( "opacity", 0 )
			.css( ref, motion === "pos" ? -distance : distance );
	}

	// Animation
	animation[ ref ] = ( show ?
		( motion === "pos" ? "+=" : "-=" ) :
		( motion === "pos" ? "-=" : "+=" ) ) +
		distance;

	// Animate
	el.animate( animation, {
		queue: false,
		duration: o.duration,
		easing: o.easing,
		complete: function() {
			if ( mode === "hide" ) {
				el.hide();
			}
			$.effects.restore( el, props );
			$.effects.removeWrapper( el );
			done();
		}
	});
};

})(jQuery);
(function( $, undefined ) {

$.effects.effect.explode = function( o, done ) {

	var rows = o.pieces ? Math.round( Math.sqrt( o.pieces ) ) : 3,
		cells = rows,
		el = $( this ),
		mode = $.effects.setMode( el, o.mode || "hide" ),
		show = mode === "show",

		// show and then visibility:hidden the element before calculating offset
		offset = el.show().css( "visibility", "hidden" ).offset(),

		// width and height of a piece
		width = Math.ceil( el.outerWidth() / cells ),
		height = Math.ceil( el.outerHeight() / rows ),
		pieces = [],

		// loop
		i, j, left, top, mx, my;

	// children animate complete:
	function childComplete() {
		pieces.push( this );
		if ( pieces.length === rows * cells ) {
			animComplete();
		}
	}

	// clone the element for each row and cell.
	for( i = 0; i < rows ; i++ ) { // ===>
		top = offset.top + i * height;
		my = i - ( rows - 1 ) / 2 ;

		for( j = 0; j < cells ; j++ ) { // |||
			left = offset.left + j * width;
			mx = j - ( cells - 1 ) / 2 ;

			// Create a clone of the now hidden main element that will be absolute positioned
			// within a wrapper div off the -left and -top equal to size of our pieces
			el
				.clone()
				.appendTo( "body" )
				.wrap( "<div></div>" )
				.css({
					position: "absolute",
					visibility: "visible",
					left: -j * width,
					top: -i * height
				})

			// select the wrapper - make it overflow: hidden and absolute positioned based on
			// where the original was located +left and +top equal to the size of pieces
				.parent()
				.addClass( "ui-effects-explode" )
				.css({
					position: "absolute",
					overflow: "hidden",
					width: width,
					height: height,
					left: left + ( show ? mx * width : 0 ),
					top: top + ( show ? my * height : 0 ),
					opacity: show ? 0 : 1
				}).animate({
					left: left + ( show ? 0 : mx * width ),
					top: top + ( show ? 0 : my * height ),
					opacity: show ? 1 : 0
				}, o.duration || 500, o.easing, childComplete );
		}
	}

	function animComplete() {
		el.css({
			visibility: "visible"
		});
		$( pieces ).remove();
		if ( !show ) {
			el.hide();
		}
		done();
	}
};

})(jQuery);
(function( $, undefined ) {

$.effects.effect.fade = function( o, done ) {
	var el = $( this ),
		mode = $.effects.setMode( el, o.mode || "toggle" );

	el.animate({
		opacity: mode
	}, {
		queue: false,
		duration: o.duration,
		easing: o.easing,
		complete: done
	});
};

})( jQuery );
(function( $, undefined ) {

$.effects.effect.fold = function( o, done ) {

	// Create element
	var el = $( this ),
		props = [ "position", "top", "bottom", "left", "right", "height", "width" ],
		mode = $.effects.setMode( el, o.mode || "hide" ),
		show = mode === "show",
		hide = mode === "hide",
		size = o.size || 15,
		percent = /([0-9]+)%/.exec( size ),
		horizFirst = !!o.horizFirst,
		widthFirst = show !== horizFirst,
		ref = widthFirst ? [ "width", "height" ] : [ "height", "width" ],
		duration = o.duration / 2,
		wrapper, distance,
		animation1 = {},
		animation2 = {};

	$.effects.save( el, props );
	el.show();

	// Create Wrapper
	wrapper = $.effects.createWrapper( el ).css({
		overflow: "hidden"
	});
	distance = widthFirst ?
		[ wrapper.width(), wrapper.height() ] :
		[ wrapper.height(), wrapper.width() ];

	if ( percent ) {
		size = parseInt( percent[ 1 ], 10 ) / 100 * distance[ hide ? 0 : 1 ];
	}
	if ( show ) {
		wrapper.css( horizFirst ? {
			height: 0,
			width: size
		} : {
			height: size,
			width: 0
		});
	}

	// Animation
	animation1[ ref[ 0 ] ] = show ? distance[ 0 ] : size;
	animation2[ ref[ 1 ] ] = show ? distance[ 1 ] : 0;

	// Animate
	wrapper
		.animate( animation1, duration, o.easing )
		.animate( animation2, duration, o.easing, function() {
			if ( hide ) {
				el.hide();
			}
			$.effects.restore( el, props );
			$.effects.removeWrapper( el );
			done();
		});

};

})(jQuery);
(function( $, undefined ) {

$.effects.effect.highlight = function( o, done ) {
	var elem = $( this ),
		props = [ "backgroundImage", "backgroundColor", "opacity" ],
		mode = $.effects.setMode( elem, o.mode || "show" ),
		animation = {
			backgroundColor: elem.css( "backgroundColor" )
		};

	if (mode === "hide") {
		animation.opacity = 0;
	}

	$.effects.save( elem, props );
	
	elem
		.show()
		.css({
			backgroundImage: "none",
			backgroundColor: o.color || "#ffff99"
		})
		.animate( animation, {
			queue: false,
			duration: o.duration,
			easing: o.easing,
			complete: function() {
				if ( mode === "hide" ) {
					elem.hide();
				}
				$.effects.restore( elem, props );
				done();
			}
		});
};

})(jQuery);
(function( $, undefined ) {

$.effects.effect.pulsate = function( o, done ) {
	var elem = $( this ),
		mode = $.effects.setMode( elem, o.mode || "show" ),
		show = mode === "show",
		hide = mode === "hide",
		showhide = ( show || mode === "hide" ),

		// showing or hiding leaves of the "last" animation
		anims = ( ( o.times || 5 ) * 2 ) + ( showhide ? 1 : 0 ),
		duration = o.duration / anims,
		animateTo = 0,
		queue = elem.queue(),
		queuelen = queue.length,
		i;

	if ( show || !elem.is(":visible")) {
		elem.css( "opacity", 0 ).show();
		animateTo = 1;
	}

	// anims - 1 opacity "toggles"
	for ( i = 1; i < anims; i++ ) {
		elem.animate({
			opacity: animateTo
		}, duration, o.easing );
		animateTo = 1 - animateTo;
	}

	elem.animate({
		opacity: animateTo
	}, duration, o.easing);

	elem.queue(function() {
		if ( hide ) {
			elem.hide();
		}
		done();
	});

	// We just queued up "anims" animations, we need to put them next in the queue
	if ( queuelen > 1 ) {
		queue.splice.apply( queue,
			[ 1, 0 ].concat( queue.splice( queuelen, anims + 1 ) ) );
	}
	elem.dequeue();
};

})(jQuery);
(function( $, undefined ) {

$.effects.effect.puff = function( o, done ) {
	var elem = $( this ),
		mode = $.effects.setMode( elem, o.mode || "hide" ),
		hide = mode === "hide",
		percent = parseInt( o.percent, 10 ) || 150,
		factor = percent / 100,
		original = {
			height: elem.height(),
			width: elem.width()
		};

	$.extend( o, {
		effect: "scale",
		queue: false,
		fade: true,
		mode: mode,
		complete: done,
		percent: hide ? percent : 100,
		from: hide ?
			original :
			{
				height: original.height * factor,
				width: original.width * factor
			}
	});

	elem.effect( o );
};

$.effects.effect.scale = function( o, done ) {

	// Create element
	var el = $( this ),
		options = $.extend( true, {}, o ),
		mode = $.effects.setMode( el, o.mode || "effect" ),
		percent = parseInt( o.percent, 10 ) ||
			( parseInt( o.percent, 10 ) === 0 ? 0 : ( mode === "hide" ? 0 : 100 ) ),
		direction = o.direction || "both",
		origin = o.origin,
		original = {
			height: el.height(),
			width: el.width(),
			outerHeight: el.outerHeight(),
			outerWidth: el.outerWidth()
		},
		factor = {
			y: direction !== "horizontal" ? (percent / 100) : 1,
			x: direction !== "vertical" ? (percent / 100) : 1
		};

	// We are going to pass this effect to the size effect:
	options.effect = "size";
	options.queue = false;
	options.complete = done;

	// Set default origin and restore for show/hide
	if ( mode !== "effect" ) {
		options.origin = origin || ["middle","center"];
		options.restore = true;
	}

	options.from = o.from || ( mode === "show" ? { height: 0, width: 0 } : original );
	options.to = {
		height: original.height * factor.y,
		width: original.width * factor.x,
		outerHeight: original.outerHeight * factor.y,
		outerWidth: original.outerWidth * factor.x
	};

	// Fade option to support puff
	if ( options.fade ) {
		if ( mode === "show" ) {
			options.from.opacity = 0;
			options.to.opacity = 1;
		}
		if ( mode === "hide" ) {
			options.from.opacity = 1;
			options.to.opacity = 0;
		}
	}

	// Animate
	el.effect( options );

};

$.effects.effect.size = function( o, done ) {

	// Create element
	var el = $( this ),
		props = [ "position", "top", "bottom", "left", "right", "width", "height", "overflow", "opacity" ],

		// Always restore
		props1 = [ "position", "top", "bottom", "left", "right", "overflow", "opacity" ],

		// Copy for children
		props2 = [ "width", "height", "overflow" ],
		cProps = [ "fontSize" ],
		vProps = [ "borderTopWidth", "borderBottomWidth", "paddingTop", "paddingBottom" ],
		hProps = [ "borderLeftWidth", "borderRightWidth", "paddingLeft", "paddingRight" ],

		// Set options
		mode = $.effects.setMode( el, o.mode || "effect" ),
		restore = o.restore || mode !== "effect",
		scale = o.scale || "both",
		origin = o.origin || [ "middle", "center" ],
		original, baseline, factor,
		position = el.css( "position" );

	if ( mode === "show" ) {
		el.show();
	}
	original = {
		height: el.height(),
		width: el.width(),
		outerHeight: el.outerHeight(),
		outerWidth: el.outerWidth()
	};

	el.from = o.from || original;
	el.to = o.to || original;

	// Set scaling factor
	factor = {
		from: {
			y: el.from.height / original.height,
			x: el.from.width / original.width
		},
		to: {
			y: el.to.height / original.height,
			x: el.to.width / original.width
		}
	};

	// Scale the css box
	if ( scale === "box" || scale === "both" ) {

		// Vertical props scaling
		if ( factor.from.y !== factor.to.y ) {
			props = props.concat( vProps );
			el.from = $.effects.setTransition( el, vProps, factor.from.y, el.from );
			el.to = $.effects.setTransition( el, vProps, factor.to.y, el.to );
		}

		// Horizontal props scaling
		if ( factor.from.x !== factor.to.x ) {
			props = props.concat( hProps );
			el.from = $.effects.setTransition( el, hProps, factor.from.x, el.from );
			el.to = $.effects.setTransition( el, hProps, factor.to.x, el.to );
		}
	}

	// Scale the content
	if ( scale === "content" || scale === "both" ) {

		// Vertical props scaling
		if ( factor.from.y !== factor.to.y ) {
			props = props.concat( cProps );
			el.from = $.effects.setTransition( el, cProps, factor.from.y, el.from );
			el.to = $.effects.setTransition( el, cProps, factor.to.y, el.to );
		}
	}

	$.effects.save( el, restore ? props : props1 );
	el.show();
	$.effects.createWrapper( el );
	el.css( "overflow", "hidden" ).css( el.from );

	// Adjust
	if (origin) { // Calculate baseline shifts
		baseline = $.effects.getBaseline( origin, original );
		el.from.top = ( original.outerHeight - el.outerHeight() ) * baseline.y;
		el.from.left = ( original.outerWidth - el.outerWidth() ) * baseline.x;
		el.to.top = ( original.outerHeight - el.to.outerHeight ) * baseline.y;
		el.to.left = ( original.outerWidth - el.to.outerWidth ) * baseline.x;
	}
	el.css( el.from ); // set top & left

	// Animate
	if ( scale === "content" || scale === "both" ) { // Scale the children

		// Add margins/font-size
		vProps = vProps.concat([ "marginTop", "marginBottom" ]).concat(cProps);
		hProps = hProps.concat([ "marginLeft", "marginRight" ]);
		props2 = props.concat(vProps).concat(hProps);

		el.find( "*[width]" ).each( function(){
			var child = $( this ),
				c_original = {
					height: child.height(),
					width: child.width()
				};
			if (restore) {
				$.effects.save(child, props2);
			}

			child.from = {
				height: c_original.height * factor.from.y,
				width: c_original.width * factor.from.x
			};
			child.to = {
				height: c_original.height * factor.to.y,
				width: c_original.width * factor.to.x
			};

			// Vertical props scaling
			if ( factor.from.y !== factor.to.y ) {
				child.from = $.effects.setTransition( child, vProps, factor.from.y, child.from );
				child.to = $.effects.setTransition( child, vProps, factor.to.y, child.to );
			}

			// Horizontal props scaling
			if ( factor.from.x !== factor.to.x ) {
				child.from = $.effects.setTransition( child, hProps, factor.from.x, child.from );
				child.to = $.effects.setTransition( child, hProps, factor.to.x, child.to );
			}

			// Animate children
			child.css( child.from );
			child.animate( child.to, o.duration, o.easing, function() {

				// Restore children
				if ( restore ) {
					$.effects.restore( child, props2 );
				}
			});
		});
	}

	// Animate
	el.animate( el.to, {
		queue: false,
		duration: o.duration,
		easing: o.easing,
		complete: function() {
			if ( el.to.opacity === 0 ) {
				el.css( "opacity", el.from.opacity );
			}
			if( mode === "hide" ) {
				el.hide();
			}
			$.effects.restore( el, restore ? props : props1 );
			if ( !restore ) {

				// we need to calculate our new positioning based on the scaling
				if ( position === "static" ) {
					el.css({
						position: "relative",
						top: el.to.top,
						left: el.to.left
					});
				} else {
					$.each([ "top", "left" ], function( idx, pos ) {
						el.css( pos, function( _, str ) {
							var val = parseInt( str, 10 ),
								toRef = idx ? el.to.left : el.to.top;

							// if original was "auto", recalculate the new value from wrapper
							if ( str === "auto" ) {
								return toRef + "px";
							}

							return val + toRef + "px";
						});
					});
				}
			}

			$.effects.removeWrapper( el );
			done();
		}
	});

};

})(jQuery);
(function( $, undefined ) {

$.effects.effect.shake = function( o, done ) {

	var el = $( this ),
		props = [ "position", "top", "bottom", "left", "right", "height", "width" ],
		mode = $.effects.setMode( el, o.mode || "effect" ),
		direction = o.direction || "left",
		distance = o.distance || 20,
		times = o.times || 3,
		anims = times * 2 + 1,
		speed = Math.round(o.duration/anims),
		ref = (direction === "up" || direction === "down") ? "top" : "left",
		positiveMotion = (direction === "up" || direction === "left"),
		animation = {},
		animation1 = {},
		animation2 = {},
		i,

		// we will need to re-assemble the queue to stack our animations in place
		queue = el.queue(),
		queuelen = queue.length;

	$.effects.save( el, props );
	el.show();
	$.effects.createWrapper( el );

	// Animation
	animation[ ref ] = ( positiveMotion ? "-=" : "+=" ) + distance;
	animation1[ ref ] = ( positiveMotion ? "+=" : "-=" ) + distance * 2;
	animation2[ ref ] = ( positiveMotion ? "-=" : "+=" ) + distance * 2;

	// Animate
	el.animate( animation, speed, o.easing );

	// Shakes
	for ( i = 1; i < times; i++ ) {
		el.animate( animation1, speed, o.easing ).animate( animation2, speed, o.easing );
	}
	el
		.animate( animation1, speed, o.easing )
		.animate( animation, speed / 2, o.easing )
		.queue(function() {
			if ( mode === "hide" ) {
				el.hide();
			}
			$.effects.restore( el, props );
			$.effects.removeWrapper( el );
			done();
		});

	// inject all the animations we just queued to be first in line (after "inprogress")
	if ( queuelen > 1) {
		queue.splice.apply( queue,
			[ 1, 0 ].concat( queue.splice( queuelen, anims + 1 ) ) );
	}
	el.dequeue();

};

})(jQuery);
(function( $, undefined ) {

$.effects.effect.slide = function( o, done ) {

	// Create element
	var el = $( this ),
		props = [ "position", "top", "bottom", "left", "right", "width", "height" ],
		mode = $.effects.setMode( el, o.mode || "show" ),
		show = mode === "show",
		direction = o.direction || "left",
		ref = (direction === "up" || direction === "down") ? "top" : "left",
		positiveMotion = (direction === "up" || direction === "left"),
		distance,
		animation = {};

	// Adjust
	$.effects.save( el, props );
	el.show();
	distance = o.distance || el[ ref === "top" ? "outerHeight" : "outerWidth" ]( true );

	$.effects.createWrapper( el ).css({
		overflow: "hidden"
	});

	if ( show ) {
		el.css( ref, positiveMotion ? (isNaN(distance) ? "-" + distance : -distance) : distance );
	}

	// Animation
	animation[ ref ] = ( show ?
		( positiveMotion ? "+=" : "-=") :
		( positiveMotion ? "-=" : "+=")) +
		distance;

	// Animate
	el.animate( animation, {
		queue: false,
		duration: o.duration,
		easing: o.easing,
		complete: function() {
			if ( mode === "hide" ) {
				el.hide();
			}
			$.effects.restore( el, props );
			$.effects.removeWrapper( el );
			done();
		}
	});
};

})(jQuery);
(function( $, undefined ) {

$.effects.effect.transfer = function( o, done ) {
	var elem = $( this ),
		target = $( o.to ),
		targetFixed = target.css( "position" ) === "fixed",
		body = $("body"),
		fixTop = targetFixed ? body.scrollTop() : 0,
		fixLeft = targetFixed ? body.scrollLeft() : 0,
		endPosition = target.offset(),
		animation = {
			top: endPosition.top - fixTop ,
			left: endPosition.left - fixLeft ,
			height: target.innerHeight(),
			width: target.innerWidth()
		},
		startPosition = elem.offset(),
		transfer = $( '<div class="ui-effects-transfer"></div>' )
			.appendTo( document.body )
			.addClass( o.className )
			.css({
				top: startPosition.top - fixTop ,
				left: startPosition.left - fixLeft ,
				height: elem.innerHeight(),
				width: elem.innerWidth(),
				position: targetFixed ? "fixed" : "absolute"
			})
			.animate( animation, o.duration, o.easing, function() {
				transfer.remove();
				done();
			});
};

})(jQuery);
 
/*! jQuery UI - v1.9.0 - 2012-10-24
* http://jqueryui.com
* Includes: jquery.ui.core.js, jquery.ui.widget.js, jquery.ui.mouse.js, jquery.ui.position.js, jquery.ui.draggable.js, jquery.ui.droppable.js, jquery.ui.resizable.js, jquery.ui.selectable.js, jquery.ui.sortable.js, jquery.ui.accordion.js, jquery.ui.autocomplete.js, jquery.ui.button.js, jquery.ui.datepicker.js, jquery.ui.dialog.js, jquery.ui.menu.js, jquery.ui.progressbar.js, jquery.ui.slider.js, jquery.ui.spinner.js, jquery.ui.tabs.js, jquery.ui.tooltip.js, jquery.ui.effect.js, jquery.ui.effect-blind.js, jquery.ui.effect-bounce.js, jquery.ui.effect-clip.js, jquery.ui.effect-drop.js, jquery.ui.effect-explode.js, jquery.ui.effect-fade.js, jquery.ui.effect-fold.js, jquery.ui.effect-highlight.js, jquery.ui.effect-pulsate.js, jquery.ui.effect-scale.js, jquery.ui.effect-shake.js, jquery.ui.effect-slide.js, jquery.ui.effect-transfer.js
* Copyright (c) 2012 jQuery Foundation and other contributors Licensed MIT */

(function(e,t){function i(t,n){var r,i,o,u=t.nodeName.toLowerCase();return"area"===u?(r=t.parentNode,i=r.name,!t.href||!i||r.nodeName.toLowerCase()!=="map"?!1:(o=e("img[usemap=#"+i+"]")[0],!!o&&s(o))):(/input|select|textarea|button|object/.test(u)?!t.disabled:"a"===u?t.href||n:n)&&s(t)}function s(t){return!e(t).parents().andSelf().filter(function(){return e.css(this,"visibility")==="hidden"||e.expr.filters.hidden(this)}).length}var n=0,r=/^ui-id-\d+$/;e.ui=e.ui||{};if(e.ui.version)return;e.extend(e.ui,{version:"1.9.0",keyCode:{BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38}}),e.fn.extend({_focus:e.fn.focus,focus:function(t,n){return typeof t=="number"?this.each(function(){var r=this;setTimeout(function(){e(r).focus(),n&&n.call(r)},t)}):this._focus.apply(this,arguments)},scrollParent:function(){var t;return e.browser.msie&&/(static|relative)/.test(this.css("position"))||/absolute/.test(this.css("position"))?t=this.parents().filter(function(){return/(relative|absolute|fixed)/.test(e.css(this,"position"))&&/(auto|scroll)/.test(e.css(this,"overflow")+e.css(this,"overflow-y")+e.css(this,"overflow-x"))}).eq(0):t=this.parents().filter(function(){return/(auto|scroll)/.test(e.css(this,"overflow")+e.css(this,"overflow-y")+e.css(this,"overflow-x"))}).eq(0),/fixed/.test(this.css("position"))||!t.length?e(document):t},zIndex:function(n){if(n!==t)return this.css("zIndex",n);if(this.length){var r=e(this[0]),i,s;while(r.length&&r[0]!==document){i=r.css("position");if(i==="absolute"||i==="relative"||i==="fixed"){s=parseInt(r.css("zIndex"),10);if(!isNaN(s)&&s!==0)return s}r=r.parent()}}return 0},uniqueId:function(){return this.each(function(){this.id||(this.id="ui-id-"+ ++n)})},removeUniqueId:function(){return this.each(function(){r.test(this.id)&&e(this).removeAttr("id")})}}),e("<a>").outerWidth(1).jquery||e.each(["Width","Height"],function(n,r){function u(t,n,r,s){return e.each(i,function(){n-=parseFloat(e.css(t,"padding"+this))||0,r&&(n-=parseFloat(e.css(t,"border"+this+"Width"))||0),s&&(n-=parseFloat(e.css(t,"margin"+this))||0)}),n}var i=r==="Width"?["Left","Right"]:["Top","Bottom"],s=r.toLowerCase(),o={innerWidth:e.fn.innerWidth,innerHeight:e.fn.innerHeight,outerWidth:e.fn.outerWidth,outerHeight:e.fn.outerHeight};e.fn["inner"+r]=function(n){return n===t?o["inner"+r].call(this):this.each(function(){e(this).css(s,u(this,n)+"px")})},e.fn["outer"+r]=function(t,n){return typeof t!="number"?o["outer"+r].call(this,t):this.each(function(){e(this).css(s,u(this,t,!0,n)+"px")})}}),e.extend(e.expr[":"],{data:e.expr.createPseudo?e.expr.createPseudo(function(t){return function(n){return!!e.data(n,t)}}):function(t,n,r){return!!e.data(t,r[3])},focusable:function(t){return i(t,!isNaN(e.attr(t,"tabindex")))},tabbable:function(t){var n=e.attr(t,"tabindex"),r=isNaN(n);return(r||n>=0)&&i(t,!r)}}),e(function(){var t=document.body,n=t.appendChild(n=document.createElement("div"));n.offsetHeight,e.extend(n.style,{minHeight:"100px",height:"auto",padding:0,borderWidth:0}),e.support.minHeight=n.offsetHeight===100,e.support.selectstart="onselectstart"in n,t.removeChild(n).style.display="none"}),e.fn.extend({disableSelection:function(){return this.bind((e.support.selectstart?"selectstart":"mousedown")+".ui-disableSelection",function(e){e.preventDefault()})},enableSelection:function(){return this.unbind(".ui-disableSelection")}}),e.extend(e.ui,{plugin:{add:function(t,n,r){var i,s=e.ui[t].prototype;for(i in r)s.plugins[i]=s.plugins[i]||[],s.plugins[i].push([n,r[i]])},call:function(e,t,n){var r,i=e.plugins[t];if(!i||!e.element[0].parentNode||e.element[0].parentNode.nodeType===11)return;for(r=0;r<i.length;r++)e.options[i[r][0]]&&i[r][1].apply(e.element,n)}},contains:e.contains,hasScroll:function(t,n){if(e(t).css("overflow")==="hidden")return!1;var r=n&&n==="left"?"scrollLeft":"scrollTop",i=!1;return t[r]>0?!0:(t[r]=1,i=t[r]>0,t[r]=0,i)},isOverAxis:function(e,t,n){return e>t&&e<t+n},isOver:function(t,n,r,i,s,o){return e.ui.isOverAxis(t,r,s)&&e.ui.isOverAxis(n,i,o)}})})(jQuery);(function(e,t){var n=0,r=Array.prototype.slice,i=e.cleanData;e.cleanData=function(t){for(var n=0,r;(r=t[n])!=null;n++)try{e(r).triggerHandler("remove")}catch(s){}i(t)},e.widget=function(t,n,r){var i,s,o,u,a=t.split(".")[0];t=t.split(".")[1],i=a+"-"+t,r||(r=n,n=e.Widget),e.expr[":"][i.toLowerCase()]=function(t){return!!e.data(t,i)},e[a]=e[a]||{},s=e[a][t],o=e[a][t]=function(e,t){if(!this._createWidget)return new o(e,t);arguments.length&&this._createWidget(e,t)},e.extend(o,s,{version:r.version,_proto:e.extend({},r),_childConstructors:[]}),u=new n,u.options=e.widget.extend({},u.options),e.each(r,function(t,i){e.isFunction(i)&&(r[t]=function(){var e=function(){return n.prototype[t].apply(this,arguments)},r=function(e){return n.prototype[t].apply(this,e)};return function(){var t=this._super,n=this._superApply,s;return this._super=e,this._superApply=r,s=i.apply(this,arguments),this._super=t,this._superApply=n,s}}())}),o.prototype=e.widget.extend(u,{widgetEventPrefix:t},r,{constructor:o,namespace:a,widgetName:t,widgetBaseClass:i,widgetFullName:i}),s?(e.each(s._childConstructors,function(t,n){var r=n.prototype;e.widget(r.namespace+"."+r.widgetName,o,n._proto)}),delete s._childConstructors):n._childConstructors.push(o),e.widget.bridge(t,o)},e.widget.extend=function(n){var i=r.call(arguments,1),s=0,o=i.length,u,a;for(;s<o;s++)for(u in i[s])a=i[s][u],i[s].hasOwnProperty(u)&&a!==t&&(n[u]=e.isPlainObject(a)?e.widget.extend({},n[u],a):a);return n},e.widget.bridge=function(n,i){var s=i.prototype.widgetFullName;e.fn[n]=function(o){var u=typeof o=="string",a=r.call(arguments,1),f=this;return o=!u&&a.length?e.widget.extend.apply(null,[o].concat(a)):o,u?this.each(function(){var r,i=e.data(this,s);if(!i)return e.error("cannot call methods on "+n+" prior to initialization; "+"attempted to call method '"+o+"'");if(!e.isFunction(i[o])||o.charAt(0)==="_")return e.error("no such method '"+o+"' for "+n+" widget instance");r=i[o].apply(i,a);if(r!==i&&r!==t)return f=r&&r.jquery?f.pushStack(r.get()):r,!1}):this.each(function(){var t=e.data(this,s);t?t.option(o||{})._init():new i(o,this)}),f}},e.Widget=function(e,t){},e.Widget._childConstructors=[],e.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",defaultElement:"<div>",options:{disabled:!1,create:null},_createWidget:function(t,r){r=e(r||this.defaultElement||this)[0],this.element=e(r),this.uuid=n++,this.eventNamespace="."+this.widgetName+this.uuid,this.options=e.widget.extend({},this.options,this._getCreateOptions(),t),this.bindings=e(),this.hoverable=e(),this.focusable=e(),r!==this&&(e.data(r,this.widgetName,this),e.data(r,this.widgetFullName,this),this._on({remove:"destroy"}),this.document=e(r.style?r.ownerDocument:r.document||r),this.window=e(this.document[0].defaultView||this.document[0].parentWindow)),this._create(),this._trigger("create",null,this._getCreateEventData()),this._init()},_getCreateOptions:e.noop,_getCreateEventData:e.noop,_create:e.noop,_init:e.noop,destroy:function(){this._destroy(),this.element.unbind(this.eventNamespace).removeData(this.widgetName).removeData(this.widgetFullName).removeData(e.camelCase(this.widgetFullName)),this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName+"-disabled "+"ui-state-disabled"),this.bindings.unbind(this.eventNamespace),this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus")},_destroy:e.noop,widget:function(){return this.element},option:function(n,r){var i=n,s,o,u;if(arguments.length===0)return e.widget.extend({},this.options);if(typeof n=="string"){i={},s=n.split("."),n=s.shift();if(s.length){o=i[n]=e.widget.extend({},this.options[n]);for(u=0;u<s.length-1;u++)o[s[u]]=o[s[u]]||{},o=o[s[u]];n=s.pop();if(r===t)return o[n]===t?null:o[n];o[n]=r}else{if(r===t)return this.options[n]===t?null:this.options[n];i[n]=r}}return this._setOptions(i),this},_setOptions:function(e){var t;for(t in e)this._setOption(t,e[t]);return this},_setOption:function(e,t){return this.options[e]=t,e==="disabled"&&(this.widget().toggleClass(this.widgetFullName+"-disabled ui-state-disabled",!!t).attr("aria-disabled",t),this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus")),this},enable:function(){return this._setOption("disabled",!1)},disable:function(){return this._setOption("disabled",!0)},_on:function(t,n){n?(t=e(t),this.bindings=this.bindings.add(t)):(n=t,t=this.element);var r=this;e.each(n,function(n,i){function s(){if(r.options.disabled===!0||e(this).hasClass("ui-state-disabled"))return;return(typeof i=="string"?r[i]:i).apply(r,arguments)}typeof i!="string"&&(s.guid=i.guid=i.guid||s.guid||e.guid++);var o=n.match(/^(\w+)\s*(.*)$/),u=o[1]+r.eventNamespace,a=o[2];a?r.widget().delegate(a,u,s):t.bind(u,s)})},_off:function(e,t){t=(t||"").split(" ").join(this.eventNamespace+" ")+this.eventNamespace,e.unbind(t).undelegate(t)},_delay:function(e,t){function n(){return(typeof e=="string"?r[e]:e).apply(r,arguments)}var r=this;return setTimeout(n,t||0)},_hoverable:function(t){this.hoverable=this.hoverable.add(t),this._on(t,{mouseenter:function(t){e(t.currentTarget).addClass("ui-state-hover")},mouseleave:function(t){e(t.currentTarget).removeClass("ui-state-hover")}})},_focusable:function(t){this.focusable=this.focusable.add(t),this._on(t,{focusin:function(t){e(t.currentTarget).addClass("ui-state-focus")},focusout:function(t){e(t.currentTarget).removeClass("ui-state-focus")}})},_trigger:function(t,n,r){var i,s,o=this.options[t];r=r||{},n=e.Event(n),n.type=(t===this.widgetEventPrefix?t:this.widgetEventPrefix+t).toLowerCase(),n.target=this.element[0],s=n.originalEvent;if(s)for(i in s)i in n||(n[i]=s[i]);return this.element.trigger(n,r),!(e.isFunction(o)&&o.apply(this.element[0],[n].concat(r))===!1||n.isDefaultPrevented())}},e.each({show:"fadeIn",hide:"fadeOut"},function(t,n){e.Widget.prototype["_"+t]=function(r,i,s){typeof i=="string"&&(i={effect:i});var o,u=i?i===!0||typeof i=="number"?n:i.effect||n:t;i=i||{},typeof i=="number"&&(i={duration:i}),o=!e.isEmptyObject(i),i.complete=s,i.delay&&r.delay(i.delay),o&&e.effects&&(e.effects.effect[u]||e.uiBackCompat!==!1&&e.effects[u])?r[t](i):u!==t&&r[u]?r[u](i.duration,i.easing,s):r.queue(function(n){e(this)[t](),s&&s.call(r[0]),n()})}}),e.uiBackCompat!==!1&&(e.Widget.prototype._getCreateOptions=function(){return e.metadata&&e.metadata.get(this.element[0])[this.widgetName]})})(jQuery);(function(e,t){var n=!1;e(document).mouseup(function(e){n=!1}),e.widget("ui.mouse",{version:"1.9.0",options:{cancel:"input,textarea,button,select,option",distance:1,delay:0},_mouseInit:function(){var t=this;this.element.bind("mousedown."+this.widgetName,function(e){return t._mouseDown(e)}).bind("click."+this.widgetName,function(n){if(!0===e.data(n.target,t.widgetName+".preventClickEvent"))return e.removeData(n.target,t.widgetName+".preventClickEvent"),n.stopImmediatePropagation(),!1}),this.started=!1},_mouseDestroy:function(){this.element.unbind("."+this.widgetName),this._mouseMoveDelegate&&e(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate)},_mouseDown:function(t){if(n)return;this._mouseStarted&&this._mouseUp(t),this._mouseDownEvent=t;var r=this,i=t.which===1,s=typeof this.options.cancel=="string"&&t.target.nodeName?e(t.target).closest(this.options.cancel).length:!1;if(!i||s||!this._mouseCapture(t))return!0;this.mouseDelayMet=!this.options.delay,this.mouseDelayMet||(this._mouseDelayTimer=setTimeout(function(){r.mouseDelayMet=!0},this.options.delay));if(this._mouseDistanceMet(t)&&this._mouseDelayMet(t)){this._mouseStarted=this._mouseStart(t)!==!1;if(!this._mouseStarted)return t.preventDefault(),!0}return!0===e.data(t.target,this.widgetName+".preventClickEvent")&&e.removeData(t.target,this.widgetName+".preventClickEvent"),this._mouseMoveDelegate=function(e){return r._mouseMove(e)},this._mouseUpDelegate=function(e){return r._mouseUp(e)},e(document).bind("mousemove."+this.widgetName,this._mouseMoveDelegate).bind("mouseup."+this.widgetName,this._mouseUpDelegate),t.preventDefault(),n=!0,!0},_mouseMove:function(t){return!e.browser.msie||document.documentMode>=9||!!t.button?this._mouseStarted?(this._mouseDrag(t),t.preventDefault()):(this._mouseDistanceMet(t)&&this._mouseDelayMet(t)&&(this._mouseStarted=this._mouseStart(this._mouseDownEvent,t)!==!1,this._mouseStarted?this._mouseDrag(t):this._mouseUp(t)),!this._mouseStarted):this._mouseUp(t)},_mouseUp:function(t){return e(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate),this._mouseStarted&&(this._mouseStarted=!1,t.target===this._mouseDownEvent.target&&e.data(t.target,this.widgetName+".preventClickEvent",!0),this._mouseStop(t)),!1},_mouseDistanceMet:function(e){return Math.max(Math.abs(this._mouseDownEvent.pageX-e.pageX),Math.abs(this._mouseDownEvent.pageY-e.pageY))>=this.options.distance},_mouseDelayMet:function(e){return this.mouseDelayMet},_mouseStart:function(e){},_mouseDrag:function(e){},_mouseStop:function(e){},_mouseCapture:function(e){return!0}})})(jQuery);(function(e,t){function h(e,t,n){return[parseInt(e[0],10)*(l.test(e[0])?t/100:1),parseInt(e[1],10)*(l.test(e[1])?n/100:1)]}function p(t,n){return parseInt(e.css(t,n),10)||0}e.ui=e.ui||{};var n,r=Math.max,i=Math.abs,s=Math.round,o=/left|center|right/,u=/top|center|bottom/,a=/[\+\-]\d+%?/,f=/^\w+/,l=/%$/,c=e.fn.position;e.position={scrollbarWidth:function(){if(n!==t)return n;var r,i,s=e("<div style='display:block;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"),o=s.children()[0];return e("body").append(s),r=o.offsetWidth,s.css("overflow","scroll"),i=o.offsetWidth,r===i&&(i=s[0].clientWidth),s.remove(),n=r-i},getScrollInfo:function(t){var n=t.isWindow?"":t.element.css("overflow-x"),r=t.isWindow?"":t.element.css("overflow-y"),i=n==="scroll"||n==="auto"&&t.width<t.element[0].scrollWidth,s=r==="scroll"||r==="auto"&&t.height<t.element[0].scrollHeight;return{width:i?e.position.scrollbarWidth():0,height:s?e.position.scrollbarWidth():0}},getWithinInfo:function(t){var n=e(t||window),r=e.isWindow(n[0]);return{element:n,isWindow:r,offset:n.offset()||{left:0,top:0},scrollLeft:n.scrollLeft(),scrollTop:n.scrollTop(),width:r?n.width():n.outerWidth(),height:r?n.height():n.outerHeight()}}},e.fn.position=function(t){if(!t||!t.of)return c.apply(this,arguments);t=e.extend({},t);var n,l,d,v,m,g=e(t.of),y=e.position.getWithinInfo(t.within),b=e.position.getScrollInfo(y),w=g[0],E=(t.collision||"flip").split(" "),S={};return w.nodeType===9?(l=g.width(),d=g.height(),v={top:0,left:0}):e.isWindow(w)?(l=g.width(),d=g.height(),v={top:g.scrollTop(),left:g.scrollLeft()}):w.preventDefault?(t.at="left top",l=d=0,v={top:w.pageY,left:w.pageX}):(l=g.outerWidth(),d=g.outerHeight(),v=g.offset()),m=e.extend({},v),e.each(["my","at"],function(){var e=(t[this]||"").split(" "),n,r;e.length===1&&(e=o.test(e[0])?e.concat(["center"]):u.test(e[0])?["center"].concat(e):["center","center"]),e[0]=o.test(e[0])?e[0]:"center",e[1]=u.test(e[1])?e[1]:"center",n=a.exec(e[0]),r=a.exec(e[1]),S[this]=[n?n[0]:0,r?r[0]:0],t[this]=[f.exec(e[0])[0],f.exec(e[1])[0]]}),E.length===1&&(E[1]=E[0]),t.at[0]==="right"?m.left+=l:t.at[0]==="center"&&(m.left+=l/2),t.at[1]==="bottom"?m.top+=d:t.at[1]==="center"&&(m.top+=d/2),n=h(S.at,l,d),m.left+=n[0],m.top+=n[1],this.each(function(){var o,u,a=e(this),f=a.outerWidth(),c=a.outerHeight(),w=p(this,"marginLeft"),x=p(this,"marginTop"),T=f+w+p(this,"marginRight")+b.width,N=c+x+p(this,"marginBottom")+b.height,C=e.extend({},m),k=h(S.my,a.outerWidth(),a.outerHeight());t.my[0]==="right"?C.left-=f:t.my[0]==="center"&&(C.left-=f/2),t.my[1]==="bottom"?C.top-=c:t.my[1]==="center"&&(C.top-=c/2),C.left+=k[0],C.top+=k[1],e.support.offsetFractions||(C.left=s(C.left),C.top=s(C.top)),o={marginLeft:w,marginTop:x},e.each(["left","top"],function(r,i){e.ui.position[E[r]]&&e.ui.position[E[r]][i](C,{targetWidth:l,targetHeight:d,elemWidth:f,elemHeight:c,collisionPosition:o,collisionWidth:T,collisionHeight:N,offset:[n[0]+k[0],n[1]+k[1]],my:t.my,at:t.at,within:y,elem:a})}),e.fn.bgiframe&&a.bgiframe(),t.using&&(u=function(e){var n=v.left-C.left,s=n+l-f,o=v.top-C.top,u=o+d-c,h={target:{element:g,left:v.left,top:v.top,width:l,height:d},element:{element:a,left:C.left,top:C.top,width:f,height:c},horizontal:s<0?"left":n>0?"right":"center",vertical:u<0?"top":o>0?"bottom":"middle"};l<f&&i(n+s)<l&&(h.horizontal="center"),d<c&&i(o+u)<d&&(h.vertical="middle"),r(i(n),i(s))>r(i(o),i(u))?h.important="horizontal":h.important="vertical",t.using.call(this,e,h)}),a.offset(e.extend(C,{using:u}))})},e.ui.position={fit:{left:function(e,t){var n=t.within,i=n.isWindow?n.scrollLeft:n.offset.left,s=n.width,o=e.left-t.collisionPosition.marginLeft,u=i-o,a=o+t.collisionWidth-s-i,f;t.collisionWidth>s?u>0&&a<=0?(f=e.left+u+t.collisionWidth-s-i,e.left+=u-f):a>0&&u<=0?e.left=i:u>a?e.left=i+s-t.collisionWidth:e.left=i:u>0?e.left+=u:a>0?e.left-=a:e.left=r(e.left-o,e.left)},top:function(e,t){var n=t.within,i=n.isWindow?n.scrollTop:n.offset.top,s=t.within.height,o=e.top-t.collisionPosition.marginTop,u=i-o,a=o+t.collisionHeight-s-i,f;t.collisionHeight>s?u>0&&a<=0?(f=e.top+u+t.collisionHeight-s-i,e.top+=u-f):a>0&&u<=0?e.top=i:u>a?e.top=i+s-t.collisionHeight:e.top=i:u>0?e.top+=u:a>0?e.top-=a:e.top=r(e.top-o,e.top)}},flip:{left:function(e,t){var n=t.within,r=n.offset.left+n.scrollLeft,s=n.width,o=n.isWindow?n.scrollLeft:n.offset.left,u=e.left-t.collisionPosition.marginLeft,a=u-o,f=u+t.collisionWidth-s-o,l=t.my[0]==="left"?-t.elemWidth:t.my[0]==="right"?t.elemWidth:0,c=t.at[0]==="left"?t.targetWidth:t.at[0]==="right"?-t.targetWidth:0,h=-2*t.offset[0],p,d;if(a<0){p=e.left+l+c+h+t.collisionWidth-s-r;if(p<0||p<i(a))e.left+=l+c+h}else if(f>0){d=e.left-t.collisionPosition.marginLeft+l+c+h-o;if(d>0||i(d)<f)e.left+=l+c+h}},top:function(e,t){var n=t.within,r=n.offset.top+n.scrollTop,s=n.height,o=n.isWindow?n.scrollTop:n.offset.top,u=e.top-t.collisionPosition.marginTop,a=u-o,f=u+t.collisionHeight-s-o,l=t.my[1]==="top",c=l?-t.elemHeight:t.my[1]==="bottom"?t.elemHeight:0,h=t.at[1]==="top"?t.targetHeight:t.at[1]==="bottom"?-t.targetHeight:0,p=-2*t.offset[1],d,v;a<0?(v=e.top+c+h+p+t.collisionHeight-s-r,e.top+c+h+p>a&&(v<0||v<i(a))&&(e.top+=c+h+p)):f>0&&(d=e.top-t.collisionPosition.marginTop+c+h+p-o,e.top+c+h+p>f&&(d>0||i(d)<f)&&(e.top+=c+h+p))}},flipfit:{left:function(){e.ui.position.flip.left.apply(this,arguments),e.ui.position.fit.left.apply(this,arguments)},top:function(){e.ui.position.flip.top.apply(this,arguments),e.ui.position.fit.top.apply(this,arguments)}}},function(){var t,n,r,i,s,o=document.getElementsByTagName("body")[0],u=document.createElement("div");t=document.createElement(o?"div":"body"),r={visibility:"hidden",width:0,height:0,border:0,margin:0,background:"none"},o&&e.extend(r,{position:"absolute",left:"-1000px",top:"-1000px"});for(s in r)t.style[s]=r[s];t.appendChild(u),n=o||document.documentElement,n.insertBefore(t,n.firstChild),u.style.cssText="position: absolute; left: 10.7432222px;",i=e(u).offset().left,e.support.offsetFractions=i>10&&i<11,t.innerHTML="",n.removeChild(t)}(),e.uiBackCompat!==!1&&function(e){var n=e.fn.position;e.fn.position=function(r){if(!r||!r.offset)return n.call(this,r);var i=r.offset.split(" "),s=r.at.split(" ");return i.length===1&&(i[1]=i[0]),/^\d/.test(i[0])&&(i[0]="+"+i[0]),/^\d/.test(i[1])&&(i[1]="+"+i[1]),s.length===1&&(/left|center|right/.test(s[0])?s[1]="center":(s[1]=s[0],s[0]="center")),n.call(this,e.extend(r,{at:s[0]+i[0]+" "+s[1]+i[1],offset:t}))}}(jQuery)})(jQuery);(function(e,t){e.widget("ui.draggable",e.ui.mouse,{version:"1.9.0",widgetEventPrefix:"drag",options:{addClasses:!0,appendTo:"parent",axis:!1,connectToSortable:!1,containment:!1,cursor:"auto",cursorAt:!1,grid:!1,handle:!1,helper:"original",iframeFix:!1,opacity:!1,refreshPositions:!1,revert:!1,revertDuration:500,scope:"default",scroll:!0,scrollSensitivity:20,scrollSpeed:20,snap:!1,snapMode:"both",snapTolerance:20,stack:!1,zIndex:!1},_create:function(){this.options.helper=="original"&&!/^(?:r|a|f)/.test(this.element.css("position"))&&(this.element[0].style.position="relative"),this.options.addClasses&&this.element.addClass("ui-draggable"),this.options.disabled&&this.element.addClass("ui-draggable-disabled"),this._mouseInit()},_destroy:function(){this.element.removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled"),this._mouseDestroy()},_mouseCapture:function(t){var n=this.options;return this.helper||n.disabled||e(t.target).is(".ui-resizable-handle")?!1:(this.handle=this._getHandle(t),this.handle?(e(n.iframeFix===!0?"iframe":n.iframeFix).each(function(){e('<div class="ui-draggable-iframeFix" style="background: #fff;"></div>').css({width:this.offsetWidth+"px",height:this.offsetHeight+"px",position:"absolute",opacity:"0.001",zIndex:1e3}).css(e(this).offset()).appendTo("body")}),!0):!1)},_mouseStart:function(t){var n=this.options;return this.helper=this._createHelper(t),this.helper.addClass("ui-draggable-dragging"),this._cacheHelperProportions(),e.ui.ddmanager&&(e.ui.ddmanager.current=this),this._cacheMargins(),this.cssPosition=this.helper.css("position"),this.scrollParent=this.helper.scrollParent(),this.offset=this.positionAbs=this.element.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},e.extend(this.offset,{click:{left:t.pageX-this.offset.left,top:t.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.originalPosition=this.position=this._generatePosition(t),this.originalPageX=t.pageX,this.originalPageY=t.pageY,n.cursorAt&&this._adjustOffsetFromHelper(n.cursorAt),n.containment&&this._setContainment(),this._trigger("start",t)===!1?(this._clear(),!1):(this._cacheHelperProportions(),e.ui.ddmanager&&!n.dropBehaviour&&e.ui.ddmanager.prepareOffsets(this,t),this._mouseDrag(t,!0),e.ui.ddmanager&&e.ui.ddmanager.dragStart(this,t),!0)},_mouseDrag:function(t,n){this.position=this._generatePosition(t),this.positionAbs=this._convertPositionTo("absolute");if(!n){var r=this._uiHash();if(this._trigger("drag",t,r)===!1)return this._mouseUp({}),!1;this.position=r.position}if(!this.options.axis||this.options.axis!="y")this.helper[0].style.left=this.position.left+"px";if(!this.options.axis||this.options.axis!="x")this.helper[0].style.top=this.position.top+"px";return e.ui.ddmanager&&e.ui.ddmanager.drag(this,t),!1},_mouseStop:function(t){var n=!1;e.ui.ddmanager&&!this.options.dropBehaviour&&(n=e.ui.ddmanager.drop(this,t)),this.dropped&&(n=this.dropped,this.dropped=!1);var r=this.element[0],i=!1;while(r&&(r=r.parentNode))r==document&&(i=!0);if(!i&&this.options.helper==="original")return!1;if(this.options.revert=="invalid"&&!n||this.options.revert=="valid"&&n||this.options.revert===!0||e.isFunction(this.options.revert)&&this.options.revert.call(this.element,n)){var s=this;e(this.helper).animate(this.originalPosition,parseInt(this.options.revertDuration,10),function(){s._trigger("stop",t)!==!1&&s._clear()})}else this._trigger("stop",t)!==!1&&this._clear();return!1},_mouseUp:function(t){return e("div.ui-draggable-iframeFix").each(function(){this.parentNode.removeChild(this)}),e.ui.ddmanager&&e.ui.ddmanager.dragStop(this,t),e.ui.mouse.prototype._mouseUp.call(this,t)},cancel:function(){return this.helper.is(".ui-draggable-dragging")?this._mouseUp({}):this._clear(),this},_getHandle:function(t){var n=!this.options.handle||!e(this.options.handle,this.element).length?!0:!1;return e(this.options.handle,this.element).find("*").andSelf().each(function(){this==t.target&&(n=!0)}),n},_createHelper:function(t){var n=this.options,r=e.isFunction(n.helper)?e(n.helper.apply(this.element[0],[t])):n.helper=="clone"?this.element.clone().removeAttr("id"):this.element;return r.parents("body").length||r.appendTo(n.appendTo=="parent"?this.element[0].parentNode:n.appendTo),r[0]!=this.element[0]&&!/(fixed|absolute)/.test(r.css("position"))&&r.css("position","absolute"),r},_adjustOffsetFromHelper:function(t){typeof t=="string"&&(t=t.split(" ")),e.isArray(t)&&(t={left:+t[0],top:+t[1]||0}),"left"in t&&(this.offset.click.left=t.left+this.margins.left),"right"in t&&(this.offset.click.left=this.helperProportions.width-t.right+this.margins.left),"top"in t&&(this.offset.click.top=t.top+this.margins.top),"bottom"in t&&(this.offset.click.top=this.helperProportions.height-t.bottom+this.margins.top)},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var t=this.offsetParent.offset();this.cssPosition=="absolute"&&this.scrollParent[0]!=document&&e.contains(this.scrollParent[0],this.offsetParent[0])&&(t.left+=this.scrollParent.scrollLeft(),t.top+=this.scrollParent.scrollTop());if(this.offsetParent[0]==document.body||this.offsetParent[0].tagName&&this.offsetParent[0].tagName.toLowerCase()=="html"&&e.browser.msie)t={top:0,left:0};return{top:t.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:t.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if(this.cssPosition=="relative"){var e=this.element.position();return{top:e.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:e.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.element.css("marginLeft"),10)||0,top:parseInt(this.element.css("marginTop"),10)||0,right:parseInt(this.element.css("marginRight"),10)||0,bottom:parseInt(this.element.css("marginBottom"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var t=this.options;t.containment=="parent"&&(t.containment=this.helper[0].parentNode);if(t.containment=="document"||t.containment=="window")this.containment=[t.containment=="document"?0:e(window).scrollLeft()-this.offset.relative.left-this.offset.parent.left,t.containment=="document"?0:e(window).scrollTop()-this.offset.relative.top-this.offset.parent.top,(t.containment=="document"?0:e(window).scrollLeft())+e(t.containment=="document"?document:window).width()-this.helperProportions.width-this.margins.left,(t.containment=="document"?0:e(window).scrollTop())+(e(t.containment=="document"?document:window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top];if(!/^(document|window|parent)$/.test(t.containment)&&t.containment.constructor!=Array){var n=e(t.containment),r=n[0];if(!r)return;var i=n.offset(),s=e(r).css("overflow")!="hidden";this.containment=[(parseInt(e(r).css("borderLeftWidth"),10)||0)+(parseInt(e(r).css("paddingLeft"),10)||0),(parseInt(e(r).css("borderTopWidth"),10)||0)+(parseInt(e(r).css("paddingTop"),10)||0),(s?Math.max(r.scrollWidth,r.offsetWidth):r.offsetWidth)-(parseInt(e(r).css("borderLeftWidth"),10)||0)-(parseInt(e(r).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left-this.margins.right,(s?Math.max(r.scrollHeight,r.offsetHeight):r.offsetHeight)-(parseInt(e(r).css("borderTopWidth"),10)||0)-(parseInt(e(r).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top-this.margins.bottom],this.relative_container=n}else t.containment.constructor==Array&&(this.containment=t.containment)},_convertPositionTo:function(t,n){n||(n=this.position);var r=t=="absolute"?1:-1,i=this.options,s=this.cssPosition!="absolute"||this.scrollParent[0]!=document&&!!e.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,o=/(html|body)/i.test(s[0].tagName);return{top:n.top+this.offset.relative.top*r+this.offset.parent.top*r-(this.cssPosition=="fixed"?-this.scrollParent.scrollTop():o?0:s.scrollTop())*r,left:n.left+this.offset.relative.left*r+this.offset.parent.left*r-(this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():o?0:s.scrollLeft())*r}},_generatePosition:function(t){var n=this.options,r=this.cssPosition!="absolute"||this.scrollParent[0]!=document&&!!e.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,i=/(html|body)/i.test(r[0].tagName),s=t.pageX,o=t.pageY;if(this.originalPosition){var u;if(this.containment){if(this.relative_container){var a=this.relative_container.offset();u=[this.containment[0]+a.left,this.containment[1]+a.top,this.containment[2]+a.left,this.containment[3]+a.top]}else u=this.containment;t.pageX-this.offset.click.left<u[0]&&(s=u[0]+this.offset.click.left),t.pageY-this.offset.click.top<u[1]&&(o=u[1]+this.offset.click.top),t.pageX-this.offset.click.left>u[2]&&(s=u[2]+this.offset.click.left),t.pageY-this.offset.click.top>u[3]&&(o=u[3]+this.offset.click.top)}if(n.grid){var f=n.grid[1]?this.originalPageY+Math.round((o-this.originalPageY)/n.grid[1])*n.grid[1]:this.originalPageY;o=u?f-this.offset.click.top<u[1]||f-this.offset.click.top>u[3]?f-this.offset.click.top<u[1]?f+n.grid[1]:f-n.grid[1]:f:f;var l=n.grid[0]?this.originalPageX+Math.round((s-this.originalPageX)/n.grid[0])*n.grid[0]:this.originalPageX;s=u?l-this.offset.click.left<u[0]||l-this.offset.click.left>u[2]?l-this.offset.click.left<u[0]?l+n.grid[0]:l-n.grid[0]:l:l}}return{top:o-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+(this.cssPosition=="fixed"?-this.scrollParent.scrollTop():i?0:r.scrollTop()),left:s-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+(this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():i?0:r.scrollLeft())}},_clear:function(){this.helper.removeClass("ui-draggable-dragging"),this.helper[0]!=this.element[0]&&!this.cancelHelperRemoval&&this.helper.remove(),this.helper=null,this.cancelHelperRemoval=!1},_trigger:function(t,n,r){return r=r||this._uiHash(),e.ui.plugin.call(this,t,[n,r]),t=="drag"&&(this.positionAbs=this._convertPositionTo("absolute")),e.Widget.prototype._trigger.call(this,t,n,r)},plugins:{},_uiHash:function(e){return{helper:this.helper,position:this.position,originalPosition:this.originalPosition,offset:this.positionAbs}}}),e.ui.plugin.add("draggable","connectToSortable",{start:function(t,n){var r=e(this).data("draggable"),i=r.options,s=e.extend({},n,{item:r.element});r.sortables=[],e(i.connectToSortable).each(function(){var n=e.data(this,"sortable");n&&!n.options.disabled&&(r.sortables.push({instance:n,shouldRevert:n.options.revert}),n.refreshPositions(),n._trigger("activate",t,s))})},stop:function(t,n){var r=e(this).data("draggable"),i=e.extend({},n,{item:r.element});e.each(r.sortables,function(){this.instance.isOver?(this.instance.isOver=0,r.cancelHelperRemoval=!0,this.instance.cancelHelperRemoval=!1,this.shouldRevert&&(this.instance.options.revert=!0),this.instance._mouseStop(t),this.instance.options.helper=this.instance.options._helper,r.options.helper=="original"&&this.instance.currentItem.css({top:"auto",left:"auto"})):(this.instance.cancelHelperRemoval=!1,this.instance._trigger("deactivate",t,i))})},drag:function(t,n){var r=e(this).data("draggable"),i=this,s=function(t){var n=this.offset.click.top,r=this.offset.click.left,i=this.positionAbs.top,s=this.positionAbs.left,o=t.height,u=t.width,a=t.top,f=t.left;return e.ui.isOver(i+n,s+r,a,f,o,u)};e.each(r.sortables,function(s){this.instance.positionAbs=r.positionAbs,this.instance.helperProportions=r.helperProportions,this.instance.offset.click=r.offset.click,this.instance._intersectsWith(this.instance.containerCache)?(this.instance.isOver||(this.instance.isOver=1,this.instance.currentItem=e(i).clone().removeAttr("id").appendTo(this.instance.element).data("sortable-item",!0),this.instance.options._helper=this.instance.options.helper,this.instance.options.helper=function(){return n.helper[0]},t.target=this.instance.currentItem[0],this.instance._mouseCapture(t,!0),this.instance._mouseStart(t,!0,!0),this.instance.offset.click.top=r.offset.click.top,this.instance.offset.click.left=r.offset.click.left,this.instance.offset.parent.left-=r.offset.parent.left-this.instance.offset.parent.left,this.instance.offset.parent.top-=r.offset.parent.top-this.instance.offset.parent.top,r._trigger("toSortable",t),r.dropped=this.instance.element,r.currentItem=r.element,this.instance.fromOutside=r),this.instance.currentItem&&this.instance._mouseDrag(t)):this.instance.isOver&&(this.instance.isOver=0,this.instance.cancelHelperRemoval=!0,this.instance.options.revert=!1,this.instance._trigger("out",t,this.instance._uiHash(this.instance)),this.instance._mouseStop(t,!0),this.instance.options.helper=this.instance.options._helper,this.instance.currentItem.remove(),this.instance.placeholder&&this.instance.placeholder.remove(),r._trigger("fromSortable",t),r.dropped=!1)})}}),e.ui.plugin.add("draggable","cursor",{start:function(t,n){var r=e("body"),i=e(this).data("draggable").options;r.css("cursor")&&(i._cursor=r.css("cursor")),r.css("cursor",i.cursor)},stop:function(t,n){var r=e(this).data("draggable").options;r._cursor&&e("body").css("cursor",r._cursor)}}),e.ui.plugin.add("draggable","opacity",{start:function(t,n){var r=e(n.helper),i=e(this).data("draggable").options;r.css("opacity")&&(i._opacity=r.css("opacity")),r.css("opacity",i.opacity)},stop:function(t,n){var r=e(this).data("draggable").options;r._opacity&&e(n.helper).css("opacity",r._opacity)}}),e.ui.plugin.add("draggable","scroll",{start:function(t,n){var r=e(this).data("draggable");r.scrollParent[0]!=document&&r.scrollParent[0].tagName!="HTML"&&(r.overflowOffset=r.scrollParent.offset())},drag:function(t,n){var r=e(this).data("draggable"),i=r.options,s=!1;if(r.scrollParent[0]!=document&&r.scrollParent[0].tagName!="HTML"){if(!i.axis||i.axis!="x")r.overflowOffset.top+r.scrollParent[0].offsetHeight-t.pageY<i.scrollSensitivity?r.scrollParent[0].scrollTop=s=r.scrollParent[0].scrollTop+i.scrollSpeed:t.pageY-r.overflowOffset.top<i.scrollSensitivity&&(r.scrollParent[0].scrollTop=s=r.scrollParent[0].scrollTop-i.scrollSpeed);if(!i.axis||i.axis!="y")r.overflowOffset.left+r.scrollParent[0].offsetWidth-t.pageX<i.scrollSensitivity?r.scrollParent[0].scrollLeft=s=r.scrollParent[0].scrollLeft+i.scrollSpeed:t.pageX-r.overflowOffset.left<i.scrollSensitivity&&(r.scrollParent[0].scrollLeft=s=r.scrollParent[0].scrollLeft-i.scrollSpeed)}else{if(!i.axis||i.axis!="x")t.pageY-e(document).scrollTop()<i.scrollSensitivity?s=e(document).scrollTop(e(document).scrollTop()-i.scrollSpeed):e(window).height()-(t.pageY-e(document).scrollTop())<i.scrollSensitivity&&(s=e(document).scrollTop(e(document).scrollTop()+i.scrollSpeed));if(!i.axis||i.axis!="y")t.pageX-e(document).scrollLeft()<i.scrollSensitivity?s=e(document).scrollLeft(e(document).scrollLeft()-i.scrollSpeed):e(window).width()-(t.pageX-e(document).scrollLeft())<i.scrollSensitivity&&(s=e(document).scrollLeft(e(document).scrollLeft()+i.scrollSpeed))}s!==!1&&e.ui.ddmanager&&!i.dropBehaviour&&e.ui.ddmanager.prepareOffsets(r,t)}}),e.ui.plugin.add("draggable","snap",{start:function(t,n){var r=e(this).data("draggable"),i=r.options;r.snapElements=[],e(i.snap.constructor!=String?i.snap.items||":data(draggable)":i.snap).each(function(){var t=e(this),n=t.offset();this!=r.element[0]&&r.snapElements.push({item:this,width:t.outerWidth(),height:t.outerHeight(),top:n.top,left:n.left})})},drag:function(t,n){var r=e(this).data("draggable"),i=r.options,s=i.snapTolerance,o=n.offset.left,u=o+r.helperProportions.width,a=n.offset.top,f=a+r.helperProportions.height;for(var l=r.snapElements.length-1;l>=0;l--){var c=r.snapElements[l].left,h=c+r.snapElements[l].width,p=r.snapElements[l].top,d=p+r.snapElements[l].height;if(!(c-s<o&&o<h+s&&p-s<a&&a<d+s||c-s<o&&o<h+s&&p-s<f&&f<d+s||c-s<u&&u<h+s&&p-s<a&&a<d+s||c-s<u&&u<h+s&&p-s<f&&f<d+s)){r.snapElements[l].snapping&&r.options.snap.release&&r.options.snap.release.call(r.element,t,e.extend(r._uiHash(),{snapItem:r.snapElements[l].item})),r.snapElements[l].snapping=!1;continue}if(i.snapMode!="inner"){var v=Math.abs(p-f)<=s,m=Math.abs(d-a)<=s,g=Math.abs(c-u)<=s,y=Math.abs(h-o)<=s;v&&(n.position.top=r._convertPositionTo("relative",{top:p-r.helperProportions.height,left:0}).top-r.margins.top),m&&(n.position.top=r._convertPositionTo("relative",{top:d,left:0}).top-r.margins.top),g&&(n.position.left=r._convertPositionTo("relative",{top:0,left:c-r.helperProportions.width}).left-r.margins.left),y&&(n.position.left=r._convertPositionTo("relative",{top:0,left:h}).left-r.margins.left)}var b=v||m||g||y;if(i.snapMode!="outer"){var v=Math.abs(p-a)<=s,m=Math.abs(d-f)<=s,g=Math.abs(c-o)<=s,y=Math.abs(h-u)<=s;v&&(n.position.top=r._convertPositionTo("relative",{top:p,left:0}).top-r.margins.top),m&&(n.position.top=r._convertPositionTo("relative",{top:d-r.helperProportions.height,left:0}).top-r.margins.top),g&&(n.position.left=r._convertPositionTo("relative",{top:0,left:c}).left-r.margins.left),y&&(n.position.left=r._convertPositionTo("relative",{top:0,left:h-r.helperProportions.width}).left-r.margins.left)}!r.snapElements[l].snapping&&(v||m||g||y||b)&&r.options.snap.snap&&r.options.snap.snap.call(r.element,t,e.extend(r._uiHash(),{snapItem:r.snapElements[l].item})),r.snapElements[l].snapping=v||m||g||y||b}}}),e.ui.plugin.add("draggable","stack",{start:function(t,n){var r=e(this).data("draggable").options,i=e.makeArray(e(r.stack)).sort(function(t,n){return(parseInt(e(t).css("zIndex"),10)||0)-(parseInt(e(n).css("zIndex"),10)||0)});if(!i.length)return;var s=parseInt(i[0].style.zIndex)||0;e(i).each(function(e){this.style.zIndex=s+e}),this[0].style.zIndex=s+i.length}}),e.ui.plugin.add("draggable","zIndex",{start:function(t,n){var r=e(n.helper),i=e(this).data("draggable").options;r.css("zIndex")&&(i._zIndex=r.css("zIndex")),r.css("zIndex",i.zIndex)},stop:function(t,n){var r=e(this).data("draggable").options;r._zIndex&&e(n.helper).css("zIndex",r._zIndex)}})})(jQuery);(function(e,t){e.widget("ui.droppable",{version:"1.9.0",widgetEventPrefix:"drop",options:{accept:"*",activeClass:!1,addClasses:!0,greedy:!1,hoverClass:!1,scope:"default",tolerance:"intersect"},_create:function(){var t=this.options,n=t.accept;this.isover=0,this.isout=1,this.accept=e.isFunction(n)?n:function(e){return e.is(n)},this.proportions={width:this.element[0].offsetWidth,height:this.element[0].offsetHeight},e.ui.ddmanager.droppables[t.scope]=e.ui.ddmanager.droppables[t.scope]||[],e.ui.ddmanager.droppables[t.scope].push(this),t.addClasses&&this.element.addClass("ui-droppable")},_destroy:function(){var t=e.ui.ddmanager.droppables[this.options.scope];for(var n=0;n<t.length;n++)t[n]==this&&t.splice(n,1);this.element.removeClass("ui-droppable ui-droppable-disabled")},_setOption:function(t,n){t=="accept"&&(this.accept=e.isFunction(n)?n:function(e){return e.is(n)}),e.Widget.prototype._setOption.apply(this,arguments)},_activate:function(t){var n=e.ui.ddmanager.current;this.options.activeClass&&this.element.addClass(this.options.activeClass),n&&this._trigger("activate",t,this.ui(n))},_deactivate:function(t){var n=e.ui.ddmanager.current;this.options.activeClass&&this.element.removeClass(this.options.activeClass),n&&this._trigger("deactivate",t,this.ui(n))},_over:function(t){var n=e.ui.ddmanager.current;if(!n||(n.currentItem||n.element)[0]==this.element[0])return;this.accept.call(this.element[0],n.currentItem||n.element)&&(this.options.hoverClass&&this.element.addClass(this.options.hoverClass),this._trigger("over",t,this.ui(n)))},_out:function(t){var n=e.ui.ddmanager.current;if(!n||(n.currentItem||n.element)[0]==this.element[0])return;this.accept.call(this.element[0],n.currentItem||n.element)&&(this.options.hoverClass&&this.element.removeClass(this.options.hoverClass),this._trigger("out",t,this.ui(n)))},_drop:function(t,n){var r=n||e.ui.ddmanager.current;if(!r||(r.currentItem||r.element)[0]==this.element[0])return!1;var i=!1;return this.element.find(":data(droppable)").not(".ui-draggable-dragging").each(function(){var t=e.data(this,"droppable");if(t.options.greedy&&!t.options.disabled&&t.options.scope==r.options.scope&&t.accept.call(t.element[0],r.currentItem||r.element)&&e.ui.intersect(r,e.extend(t,{offset:t.element.offset()}),t.options.tolerance))return i=!0,!1}),i?!1:this.accept.call(this.element[0],r.currentItem||r.element)?(this.options.activeClass&&this.element.removeClass(this.options.activeClass),this.options.hoverClass&&this.element.removeClass(this.options.hoverClass),this._trigger("drop",t,this.ui(r)),this.element):!1},ui:function(e){return{draggable:e.currentItem||e.element,helper:e.helper,position:e.position,offset:e.positionAbs}}}),e.ui.intersect=function(t,n,r){if(!n.offset)return!1;var i=(t.positionAbs||t.position.absolute).left,s=i+t.helperProportions.width,o=(t.positionAbs||t.position.absolute).top,u=o+t.helperProportions.height,a=n.offset.left,f=a+n.proportions.width,l=n.offset.top,c=l+n.proportions.height;switch(r){case"fit":return a<=i&&s<=f&&l<=o&&u<=c;case"intersect":return a<i+t.helperProportions.width/2&&s-t.helperProportions.width/2<f&&l<o+t.helperProportions.height/2&&u-t.helperProportions.height/2<c;case"pointer":var h=(t.positionAbs||t.position.absolute).left+(t.clickOffset||t.offset.click).left,p=(t.positionAbs||t.position.absolute).top+(t.clickOffset||t.offset.click).top,d=e.ui.isOver(p,h,l,a,n.proportions.height,n.proportions.width);return d;case"touch":return(o>=l&&o<=c||u>=l&&u<=c||o<l&&u>c)&&(i>=a&&i<=f||s>=a&&s<=f||i<a&&s>f);default:return!1}},e.ui.ddmanager={current:null,droppables:{"default":[]},prepareOffsets:function(t,n){var r=e.ui.ddmanager.droppables[t.options.scope]||[],i=n?n.type:null,s=(t.currentItem||t.element).find(":data(droppable)").andSelf();e:for(var o=0;o<r.length;o++){if(r[o].options.disabled||t&&!r[o].accept.call(r[o].element[0],t.currentItem||t.element))continue;for(var u=0;u<s.length;u++)if(s[u]==r[o].element[0]){r[o].proportions.height=0;continue e}r[o].visible=r[o].element.css("display")!="none";if(!r[o].visible)continue;i=="mousedown"&&r[o]._activate.call(r[o],n),r[o].offset=r[o].element.offset(),r[o].proportions={width:r[o].element[0].offsetWidth,height:r[o].element[0].offsetHeight}}},drop:function(t,n){var r=!1;return e.each(e.ui.ddmanager.droppables[t.options.scope]||[],function(){if(!this.options)return;!this.options.disabled&&this.visible&&e.ui.intersect(t,this,this.options.tolerance)&&(r=this._drop.call(this,n)||r),!this.options.disabled&&this.visible&&this.accept.call(this.element[0],t.currentItem||t.element)&&(this.isout=1,this.isover=0,this._deactivate.call(this,n))}),r},dragStart:function(t,n){t.element.parentsUntil("body").bind("scroll.droppable",function(){t.options.refreshPositions||e.ui.ddmanager.prepareOffsets(t,n)})},drag:function(t,n){t.options.refreshPositions&&e.ui.ddmanager.prepareOffsets(t,n),e.each(e.ui.ddmanager.droppables[t.options.scope]||[],function(){if(this.options.disabled||this.greedyChild||!this.visible)return;var r=e.ui.intersect(t,this,this.options.tolerance),i=!r&&this.isover==1?"isout":r&&this.isover==0?"isover":null;if(!i)return;var s;if(this.options.greedy){var o=this.options.scope,u=this.element.parents(":data(droppable)").filter(function(){return e.data(this,"droppable").options.scope===o});u.length&&(s=e.data(u[0],"droppable"),s.greedyChild=i=="isover"?1:0)}s&&i=="isover"&&(s.isover=0,s.isout=1,s._out.call(s,n)),this[i]=1,this[i=="isout"?"isover":"isout"]=0,this[i=="isover"?"_over":"_out"].call(this,n),s&&i=="isout"&&(s.isout=0,s.isover=1,s._over.call(s,n))})},dragStop:function(t,n){t.element.parentsUntil("body").unbind("scroll.droppable"),t.options.refreshPositions||e.ui.ddmanager.prepareOffsets(t,n)}}})(jQuery);(function(e,t){e.widget("ui.resizable",e.ui.mouse,{version:"1.9.0",widgetEventPrefix:"resize",options:{alsoResize:!1,animate:!1,animateDuration:"slow",animateEasing:"swing",aspectRatio:!1,autoHide:!1,containment:!1,ghost:!1,grid:!1,handles:"e,s,se",helper:!1,maxHeight:null,maxWidth:null,minHeight:10,minWidth:10,zIndex:1e3},_create:function(){var t=this,n=this.options;this.element.addClass("ui-resizable"),e.extend(this,{_aspectRatio:!!n.aspectRatio,aspectRatio:n.aspectRatio,originalElement:this.element,_proportionallyResizeElements:[],_helper:n.helper||n.ghost||n.animate?n.helper||"ui-resizable-helper":null}),this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i)&&(this.element.wrap(e('<div class="ui-wrapper" style="overflow: hidden;"></div>').css({position:this.element.css("position"),width:this.element.outerWidth(),height:this.element.outerHeight(),top:this.element.css("top"),left:this.element.css("left")})),this.element=this.element.parent().data("resizable",this.element.data("resizable")),this.elementIsWrapper=!0,this.element.css({marginLeft:this.originalElement.css("marginLeft"),marginTop:this.originalElement.css("marginTop"),marginRight:this.originalElement.css("marginRight"),marginBottom:this.originalElement.css("marginBottom")}),this.originalElement.css({marginLeft:0,marginTop:0,marginRight:0,marginBottom:0}),this.originalResizeStyle=this.originalElement.css("resize"),this.originalElement.css("resize","none"),this._proportionallyResizeElements.push(this.originalElement.css({position:"static",zoom:1,display:"block"})),this.originalElement.css({margin:this.originalElement.css("margin")}),this._proportionallyResize()),this.handles=n.handles||(e(".ui-resizable-handle",this.element).length?{n:".ui-resizable-n",e:".ui-resizable-e",s:".ui-resizable-s",w:".ui-resizable-w",se:".ui-resizable-se",sw:".ui-resizable-sw",ne:".ui-resizable-ne",nw:".ui-resizable-nw"}:"e,s,se");if(this.handles.constructor==String){this.handles=="all"&&(this.handles="n,e,s,w,se,sw,ne,nw");var r=this.handles.split(",");this.handles={};for(var i=0;i<r.length;i++){var s=e.trim(r[i]),o="ui-resizable-"+s,u=e('<div class="ui-resizable-handle '+o+'"></div>');u.css({zIndex:n.zIndex}),"se"==s&&u.addClass("ui-icon ui-icon-gripsmall-diagonal-se"),this.handles[s]=".ui-resizable-"+s,this.element.append(u)}}this._renderAxis=function(t){t=t||this.element;for(var n in this.handles){this.handles[n].constructor==String&&(this.handles[n]=e(this.handles[n],this.element).show());if(this.elementIsWrapper&&this.originalElement[0].nodeName.match(/textarea|input|select|button/i)){var r=e(this.handles[n],this.element),i=0;i=/sw|ne|nw|se|n|s/.test(n)?r.outerHeight():r.outerWidth();var s=["padding",/ne|nw|n/.test(n)?"Top":/se|sw|s/.test(n)?"Bottom":/^e$/.test(n)?"Right":"Left"].join("");t.css(s,i),this._proportionallyResize()}if(!e(this.handles[n]).length)continue}},this._renderAxis(this.element),this._handles=e(".ui-resizable-handle",this.element).disableSelection(),this._handles.mouseover(function(){if(!t.resizing){if(this.className)var e=this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i);t.axis=e&&e[1]?e[1]:"se"}}),n.autoHide&&(this._handles.hide(),e(this.element).addClass("ui-resizable-autohide").mouseenter(function(){if(n.disabled)return;e(this).removeClass("ui-resizable-autohide"),t._handles.show()}).mouseleave(function(){if(n.disabled)return;t.resizing||(e(this).addClass("ui-resizable-autohide"),t._handles.hide())})),this._mouseInit()},_destroy:function(){this._mouseDestroy();var t=function(t){e(t).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").removeData("ui-resizable").unbind(".resizable").find(".ui-resizable-handle").remove()};if(this.elementIsWrapper){t(this.element);var n=this.element;n.after(this.originalElement.css({position:n.css("position"),width:n.outerWidth(),height:n.outerHeight(),top:n.css("top"),left:n.css("left")})).remove()}return this.originalElement.css("resize",this.originalResizeStyle),t(this.originalElement),this},_mouseCapture:function(t){var n=!1;for(var r in this.handles)e(this.handles[r])[0]==t.target&&(n=!0);return!this.options.disabled&&n},_mouseStart:function(t){var r=this.options,i=this.element.position(),s=this.element;this.resizing=!0,this.documentScroll={top:e(document).scrollTop(),left:e(document).scrollLeft()},(s.is(".ui-draggable")||/absolute/.test(s.css("position")))&&s.css({position:"absolute",top:i.top,left:i.left}),this._renderProxy();var o=n(this.helper.css("left")),u=n(this.helper.css("top"));r.containment&&(o+=e(r.containment).scrollLeft()||0,u+=e(r.containment).scrollTop()||0),this.offset=this.helper.offset(),this.position={left:o,top:u},this.size=this._helper?{width:s.outerWidth(),height:s.outerHeight()}:{width:s.width(),height:s.height()},this.originalSize=this._helper?{width:s.outerWidth(),height:s.outerHeight()}:{width:s.width(),height:s.height()},this.originalPosition={left:o,top:u},this.sizeDiff={width:s.outerWidth()-s.width(),height:s.outerHeight()-s.height()},this.originalMousePosition={left:t.pageX,top:t.pageY},this.aspectRatio=typeof r.aspectRatio=="number"?r.aspectRatio:this.originalSize.width/this.originalSize.height||1;var a=e(".ui-resizable-"+this.axis).css("cursor");return e("body").css("cursor",a=="auto"?this.axis+"-resize":a),s.addClass("ui-resizable-resizing"),this._propagate("start",t),!0},_mouseDrag:function(e){var t=this.helper,n=this.options,r={},i=this,s=this.originalMousePosition,o=this.axis,u=e.pageX-s.left||0,a=e.pageY-s.top||0,f=this._change[o];if(!f)return!1;var l=f.apply(this,[e,u,a]);this._updateVirtualBoundaries(e.shiftKey);if(this._aspectRatio||e.shiftKey)l=this._updateRatio(l,e);return l=this._respectSize(l,e),this._propagate("resize",e),t.css({top:this.position.top+"px",left:this.position.left+"px",width:this.size.width+"px",height:this.size.height+"px"}),!this._helper&&this._proportionallyResizeElements.length&&this._proportionallyResize(),this._updateCache(l),this._trigger("resize",e,this.ui()),!1},_mouseStop:function(t){this.resizing=!1;var n=this.options,r=this;if(this._helper){var i=this._proportionallyResizeElements,s=i.length&&/textarea/i.test(i[0].nodeName),o=s&&e.ui.hasScroll(i[0],"left")?0:r.sizeDiff.height,u=s?0:r.sizeDiff.width,a={width:r.helper.width()-u,height:r.helper.height()-o},f=parseInt(r.element.css("left"),10)+(r.position.left-r.originalPosition.left)||null,l=parseInt(r.element.css("top"),10)+(r.position.top-r.originalPosition.top)||null;n.animate||this.element.css(e.extend(a,{top:l,left:f})),r.helper.height(r.size.height),r.helper.width(r.size.width),this._helper&&!n.animate&&this._proportionallyResize()}return e("body").css("cursor","auto"),this.element.removeClass("ui-resizable-resizing"),this._propagate("stop",t),this._helper&&this.helper.remove(),!1},_updateVirtualBoundaries:function(e){var t=this.options,n,i,s,o,u;u={minWidth:r(t.minWidth)?t.minWidth:0,maxWidth:r(t.maxWidth)?t.maxWidth:Infinity,minHeight:r(t.minHeight)?t.minHeight:0,maxHeight:r(t.maxHeight)?t.maxHeight:Infinity};if(this._aspectRatio||e)n=u.minHeight*this.aspectRatio,s=u.minWidth/this.aspectRatio,i=u.maxHeight*this.aspectRatio,o=u.maxWidth/this.aspectRatio,n>u.minWidth&&(u.minWidth=n),s>u.minHeight&&(u.minHeight=s),i<u.maxWidth&&(u.maxWidth=i),o<u.maxHeight&&(u.maxHeight=o);this._vBoundaries=u},_updateCache:function(e){var t=this.options;this.offset=this.helper.offset(),r(e.left)&&(this.position.left=e.left),r(e.top)&&(this.position.top=e.top),r(e.height)&&(this.size.height=e.height),r(e.width)&&(this.size.width=e.width)},_updateRatio:function(e,t){var n=this.options,i=this.position,s=this.size,o=this.axis;return r(e.height)?e.width=e.height*this.aspectRatio:r(e.width)&&(e.height=e.width/this.aspectRatio),o=="sw"&&(e.left=i.left+(s.width-e.width),e.top=null),o=="nw"&&(e.top=i.top+(s.height-e.height),e.left=i.left+(s.width-e.width)),e},_respectSize:function(e,t){var n=this.helper,i=this._vBoundaries,s=this._aspectRatio||t.shiftKey,o=this.axis,u=r(e.width)&&i.maxWidth&&i.maxWidth<e.width,a=r(e.height)&&i.maxHeight&&i.maxHeight<e.height,f=r(e.width)&&i.minWidth&&i.minWidth>e.width,l=r(e.height)&&i.minHeight&&i.minHeight>e.height;f&&(e.width=i.minWidth),l&&(e.height=i.minHeight),u&&(e.width=i.maxWidth),a&&(e.height=i.maxHeight);var c=this.originalPosition.left+this.originalSize.width,h=this.position.top+this.size.height,p=/sw|nw|w/.test(o),d=/nw|ne|n/.test(o);f&&p&&(e.left=c-i.minWidth),u&&p&&(e.left=c-i.maxWidth),l&&d&&(e.top=h-i.minHeight),a&&d&&(e.top=h-i.maxHeight);var v=!e.width&&!e.height;return v&&!e.left&&e.top?e.top=null:v&&!e.top&&e.left&&(e.left=null),e},_proportionallyResize:function(){var t=this.options;if(!this._proportionallyResizeElements.length)return;var n=this.helper||this.element;for(var r=0;r<this._proportionallyResizeElements.length;r++){var i=this._proportionallyResizeElements[r];if(!this.borderDif){var s=[i.css("borderTopWidth"),i.css("borderRightWidth"),i.css("borderBottomWidth"),i.css("borderLeftWidth")],o=[i.css("paddingTop"),i.css("paddingRight"),i.css("paddingBottom"),i.css("paddingLeft")];this.borderDif=e.map(s,function(e,t){var n=parseInt(e,10)||0,r=parseInt(o[t],10)||0;return n+r})}i.css({height:n.height()-this.borderDif[0]-this.borderDif[2]||0,width:n.width()-this.borderDif[1]-this.borderDif[3]||0})}},_renderProxy:function(){var t=this.element,n=this.options;this.elementOffset=t.offset();if(this._helper){this.helper=this.helper||e('<div style="overflow:hidden;"></div>');var r=e.browser.msie&&e.browser.version<7,i=r?1:0,s=r?2:-1;this.helper.addClass(this._helper).css({width:this.element.outerWidth()+s,height:this.element.outerHeight()+s,position:"absolute",left:this.elementOffset.left-i+"px",top:this.elementOffset.top-i+"px",zIndex:++n.zIndex}),this.helper.appendTo("body").disableSelection()}else this.helper=this.element},_change:{e:function(e,t,n){return{width:this.originalSize.width+t}},w:function(e,t,n){var r=this.options,i=this.originalSize,s=this.originalPosition;return{left:s.left+t,width:i.width-t}},n:function(e,t,n){var r=this.options,i=this.originalSize,s=this.originalPosition;return{top:s.top+n,height:i.height-n}},s:function(e,t,n){return{height:this.originalSize.height+n}},se:function(t,n,r){return e.extend(this._change.s.apply(this,arguments),this._change.e.apply(this,[t,n,r]))},sw:function(t,n,r){return e.extend(this._change.s.apply(this,arguments),this._change.w.apply(this,[t,n,r]))},ne:function(t,n,r){return e.extend(this._change.n.apply(this,arguments),this._change.e.apply(this,[t,n,r]))},nw:function(t,n,r){return e.extend(this._change.n.apply(this,arguments),this._change.w.apply(this,[t,n,r]))}},_propagate:function(t,n){e.ui.plugin.call(this,t,[n,this.ui()]),t!="resize"&&this._trigger(t,n,this.ui())},plugins:{},ui:function(){return{originalElement:this.originalElement,element:this.element,helper:this.helper,position:this.position,size:this.size,originalSize:this.originalSize,originalPosition:this.originalPosition}}}),e.ui.plugin.add("resizable","alsoResize",{start:function(t,n){var r=e(this).data("resizable"),i=r.options,s=function(t){e(t).each(function(){var t=e(this);t.data("resizable-alsoresize",{width:parseInt(t.width(),10),height:parseInt(t.height(),10),left:parseInt(t.css("left"),10),top:parseInt(t.css("top"),10)})})};typeof i.alsoResize=="object"&&!i.alsoResize.parentNode?i.alsoResize.length?(i.alsoResize=i.alsoResize[0],s(i.alsoResize)):e.each(i.alsoResize,function(e){s(e)}):s(i.alsoResize)},resize:function(t,n){var r=e(this).data("resizable"),i=r.options,s=r.originalSize,o=r.originalPosition,u={height:r.size.height-s.height||0,width:r.size.width-s.width||0,top:r.position.top-o.top||0,left:r.position.left-o.left||0},a=function(t,r){e(t).each(function(){var t=e(this),i=e(this).data("resizable-alsoresize"),s={},o=r&&r.length?r:t.parents(n.originalElement[0]).length?["width","height"]:["width","height","top","left"];e.each(o,function(e,t){var n=(i[t]||0)+(u[t]||0);n&&n>=0&&(s[t]=n||null)}),t.css(s)})};typeof i.alsoResize=="object"&&!i.alsoResize.nodeType?e.each(i.alsoResize,function(e,t){a(e,t)}):a(i.alsoResize)},stop:function(t,n){e(this).removeData("resizable-alsoresize")}}),e.ui.plugin.add("resizable","animate",{stop:function(t,n){var r=e(this).data("resizable"),i=r.options,s=r._proportionallyResizeElements,o=s.length&&/textarea/i.test(s[0].nodeName),u=o&&e.ui.hasScroll(s[0],"left")?0:r.sizeDiff.height,a=o?0:r.sizeDiff.width,f={width:r.size.width-a,height:r.size.height-u},l=parseInt(r.element.css("left"),10)+(r.position.left-r.originalPosition.left)||null,c=parseInt(r.element.css("top"),10)+(r.position.top-r.originalPosition.top)||null;r.element.animate(e.extend(f,c&&l?{top:c,left:l}:{}),{duration:i.animateDuration,easing:i.animateEasing,step:function(){var n={width:parseInt(r.element.css("width"),10),height:parseInt(r.element.css("height"),10),top:parseInt(r.element.css("top"),10),left:parseInt(r.element.css("left"),10)};s&&s.length&&e(s[0]).css({width:n.width,height:n.height}),r._updateCache(n),r._propagate("resize",t)}})}}),e.ui.plugin.add("resizable","containment",{start:function(t,r){var i=e(this).data("resizable"),s=i.options,o=i.element,u=s.containment,a=u instanceof e?u.get(0):/parent/.test(u)?o.parent().get(0):u;if(!a)return;i.containerElement=e(a);if(/document/.test(u)||u==document)i.containerOffset={left:0,top:0},i.containerPosition={left:0,top:0},i.parentData={element:e(document),left:0,top:0,width:e(document).width(),height:e(document).height()||document.body.parentNode.scrollHeight};else{var f=e(a),l=[];e(["Top","Right","Left","Bottom"]).each(function(e,t){l[e]=n(f.css("padding"+t))}),i.containerOffset=f.offset(),i.containerPosition=f.position(),i.containerSize={height:f.innerHeight()-l[3],width:f.innerWidth()-l[1]};var c=i.containerOffset,h=i.containerSize.height,p=i.containerSize.width,d=e.ui.hasScroll(a,"left")?a.scrollWidth:p,v=e.ui.hasScroll(a)?a.scrollHeight:h;i.parentData={element:a,left:c.left,top:c.top,width:d,height:v}}},resize:function(t,n){var r=e(this).data("resizable"),i=r.options,s=r.containerSize,o=r.containerOffset,u=r.size,a=r.position,f=r._aspectRatio||t.shiftKey,l={top:0,left:0},c=r.containerElement;c[0]!=document&&/static/.test(c.css("position"))&&(l=o),a.left<(r._helper?o.left:0)&&(r.size.width=r.size.width+(r._helper?r.position.left-o.left:r.position.left-l.left),f&&(r.size.height=r.size.width/r.aspectRatio),r.position.left=i.helper?o.left:0),a.top<(r._helper?o.top:0)&&(r.size.height=r.size.height+(r._helper?r.position.top-o.top:r.position.top),f&&(r.size.width=r.size.height*r.aspectRatio),r.position.top=r._helper?o.top:0),r.offset.left=r.parentData.left+r.position.left,r.offset.top=r.parentData.top+r.position.top;var h=Math.abs((r._helper?r.offset.left-l.left:r.offset.left-l.left)+r.sizeDiff.width),p=Math.abs((r._helper?r.offset.top-l.top:r.offset.top-o.top)+r.sizeDiff.height),d=r.containerElement.get(0)==r.element.parent().get(0),v=/relative|absolute/.test(r.containerElement.css("position"));d&&v&&(h-=r.parentData.left),h+r.size.width>=r.parentData.width&&(r.size.width=r.parentData.width-h,f&&(r.size.height=r.size.width/r.aspectRatio)),p+r.size.height>=r.parentData.height&&(r.size.height=r.parentData.height-p,f&&(r.size.width=r.size.height*r.aspectRatio))},stop:function(t,n){var r=e(this).data("resizable"),i=r.options,s=r.position,o=r.containerOffset,u=r.containerPosition,a=r.containerElement,f=e(r.helper),l=f.offset(),c=f.outerWidth()-r.sizeDiff.width,h=f.outerHeight()-r.sizeDiff.height;r._helper&&!i.animate&&/relative/.test(a.css("position"))&&e(this).css({left:l.left-u.left-o.left,width:c,height:h}),r._helper&&!i.animate&&/static/.test(a.css("position"))&&e(this).css({left:l.left-u.left-o.left,width:c,height:h})}}),e.ui.plugin.add("resizable","ghost",{start:function(t,n){var r=e(this).data("resizable"),i=r.options,s=r.size;r.ghost=r.originalElement.clone(),r.ghost.css({opacity:.25,display:"block",position:"relative",height:s.height,width:s.width,margin:0,left:0,top:0}).addClass("ui-resizable-ghost").addClass(typeof i.ghost=="string"?i.ghost:""),r.ghost.appendTo(r.helper)},resize:function(t,n){var r=e(this).data("resizable"),i=r.options;r.ghost&&r.ghost.css({position:"relative",height:r.size.height,width:r.size.width})},stop:function(t,n){var r=e(this).data("resizable"),i=r.options;r.ghost&&r.helper&&r.helper.get(0).removeChild(r.ghost.get(0))}}),e.ui.plugin.add("resizable","grid",{resize:function(t,n){var r=e(this).data("resizable"),i=r.options,s=r.size,o=r.originalSize,u=r.originalPosition,a=r.axis,f=i._aspectRatio||t.shiftKey;i.grid=typeof i.grid=="number"?[i.grid,i.grid]:i.grid;var l=Math.round((s.width-o.width)/(i.grid[0]||1))*(i.grid[0]||1),c=Math.round((s.height-o.height)/(i.grid[1]||1))*(i.grid[1]||1);/^(se|s|e)$/.test(a)?(r.size.width=o.width+l,r.size.height=o.height+c):/^(ne)$/.test(a)?(r.size.width=o.width+l,r.size.height=o.height+c,r.position.top=u.top-c):/^(sw)$/.test(a)?(r.size.width=o.width+l,r.size.height=o.height+c,r.position.left=u.left-l):(r.size.width=o.width+l,r.size.height=o.height+c,r.position.top=u.top-c,r.position.left=u.left-l)}});var n=function(e){return parseInt(e,10)||0},r=function(e){return!isNaN(parseInt(e,10))}})(jQuery);(function(e,t){e.widget("ui.selectable",e.ui.mouse,{version:"1.9.0",options:{appendTo:"body",autoRefresh:!0,distance:0,filter:"*",tolerance:"touch"},_create:function(){var t=this;this.element.addClass("ui-selectable"),this.dragged=!1;var n;this.refresh=function(){n=e(t.options.filter,t.element[0]),n.addClass("ui-selectee"),n.each(function(){var t=e(this),n=t.offset();e.data(this,"selectable-item",{element:this,$element:t,left:n.left,top:n.top,right:n.left+t.outerWidth(),bottom:n.top+t.outerHeight(),startselected:!1,selected:t.hasClass("ui-selected"),selecting:t.hasClass("ui-selecting"),unselecting:t.hasClass("ui-unselecting")})})},this.refresh(),this.selectees=n.addClass("ui-selectee"),this._mouseInit(),this.helper=e("<div class='ui-selectable-helper'></div>")},_destroy:function(){this.selectees.removeClass("ui-selectee").removeData("selectable-item"),this.element.removeClass("ui-selectable ui-selectable-disabled"),this._mouseDestroy()},_mouseStart:function(t){var n=this;this.opos=[t.pageX,t.pageY];if(this.options.disabled)return;var r=this.options;this.selectees=e(r.filter,this.element[0]),this._trigger("start",t),e(r.appendTo).append(this.helper),this.helper.css({left:t.clientX,top:t.clientY,width:0,height:0}),r.autoRefresh&&this.refresh(),this.selectees.filter(".ui-selected").each(function(){var r=e.data(this,"selectable-item");r.startselected=!0,!t.metaKey&&!t.ctrlKey&&(r.$element.removeClass("ui-selected"),r.selected=!1,r.$element.addClass("ui-unselecting"),r.unselecting=!0,n._trigger("unselecting",t,{unselecting:r.element}))}),e(t.target).parents().andSelf().each(function(){var r=e.data(this,"selectable-item");if(r){var i=!t.metaKey&&!t.ctrlKey||!r.$element.hasClass("ui-selected");return r.$element.removeClass(i?"ui-unselecting":"ui-selected").addClass(i?"ui-selecting":"ui-unselecting"),r.unselecting=!i,r.selecting=i,r.selected=i,i?n._trigger("selecting",t,{selecting:r.element}):n._trigger("unselecting",t,{unselecting:r.element}),!1}})},_mouseDrag:function(t){var n=this;this.dragged=!0;if(this.options.disabled)return;var r=this.options,i=this.opos[0],s=this.opos[1],o=t.pageX,u=t.pageY;if(i>o){var a=o;o=i,i=a}if(s>u){var a=u;u=s,s=a}return this.helper.css({left:i,top:s,width:o-i,height:u-s}),this.selectees.each(function(){var a=e.data(this,"selectable-item");if(!a||a.element==n.element[0])return;var f=!1;r.tolerance=="touch"?f=!(a.left>o||a.right<i||a.top>u||a.bottom<s):r.tolerance=="fit"&&(f=a.left>i&&a.right<o&&a.top>s&&a.bottom<u),f?(a.selected&&(a.$element.removeClass("ui-selected"),a.selected=!1),a.unselecting&&(a.$element.removeClass("ui-unselecting"),a.unselecting=!1),a.selecting||(a.$element.addClass("ui-selecting"),a.selecting=!0,n._trigger("selecting",t,{selecting:a.element}))):(a.selecting&&((t.metaKey||t.ctrlKey)&&a.startselected?(a.$element.removeClass("ui-selecting"),a.selecting=!1,a.$element.addClass("ui-selected"),a.selected=!0):(a.$element.removeClass("ui-selecting"),a.selecting=!1,a.startselected&&(a.$element.addClass("ui-unselecting"),a.unselecting=!0),n._trigger("unselecting",t,{unselecting:a.element}))),a.selected&&!t.metaKey&&!t.ctrlKey&&!a.startselected&&(a.$element.removeClass("ui-selected"),a.selected=!1,a.$element.addClass("ui-unselecting"),a.unselecting=!0,n._trigger("unselecting",t,{unselecting:a.element})))}),!1},_mouseStop:function(t){var n=this;this.dragged=!1;var r=this.options;return e(".ui-unselecting",this.element[0]).each(function(){var r=e.data(this,"selectable-item");r.$element.removeClass("ui-unselecting"),r.unselecting=!1,r.startselected=!1,n._trigger("unselected",t,{unselected:r.element})}),e(".ui-selecting",this.element[0]).each(function(){var r=e.data(this,"selectable-item");r.$element.removeClass("ui-selecting").addClass("ui-selected"),r.selecting=!1,r.selected=!0,r.startselected=!0,n._trigger("selected",t,{selected:r.element})}),this._trigger("stop",t),this.helper.remove(),!1}})})(jQuery);(function(e,t){e.widget("ui.sortable",e.ui.mouse,{version:"1.9.0",widgetEventPrefix:"sort",ready:!1,options:{appendTo:"parent",axis:!1,connectWith:!1,containment:!1,cursor:"auto",cursorAt:!1,dropOnEmpty:!0,forcePlaceholderSize:!1,forceHelperSize:!1,grid:!1,handle:!1,helper:"original",items:"> *",opacity:!1,placeholder:!1,revert:!1,scroll:!0,scrollSensitivity:20,scrollSpeed:20,scope:"default",tolerance:"intersect",zIndex:1e3},_create:function(){var e=this.options;this.containerCache={},this.element.addClass("ui-sortable"),this.refresh(),this.floating=this.items.length?e.axis==="x"||/left|right/.test(this.items[0].item.css("float"))||/inline|table-cell/.test(this.items[0].item.css("display")):!1,this.offset=this.element.offset(),this._mouseInit(),this.ready=!0},_destroy:function(){this.element.removeClass("ui-sortable ui-sortable-disabled"),this._mouseDestroy();for(var e=this.items.length-1;e>=0;e--)this.items[e].item.removeData(this.widgetName+"-item");return this},_setOption:function(t,n){t==="disabled"?(this.options[t]=n,this.widget().toggleClass("ui-sortable-disabled",!!n)):e.Widget.prototype._setOption.apply(this,arguments)},_mouseCapture:function(t,n){var r=this;if(this.reverting)return!1;if(this.options.disabled||this.options.type=="static")return!1;this._refreshItems(t);var i=null,s=e(t.target).parents().each(function(){if(e.data(this,r.widgetName+"-item")==r)return i=e(this),!1});e.data(t.target,r.widgetName+"-item")==r&&(i=e(t.target));if(!i)return!1;if(this.options.handle&&!n){var o=!1;e(this.options.handle,i).find("*").andSelf().each(function(){this==t.target&&(o=!0)});if(!o)return!1}return this.currentItem=i,this._removeCurrentsFromItems(),!0},_mouseStart:function(t,n,r){var i=this.options;this.currentContainer=this,this.refreshPositions(),this.helper=this._createHelper(t),this._cacheHelperProportions(),this._cacheMargins(),this.scrollParent=this.helper.scrollParent(),this.offset=this.currentItem.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},e.extend(this.offset,{click:{left:t.pageX-this.offset.left,top:t.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.helper.css("position","absolute"),this.cssPosition=this.helper.css("position"),this.originalPosition=this._generatePosition(t),this.originalPageX=t.pageX,this.originalPageY=t.pageY,i.cursorAt&&this._adjustOffsetFromHelper(i.cursorAt),this.domPosition={prev:this.currentItem.prev()[0],parent:this.currentItem.parent()[0]},this.helper[0]!=this.currentItem[0]&&this.currentItem.hide(),this._createPlaceholder(),i.containment&&this._setContainment(),i.cursor&&(e("body").css("cursor")&&(this._storedCursor=e("body").css("cursor")),e("body").css("cursor",i.cursor)),i.opacity&&(this.helper.css("opacity")&&(this._storedOpacity=this.helper.css("opacity")),this.helper.css("opacity",i.opacity)),i.zIndex&&(this.helper.css("zIndex")&&(this._storedZIndex=this.helper.css("zIndex")),this.helper.css("zIndex",i.zIndex)),this.scrollParent[0]!=document&&this.scrollParent[0].tagName!="HTML"&&(this.overflowOffset=this.scrollParent.offset()),this._trigger("start",t,this._uiHash()),this._preserveHelperProportions||this._cacheHelperProportions();if(!r)for(var s=this.containers.length-1;s>=0;s--)this.containers[s]._trigger("activate",t,this._uiHash(this));return e.ui.ddmanager&&(e.ui.ddmanager.current=this),e.ui.ddmanager&&!i.dropBehaviour&&e.ui.ddmanager.prepareOffsets(this,t),this.dragging=!0,this.helper.addClass("ui-sortable-helper"),this._mouseDrag(t),!0},_mouseDrag:function(t){this.position=this._generatePosition(t),this.positionAbs=this._convertPositionTo("absolute"),this.lastPositionAbs||(this.lastPositionAbs=this.positionAbs);if(this.options.scroll){var n=this.options,r=!1;this.scrollParent[0]!=document&&this.scrollParent[0].tagName!="HTML"?(this.overflowOffset.top+this.scrollParent[0].offsetHeight-t.pageY<n.scrollSensitivity?this.scrollParent[0].scrollTop=r=this.scrollParent[0].scrollTop+n.scrollSpeed:t.pageY-this.overflowOffset.top<n.scrollSensitivity&&(this.scrollParent[0].scrollTop=r=this.scrollParent[0].scrollTop-n.scrollSpeed),this.overflowOffset.left+this.scrollParent[0].offsetWidth-t.pageX<n.scrollSensitivity?this.scrollParent[0].scrollLeft=r=this.scrollParent[0].scrollLeft+n.scrollSpeed:t.pageX-this.overflowOffset.left<n.scrollSensitivity&&(this.scrollParent[0].scrollLeft=r=this.scrollParent[0].scrollLeft-n.scrollSpeed)):(t.pageY-e(document).scrollTop()<n.scrollSensitivity?r=e(document).scrollTop(e(document).scrollTop()-n.scrollSpeed):e(window).height()-(t.pageY-e(document).scrollTop())<n.scrollSensitivity&&(r=e(document).scrollTop(e(document).scrollTop()+n.scrollSpeed)),t.pageX-e(document).scrollLeft()<n.scrollSensitivity?r=e(document).scrollLeft(e(document).scrollLeft()-n.scrollSpeed):e(window).width()-(t.pageX-e(document).scrollLeft())<n.scrollSensitivity&&(r=e(document).scrollLeft(e(document).scrollLeft()+n.scrollSpeed))),r!==!1&&e.ui.ddmanager&&!n.dropBehaviour&&e.ui.ddmanager.prepareOffsets(this,t)}this.positionAbs=this._convertPositionTo("absolute");if(!this.options.axis||this.options.axis!="y")this.helper[0].style.left=this.position.left+"px";if(!this.options.axis||this.options.axis!="x")this.helper[0].style.top=this.position.top+"px";for(var i=this.items.length-1;i>=0;i--){var s=this.items[i],o=s.item[0],u=this._intersectsWithPointer(s);if(!u)continue;if(s.instance!==this.currentContainer)continue;if(o!=this.currentItem[0]&&this.placeholder[u==1?"next":"prev"]()[0]!=o&&!e.contains(this.placeholder[0],o)&&(this.options.type=="semi-dynamic"?!e.contains(this.element[0],o):!0)){this.direction=u==1?"down":"up";if(this.options.tolerance!="pointer"&&!this._intersectsWithSides(s))break;this._rearrange(t,s),this._trigger("change",t,this._uiHash());break}}return this._contactContainers(t),e.ui.ddmanager&&e.ui.ddmanager.drag(this,t),this._trigger("sort",t,this._uiHash()),this.lastPositionAbs=this.positionAbs,!1},_mouseStop:function(t,n){if(!t)return;e.ui.ddmanager&&!this.options.dropBehaviour&&e.ui.ddmanager.drop(this,t);if(this.options.revert){var r=this,i=this.placeholder.offset();this.reverting=!0,e(this.helper).animate({left:i.left-this.offset.parent.left-this.margins.left+(this.offsetParent[0]==document.body?0:this.offsetParent[0].scrollLeft),top:i.top-this.offset.parent.top-this.margins.top+(this.offsetParent[0]==document.body?0:this.offsetParent[0].scrollTop)},parseInt(this.options.revert,10)||500,function(){r._clear(t)})}else this._clear(t,n);return!1},cancel:function(){if(this.dragging){this._mouseUp({target:null}),this.options.helper=="original"?this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper"):this.currentItem.show();for(var t=this.containers.length-1;t>=0;t--)this.containers[t]._trigger("deactivate",null,this._uiHash(this)),this.containers[t].containerCache.over&&(this.containers[t]._trigger("out",null,this._uiHash(this)),this.containers[t].containerCache.over=0)}return this.placeholder&&(this.placeholder[0].parentNode&&this.placeholder[0].parentNode.removeChild(this.placeholder[0]),this.options.helper!="original"&&this.helper&&this.helper[0].parentNode&&this.helper.remove(),e.extend(this,{helper:null,dragging:!1,reverting:!1,_noFinalSort:null}),this.domPosition.prev?e(this.domPosition.prev).after(this.currentItem):e(this.domPosition.parent).prepend(this.currentItem)),this},serialize:function(t){var n=this._getItemsAsjQuery(t&&t.connected),r=[];return t=t||{},e(n).each(function(){var n=(e(t.item||this).attr(t.attribute||"id")||"").match(t.expression||/(.+)[-=_](.+)/);n&&r.push((t.key||n[1]+"[]")+"="+(t.key&&t.expression?n[1]:n[2]))}),!r.length&&t.key&&r.push(t.key+"="),r.join("&")},toArray:function(t){var n=this._getItemsAsjQuery(t&&t.connected),r=[];return t=t||{},n.each(function(){r.push(e(t.item||this).attr(t.attribute||"id")||"")}),r},_intersectsWith:function(e){var t=this.positionAbs.left,n=t+this.helperProportions.width,r=this.positionAbs.top,i=r+this.helperProportions.height,s=e.left,o=s+e.width,u=e.top,a=u+e.height,f=this.offset.click.top,l=this.offset.click.left,c=r+f>u&&r+f<a&&t+l>s&&t+l<o;return this.options.tolerance=="pointer"||this.options.forcePointerForContainers||this.options.tolerance!="pointer"&&this.helperProportions[this.floating?"width":"height"]>e[this.floating?"width":"height"]?c:s<t+this.helperProportions.width/2&&n-this.helperProportions.width/2<o&&u<r+this.helperProportions.height/2&&i-this.helperProportions.height/2<a},_intersectsWithPointer:function(t){var n=this.options.axis==="x"||e.ui.isOverAxis(this.positionAbs.top+this.offset.click.top,t.top,t.height),r=this.options.axis==="y"||e.ui.isOverAxis(this.positionAbs.left+this.offset.click.left,t.left,t.width),i=n&&r,s=this._getDragVerticalDirection(),o=this._getDragHorizontalDirection();return i?this.floating?o&&o=="right"||s=="down"?2:1:s&&(s=="down"?2:1):!1},_intersectsWithSides:function(t){var n=e.ui.isOverAxis(this.positionAbs.top+this.offset.click.top,t.top+t.height/2,t.height),r=e.ui.isOverAxis(this.positionAbs.left+this.offset.click.left,t.left+t.width/2,t.width),i=this._getDragVerticalDirection(),s=this._getDragHorizontalDirection();return this.floating&&s?s=="right"&&r||s=="left"&&!r:i&&(i=="down"&&n||i=="up"&&!n)},_getDragVerticalDirection:function(){var e=this.positionAbs.top-this.lastPositionAbs.top;return e!=0&&(e>0?"down":"up")},_getDragHorizontalDirection:function(){var e=this.positionAbs.left-this.lastPositionAbs.left;return e!=0&&(e>0?"right":"left")},refresh:function(e){return this._refreshItems(e),this.refreshPositions(),this},_connectWith:function(){var e=this.options;return e.connectWith.constructor==String?[e.connectWith]:e.connectWith},_getItemsAsjQuery:function(t){var n=[],r=[],i=this._connectWith();if(i&&t)for(var s=i.length-1;s>=0;s--){var o=e(i[s]);for(var u=o.length-1;u>=0;u--){var a=e.data(o[u],this.widgetName);a&&a!=this&&!a.options.disabled&&r.push([e.isFunction(a.options.items)?a.options.items.call(a.element):e(a.options.items,a.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),a])}}r.push([e.isFunction(this.options.items)?this.options.items.call(this.element,null,{options:this.options,item:this.currentItem}):e(this.options.items,this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),this]);for(var s=r.length-1;s>=0;s--)r[s][0].each(function(){n.push(this)});return e(n)},_removeCurrentsFromItems:function(){var e=this.currentItem.find(":data("+this.widgetName+"-item)");for(var t=0;t<this.items.length;t++)for(var n=0;n<e.length;n++)e[n]==this.items[t].item[0]&&this.items.splice(t,1)},_refreshItems:function(t){this.items=[],this.containers=[this];var n=this.items,r=[[e.isFunction(this.options.items)?this.options.items.call(this.element[0],t,{item:this.currentItem}):e(this.options.items,this.element),this]],i=this._connectWith();if(i&&this.ready)for(var s=i.length-1;s>=0;s--){var o=e(i[s]);for(var u=o.length-1;u>=0;u--){var a=e.data(o[u],this.widgetName);a&&a!=this&&!a.options.disabled&&(r.push([e.isFunction(a.options.items)?a.options.items.call(a.element[0],t,{item:this.currentItem}):e(a.options.items,a.element),a]),this.containers.push(a))}}for(var s=r.length-1;s>=0;s--){var f=r[s][1],l=r[s][0];for(var u=0,c=l.length;u<c;u++){var h=e(l[u]);h.data(this.widgetName+"-item",f),n.push({item:h,instance:f,width:0,height:0,left:0,top:0})}}},refreshPositions:function(t){this.offsetParent&&this.helper&&(this.offset.parent=this._getParentOffset());for(var n=this.items.length-1;n>=0;n--){var r=this.items[n];if(r.instance!=this.currentContainer&&this.currentContainer&&r.item[0]!=this.currentItem[0])continue;var i=this.options.toleranceElement?e(this.options.toleranceElement,r.item):r.item;t||(r.width=i.outerWidth(),r.height=i.outerHeight());var s=i.offset();r.left=s.left,r.top=s.top}if(this.options.custom&&this.options.custom.refreshContainers)this.options.custom.refreshContainers.call(this);else for(var n=this.containers.length-1;n>=0;n--){var s=this.containers[n].element.offset();this.containers[n].containerCache.left=s.left,this.containers[n].containerCache.top=s.top,this.containers[n].containerCache.width=this.containers[n].element.outerWidth(),this.containers[n].containerCache.height=this.containers[n].element.outerHeight()}return this},_createPlaceholder:function(t){t=t||this;var n=t.options;if(!n.placeholder||n.placeholder.constructor==String){var r=n.placeholder;n.placeholder={element:function(){var n=e(document.createElement(t.currentItem[0].nodeName)).addClass(r||t.currentItem[0].className+" ui-sortable-placeholder").removeClass("ui-sortable-helper")[0];return r||(n.style.visibility="hidden"),n},update:function(e,i){if(r&&!n.forcePlaceholderSize)return;i.height()||i.height(t.currentItem.innerHeight()-parseInt(t.currentItem.css("paddingTop")||0,10)-parseInt(t.currentItem.css("paddingBottom")||0,10)),i.width()||i.width(t.currentItem.innerWidth()-parseInt(t.currentItem.css("paddingLeft")||0,10)-parseInt(t.currentItem.css("paddingRight")||0,10))}}}t.placeholder=e(n.placeholder.element.call(t.element,t.currentItem)),t.currentItem.after(t.placeholder),n.placeholder.update(t,t.placeholder)},_contactContainers:function(t){var n=null,r=null;for(var i=this.containers.length-1;i>=0;i--){if(e.contains(this.currentItem[0],this.containers[i].element[0]))continue;if(this._intersectsWith(this.containers[i].containerCache)){if(n&&e.contains(this.containers[i].element[0],n.element[0]))continue;n=this.containers[i],r=i}else this.containers[i].containerCache.over&&(this.containers[i]._trigger("out",t,this._uiHash(this)),this.containers[i].containerCache.over=0)}if(!n)return;if(this.containers.length===1)this.containers[r]._trigger("over",t,this._uiHash(this)),this.containers[r].containerCache.over=1;else if(this.currentContainer!=this.containers[r]){var s=1e4,o=null,u=this.positionAbs[this.containers[r].floating?"left":"top"];for(var a=this.items.length-1;a>=0;a--){if(!e.contains(this.containers[r].element[0],this.items[a].item[0]))continue;var f=this.containers[r].floating?this.items[a].item.offset().left:this.items[a].item.offset().top;Math.abs(f-u)<s&&(s=Math.abs(f-u),o=this.items[a],this.direction=f-u>0?"down":"up")}if(!o&&!this.options.dropOnEmpty)return;this.currentContainer=this.containers[r],o?this._rearrange(t,o,null,!0):this._rearrange(t,null,this.containers[r].element,!0),this._trigger("change",t,this._uiHash()),this.containers[r]._trigger("change",t,this._uiHash(this)),this.options.placeholder.update(this.currentContainer,this.placeholder),this.containers[r]._trigger("over",t,this._uiHash(this)),this.containers[r].containerCache.over=1}},_createHelper:function(t){var n=this.options,r=e.isFunction(n.helper)?e(n.helper.apply(this.element[0],[t,this.currentItem])):n.helper=="clone"?this.currentItem.clone():this.currentItem;return r.parents("body").length||e(n.appendTo!="parent"?n.appendTo:this.currentItem[0].parentNode)[0].appendChild(r[0]),r[0]==this.currentItem[0]&&(this._storedCSS={width:this.currentItem[0].style.width,height:this.currentItem[0].style.height,position:this.currentItem.css("position"),top:this.currentItem.css("top"),left:this.currentItem.css("left")}),(r[0].style.width==""||n.forceHelperSize)&&r.width(this.currentItem.width()),(r[0].style.height==""||n.forceHelperSize)&&r.height(this.currentItem.height()),r},_adjustOffsetFromHelper:function(t){typeof t=="string"&&(t=t.split(" ")),e.isArray(t)&&(t={left:+t[0],top:+t[1]||0}),"left"in t&&(this.offset.click.left=t.left+this.margins.left),"right"in t&&(this.offset.click.left=this.helperProportions.width-t.right+this.margins.left),"top"in t&&(this.offset.click.top=t.top+this.margins.top),"bottom"in t&&(this.offset.click.top=this.helperProportions.height-t.bottom+this.margins.top)},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var t=this.offsetParent.offset();this.cssPosition=="absolute"&&this.scrollParent[0]!=document&&e.contains(this.scrollParent[0],this.offsetParent[0])&&(t.left+=this.scrollParent.scrollLeft(),t.top+=this.scrollParent.scrollTop());if(this.offsetParent[0]==document.body||this.offsetParent[0].tagName&&this.offsetParent[0].tagName.toLowerCase()=="html"&&e.browser.msie)t={top:0,left:0};return{top:t.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:t.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if(this.cssPosition=="relative"){var e=this.currentItem.position();return{top:e.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:e.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.currentItem.css("marginLeft"),10)||0,top:parseInt(this.currentItem.css("marginTop"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var t=this.options;t.containment=="parent"&&(t.containment=this.helper[0].parentNode);if(t.containment=="document"||t.containment=="window")this.containment=[0-this.offset.relative.left-this.offset.parent.left,0-this.offset.relative.top-this.offset.parent.top,e(t.containment=="document"?document:window).width()-this.helperProportions.width-this.margins.left,(e(t.containment=="document"?document:window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top];if(!/^(document|window|parent)$/.test(t.containment)){var n=e(t.containment)[0],r=e(t.containment).offset(),i=e(n).css("overflow")!="hidden";this.containment=[r.left+(parseInt(e(n).css("borderLeftWidth"),10)||0)+(parseInt(e(n).css("paddingLeft"),10)||0)-this.margins.left,r.top+(parseInt(e(n).css("borderTopWidth"),10)||0)+(parseInt(e(n).css("paddingTop"),10)||0)-this.margins.top,r.left+(i?Math.max(n.scrollWidth,n.offsetWidth):n.offsetWidth)-(parseInt(e(n).css("borderLeftWidth"),10)||0)-(parseInt(e(n).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left,r.top+(i?Math.max(n.scrollHeight,n.offsetHeight):n.offsetHeight)-(parseInt(e(n).css("borderTopWidth"),10)||0)-(parseInt(e(n).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top]}},_convertPositionTo:function(t,n){n||(n=this.position);var r=t=="absolute"?1:-1,i=this.options,s=this.cssPosition!="absolute"||this.scrollParent[0]!=document&&!!e.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,o=/(html|body)/i.test(s[0].tagName);return{top:n.top+this.offset.relative.top*r+this.offset.parent.top*r-(this.cssPosition=="fixed"?-this.scrollParent.scrollTop():o?0:s.scrollTop())*r,left:n.left+this.offset.relative.left*r+this.offset.parent.left*r-(this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():o?0:s.scrollLeft())*r}},_generatePosition:function(t){var n=this.options,r=this.cssPosition!="absolute"||this.scrollParent[0]!=document&&!!e.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,i=/(html|body)/i.test(r[0].tagName);this.cssPosition=="relative"&&(this.scrollParent[0]==document||this.scrollParent[0]==this.offsetParent[0])&&(this.offset.relative=this._getRelativeOffset());var s=t.pageX,o=t.pageY;if(this.originalPosition){this.containment&&(t.pageX-this.offset.click.left<this.containment[0]&&(s=this.containment[0]+this.offset.click.left),t.pageY-this.offset.click.top<this.containment[1]&&(o=this.containment[1]+this.offset.click.top),t.pageX-this.offset.click.left>this.containment[2]&&(s=this.containment[2]+this.offset.click.left),t.pageY-this.offset.click.top>this.containment[3]&&(o=this.containment[3]+this.offset.click.top));if(n.grid){var u=this.originalPageY+Math.round((o-this.originalPageY)/n.grid[1])*n.grid[1];o=this.containment?u-this.offset.click.top<this.containment[1]||u-this.offset.click.top>this.containment[3]?u-this.offset.click.top<this.containment[1]?u+n.grid[1]:u-n.grid[1]:u:u;var a=this.originalPageX+Math.round((s-this.originalPageX)/n.grid[0])*n.grid[0];s=this.containment?a-this.offset.click.left<this.containment[0]||a-this.offset.click.left>this.containment[2]?a-this.offset.click.left<this.containment[0]?a+n.grid[0]:a-n.grid[0]:a:a}}return{top:o-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+(this.cssPosition=="fixed"?-this.scrollParent.scrollTop():i?0:r.scrollTop()),left:s-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+(this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():i?0:r.scrollLeft())}},_rearrange:function(e,t,n,r){n?n[0].appendChild(this.placeholder[0]):t.item[0].parentNode.insertBefore(this.placeholder[0],this.direction=="down"?t.item[0]:t.item[0].nextSibling),this.counter=this.counter?++this.counter:1;var i=this.counter;this._delay(function(){i==this.counter&&this.refreshPositions(!r)})},_clear:function(t,n){this.reverting=!1;var r=[];!this._noFinalSort&&this.currentItem.parent().length&&this.placeholder.before(this.currentItem),this._noFinalSort=null;if(this.helper[0]==this.currentItem[0]){for(var i in this._storedCSS)if(this._storedCSS[i]=="auto"||this._storedCSS[i]=="static")this._storedCSS[i]="";this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper")}else this.currentItem.show();this.fromOutside&&!n&&r.push(function(e){this._trigger("receive",e,this._uiHash(this.fromOutside))}),(this.fromOutside||this.domPosition.prev!=this.currentItem.prev().not(".ui-sortable-helper")[0]||this.domPosition.parent!=this.currentItem.parent()[0])&&!n&&r.push(function(e){this._trigger("update",e,this._uiHash())}),this!==this.currentContainer&&(n||(r.push(function(e){this._trigger("remove",e,this._uiHash())}),r.push(function(e){return function(t){e._trigger("receive",t,this._uiHash(this))}}.call(this,this.currentContainer)),r.push(function(e){return function(t){e._trigger("update",t,this._uiHash(this))}}.call(this,this.currentContainer))));for(var i=this.containers.length-1;i>=0;i--)n||r.push(function(e){return function(t){e._trigger("deactivate",t,this._uiHash(this))}}.call(this,this.containers[i])),this.containers[i].containerCache.over&&(r.push(function(e){return function(t){e._trigger("out",t,this._uiHash(this))}}.call(this,this.containers[i])),this.containers[i].containerCache.over=0);this._storedCursor&&e("body").css("cursor",this._storedCursor),this._storedOpacity&&this.helper.css("opacity",this._storedOpacity),this._storedZIndex&&this.helper.css("zIndex",this._storedZIndex=="auto"?"":this._storedZIndex),this.dragging=!1;if(this.cancelHelperRemoval){if(!n){this._trigger("beforeStop",t,this._uiHash());for(var i=0;i<r.length;i++)r[i].call(this,t);this._trigger("stop",t,this._uiHash())}return this.fromOutside=!1,!1}n||this._trigger("beforeStop",t,this._uiHash()),this.placeholder[0].parentNode.removeChild(this.placeholder[0]),this.helper[0]!=this.currentItem[0]&&this.helper.remove(),this.helper=null;if(!n){for(var i=0;i<r.length;i++)r[i].call(this,t);this._trigger("stop",t,this._uiHash())}return this.fromOutside=!1,!0},_trigger:function(){e.Widget.prototype._trigger.apply(this,arguments)===!1&&this.cancel()},_uiHash:function(t){var n=t||this;return{helper:n.helper,placeholder:n.placeholder||e([]),position:n.position,originalPosition:n.originalPosition,offset:n.positionAbs,item:n.currentItem,sender:t?t.element:null}}})})(jQuery);(function(e,t){var n=0,r={},i={};r.height=r.paddingTop=r.paddingBottom=r.borderTopWidth=r.borderBottomWidth="hide",i.height=i.paddingTop=i.paddingBottom=i.borderTopWidth=i.borderBottomWidth="show",e.widget("ui.accordion",{version:"1.9.0",options:{active:0,animate:{},collapsible:!1,event:"click",header:"> li > :first-child,> :not(li):even",heightStyle:"auto",icons:{activeHeader:"ui-icon-triangle-1-s",header:"ui-icon-triangle-1-e"},activate:null,beforeActivate:null},_create:function(){var t=this.accordionId="ui-accordion-"+(this.element.attr("id")||++n),r=this.options;this.prevShow=this.prevHide=e(),this.element.addClass("ui-accordion ui-widget ui-helper-reset"),this.headers=this.element.find(r.header).addClass("ui-accordion-header ui-helper-reset ui-state-default ui-corner-all"),this._hoverable(this.headers),this._focusable(this.headers),this.headers.next().addClass("ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom").hide(),!r.collapsible&&r.active===!1&&(r.active=0),r.active<0&&(r.active+=this.headers.length),this.active=this._findActive(r.active).addClass("ui-accordion-header-active ui-state-active").toggleClass("ui-corner-all ui-corner-top"),this.active.next().addClass("ui-accordion-content-active").show(),this._createIcons(),this.originalHeight=this.element[0].style.height,this.refresh(),this.element.attr("role","tablist"),this.headers.attr("role","tab").each(function(n){var r=e(this),i=r.attr("id"),s=r.next(),o=s.attr("id");i||(i=t+"-header-"+n,r.attr("id",i)),o||(o=t+"-panel-"+n,s.attr("id",o)),r.attr("aria-controls",o),s.attr("aria-labelledby",i)}).next().attr("role","tabpanel"),this.headers.not(this.active).attr({"aria-selected":"false",tabIndex:-1}).next().attr({"aria-expanded":"false","aria-hidden":"true"}).hide(),this.active.length?this.active.attr({"aria-selected":"true",tabIndex:0}).next().attr({"aria-expanded":"true","aria-hidden":"false"}):this.headers.eq(0).attr("tabIndex",0),this._on(this.headers,{keydown:"_keydown"}),this._on(this.headers.next(),{keydown:"_panelKeyDown"}),this._setupEvents(r.event)},_getCreateEventData:function(){return{header:this.active,content:this.active.length?this.active.next():e()}},_createIcons:function(){var t=this.options.icons;t&&(e("<span>").addClass("ui-accordion-header-icon ui-icon "+t.header).prependTo(this.headers),this.active.children(".ui-accordion-header-icon").removeClass(t.header).addClass(t.activeHeader),this.headers.addClass("ui-accordion-icons"))},_destroyIcons:function(){this.headers.removeClass("ui-accordion-icons").children(".ui-accordion-header-icon").remove()},_destroy:function(){var e;this.element.removeClass("ui-accordion ui-widget ui-helper-reset").removeAttr("role"),this.headers.removeClass("ui-accordion-header ui-accordion-header-active ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top").removeAttr("role").removeAttr("aria-selected").removeAttr("aria-controls").removeAttr("tabIndex").each(function(){/^ui-accordion/.test(this.id)&&this.removeAttribute("id")}),this._destroyIcons(),e=this.headers.next().css("display","").removeAttr("role").removeAttr("aria-expanded").removeAttr("aria-hidden").removeAttr("aria-labelledby").removeClass("ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-state-disabled").each(function(){/^ui-accordion/.test(this.id)&&this.removeAttribute("id")}),this.options.heightStyle!=="content"&&(this.element.css("height",this.originalHeight),e.css("height",""))},_setOption:function(e,t){if(e==="active"){this._activate(t);return}e==="event"&&(this.options.event&&this._off(this.headers,this.options.event),this._setupEvents(t)),this._super(e,t),e==="collapsible"&&!t&&this.options.active===!1&&this._activate(0),e==="icons"&&(this._destroyIcons(),t&&this._createIcons()),e==="disabled"&&this.headers.add(this.headers.next()).toggleClass("ui-state-disabled",!!t)},_keydown:function(t){if(t.altKey||t.ctrlKey)return;var n=e.ui.keyCode,r=this.headers.length,i=this.headers.index(t.target),s=!1;switch(t.keyCode){case n.RIGHT:case n.DOWN:s=this.headers[(i+1)%r];break;case n.LEFT:case n.UP:s=this.headers[(i-1+r)%r];break;case n.SPACE:case n.ENTER:this._eventHandler(t);break;case n.HOME:s=this.headers[0];break;case n.END:s=this.headers[r-1]}s&&(e(t.target).attr("tabIndex",-1),e(s).attr("tabIndex",0),s.focus(),t.preventDefault())},_panelKeyDown:function(t){t.keyCode===e.ui.keyCode.UP&&t.ctrlKey&&e(t.currentTarget).prev().focus()},refresh:function(){var t,n,r=this.options.heightStyle,i=this.element.parent();this.element.css("height",this.originalHeight),r==="fill"?(e.support.minHeight||(n=i.css("overflow"),i.css("overflow","hidden")),t=i.height(),this.element.siblings(":visible").each(function(){var n=e(this),r=n.css("position");if(r==="absolute"||r==="fixed")return;t-=n.outerHeight(!0)}),n&&i.css("overflow",n),this.headers.each(function(){t-=e(this).outerHeight(!0)}),this.headers.next().each(function(){e(this).height(Math.max(0,t-e(this).innerHeight()+e(this).height()))}).css("overflow","auto")):r==="auto"&&(t=0,this.headers.next().each(function(){t=Math.max(t,e(this).height("").height())}).height(t)),r!=="content"&&this.element.height(this.element.height())},_activate:function(t){var n=this._findActive(t)[0];if(n===this.active[0])return;n=n||this.active[0],this._eventHandler({target:n,currentTarget:n,preventDefault:e.noop})},_findActive:function(t){return typeof t=="number"?this.headers.eq(t):e()},_setupEvents:function(t){var n={};if(!t)return;e.each(t.split(" "),function(e,t){n[t]="_eventHandler"}),this._on(this.headers,n)},_eventHandler:function(t){var n=this.options,r=this.active,i=e(t.currentTarget),s=i[0]===r[0],o=s&&n.collapsible,u=o?e():i.next(),a=r.next(),f={oldHeader:r,oldPanel:a,newHeader:o?e():i,newPanel:u};t.preventDefault();if(s&&!n.collapsible||this._trigger("beforeActivate",t,f)===!1)return;n.active=o?!1:this.headers.index(i),this.active=s?e():i,this._toggle(f),r.removeClass("ui-accordion-header-active ui-state-active"),n.icons&&r.children(".ui-accordion-header-icon").removeClass(n.icons.activeHeader).addClass(n.icons.header),s||(i.removeClass("ui-corner-all").addClass("ui-accordion-header-active ui-state-active ui-corner-top"),n.icons&&i.children(".ui-accordion-header-icon").removeClass(n.icons.header).addClass(n.icons.activeHeader),i.next().addClass("ui-accordion-content-active"))},_toggle:function(t){var n=t.newPanel,r=this.prevShow.length?this.prevShow:t.oldPanel;this.prevShow.add(this.prevHide).stop(!0,!0),this.prevShow=n,this.prevHide=r,this.options.animate?this._animate(n,r,t):(r.hide(),n.show(),this._toggleComplete(t)),r.attr({"aria-expanded":"false","aria-hidden":"true"}),r.prev().attr("aria-selected","false"),n.length&&r.length?r.prev().attr("tabIndex",-1):n.length&&this.headers.filter(function(){return e(this).attr("tabIndex")===0}).attr("tabIndex",-1),n.attr({"aria-expanded":"true","aria-hidden":"false"}).prev().attr({"aria-selected":"true",tabIndex:0})},_animate:function(e,t,n){var s,o,u,a=this,f=0,l=e.length&&(!t.length||e.index()<t.index()),c=this.options.animate||{},h=l&&c.down||c,p=function(){a._toggleComplete(n)};typeof h=="number"&&(u=h),typeof h=="string"&&(o=h),o=o||h.easing||c.easing,u=u||h.duration||c.duration;if(!t.length)return e.animate(i,u,o,p);if(!e.length)return t.animate(r,u,o,p);s=e.show().outerHeight(),t.animate(r,{duration:u,easing:o,step:function(e,t){t.now=Math.round(e)}}),e.hide().animate(i,{duration:u,easing:o,complete:p,step:function(e,n){n.now=Math.round(e),n.prop!=="height"?f+=n.now:a.options.heightStyle!=="content"&&(n.now=Math.round(s-t.outerHeight()-f),f=0)}})},_toggleComplete:function(e){var t=e.oldPanel;t.removeClass("ui-accordion-content-active").prev().removeClass("ui-corner-top").addClass("ui-corner-all"),t.length&&(t.parent()[0].className=t.parent()[0].className),this._trigger("activate",null,e)}}),e.uiBackCompat!==!1&&(function(e,t){e.extend(t.options,{navigation:!1,navigationFilter:function(){return this.href.toLowerCase()===location.href.toLowerCase()}});var n=t._create;t._create=function(){if(this.options.navigation){var t=this,r=this.element.find(this.options.header),i=r.next(),s=r.add(i).find("a").filter(this.options.navigationFilter)[0];s&&r.add(i).each(function(n){if(e.contains(this,s))return t.options.active=Math.floor(n/2),!1})}n.call(this)}}(jQuery,jQuery.ui.accordion.prototype),function(e,t){e.extend(t.options,{heightStyle:null,autoHeight:!0,clearStyle:!1,fillSpace:!1});var n=t._create,r=t._setOption;e.extend(t,{_create:function(){this.options.heightStyle=this.options.heightStyle||this._mergeHeightStyle(),n.call(this)},_setOption:function(e,t){if(e==="autoHeight"||e==="clearStyle"||e==="fillSpace")this.options.heightStyle=this._mergeHeightStyle();r.apply(this,arguments)},_mergeHeightStyle:function(){var e=this.options;if(e.fillSpace)return"fill";if(e.clearStyle)return"content";if(e.autoHeight)return"auto"}})}(jQuery,jQuery.ui.accordion.prototype),function(e,t){e.extend(t.options.icons,{activeHeader:null,headerSelected:"ui-icon-triangle-1-s"});var n=t._createIcons;t._createIcons=function(){this.options.icons&&(this.options.icons.activeHeader=this.options.icons.activeHeader||this.options.icons.headerSelected),n.call(this)}}(jQuery,jQuery.ui.accordion.prototype),function(e,t){t.activate=t._activate;var n=t._findActive;t._findActive=function(e){return e===-1&&(e=!1),e&&typeof e!="number"&&(e=this.headers.index(this.headers.filter(e)),e===-1&&(e=!1)),n.call(this,e)}}(jQuery,jQuery.ui.accordion.prototype),jQuery.ui.accordion.prototype.resize=jQuery.ui.accordion.prototype.refresh,function(e,t){e.extend(t.options,{change:null,changestart:null});var n=t._trigger;t._trigger=function(e,t,r){var i=n.apply(this,arguments);return i?(e==="beforeActivate"?i=n.call(this,"changestart",t,{oldHeader:r.oldHeader,oldContent:r.oldPanel,newHeader:r.newHeader,newContent:r.newPanel}):e==="activate"&&(i=n.call(this,"change",t,{oldHeader:r.oldHeader,oldContent:r.oldPanel,newHeader:r.newHeader,newContent:r.newPanel})),i):!1}}(jQuery,jQuery.ui.accordion.prototype),function(e,t){e.extend(t.options,{animate:null,animated:"slide"});var n=t._create;t._create=function(){var e=this.options;e.animate===null&&(e.animated?e.animated==="slide"?e.animate=300:e.animated==="bounceslide"?e.animate={duration:200,down:{easing:"easeOutBounce",duration:1e3}}:e.animate=e.animated:e.animate=!1),n.call(this)}}(jQuery,jQuery.ui.accordion.prototype))})(jQuery);(function(e,t){var n=0;e.widget("ui.autocomplete",{version:"1.9.0",defaultElement:"<input>",options:{appendTo:"body",autoFocus:!1,delay:300,minLength:1,position:{my:"left top",at:"left bottom",collision:"none"},source:null,change:null,close:null,focus:null,open:null,response:null,search:null,select:null},pending:0,_create:function(){var t,n,r;this.isMultiLine=this._isMultiLine(),this.valueMethod=this.element[this.element.is("input,textarea")?"val":"text"],this.isNewMenu=!0,this.element.addClass("ui-autocomplete-input").attr("autocomplete","off"),this._on({keydown:function(i){if(this.element.prop("readOnly")){t=!0,r=!0,n=!0;return}t=!1,r=!1,n=!1;var s=e.ui.keyCode;switch(i.keyCode){case s.PAGE_UP:t=!0,this._move("previousPage",i);break;case s.PAGE_DOWN:t=!0,this._move("nextPage",i);break;case s.UP:t=!0,this._keyEvent("previous",i);break;case s.DOWN:t=!0,this._keyEvent("next",i);break;case s.ENTER:case s.NUMPAD_ENTER:this.menu.active&&(t=!0,i.preventDefault(),this.menu.select(i));break;case s.TAB:this.menu.active&&this.menu.select(i);break;case s.ESCAPE:this.menu.element.is(":visible")&&(this._value(this.term),this.close(i),i.preventDefault());break;default:n=!0,this._searchTimeout(i)}},keypress:function(r){if(t){t=!1,r.preventDefault();return}if(n)return;var i=e.ui.keyCode;switch(r.keyCode){case i.PAGE_UP:this._move("previousPage",r);break;case i.PAGE_DOWN:this._move("nextPage",r);break;case i.UP:this._keyEvent("previous",r);break;case i.DOWN:this._keyEvent("next",r)}},input:function(e){if(r){r=!1,e.preventDefault();return}this._searchTimeout(e)},focus:function(){this.selectedItem=null,this.previous=this._value()},blur:function(e){if(this.cancelBlur){delete this.cancelBlur;return}clearTimeout(this.searching),this.close(e),this._change(e)}}),this._initSource(),this.menu=e("<ul>").addClass("ui-autocomplete").appendTo(this.document.find(this.options.appendTo||"body")[0]).menu({input:e(),role:null}).zIndex(this.element.zIndex()+1).hide().data("menu"),this._on(this.menu.element,{mousedown:function(t){t.preventDefault(),this.cancelBlur=!0,this._delay(function(){delete this.cancelBlur});var n=this.menu.element[0];e(t.target).closest(".ui-menu-item").length||this._delay(function(){var t=this;this.document.one("mousedown",function(r){r.target!==t.element[0]&&r.target!==n&&!e.contains(n,r.target)&&t.close()})})},menufocus:function(t,n){if(this.isNewMenu){this.isNewMenu=!1;if(t.originalEvent&&/^mouse/.test(t.originalEvent.type)){this.menu.blur(),this.document.one("mousemove",function(){e(t.target).trigger(t.originalEvent)});return}}var r=n.item.data("ui-autocomplete-item")||n.item.data("item.autocomplete");!1!==this._trigger("focus",t,{item:r})?t.originalEvent&&/^key/.test(t.originalEvent.type)&&this._value(r.value):this.liveRegion.text(r.value)},menuselect:function(e,t){var n=t.item.data("ui-autocomplete-item")||t.item.data("item.autocomplete"),r=this.previous;this.element[0]!==this.document[0].activeElement&&(this.element.focus(),this.previous=r,this._delay(function(){this.previous=r,this.selectedItem=n})),!1!==this._trigger("select",e,{item:n})&&this._value(n.value),this.term=this._value(),this.close(e),this.selectedItem=n}}),this.liveRegion=e("<span>",{role:"status","aria-live":"polite"}).addClass("ui-helper-hidden-accessible").insertAfter(this.element),e.fn.bgiframe&&this.menu.element.bgiframe(),this._on(this.window,{beforeunload:function(){this.element.removeAttr("autocomplete")}})},_destroy:function(){clearTimeout(this.searching),this.element.removeClass("ui-autocomplete-input").removeAttr("autocomplete"),this.menu.element.remove(),this.liveRegion.remove()},_setOption:function(e,t){this._super(e,t),e==="source"&&this._initSource(),e==="appendTo"&&this.menu.element.appendTo(this.document.find(t||"body")[0]),e==="disabled"&&t&&this.xhr&&this.xhr.abort()},_isMultiLine:function(){return this.element.is("textarea")?!0:this.element.is("input")?!1:this.element.prop("isContentEditable")},_initSource:function(){var t,n,r=this;e.isArray(this.options.source)?(t=this.options.source,this.source=function(n,r){r(e.ui.autocomplete.filter(t,n.term))}):typeof this.options.source=="string"?(n=this.options.source,this.source=function(t,i){r.xhr&&r.xhr.abort(),r.xhr=e.ajax({url:n,data:t,dataType:"json",success:function(e,t){i(e)},error:function(){i([])}})}):this.source=this.options.source},_searchTimeout:function(e){clearTimeout(this.searching),this.searching=this._delay(function(){this.term!==this._value()&&(this.selectedItem=null,this.search(null,e))},this.options.delay)},search:function(e,t){e=e!=null?e:this._value(),this.term=this._value();if(e.length<this.options.minLength)return this.close(t);if(this._trigger("search",t)===!1)return;return this._search(e)},_search:function(e){this.pending++,this.element.addClass("ui-autocomplete-loading"),this.cancelSearch=!1,this.source({term:e},this._response())},_response:function(){var e=this,t=++n;return function(r){t===n&&e.__response(r),e.pending--,e.pending||e.element.removeClass("ui-autocomplete-loading")}},__response:function(e){e&&(e=this._normalize(e)),this._trigger("response",null,{content:e}),!this.options.disabled&&e&&e.length&&!this.cancelSearch?(this._suggest(e),this._trigger("open")):this._close()},close:function(e){this.cancelSearch=!0,this._close(e)},_close:function(e){this.menu.element.is(":visible")&&(this.menu.element.hide(),this.menu.blur(),this.isNewMenu=!0,this._trigger("close",e))},_change:function(e){this.previous!==this._value()&&this._trigger("change",e,{item:this.selectedItem})},_normalize:function(t){return t.length&&t[0].label&&t[0].value?t:e.map(t,function(t){return typeof t=="string"?{label:t,value:t}:e.extend({label:t.label||t.value,value:t.value||t.label},t)})},_suggest:function(t){var n=this.menu.element.empty().zIndex(this.element.zIndex()+1);this._renderMenu(n,t),this.menu.refresh(),n.show(),this._resizeMenu(),n.position(e.extend({of:this.element},this.options.position)),this.options.autoFocus&&this.menu.next()},_resizeMenu:function(){var e=this.menu.element;e.outerWidth(Math.max(e.width("").outerWidth()+1,this.element.outerWidth()))},_renderMenu:function(t,n){var r=this;e.each(n,function(e,n){r._renderItemData(t,n)})},_renderItemData:function(e,t){return this._renderItem(e,t).data("ui-autocomplete-item",t)},_renderItem:function(t,n){return e("<li>").append(e("<a>").text(n.label)).appendTo(t)},_move:function(e,t){if(!this.menu.element.is(":visible")){this.search(null,t);return}if(this.menu.isFirstItem()&&/^previous/.test(e)||this.menu.isLastItem()&&/^next/.test(e)){this._value(this.term),this.menu.blur();return}this.menu[e](t)},widget:function(){return this.menu.element},_value:function(e){return this.valueMethod.apply(this.element,arguments)},_keyEvent:function(e,t){if(!this.isMultiLine||this.menu.element.is(":visible"))this._move(e,t),t.preventDefault()}}),e.extend(e.ui.autocomplete,{escapeRegex:function(e){return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")},filter:function(t,n){var r=new RegExp(e.ui.autocomplete.escapeRegex(n),"i");return e.grep(t,function(e){return r.test(e.label||e.value||e)})}}),e.widget("ui.autocomplete",e.ui.autocomplete,{options:{messages:{noResults:"No search results.",results:function(e){return e+(e>1?" results are":" result is")+" available, use up and down arrow keys to navigate."}}},__response:function(e){var t;this._superApply(arguments);if(this.options.disabled||this.cancelSearch)return;e&&e.length?t=this.options.messages.results(e.length):t=this.options.messages.noResults,this.liveRegion.text(t)}})})(jQuery);(function(e,t){var n,r,i,s,o="ui-button ui-widget ui-state-default ui-corner-all",u="ui-state-hover ui-state-active ",a="ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only",f=function(){var t=e(this).find(":ui-button");setTimeout(function(){t.button("refresh")},1)},l=function(t){var n=t.name,r=t.form,i=e([]);return n&&(r?i=e(r).find("[name='"+n+"']"):i=e("[name='"+n+"']",t.ownerDocument).filter(function(){return!this.form})),i};e.widget("ui.button",{version:"1.9.0",defaultElement:"<button>",options:{disabled:null,text:!0,label:null,icons:{primary:null,secondary:null}},_create:function(){this.element.closest("form").unbind("reset"+this.eventNamespace).bind("reset"+this.eventNamespace,f),typeof this.options.disabled!="boolean"?this.options.disabled=!!this.element.prop("disabled"):this.element.prop("disabled",this.options.disabled),this._determineButtonType(),this.hasTitle=!!this.buttonElement.attr("title");var t=this,u=this.options,a=this.type==="checkbox"||this.type==="radio",c="ui-state-hover"+(a?"":" ui-state-active"),h="ui-state-focus";u.label===null&&(u.label=this.type==="input"?this.buttonElement.val():this.buttonElement.html()),this.buttonElement.addClass(o).attr("role","button").bind("mouseenter"+this.eventNamespace,function(){if(u.disabled)return;e(this).addClass("ui-state-hover"),this===n&&e(this).addClass("ui-state-active")}).bind("mouseleave"+this.eventNamespace,function(){if(u.disabled)return;e(this).removeClass(c)}).bind("click"+this.eventNamespace,function(e){u.disabled&&(e.preventDefault(),e.stopImmediatePropagation())}),this.element.bind("focus"+this.eventNamespace,function(){t.buttonElement.addClass(h)}).bind("blur"+this.eventNamespace,function(){t.buttonElement.removeClass(h)}),a&&(this.element.bind("change"+this.eventNamespace,function(){if(s)return;t.refresh()}),this.buttonElement.bind("mousedown"+this.eventNamespace,function(e){if(u.disabled)return;s=!1,r=e.pageX,i=e.pageY}).bind("mouseup"+this.eventNamespace,function(e){if(u.disabled)return;if(r!==e.pageX||i!==e.pageY)s=!0})),this.type==="checkbox"?this.buttonElement.bind("click"+this.eventNamespace,function(){if(u.disabled||s)return!1;e(this).toggleClass("ui-state-active"),t.buttonElement.attr("aria-pressed",t.element[0].checked)}):this.type==="radio"?this.buttonElement.bind("click"+this.eventNamespace,function(){if(u.disabled||s)return!1;e(this).addClass("ui-state-active"),t.buttonElement.attr("aria-pressed","true");var n=t.element[0];l(n).not(n).map(function(){return e(this).button("widget")[0]}).removeClass("ui-state-active").attr("aria-pressed","false")}):(this.buttonElement.bind("mousedown"+this.eventNamespace,function(){if(u.disabled)return!1;e(this).addClass("ui-state-active"),n=this,t.document.one("mouseup",function(){n=null})}).bind("mouseup"+this.eventNamespace,function(){if(u.disabled)return!1;e(this).removeClass("ui-state-active")}).bind("keydown"+this.eventNamespace,function(t){if(u.disabled)return!1;(t.keyCode===e.ui.keyCode.SPACE||t.keyCode===e.ui.keyCode.ENTER)&&e(this).addClass("ui-state-active")}).bind("keyup"+this.eventNamespace,function(){e(this).removeClass("ui-state-active")}),this.buttonElement.is("a")&&this.buttonElement.keyup(function(t){t.keyCode===e.ui.keyCode.SPACE&&e(this).click()})),this._setOption("disabled",u.disabled),this._resetButton()},_determineButtonType:function(){var e,t,n;this.element.is("[type=checkbox]")?this.type="checkbox":this.element.is("[type=radio]")?this.type="radio":this.element.is("input")?this.type="input":this.type="button",this.type==="checkbox"||this.type==="radio"?(e=this.element.parents().last(),t="label[for='"+this.element.attr("id")+"']",this.buttonElement=e.find(t),this.buttonElement.length||(e=e.length?e.siblings():this.element.siblings(),this.buttonElement=e.filter(t),this.buttonElement.length||(this.buttonElement=e.find(t))),this.element.addClass("ui-helper-hidden-accessible"),n=this.element.is(":checked"),n&&this.buttonElement.addClass("ui-state-active"),this.buttonElement.prop("aria-pressed",n)):this.buttonElement=this.element},widget:function(){return this.buttonElement},_destroy:function(){this.element.removeClass("ui-helper-hidden-accessible"),this.buttonElement.removeClass(o+" "+u+" "+a).removeAttr("role").removeAttr("aria-pressed").html(this.buttonElement.find(".ui-button-text").html()),this.hasTitle||this.buttonElement.removeAttr("title")},_setOption:function(e,t){this._super(e,t);if(e==="disabled"){t?this.element.prop("disabled",!0):this.element.prop("disabled",!1);return}this._resetButton()},refresh:function(){var t=this.element.is(":disabled");t!==this.options.disabled&&this._setOption("disabled",t),this.type==="radio"?l(this.element[0]).each(function(){e(this).is(":checked")?e(this).button("widget").addClass("ui-state-active").attr("aria-pressed","true"):e(this).button("widget").removeClass("ui-state-active").attr("aria-pressed","false")}):this.type==="checkbox"&&(this.element.is(":checked")?this.buttonElement.addClass("ui-state-active").attr("aria-pressed","true"):this.buttonElement.removeClass("ui-state-active").attr("aria-pressed","false"))},_resetButton:function(){if(this.type==="input"){this.options.label&&this.element.val(this.options.label);return}var t=this.buttonElement.removeClass(a),n=e("<span></span>",this.document[0]).addClass("ui-button-text").html(this.options.label).appendTo(t.empty()).text(),r=this.options.icons,i=r.primary&&r.secondary,s=[];r.primary||r.secondary?(this.options.text&&s.push("ui-button-text-icon"+(i?"s":r.primary?"-primary":"-secondary")),r.primary&&t.prepend("<span class='ui-button-icon-primary ui-icon "+r.primary+"'></span>"),r.secondary&&t.append("<span class='ui-button-icon-secondary ui-icon "+r.secondary+"'></span>"),this.options.text||(s.push(i?"ui-button-icons-only":"ui-button-icon-only"),this.hasTitle||t.attr("title",e.trim(n)))):s.push("ui-button-text-only"),t.addClass(s.join(" "))}}),e.widget("ui.buttonset",{version:"1.9.0",options:{items:"button, input[type=button], input[type=submit], input[type=reset], input[type=checkbox], input[type=radio], a, :data(button)"},_create:function(){this.element.addClass("ui-buttonset")},_init:function(){this.refresh()},_setOption:function(e,t){e==="disabled"&&this.buttons.button("option",e,t),this._super(e,t)},refresh:function(){var t=this.element.css("direction")==="rtl";this.buttons=this.element.find(this.options.items).filter(":ui-button").button("refresh").end().not(":ui-button").button().end().map(function(){return e(this).button("widget")[0]}).removeClass("ui-corner-all ui-corner-left ui-corner-right").filter(":first").addClass(t?"ui-corner-right":"ui-corner-left").end().filter(":last").addClass(t?"ui-corner-left":"ui-corner-right").end().end()},_destroy:function(){this.element.removeClass("ui-buttonset"),this.buttons.map(function(){return e(this).button("widget")[0]}).removeClass("ui-corner-left ui-corner-right").end().button("destroy")}})})(jQuery);(function($,undefined){function Datepicker(){this.debug=!1,this._curInst=null,this._keyEvent=!1,this._disabledInputs=[],this._datepickerShowing=!1,this._inDialog=!1,this._mainDivId="ui-datepicker-div",this._inlineClass="ui-datepicker-inline",this._appendClass="ui-datepicker-append",this._triggerClass="ui-datepicker-trigger",this._dialogClass="ui-datepicker-dialog",this._disableClass="ui-datepicker-disabled",this._unselectableClass="ui-datepicker-unselectable",this._currentClass="ui-datepicker-current-day",this._dayOverClass="ui-datepicker-days-cell-over",this.regional=[],this.regional[""]={closeText:"Done",prevText:"Prev",nextText:"Next",currentText:"Today",monthNames:["January","February","March","April","May","June","July","August","September","October","November","December"],monthNamesShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],dayNames:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],dayNamesShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],dayNamesMin:["Su","Mo","Tu","We","Th","Fr","Sa"],weekHeader:"Wk",dateFormat:"mm/dd/yy",firstDay:0,isRTL:!1,showMonthAfterYear:!1,yearSuffix:""},this._defaults={showOn:"focus",showAnim:"fadeIn",showOptions:{},defaultDate:null,appendText:"",buttonText:"...",buttonImage:"",buttonImageOnly:!1,hideIfNoPrevNext:!1,navigationAsDateFormat:!1,gotoCurrent:!1,changeMonth:!1,changeYear:!1,yearRange:"c-10:c+10",showOtherMonths:!1,selectOtherMonths:!1,showWeek:!1,calculateWeek:this.iso8601Week,shortYearCutoff:"+10",minDate:null,maxDate:null,duration:"fast",beforeShowDay:null,beforeShow:null,onSelect:null,onChangeMonthYear:null,onClose:null,numberOfMonths:1,showCurrentAtPos:0,stepMonths:1,stepBigMonths:12,altField:"",altFormat:"",constrainInput:!0,showButtonPanel:!1,autoSize:!1,disabled:!1},$.extend(this._defaults,this.regional[""]),this.dpDiv=bindHover($('<div id="'+this._mainDivId+'" class="ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>'))}function bindHover(e){var t="button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";return e.delegate(t,"mouseout",function(){$(this).removeClass("ui-state-hover"),this.className.indexOf("ui-datepicker-prev")!=-1&&$(this).removeClass("ui-datepicker-prev-hover"),this.className.indexOf("ui-datepicker-next")!=-1&&$(this).removeClass("ui-datepicker-next-hover")}).delegate(t,"mouseover",function(){$.datepicker._isDisabledDatepicker(instActive.inline?e.parent()[0]:instActive.input[0])||($(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"),$(this).addClass("ui-state-hover"),this.className.indexOf("ui-datepicker-prev")!=-1&&$(this).addClass("ui-datepicker-prev-hover"),this.className.indexOf("ui-datepicker-next")!=-1&&$(this).addClass("ui-datepicker-next-hover"))})}function extendRemove(e,t){$.extend(e,t);for(var n in t)if(t[n]==null||t[n]==undefined)e[n]=t[n];return e}$.extend($.ui,{datepicker:{version:"1.9.0"}});var PROP_NAME="datepicker",dpuuid=(new Date).getTime(),instActive;$.extend(Datepicker.prototype,{markerClassName:"hasDatepicker",maxRows:4,log:function(){this.debug&&console.log.apply("",arguments)},_widgetDatepicker:function(){return this.dpDiv},setDefaults:function(e){return extendRemove(this._defaults,e||{}),this},_attachDatepicker:function(target,settings){var inlineSettings=null;for(var attrName in this._defaults){var attrValue=target.getAttribute("date:"+attrName);if(attrValue){inlineSettings=inlineSettings||{};try{inlineSettings[attrName]=eval(attrValue)}catch(err){inlineSettings[attrName]=attrValue}}}var nodeName=target.nodeName.toLowerCase(),inline=nodeName=="div"||nodeName=="span";target.id||(this.uuid+=1,target.id="dp"+this.uuid);var inst=this._newInst($(target),inline);inst.settings=$.extend({},settings||{},inlineSettings||{}),nodeName=="input"?this._connectDatepicker(target,inst):inline&&this._inlineDatepicker(target,inst)},_newInst:function(e,t){var n=e[0].id.replace(/([^A-Za-z0-9_-])/g,"\\\\$1");return{id:n,input:e,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:t,dpDiv:t?bindHover($('<div class="'+this._inlineClass+' ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>')):this.dpDiv}},_connectDatepicker:function(e,t){var n=$(e);t.append=$([]),t.trigger=$([]);if(n.hasClass(this.markerClassName))return;this._attachments(n,t),n.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp).bind("setData.datepicker",function(e,n,r){t.settings[n]=r}).bind("getData.datepicker",function(e,n){return this._get(t,n)}),this._autoSize(t),$.data(e,PROP_NAME,t),t.settings.disabled&&this._disableDatepicker(e)},_attachments:function(e,t){var n=this._get(t,"appendText"),r=this._get(t,"isRTL");t.append&&t.append.remove(),n&&(t.append=$('<span class="'+this._appendClass+'">'+n+"</span>"),e[r?"before":"after"](t.append)),e.unbind("focus",this._showDatepicker),t.trigger&&t.trigger.remove();var i=this._get(t,"showOn");(i=="focus"||i=="both")&&e.focus(this._showDatepicker);if(i=="button"||i=="both"){var s=this._get(t,"buttonText"),o=this._get(t,"buttonImage");t.trigger=$(this._get(t,"buttonImageOnly")?$("<img/>").addClass(this._triggerClass).attr({src:o,alt:s,title:s}):$('<button type="button"></button>').addClass(this._triggerClass).html(o==""?s:$("<img/>").attr({src:o,alt:s,title:s}))),e[r?"before":"after"](t.trigger),t.trigger.click(function(){return $.datepicker._datepickerShowing&&$.datepicker._lastInput==e[0]?$.datepicker._hideDatepicker():$.datepicker._datepickerShowing&&$.datepicker._lastInput!=e[0]?($.datepicker._hideDatepicker(),$.datepicker._showDatepicker(e[0])):$.datepicker._showDatepicker(e[0]),!1})}},_autoSize:function(e){if(this._get(e,"autoSize")&&!e.inline){var t=new Date(2009,11,20),n=this._get(e,"dateFormat");if(n.match(/[DM]/)){var r=function(e){var t=0,n=0;for(var r=0;r<e.length;r++)e[r].length>t&&(t=e[r].length,n=r);return n};t.setMonth(r(this._get(e,n.match(/MM/)?"monthNames":"monthNamesShort"))),t.setDate(r(this._get(e,n.match(/DD/)?"dayNames":"dayNamesShort"))+20-t.getDay())}e.input.attr("size",this._formatDate(e,t).length)}},_inlineDatepicker:function(e,t){var n=$(e);if(n.hasClass(this.markerClassName))return;n.addClass(this.markerClassName).append(t.dpDiv).bind("setData.datepicker",function(e,n,r){t.settings[n]=r}).bind("getData.datepicker",function(e,n){return this._get(t,n)}),$.data(e,PROP_NAME,t),this._setDate(t,this._getDefaultDate(t),!0),this._updateDatepicker(t),this._updateAlternate(t),t.settings.disabled&&this._disableDatepicker(e),t.dpDiv.css("display","block")},_dialogDatepicker:function(e,t,n,r,i){var s=this._dialogInst;if(!s){this.uuid+=1;var o="dp"+this.uuid;this._dialogInput=$('<input type="text" id="'+o+'" style="position: absolute; top: -100px; width: 0px;"/>'),this._dialogInput.keydown(this._doKeyDown),$("body").append(this._dialogInput),s=this._dialogInst=this._newInst(this._dialogInput,!1),s.settings={},$.data(this._dialogInput[0],PROP_NAME,s)}extendRemove(s.settings,r||{}),t=t&&t.constructor==Date?this._formatDate(s,t):t,this._dialogInput.val(t),this._pos=i?i.length?i:[i.pageX,i.pageY]:null;if(!this._pos){var u=document.documentElement.clientWidth,a=document.documentElement.clientHeight,f=document.documentElement.scrollLeft||document.body.scrollLeft,l=document.documentElement.scrollTop||document.body.scrollTop;this._pos=[u/2-100+f,a/2-150+l]}return this._dialogInput.css("left",this._pos[0]+20+"px").css("top",this._pos[1]+"px"),s.settings.onSelect=n,this._inDialog=!0,this.dpDiv.addClass(this._dialogClass),this._showDatepicker(this._dialogInput[0]),$.blockUI&&$.blockUI(this.dpDiv),$.data(this._dialogInput[0],PROP_NAME,s),this},_destroyDatepicker:function(e){var t=$(e),n=$.data(e,PROP_NAME);if(!t.hasClass(this.markerClassName))return;var r=e.nodeName.toLowerCase();$.removeData(e,PROP_NAME),r=="input"?(n.append.remove(),n.trigger.remove(),t.removeClass(this.markerClassName).unbind("focus",this._showDatepicker).unbind("keydown",this._doKeyDown).unbind("keypress",this._doKeyPress).unbind("keyup",this._doKeyUp)):(r=="div"||r=="span")&&t.removeClass(this.markerClassName).empty()},_enableDatepicker:function(e){var t=$(e),n=$.data(e,PROP_NAME);if(!t.hasClass(this.markerClassName))return;var r=e.nodeName.toLowerCase();if(r=="input")e.disabled=!1,n.trigger.filter("button").each(function(){this.disabled=!1}).end().filter("img").css({opacity:"1.0",cursor:""});else if(r=="div"||r=="span"){var i=t.children("."+this._inlineClass);i.children().removeClass("ui-state-disabled"),i.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!1)}this._disabledInputs=$.map(this._disabledInputs,function(t){return t==e?null:t})},_disableDatepicker:function(e){var t=$(e),n=$.data(e,PROP_NAME);if(!t.hasClass(this.markerClassName))return;var r=e.nodeName.toLowerCase();if(r=="input")e.disabled=!0,n.trigger.filter("button").each(function(){this.disabled=!0}).end().filter("img").css({opacity:"0.5",cursor:"default"});else if(r=="div"||r=="span"){var i=t.children("."+this._inlineClass);i.children().addClass("ui-state-disabled"),i.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!0)}this._disabledInputs=$.map(this._disabledInputs,function(t){return t==e?null:t}),this._disabledInputs[this._disabledInputs.length]=e},_isDisabledDatepicker:function(e){if(!e)return!1;for(var t=0;t<this._disabledInputs.length;t++)if(this._disabledInputs[t]==e)return!0;return!1},_getInst:function(e){try{return $.data(e,PROP_NAME)}catch(t){throw"Missing instance data for this datepicker"}},_optionDatepicker:function(e,t,n){var r=this._getInst(e);if(arguments.length==2&&typeof t=="string")return t=="defaults"?$.extend({},$.datepicker._defaults):r?t=="all"?$.extend({},r.settings):this._get(r,t):null;var i=t||{};typeof t=="string"&&(i={},i[t]=n);if(r){this._curInst==r&&this._hideDatepicker();var s=this._getDateDatepicker(e,!0),o=this._getMinMaxDate(r,"min"),u=this._getMinMaxDate(r,"max");extendRemove(r.settings,i),o!==null&&i.dateFormat!==undefined&&i.minDate===undefined&&(r.settings.minDate=this._formatDate(r,o)),u!==null&&i.dateFormat!==undefined&&i.maxDate===undefined&&(r.settings.maxDate=this._formatDate(r,u)),this._attachments($(e),r),this._autoSize(r),this._setDate(r,s),this._updateAlternate(r),this._updateDatepicker(r)}},_changeDatepicker:function(e,t,n){this._optionDatepicker(e,t,n)},_refreshDatepicker:function(e){var t=this._getInst(e);t&&this._updateDatepicker(t)},_setDateDatepicker:function(e,t){var n=this._getInst(e);n&&(this._setDate(n,t),this._updateDatepicker(n),this._updateAlternate(n))},_getDateDatepicker:function(e,t){var n=this._getInst(e);return n&&!n.inline&&this._setDateFromField(n,t),n?this._getDate(n):null},_doKeyDown:function(e){var t=$.datepicker._getInst(e.target),n=!0,r=t.dpDiv.is(".ui-datepicker-rtl");t._keyEvent=!0;if($.datepicker._datepickerShowing)switch(e.keyCode){case 9:$.datepicker._hideDatepicker(),n=!1;break;case 13:var i=$("td."+$.datepicker._dayOverClass+":not(."+$.datepicker._currentClass+")",t.dpDiv);i[0]&&$.datepicker._selectDay(e.target,t.selectedMonth,t.selectedYear,i[0]);var s=$.datepicker._get(t,"onSelect");if(s){var o=$.datepicker._formatDate(t);s.apply(t.input?t.input[0]:null,[o,t])}else $.datepicker._hideDatepicker();return!1;case 27:$.datepicker._hideDatepicker();break;case 33:$.datepicker._adjustDate(e.target,e.ctrlKey?-$.datepicker._get(t,"stepBigMonths"):-$.datepicker._get(t,"stepMonths"),"M");break;case 34:$.datepicker._adjustDate(e.target,e.ctrlKey?+$.datepicker._get(t,"stepBigMonths"):+$.datepicker._get(t,"stepMonths"),"M");break;case 35:(e.ctrlKey||e.metaKey)&&$.datepicker._clearDate(e.target),n=e.ctrlKey||e.metaKey;break;case 36:(e.ctrlKey||e.metaKey)&&$.datepicker._gotoToday(e.target),n=e.ctrlKey||e.metaKey;break;case 37:(e.ctrlKey||e.metaKey)&&$.datepicker._adjustDate(e.target,r?1:-1,"D"),n=e.ctrlKey||e.metaKey,e.originalEvent.altKey&&$.datepicker._adjustDate(e.target,e.ctrlKey?-$.datepicker._get(t,"stepBigMonths"):-$.datepicker._get(t,"stepMonths"),"M");break;case 38:(e.ctrlKey||e.metaKey)&&$.datepicker._adjustDate(e.target,-7,"D"),n=e.ctrlKey||e.metaKey;break;case 39:(e.ctrlKey||e.metaKey)&&$.datepicker._adjustDate(e.target,r?-1:1,"D"),n=e.ctrlKey||e.metaKey,e.originalEvent.altKey&&$.datepicker._adjustDate(e.target,e.ctrlKey?+$.datepicker._get(t,"stepBigMonths"):+$.datepicker._get(t,"stepMonths"),"M");break;case 40:(e.ctrlKey||e.metaKey)&&$.datepicker._adjustDate(e.target,7,"D"),n=e.ctrlKey||e.metaKey;break;default:n=!1}else e.keyCode==36&&e.ctrlKey?$.datepicker._showDatepicker(this):n=!1;n&&(e.preventDefault(),e.stopPropagation())},_doKeyPress:function(e){var t=$.datepicker._getInst(e.target);if($.datepicker._get(t,"constrainInput")){var n=$.datepicker._possibleChars($.datepicker._get(t,"dateFormat")),r=String.fromCharCode(e.charCode==undefined?e.keyCode:e.charCode);return e.ctrlKey||e.metaKey||r<" "||!n||n.indexOf(r)>-1}},_doKeyUp:function(e){var t=$.datepicker._getInst(e.target);if(t.input.val()!=t.lastVal)try{var n=$.datepicker.parseDate($.datepicker._get(t,"dateFormat"),t.input?t.input.val():null,$.datepicker._getFormatConfig(t));n&&($.datepicker._setDateFromField(t),$.datepicker._updateAlternate(t),$.datepicker._updateDatepicker(t))}catch(r){$.datepicker.log(r)}return!0},_showDatepicker:function(e){e=e.target||e,e.nodeName.toLowerCase()!="input"&&(e=$("input",e.parentNode)[0]);if($.datepicker._isDisabledDatepicker(e)||$.datepicker._lastInput==e)return;var t=$.datepicker._getInst(e);$.datepicker._curInst&&$.datepicker._curInst!=t&&($.datepicker._curInst.dpDiv.stop(!0,!0),t&&$.datepicker._datepickerShowing&&$.datepicker._hideDatepicker($.datepicker._curInst.input[0]));var n=$.datepicker._get(t,"beforeShow"),r=n?n.apply(e,[e,t]):{};if(r===!1)return;extendRemove(t.settings,r),t.lastVal=null,$.datepicker._lastInput=e,$.datepicker._setDateFromField(t),$.datepicker._inDialog&&(e.value=""),$.datepicker._pos||($.datepicker._pos=$.datepicker._findPos(e),$.datepicker._pos[1]+=e.offsetHeight);var i=!1;$(e).parents().each(function(){return i|=$(this).css("position")=="fixed",!i});var s={left:$.datepicker._pos[0],top:$.datepicker._pos[1]};$.datepicker._pos=null,t.dpDiv.empty(),t.dpDiv.css({position:"absolute",display:"block",top:"-1000px"}),$.datepicker._updateDatepicker(t),s=$.datepicker._checkOffset(t,s,i),t.dpDiv.css({position:$.datepicker._inDialog&&$.blockUI?"static":i?"fixed":"absolute",display:"none",left:s.left+"px",top:s.top+"px"});if(!t.inline){var o=$.datepicker._get(t,"showAnim"),u=$.datepicker._get(t,"duration"),a=function(){var e=t.dpDiv.find("iframe.ui-datepicker-cover");if(!!e.length){var n=$.datepicker._getBorders(t.dpDiv);e.css({left:-n[0],top:-n[1],width:t.dpDiv.outerWidth(),height:t.dpDiv.outerHeight()})}};t.dpDiv.zIndex($(e).zIndex()+1),$.datepicker._datepickerShowing=!0,$.effects&&($.effects.effect[o]||$.effects[o])?t.dpDiv.show(o,$.datepicker._get(t,"showOptions"),u,a):t.dpDiv[o||"show"](o?u:null,a),(!o||!u)&&a(),t.input.is(":visible")&&!t.input.is(":disabled")&&t.input.focus(),$.datepicker._curInst=t}},_updateDatepicker:function(e){this.maxRows=4;var t=$.datepicker._getBorders(e.dpDiv);instActive=e,e.dpDiv.empty().append(this._generateHTML(e)),this._attachHandlers(e);var n=e.dpDiv.find("iframe.ui-datepicker-cover");!n.length||n.css({left:-t[0],top:-t[1],width:e.dpDiv.outerWidth(),height:e.dpDiv.outerHeight()}),e.dpDiv.find("."+this._dayOverClass+" a").mouseover();var r=this._getNumberOfMonths(e),i=r[1],s=17;e.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width(""),i>1&&e.dpDiv.addClass("ui-datepicker-multi-"+i).css("width",s*i+"em"),e.dpDiv[(r[0]!=1||r[1]!=1?"add":"remove")+"Class"]("ui-datepicker-multi"),e.dpDiv[(this._get(e,"isRTL")?"add":"remove")+"Class"]("ui-datepicker-rtl"),e==$.datepicker._curInst&&$.datepicker._datepickerShowing&&e.input&&e.input.is(":visible")&&!e.input.is(":disabled")&&e.input[0]!=document.activeElement&&e.input.focus();if(e.yearshtml){var o=e.yearshtml;setTimeout(function(){o===e.yearshtml&&e.yearshtml&&e.dpDiv.find("select.ui-datepicker-year:first").replaceWith(e.yearshtml),o=e.yearshtml=null},0)}},_getBorders:function(e){var t=function(e){return{thin:1,medium:2,thick:3}[e]||e};return[parseFloat(t(e.css("border-left-width"))),parseFloat(t(e.css("border-top-width")))]},_checkOffset:function(e,t,n){var r=e.dpDiv.outerWidth(),i=e.dpDiv.outerHeight(),s=e.input?e.input.outerWidth():0,o=e.input?e.input.outerHeight():0,u=document.documentElement.clientWidth+(n?0:$(document).scrollLeft()),a=document.documentElement.clientHeight+(n?0:$(document).scrollTop());return t.left-=this._get(e,"isRTL")?r-s:0,t.left-=n&&t.left==e.input.offset().left?$(document).scrollLeft():0,t.top-=n&&t.top==e.input.offset().top+o?$(document).scrollTop():0,t.left-=Math.min(t.left,t.left+r>u&&u>r?Math.abs(t.left+r-u):0),t.top-=Math.min(t.top,t.top+i>a&&a>i?Math.abs(i+o):0),t},_findPos:function(e){var t=this._getInst(e),n=this._get(t,"isRTL");while(e&&(e.type=="hidden"||e.nodeType!=1||$.expr.filters.hidden(e)))e=e[n?"previousSibling":"nextSibling"];var r=$(e).offset();return[r.left,r.top]},_hideDatepicker:function(e){var t=this._curInst;if(!t||e&&t!=$.data(e,PROP_NAME))return;if(this._datepickerShowing){var n=this._get(t,"showAnim"),r=this._get(t,"duration"),i=function(){$.datepicker._tidyDialog(t)};$.effects&&($.effects.effect[n]||$.effects[n])?t.dpDiv.hide(n,$.datepicker._get(t,"showOptions"),r,i):t.dpDiv[n=="slideDown"?"slideUp":n=="fadeIn"?"fadeOut":"hide"](n?r:null,i),n||i(),this._datepickerShowing=!1;var s=this._get(t,"onClose");s&&s.apply(t.input?t.input[0]:null,[t.input?t.input.val():"",t]),this._lastInput=null,this._inDialog&&(this._dialogInput.css({position:"absolute",left:"0",top:"-100px"}),$.blockUI&&($.unblockUI(),$("body").append(this.dpDiv))),this._inDialog=!1}},_tidyDialog:function(e){e.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")},_checkExternalClick:function(e){if(!$.datepicker._curInst)return;var t=$(e.target),n=$.datepicker._getInst(t[0]);(t[0].id!=$.datepicker._mainDivId&&t.parents("#"+$.datepicker._mainDivId).length==0&&!t.hasClass($.datepicker.markerClassName)&&!t.closest("."+$.datepicker._triggerClass).length&&$.datepicker._datepickerShowing&&(!$.datepicker._inDialog||!$.blockUI)||t.hasClass($.datepicker.markerClassName)&&$.datepicker._curInst!=n)&&$.datepicker._hideDatepicker()},_adjustDate:function(e,t,n){var r=$(e),i=this._getInst(r[0]);if(this._isDisabledDatepicker(r[0]))return;this._adjustInstDate(i,t+(n=="M"?this._get(i,"showCurrentAtPos"):0),n),this._updateDatepicker(i)},_gotoToday:function(e){var t=$(e),n=this._getInst(t[0]);if(this._get(n,"gotoCurrent")&&n.currentDay)n.selectedDay=n.currentDay,n.drawMonth=n.selectedMonth=n.currentMonth,n.drawYear=n.selectedYear=n.currentYear;else{var r=new Date;n.selectedDay=r.getDate(),n.drawMonth=n.selectedMonth=r.getMonth(),n.drawYear=n.selectedYear=r.getFullYear()}this._notifyChange(n),this._adjustDate(t)},_selectMonthYear:function(e,t,n){var r=$(e),i=this._getInst(r[0]);i["selected"+(n=="M"?"Month":"Year")]=i["draw"+(n=="M"?"Month":"Year")]=parseInt(t.options[t.selectedIndex].value,10),this._notifyChange(i),this._adjustDate(r)},_selectDay:function(e,t,n,r){var i=$(e);if($(r).hasClass(this._unselectableClass)||this._isDisabledDatepicker(i[0]))return;var s=this._getInst(i[0]);s.selectedDay=s.currentDay=$("a",r).html(),s.selectedMonth=s.currentMonth=t,s.selectedYear=s.currentYear=n,this._selectDate(e,this._formatDate(s,s.currentDay,s.currentMonth,s.currentYear))},_clearDate:function(e){var t=$(e),n=this._getInst(t[0]);this._selectDate(t,"")},_selectDate:function(e,t){var n=$(e),r=this._getInst(n[0]);t=t!=null?t:this._formatDate(r),r.input&&r.input.val(t),this._updateAlternate(r);var i=this._get(r,"onSelect");i?i.apply(r.input?r.input[0]:null,[t,r]):r.input&&r.input.trigger("change"),r.inline?this._updateDatepicker(r):(this._hideDatepicker(),this._lastInput=r.input[0],typeof r.input[0]!="object"&&r.input.focus(),this._lastInput=null)},_updateAlternate:function(e){var t=this._get(e,"altField");if(t){var n=this._get(e,"altFormat")||this._get(e,"dateFormat"),r=this._getDate(e),i=this.formatDate(n,r,this._getFormatConfig(e));$(t).each(function(){$(this).val(i)})}},noWeekends:function(e){var t=e.getDay();return[t>0&&t<6,""]},iso8601Week:function(e){var t=new Date(e.getTime());t.setDate(t.getDate()+4-(t.getDay()||7));var n=t.getTime();return t.setMonth(0),t.setDate(1),Math.floor(Math.round((n-t)/864e5)/7)+1},parseDate:function(e,t,n){if(e==null||t==null)throw"Invalid arguments";t=typeof t=="object"?t.toString():t+"";if(t=="")return null;var r=(n?n.shortYearCutoff:null)||this._defaults.shortYearCutoff;r=typeof r!="string"?r:(new Date).getFullYear()%100+parseInt(r,10);var i=(n?n.dayNamesShort:null)||this._defaults.dayNamesShort,s=(n?n.dayNames:null)||this._defaults.dayNames,o=(n?n.monthNamesShort:null)||this._defaults.monthNamesShort,u=(n?n.monthNames:null)||this._defaults.monthNames,a=-1,f=-1,l=-1,c=-1,h=!1,p=function(t){var n=y+1<e.length&&e.charAt(y+1)==t;return n&&y++,n},d=function(e){var n=p(e),r=e=="@"?14:e=="!"?20:e=="y"&&n?4:e=="o"?3:2,i=new RegExp("^\\d{1,"+r+"}"),s=t.substring(g).match(i);if(!s)throw"Missing number at position "+g;return g+=s[0].length,parseInt(s[0],10)},v=function(e,n,r){var i=$.map(p(e)?r:n,function(e,t){return[[t,e]]}).sort(function(e,t){return-(e[1].length-t[1].length)}),s=-1;$.each(i,function(e,n){var r=n[1];if(t.substr(g,r.length).toLowerCase()==r.toLowerCase())return s=n[0],g+=r.length,!1});if(s!=-1)return s+1;throw"Unknown name at position "+g},m=function(){if(t.charAt(g)!=e.charAt(y))throw"Unexpected literal at position "+g;g++},g=0;for(var y=0;y<e.length;y++)if(h)e.charAt(y)=="'"&&!p("'")?h=!1:m();else switch(e.charAt(y)){case"d":l=d("d");break;case"D":v("D",i,s);break;case"o":c=d("o");break;case"m":f=d("m");break;case"M":f=v("M",o,u);break;case"y":a=d("y");break;case"@":var b=new Date(d("@"));a=b.getFullYear(),f=b.getMonth()+1,l=b.getDate();break;case"!":var b=new Date((d("!")-this._ticksTo1970)/1e4);a=b.getFullYear(),f=b.getMonth()+1,l=b.getDate();break;case"'":p("'")?m():h=!0;break;default:m()}if(g<t.length){var w=t.substr(g);if(!/^\s+/.test(w))throw"Extra/unparsed characters found in date: "+w}a==-1?a=(new Date).getFullYear():a<100&&(a+=(new Date).getFullYear()-(new Date).getFullYear()%100+(a<=r?0:-100));if(c>-1){f=1,l=c;do{var E=this._getDaysInMonth(a,f-1);if(l<=E)break;f++,l-=E}while(!0)}var b=this._daylightSavingAdjust(new Date(a,f-1,l));if(b.getFullYear()!=a||b.getMonth()+1!=f||b.getDate()!=l)throw"Invalid date";return b},ATOM:"yy-mm-dd",COOKIE:"D, dd M yy",ISO_8601:"yy-mm-dd",RFC_822:"D, d M y",RFC_850:"DD, dd-M-y",RFC_1036:"D, d M y",RFC_1123:"D, d M yy",RFC_2822:"D, d M yy",RSS:"D, d M y",TICKS:"!",TIMESTAMP:"@",W3C:"yy-mm-dd",_ticksTo1970:(718685+Math.floor(492.5)-Math.floor(19.7)+Math.floor(4.925))*24*60*60*1e7,formatDate:function(e,t,n){if(!t)return"";var r=(n?n.dayNamesShort:null)||this._defaults.dayNamesShort,i=(n?n.dayNames:null)||this._defaults.dayNames,s=(n?n.monthNamesShort:null)||this._defaults.monthNamesShort,o=(n?n.monthNames:null)||this._defaults.monthNames,u=function(t){var n=h+1<e.length&&e.charAt(h+1)==t;return n&&h++,n},a=function(e,t,n){var r=""+t;if(u(e))while(r.length<n)r="0"+r;return r},f=function(e,t,n,r){return u(e)?r[t]:n[t]},l="",c=!1;if(t)for(var h=0;h<e.length;h++)if(c)e.charAt(h)=="'"&&!u("'")?c=!1:l+=e.charAt(h);else switch(e.charAt(h)){case"d":l+=a("d",t.getDate(),2);break;case"D":l+=f("D",t.getDay(),r,i);break;case"o":l+=a("o",Math.round(((new Date(t.getFullYear(),t.getMonth(),t.getDate())).getTime()-(new Date(t.getFullYear(),0,0)).getTime())/864e5),3);break;case"m":l+=a("m",t.getMonth()+1,2);break;case"M":l+=f("M",t.getMonth(),s,o);break;case"y":l+=u("y")?t.getFullYear():(t.getYear()%100<10?"0":"")+t.getYear()%100;break;case"@":l+=t.getTime();break;case"!":l+=t.getTime()*1e4+this._ticksTo1970;break;case"'":u("'")?l+="'":c=!0;break;default:l+=e.charAt(h)}return l},_possibleChars:function(e){var t="",n=!1,r=function(t){var n=i+1<e.length&&e.charAt(i+1)==t;return n&&i++,n};for(var i=0;i<e.length;i++)if(n)e.charAt(i)=="'"&&!r("'")?n=!1:t+=e.charAt(i);else switch(e.charAt(i)){case"d":case"m":case"y":case"@":t+="0123456789";break;case"D":case"M":return null;case"'":r("'")?t+="'":n=!0;break;default:t+=e.charAt(i)}return t},_get:function(e,t){return e.settings[t]!==undefined?e.settings[t]:this._defaults[t]},_setDateFromField:function(e,t){if(e.input.val()==e.lastVal)return;var n=this._get(e,"dateFormat"),r=e.lastVal=e.input?e.input.val():null,i,s;i=s=this._getDefaultDate(e);var o=this._getFormatConfig(e);try{i=this.parseDate(n,r,o)||s}catch(u){this.log(u),r=t?"":r}e.selectedDay=i.getDate(),e.drawMonth=e.selectedMonth=i.getMonth(),e.drawYear=e.selectedYear=i.getFullYear(),e.currentDay=r?i.getDate():0,e.currentMonth=r?i.getMonth():0,e.currentYear=r?i.getFullYear():0,this._adjustInstDate(e)},_getDefaultDate:function(e){return this._restrictMinMax(e,this._determineDate(e,this._get(e,"defaultDate"),new Date))},_determineDate:function(e,t,n){var r=function(e){var t=new Date;return t.setDate(t.getDate()+e),t},i=function(t){try{return $.datepicker.parseDate($.datepicker._get(e,"dateFormat"),t,$.datepicker._getFormatConfig(e))}catch(n){}var r=(t.toLowerCase().match(/^c/)?$.datepicker._getDate(e):null)||new Date,i=r.getFullYear(),s=r.getMonth(),o=r.getDate(),u=/([+-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,a=u.exec(t);while(a){switch(a[2]||"d"){case"d":case"D":o+=parseInt(a[1],10);break;case"w":case"W":o+=parseInt(a[1],10)*7;break;case"m":case"M":s+=parseInt(a[1],10),o=Math.min(o,$.datepicker._getDaysInMonth(i,s));break;case"y":case"Y":i+=parseInt(a[1],10),o=Math.min(o,$.datepicker._getDaysInMonth(i,s))}a=u.exec(t)}return new Date(i,s,o)},s=t==null||t===""?n:typeof t=="string"?i(t):typeof t=="number"?isNaN(t)?n:r(t):new Date(t.getTime());return s=s&&s.toString()=="Invalid Date"?n:s,s&&(s.setHours(0),s.setMinutes(0),s.setSeconds(0),s.setMilliseconds(0)),this._daylightSavingAdjust(s)},_daylightSavingAdjust:function(e){return e?(e.setHours(e.getHours()>12?e.getHours()+2:0),e):null},_setDate:function(e,t,n){var r=!t,i=e.selectedMonth,s=e.selectedYear,o=this._restrictMinMax(e,this._determineDate(e,t,new Date));e.selectedDay=e.currentDay=o.getDate(),e.drawMonth=e.selectedMonth=e.currentMonth=o.getMonth(),e.drawYear=e.selectedYear=e.currentYear=o.getFullYear(),(i!=e.selectedMonth||s!=e.selectedYear)&&!n&&this._notifyChange(e),this._adjustInstDate(e),e.input&&e.input.val(r?"":this._formatDate(e))},_getDate:function(e){var t=!e.currentYear||e.input&&e.input.val()==""?null:this._daylightSavingAdjust(new Date(e.currentYear,e.currentMonth,e.currentDay));return t},_attachHandlers:function(e){var t=this._get(e,"stepMonths"),n="#"+e.id.replace(/\\\\/g,"\\");e.dpDiv.find("[data-handler]").map(function(){var e={prev:function(){window["DP_jQuery_"+dpuuid].datepicker._adjustDate(n,-t,"M")},next:function(){window["DP_jQuery_"+dpuuid].datepicker._adjustDate(n,+t,"M")},hide:function(){window["DP_jQuery_"+dpuuid].datepicker._hideDatepicker()},today:function(){window["DP_jQuery_"+dpuuid].datepicker._gotoToday(n)},selectDay:function(){return window["DP_jQuery_"+dpuuid].datepicker._selectDay(n,+this.getAttribute("data-month"),+this.getAttribute("data-year"),this),!1},selectMonth:function(){return window["DP_jQuery_"+dpuuid].datepicker._selectMonthYear(n,this,"M"),!1},selectYear:function(){return window["DP_jQuery_"+dpuuid].datepicker._selectMonthYear(n,this,"Y"),!1}};$(this).bind(this.getAttribute("data-event"),e[this.getAttribute("data-handler")])})},_generateHTML:function(e){var t=new Date;t=this._daylightSavingAdjust(new Date(t.getFullYear(),t.getMonth(),t.getDate()));var n=this._get(e,"isRTL"),r=this._get(e,"showButtonPanel"),i=this._get(e,"hideIfNoPrevNext"),s=this._get(e,"navigationAsDateFormat"),o=this._getNumberOfMonths(e),u=this._get(e,"showCurrentAtPos"),a=this._get(e,"stepMonths"),f=o[0]!=1||o[1]!=1,l=this._daylightSavingAdjust(e.currentDay?new Date(e.currentYear,e.currentMonth,e.currentDay):new Date(9999,9,9)),c=this._getMinMaxDate(e,"min"),h=this._getMinMaxDate(e,"max"),p=e.drawMonth-u,d=e.drawYear;p<0&&(p+=12,d--);if(h){var v=this._daylightSavingAdjust(new Date(h.getFullYear(),h.getMonth()-o[0]*o[1]+1,h.getDate()));v=c&&v<c?c:v;while(this._daylightSavingAdjust(new Date(d,p,1))>v)p--,p<0&&(p=11,d--)}e.drawMonth=p,e.drawYear=d;var m=this._get(e,"prevText");m=s?this.formatDate(m,this._daylightSavingAdjust(new Date(d,p-a,1)),this._getFormatConfig(e)):m;var g=this._canAdjustMonth(e,-1,d,p)?'<a class="ui-datepicker-prev ui-corner-all" data-handler="prev" data-event="click" title="'+m+'"><span class="ui-icon ui-icon-circle-triangle-'+(n?"e":"w")+'">'+m+"</span></a>":i?"":'<a class="ui-datepicker-prev ui-corner-all ui-state-disabled" title="'+m+'"><span class="ui-icon ui-icon-circle-triangle-'+(n?"e":"w")+'">'+m+"</span></a>",y=this._get(e,"nextText");y=s?this.formatDate(y,this._daylightSavingAdjust(new Date(d,p+a,1)),this._getFormatConfig(e)):y;var b=this._canAdjustMonth(e,1,d,p)?'<a class="ui-datepicker-next ui-corner-all" data-handler="next" data-event="click" title="'+y+'"><span class="ui-icon ui-icon-circle-triangle-'+(n?"w":"e")+'">'+y+"</span></a>":i?"":'<a class="ui-datepicker-next ui-corner-all ui-state-disabled" title="'+y+'"><span class="ui-icon ui-icon-circle-triangle-'+(n?"w":"e")+'">'+y+"</span></a>",w=this._get(e,"currentText"),E=this._get(e,"gotoCurrent")&&e.currentDay?l:t;w=s?this.formatDate(w,E,this._getFormatConfig(e)):w;var S=e.inline?"":'<button type="button" class="ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all" data-handler="hide" data-event="click">'+this._get(e,"closeText")+"</button>",x=r?'<div class="ui-datepicker-buttonpane ui-widget-content">'+(n?S:"")+(this._isInRange(e,E)?'<button type="button" class="ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all" data-handler="today" data-event="click">'+w+"</button>":"")+(n?"":S)+"</div>":"",T=parseInt(this._get(e,"firstDay"),10);T=isNaN(T)?0:T;var N=this._get(e,"showWeek"),C=this._get(e,"dayNames"),k=this._get(e,"dayNamesShort"),L=this._get(e,"dayNamesMin"),A=this._get(e,"monthNames"),O=this._get(e,"monthNamesShort"),M=this._get(e,"beforeShowDay"),_=this._get(e,"showOtherMonths"),D=this._get(e,"selectOtherMonths"),P=this._get(e,"calculateWeek")||this.iso8601Week,H=this._getDefaultDate(e),B="";for(var j=0;j<o[0];j++){var F="";this.maxRows=4;for(var I=0;I<o[1];I++){var q=this._daylightSavingAdjust(new Date(d,p,e.selectedDay)),R=" ui-corner-all",U="";if(f){U+='<div class="ui-datepicker-group';if(o[1]>1)switch(I){case 0:U+=" ui-datepicker-group-first",R=" ui-corner-"+(n?"right":"left");break;case o[1]-1:U+=" ui-datepicker-group-last",R=" ui-corner-"+(n?"left":"right");break;default:U+=" ui-datepicker-group-middle",R=""}U+='">'}U+='<div class="ui-datepicker-header ui-widget-header ui-helper-clearfix'+R+'">'+(/all|left/.test(R)&&j==0?n?b:g:"")+(/all|right/.test(R)&&j==0?n?g:b:"")+this._generateMonthYearHeader(e,p,d,c,h,j>0||I>0,A,O)+'</div><table class="ui-datepicker-calendar"><thead>'+"<tr>";var z=N?'<th class="ui-datepicker-week-col">'+this._get(e,"weekHeader")+"</th>":"";for(var W=0;W<7;W++){var X=(W+T)%7;z+="<th"+((W+T+6)%7>=5?' class="ui-datepicker-week-end"':"")+">"+'<span title="'+C[X]+'">'+L[X]+"</span></th>"}U+=z+"</tr></thead><tbody>";var V=this._getDaysInMonth(d,p);d==e.selectedYear&&p==e.selectedMonth&&(e.selectedDay=Math.min(e.selectedDay,V));var J=(this._getFirstDayOfMonth(d,p)-T+7)%7,K=Math.ceil((J+V)/7),Q=f?this.maxRows>K?this.maxRows:K:K;this.maxRows=Q;var G=this._daylightSavingAdjust(new Date(d,p,1-J));for(var Y=0;Y<Q;Y++){U+="<tr>";var Z=N?'<td class="ui-datepicker-week-col">'+this._get(e,"calculateWeek")(G)+"</td>":"";for(var W=0;W<7;W++){var et=M?M.apply(e.input?e.input[0]:null,[G]):[!0,""],tt=G.getMonth()!=p,nt=tt&&!D||!et[0]||c&&G<c||h&&G>h;Z+='<td class="'+((W+T+6)%7>=5?" ui-datepicker-week-end":"")+(tt?" ui-datepicker-other-month":"")+(G.getTime()==q.getTime()&&p==e.selectedMonth&&e._keyEvent||H.getTime()==G.getTime()&&H.getTime()==q.getTime()?" "+this._dayOverClass:"")+(nt?" "+this._unselectableClass+" ui-state-disabled":"")+(tt&&!_?"":" "+et[1]+(G.getTime()==l.getTime()?" "+this._currentClass:"")+(G.getTime()==t.getTime()?" ui-datepicker-today":""))+'"'+((!tt||_)&&et[2]?' title="'+et[2]+'"':"")+(nt?"":' data-handler="selectDay" data-event="click" data-month="'+G.getMonth()+'" data-year="'+G.getFullYear()+'"')+">"+(tt&&!_?"&#xa0;":nt?'<span class="ui-state-default">'+G.getDate()+"</span>":'<a class="ui-state-default'+(G.getTime()==t.getTime()?" ui-state-highlight":"")+(G.getTime()==l.getTime()?" ui-state-active":"")+(tt?" ui-priority-secondary":"")+'" href="#">'+G.getDate()+"</a>")+"</td>",G.setDate(G.getDate()+1),G=this._daylightSavingAdjust(G)}U+=Z+"</tr>"}p++,p>11&&(p=0,d++),U+="</tbody></table>"+(f?"</div>"+(o[0]>0&&I==o[1]-1?'<div class="ui-datepicker-row-break"></div>':""):""),F+=U}B+=F}return B+=x+($.browser.msie&&parseInt($.browser.version,10)<7&&!e.inline?'<iframe src="javascript:false;" class="ui-datepicker-cover" frameborder="0"></iframe>':""),e._keyEvent=!1,B},_generateMonthYearHeader:function(e,t,n,r,i,s,o,u){var a=this._get(e,"changeMonth"),f=this._get(e,"changeYear"),l=this._get(e,"showMonthAfterYear"),c='<div class="ui-datepicker-title">',h="";if(s||!a)h+='<span class="ui-datepicker-month">'+o[t]+"</span>";else{var p=r&&r.getFullYear()==n,d=i&&i.getFullYear()==n;h+='<select class="ui-datepicker-month" data-handler="selectMonth" data-event="change">';for(var v=0;v<12;v++)(!p||v>=r.getMonth())&&(!d||v<=i.getMonth())&&(h+='<option value="'+v+'"'+(v==t?' selected="selected"':"")+">"+u[v]+"</option>");h+="</select>"}l||(c+=h+(s||!a||!f?"&#xa0;":""));if(!e.yearshtml){e.yearshtml="";if(s||!f)c+='<span class="ui-datepicker-year">'+n+"</span>";else{var m=this._get(e,"yearRange").split(":"),g=(new Date).getFullYear(),y=function(e){var t=e.match(/c[+-].*/)?n+parseInt(e.substring(1),10):e.match(/[+-].*/)?g+parseInt(e,10):parseInt(e,10);return isNaN(t)?g:t},b=y(m[0]),w=Math.max(b,y(m[1]||""));b=r?Math.max(b,r.getFullYear()):b,w=i?Math.min(w,i.getFullYear()):w,e.yearshtml+='<select class="ui-datepicker-year" data-handler="selectYear" data-event="change">';for(;b<=w;b++)e.yearshtml+='<option value="'+b+'"'+(b==n?' selected="selected"':"")+">"+b+"</option>";e.yearshtml+="</select>",c+=e.yearshtml,e.yearshtml=null}}return c+=this._get(e,"yearSuffix"),l&&(c+=(s||!a||!f?"&#xa0;":"")+h),c+="</div>",c},_adjustInstDate:function(e,t,n){var r=e.drawYear+(n=="Y"?t:0),i=e.drawMonth+(n=="M"?t:0),s=Math.min(e.selectedDay,this._getDaysInMonth(r,i))+(n=="D"?t:0),o=this._restrictMinMax(e,this._daylightSavingAdjust(new Date(r,i,s)));e.selectedDay=o.getDate(),e.drawMonth=e.selectedMonth=o.getMonth(),e.drawYear=e.selectedYear=o.getFullYear(),(n=="M"||n=="Y")&&this._notifyChange(e)},_restrictMinMax:function(e,t){var n=this._getMinMaxDate(e,"min"),r=this._getMinMaxDate(e,"max"),i=n&&t<n?n:t;return i=r&&i>r?r:i,i},_notifyChange:function(e){var t=this._get(e,"onChangeMonthYear");t&&t.apply(e.input?e.input[0]:null,[e.selectedYear,e.selectedMonth+1,e])},_getNumberOfMonths:function(e){var t=this._get(e,"numberOfMonths");return t==null?[1,1]:typeof t=="number"?[1,t]:t},_getMinMaxDate:function(e,t){return this._determineDate(e,this._get(e,t+"Date"),null)},_getDaysInMonth:function(e,t){return 32-this._daylightSavingAdjust(new Date(e,t,32)).getDate()},_getFirstDayOfMonth:function(e,t){return(new Date(e,t,1)).getDay()},_canAdjustMonth:function(e,t,n,r){var i=this._getNumberOfMonths(e),s=this._daylightSavingAdjust(new Date(n,r+(t<0?t:i[0]*i[1]),1));return t<0&&s.setDate(this._getDaysInMonth(s.getFullYear(),s.getMonth())),this._isInRange(e,s)},_isInRange:function(e,t){var n=this._getMinMaxDate(e,"min"),r=this._getMinMaxDate(e,"max");return(!n||t.getTime()>=n.getTime())&&(!r||t.getTime()<=r.getTime())},_getFormatConfig:function(e){var t=this._get(e,"shortYearCutoff");return t=typeof t!="string"?t:(new Date).getFullYear()%100+parseInt(t,10),{shortYearCutoff:t,dayNamesShort:this._get(e,"dayNamesShort"),dayNames:this._get(e,"dayNames"),monthNamesShort:this._get(e,"monthNamesShort"),monthNames:this._get(e,"monthNames")}},_formatDate:function(e,t,n,r){t||(e.currentDay=e.selectedDay,e.currentMonth=e.selectedMonth,e.currentYear=e.selectedYear);var i=t?typeof t=="object"?t:this._daylightSavingAdjust(new Date(r,n,t)):this._daylightSavingAdjust(new Date(e.currentYear,e.currentMonth,e.currentDay));return this.formatDate(this._get(e,"dateFormat"),i,this._getFormatConfig(e))}}),$.fn.datepicker=function(e){if(!this.length)return this;$.datepicker.initialized||($(document).mousedown($.datepicker._checkExternalClick).find(document.body).append($.datepicker.dpDiv),$.datepicker.initialized=!0);var t=Array.prototype.slice.call(arguments,1);return typeof e!="string"||e!="isDisabled"&&e!="getDate"&&e!="widget"?e=="option"&&arguments.length==2&&typeof arguments[1]=="string"?$.datepicker["_"+e+"Datepicker"].apply($.datepicker,[this[0]].concat(t)):this.each(function(){typeof e=="string"?$.datepicker["_"+e+"Datepicker"].apply($.datepicker,[this].concat(t)):$.datepicker._attachDatepicker(this,e)}):$.datepicker["_"+e+"Datepicker"].apply($.datepicker,[this[0]].concat(t))},$.datepicker=new Datepicker,$.datepicker.initialized=!1,$.datepicker.uuid=(new Date).getTime(),$.datepicker.version="1.9.0",window["DP_jQuery_"+dpuuid]=$})(jQuery);(function(e,t){var n="ui-dialog ui-widget ui-widget-content ui-corner-all ",r={buttons:!0,height:!0,maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0,width:!0},i={maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0};e.widget("ui.dialog",{version:"1.9.0",options:{autoOpen:!0,buttons:{},closeOnEscape:!0,closeText:"close",dialogClass:"",draggable:!0,hide:null,height:"auto",maxHeight:!1,maxWidth:!1,minHeight:150,minWidth:150,modal:!1,position:{my:"center",at:"center",of:window,collision:"fit",using:function(t){var n=e(this).css(t).offset().top;n<0&&e(this).css("top",t.top-n)}},resizable:!0,show:null,stack:!0,title:"",width:300,zIndex:1e3},_create:function(){this.originalTitle=this.element.attr("title"),typeof this.originalTitle!="string"&&(this.originalTitle=""),this.oldPosition={parent:this.element.parent(),index:this.element.parent().children().index(this.element)},this.options.title=this.options.title||this.originalTitle;var t=this,r=this.options,i=r.title||"&#160;",s=(this.uiDialog=e("<div>")).addClass(n+r.dialogClass).css({display:"none",outline:0,zIndex:r.zIndex}).attr("tabIndex",-1).keydown(function(n){r.closeOnEscape&&!n.isDefaultPrevented()&&n.keyCode&&n.keyCode===e.ui.keyCode.ESCAPE&&(t.close(n),n.preventDefault())}).mousedown(function(e){t.moveToTop(!1,e)}).appendTo("body"),o=this.element.show().removeAttr("title").addClass("ui-dialog-content ui-widget-content").appendTo(s),u=(this.uiDialogTitlebar=e("<div>")).addClass("ui-dialog-titlebar  ui-widget-header  ui-corner-all  ui-helper-clearfix").prependTo(s),a=e("<a href='#'></a>").addClass("ui-dialog-titlebar-close  ui-corner-all").attr("role","button").click(function(e){e.preventDefault(),t.close(e)}).appendTo(u),f=(this.uiDialogTitlebarCloseText=e("<span>")).addClass("ui-icon ui-icon-closethick").text(r.closeText).appendTo(a),l=e("<span>").uniqueId().addClass("ui-dialog-title").html(i).prependTo(u),c=(this.uiDialogButtonPane=e("<div>")).addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix"),h=(this.uiButtonSet=e("<div>")).addClass("ui-dialog-buttonset").appendTo(c);s.attr({role:"dialog","aria-labelledby":l.attr("id")}),u.find("*").add(u).disableSelection(),this._hoverable(a),this._focusable(a),r.draggable&&e.fn.draggable&&this._makeDraggable(),r.resizable&&e.fn.resizable&&this._makeResizable(),this._createButtons(r.buttons),this._isOpen=!1,e.fn.bgiframe&&s.bgiframe(),this._on(s,{keydown:function(t){if(!r.modal||t.keyCode!==e.ui.keyCode.TAB)return;var n=e(":tabbable",s),i=n.filter(":first"),o=n.filter(":last");if(t.target===o[0]&&!t.shiftKey)return i.focus(1),!1;if(t.target===i[0]&&t.shiftKey)return o.focus(1),!1}})},_init:function(){this.options.autoOpen&&this.open()},_destroy:function(){var e,t=this.oldPosition;this.overlay&&this.overlay.destroy(),this.uiDialog.hide(),this.element.removeClass("ui-dialog-content ui-widget-content").hide().appendTo("body"),this.uiDialog.remove(),this.originalTitle&&this.element.attr("title",this.originalTitle),e=t.parent.children().eq(t.index),e.length&&e[0]!==this.element[0]?e.before(this.element):t.parent.append(this.element)},widget:function(){return this.uiDialog},close:function(t){var n=this,r,i;if(!this._isOpen)return;if(!1===this._trigger("beforeClose",t))return;return this._isOpen=!1,this.overlay&&this.overlay.destroy(),this.options.hide?this.uiDialog.hide(this.options.hide,function(){n._trigger("close",t)}):(this.uiDialog.hide(),this._trigger("close",t)),e.ui.dialog.overlay.resize(),this.options.modal&&(r=0,e(".ui-dialog").each(function(){this!==n.uiDialog[0]&&(i=e(this).css("z-index"),isNaN(i)||(r=Math.max(r,i)))}),e.ui.dialog.maxZ=r),this},isOpen:function(){return this._isOpen},moveToTop:function(t,n){var r=this.options,i;return r.modal&&!t||!r.stack&&!r.modal?this._trigger("focus",n):(r.zIndex>e.ui.dialog.maxZ&&(e.ui.dialog.maxZ=r.zIndex),this.overlay&&(e.ui.dialog.maxZ+=1,e.ui.dialog.overlay.maxZ=e.ui.dialog.maxZ,this.overlay.$el.css("z-index",e.ui.dialog.overlay.maxZ)),i={scrollTop:this.element.scrollTop(),scrollLeft:this.element.scrollLeft()},e.ui.dialog.maxZ+=1,this.uiDialog.css("z-index",e.ui.dialog.maxZ),this.element.attr(i),this._trigger("focus",n),this)},open:function(){if(this._isOpen)return;var t,n=this.options,r=this.uiDialog;return this._size(),this._position(n.position),r.show(n.show),this.overlay=n.modal?new e.ui.dialog.overlay(this):null,this.moveToTop(!0),t=this.element.find(":tabbable"),t.length||(t=this.uiDialogButtonPane.find(":tabbable"),t.length||(t=r)),t.eq(0).focus(),this._isOpen=!0,this._trigger("open"),this},_createButtons:function(t){var n,r,i=this,s=!1;this.uiDialogButtonPane.remove(),this.uiButtonSet.empty(),typeof t=="object"&&t!==null&&e.each(t,function(){return!(s=!0)}),s?(e.each(t,function(t,n){n=e.isFunction(n)?{click:n,text:t}:n;var r=e("<button type='button'>").attr(n,!0).unbind("click").click(function(){n.click.apply(i.element[0],arguments)}).appendTo(i.uiButtonSet);e.fn.button&&r.button()}),this.uiDialog.addClass("ui-dialog-buttons"),this.uiDialogButtonPane.appendTo(this.uiDialog)):this.uiDialog.removeClass("ui-dialog-buttons")},_makeDraggable:function(){function r(e){return{position:e.position,offset:e.offset}}var t=this,n=this.options;this.uiDialog.draggable({cancel:".ui-dialog-content, .ui-dialog-titlebar-close",handle:".ui-dialog-titlebar",containment:"document",start:function(n,i){e(this).addClass("ui-dialog-dragging"),t._trigger("dragStart",n,r(i))},drag:function(e,n){t._trigger("drag",e,r(n))},stop:function(i,s){n.position=[s.position.left-t.document.scrollLeft(),s.position.top-t.document.scrollTop()],e(this).removeClass("ui-dialog-dragging"),t._trigger("dragStop",i,r(s)),e.ui.dialog.overlay.resize()}})},_makeResizable:function(n){function u(e){return{originalPosition:e.originalPosition,originalSize:e.originalSize,position:e.position,size:e.size}}n=n===t?this.options.resizable:n;var r=this,i=this.options,s=this.uiDialog.css("position"),o=typeof n=="string"?n:"n,e,s,w,se,sw,ne,nw";this.uiDialog.resizable({cancel:".ui-dialog-content",containment:"document",alsoResize:this.element,maxWidth:i.maxWidth,maxHeight:i.maxHeight,minWidth:i.minWidth,minHeight:this._minHeight(),handles:o,start:function(t,n){e(this).addClass("ui-dialog-resizing"),r._trigger("resizeStart",t,u(n))},resize:function(e,t){r._trigger("resize",e,u(t))},stop:function(t,n){e(this).removeClass("ui-dialog-resizing"),i.height=e(this).height(),i.width=e(this).width(),r._trigger("resizeStop",t,u(n)),e.ui.dialog.overlay.resize()}}).css("position",s).find(".ui-resizable-se").addClass("ui-icon ui-icon-grip-diagonal-se")},_minHeight:function(){var e=this.options;return e.height==="auto"?e.minHeight:Math.min(e.minHeight,e.height)},_position:function(t){var n=[],r=[0,0],i;if(t){if(typeof t=="string"||typeof t=="object"&&"0"in t)n=t.split?t.split(" "):[t[0],t[1]],n.length===1&&(n[1]=n[0]),e.each(["left","top"],function(e,t){+n[e]===n[e]&&(r[e]=n[e],n[e]=t)}),t={my:n.join(" "),at:n.join(" "),offset:r.join(" ")};t=e.extend({},e.ui.dialog.prototype.options.position,t)}else t=e.ui.dialog.prototype.options.position;i=this.uiDialog.is(":visible"),i||this.uiDialog.show(),this.uiDialog.position(t),i||this.uiDialog.hide()},_setOptions:function(t){var n=this,s={},o=!1;e.each(t,function(e,t){n._setOption(e,t),e in r&&(o=!0),e in i&&(s[e]=t)}),o&&this._size(),this.uiDialog.is(":data(resizable)")&&this.uiDialog.resizable("option",s)},_setOption:function(t,r){var i,s,o=this.uiDialog;switch(t){case"buttons":this._createButtons(r);break;case"closeText":this.uiDialogTitlebarCloseText.text(""+r);break;case"dialogClass":o.removeClass(this.options.dialogClass).addClass(n+r);break;case"disabled":r?o.addClass("ui-dialog-disabled"):o.removeClass("ui-dialog-disabled");break;case"draggable":i=o.is(":data(draggable)"),i&&!r&&o.draggable("destroy"),!i&&r&&this._makeDraggable();break;case"position":this._position(r);break;case"resizable":s=o.is(":data(resizable)"),s&&!r&&o.resizable("destroy"),s&&typeof r=="string"&&o.resizable("option","handles",r),!s&&r!==!1&&this._makeResizable(r);break;case"title":e(".ui-dialog-title",this.uiDialogTitlebar).html(""+(r||"&#160;"))}this._super(t,r)},_size:function(){var t,n,r,i=this.options,s=this.uiDialog.is(":visible");this.element.show().css({width:"auto",minHeight:0,height:0}),i.minWidth>i.width&&(i.width=i.minWidth),t=this.uiDialog.css({height:"auto",width:i.width}).outerHeight(),n=Math.max(0,i.minHeight-t),i.height==="auto"?e.support.minHeight?this.element.css({minHeight:n,height:"auto"}):(this.uiDialog.show(),r=this.element.css("height","auto").height(),s||this.uiDialog.hide(),this.element.height(Math.max(r,n))):this.element.height(Math.max(i.height-t,0)),this.uiDialog.is(":data(resizable)")&&this.uiDialog.resizable("option","minHeight",this._minHeight())}}),e.extend(e.ui.dialog,{uuid:0,maxZ:0,getTitleId:function(e){var t=e.attr("id");return t||(this.uuid+=1,t=this.uuid),"ui-dialog-title-"+t},overlay:function(t){this.$el=e.ui.dialog.overlay.create(t)}}),e.extend(e.ui.dialog.overlay,{instances:[],oldInstances:[],maxZ:0,events:e.map("focus,mousedown,mouseup,keydown,keypress,click".split(","),function(e){return e+".dialog-overlay"}).join(" "),create:function(t){this.instances.length===0&&(setTimeout(function(){e.ui.dialog.overlay.instances.length&&e(document).bind(e.ui.dialog.overlay.events,function(t){if(e(t.target).zIndex()<e.ui.dialog.overlay.maxZ)return!1})},1),e(window).bind("resize.dialog-overlay",e.ui.dialog.overlay.resize));var n=this.oldInstances.pop()||e("<div>").addClass("ui-widget-overlay");return e(document).bind("keydown.dialog-overlay",function(r){var i=e.ui.dialog.overlay.instances;i.length!==0&&i[i.length-1]===n&&t.options.closeOnEscape&&!r.isDefaultPrevented()&&r.keyCode&&r.keyCode===e.ui.keyCode.ESCAPE&&(t.close(r),r.preventDefault())}),n.appendTo(document.body).css({width:this.width(),height:this.height()}),e.fn.bgiframe&&n.bgiframe(),this.instances.push(n),n},destroy:function(t){var n=e.inArray(t,this.instances),r=0;n!==-1&&this.oldInstances.push(this.instances.splice(n,1)[0]),this.instances.length===0&&e([document,window]).unbind(".dialog-overlay"),t.height(0).width(0).remove(),e.each(this.instances,function(){r=Math.max(r,this.css("z-index"))}),this.maxZ=r},height:function(){var t,n;return e.browser.msie?(t=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),n=Math.max(document.documentElement.offsetHeight,document.body.offsetHeight),t<n?e(window).height()+"px":t+"px"):e(document).height()+"px"},width:function(){var t,n;return e.browser.msie?(t=Math.max(document.documentElement.scrollWidth,document.body.scrollWidth),n=Math.max(document.documentElement.offsetWidth,document.body.offsetWidth),t<n?e(window).width()+"px":t+"px"):e(document).width()+"px"},resize:function(){var t=e([]);e.each(e.ui.dialog.overlay.instances,function(){t=t.add(this)}),t.css({width:0,height:0}).css({width:e.ui.dialog.overlay.width(),height:e.ui.dialog.overlay.height()})}}),e.extend(e.ui.dialog.overlay.prototype,{destroy:function(){e.ui.dialog.overlay.destroy(this.$el)}})})(jQuery);(function(e,t){var n=!1;e.widget("ui.menu",{version:"1.9.0",defaultElement:"<ul>",delay:300,options:{icons:{submenu:"ui-icon-carat-1-e"},menus:"ul",position:{my:"left top",at:"right top"},role:"menu",blur:null,focus:null,select:null},_create:function(){this.activeMenu=this.element,this.element.uniqueId().addClass("ui-menu ui-widget ui-widget-content ui-corner-all").toggleClass("ui-menu-icons",!!this.element.find(".ui-icon").length).attr({role:this.options.role,tabIndex:0}).bind("click"+this.eventNamespace,e.proxy(function(e){this.options.disabled&&e.preventDefault()},this)),this.options.disabled&&this.element.addClass("ui-state-disabled").attr("aria-disabled","true"),this._on({"mousedown .ui-menu-item > a":function(e){e.preventDefault()},"click .ui-state-disabled > a":function(e){e.preventDefault()},"click .ui-menu-item:has(a)":function(t){var r=e(t.target).closest(".ui-menu-item");!n&&r.not(".ui-state-disabled").length&&(n=!0,this.select(t),r.has(".ui-menu").length?this.expand(t):this.element.is(":focus")||(this.element.trigger("focus",[!0]),this.active&&this.active.parents(".ui-menu").length===1&&clearTimeout(this.timer)))},"mouseenter .ui-menu-item":function(t){var n=e(t.currentTarget);n.siblings().children(".ui-state-active").removeClass("ui-state-active"),this.focus(t,n)},mouseleave:"collapseAll","mouseleave .ui-menu":"collapseAll",focus:function(e,t){var n=this.active||this.element.children(".ui-menu-item").eq(0);t||this.focus(e,n)},blur:function(t){this._delay(function(){e.contains(this.element[0],this.document[0].activeElement)||this.collapseAll(t)})},keydown:"_keydown"}),this.refresh(),this._on(this.document,{click:function(t){e(t.target).closest(".ui-menu").length||this.collapseAll(t),n=!1}})},_destroy:function(){this.element.removeAttr("aria-activedescendant").find(".ui-menu").andSelf().removeClass("ui-menu ui-widget ui-widget-content ui-corner-all ui-menu-icons").removeAttr("role").removeAttr("tabIndex").removeAttr("aria-labelledby").removeAttr("aria-expanded").removeAttr("aria-hidden").removeAttr("aria-disabled").removeUniqueId().show(),this.element.find(".ui-menu-item").removeClass("ui-menu-item").removeAttr("role").removeAttr("aria-disabled").children("a").removeUniqueId().removeClass("ui-corner-all ui-state-hover").removeAttr("tabIndex").removeAttr("role").removeAttr("aria-haspopup").children().each(function(){var t=e(this);t.data("ui-menu-submenu-carat")&&t.remove()}),this.element.find(".ui-menu-divider").removeClass("ui-menu-divider ui-widget-content")},_keydown:function(t){function a(e){return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")}var n,r,i,s,o,u=!0;switch(t.keyCode){case e.ui.keyCode.PAGE_UP:this.previousPage(t);break;case e.ui.keyCode.PAGE_DOWN:this.nextPage(t);break;case e.ui.keyCode.HOME:this._move("first","first",t);break;case e.ui.keyCode.END:this._move("last","last",t);break;case e.ui.keyCode.UP:this.previous(t);break;case e.ui.keyCode.DOWN:this.next(t);break;case e.ui.keyCode.LEFT:this.collapse(t);break;case e.ui.keyCode.RIGHT:this.active&&!this.active.is(".ui-state-disabled")&&this.expand(t);break;case e.ui.keyCode.ENTER:case e.ui.keyCode.SPACE:this._activate(t);break;case e.ui.keyCode.ESCAPE:this.collapse(t);break;default:u=!1,r=this.previousFilter||"",i=String.fromCharCode(t.keyCode),s=!1,clearTimeout(this.filterTimer),i===r?s=!0:i=r+i,o=new RegExp("^"+a(i),"i"),n=this.activeMenu.children(".ui-menu-item").filter(function(){return o.test(e(this).children("a").text())}),n=s&&n.index(this.active.next())!==-1?this.active.nextAll(".ui-menu-item"):n,n.length||(i=String.fromCharCode(t.keyCode),o=new RegExp("^"+a(i),"i"),n=this.activeMenu.children(".ui-menu-item").filter(function(){return o.test(e(this).children("a").text())})),n.length?(this.focus(t,n),n.length>1?(this.previousFilter=i,this.filterTimer=this._delay(function(){delete this.previousFilter},1e3)):delete this.previousFilter):delete this.previousFilter}u&&t.preventDefault()},_activate:function(e){this.active.is(".ui-state-disabled")||(this.active.children("a[aria-haspopup='true']").length?this.expand(e):this.select(e))},refresh:function(){var t,n=this.options.icons.submenu,r=this.element.find(this.options.menus+":not(.ui-menu)").addClass("ui-menu ui-widget ui-widget-content ui-corner-all").hide().attr({role:this.options.role,"aria-hidden":"true","aria-expanded":"false"});t=r.add(this.element),t.children(":not(.ui-menu-item):has(a)").addClass("ui-menu-item").attr("role","presentation").children("a").uniqueId().addClass("ui-corner-all").attr({tabIndex:-1,role:this._itemRole()}),t.children(":not(.ui-menu-item)").each(function(){var t=e(this);/[^\-—–\s]/.test(t.text())||t.addClass("ui-widget-content ui-menu-divider")}),t.children(".ui-state-disabled").attr("aria-disabled","true"),r.each(function(){var t=e(this),r=t.prev("a"),i=e("<span>").addClass("ui-menu-icon ui-icon "+n).data("ui-menu-submenu-carat",!0);r.attr("aria-haspopup","true").prepend(i),t.attr("aria-labelledby",r.attr("id"))}),this.active&&!e.contains(this.element[0],this.active[0])&&this.blur()},_itemRole:function(){return{menu:"menuitem",listbox:"option"}[this.options.role]},focus:function(e,t){var n,r;this.blur(e,e&&e.type==="focus"),this._scrollIntoView(t),this.active=t.first(),r=this.active.children("a").addClass("ui-state-focus"),this.options.role&&this.element.attr("aria-activedescendant",r.attr("id")),this.active.parent().closest(".ui-menu-item").children("a:first").addClass("ui-state-active"),e&&e.type==="keydown"?this._close():this.timer=this._delay(function(){this._close()},this.delay),n=t.children(".ui-menu"),n.length&&/^mouse/.test(e.type)&&this._startOpening(n),this.activeMenu=t.parent(),this._trigger("focus",e,{item:t})},_scrollIntoView:function(t){var n,r,i,s,o,u;this._hasScroll()&&(n=parseFloat(e.css(this.activeMenu[0],"borderTopWidth"))||0,r=parseFloat(e.css(this.activeMenu[0],"paddingTop"))||0,i=t.offset().top-this.activeMenu.offset().top-n-r,s=this.activeMenu.scrollTop(),o=this.activeMenu.height(),u=t.height(),i<0?this.activeMenu.scrollTop(s+i):i+u>o&&this.activeMenu.scrollTop(s+i-o+u))},blur:function(e,t){t||clearTimeout(this.timer);if(!this.active)return;this.active.children("a").removeClass("ui-state-focus"),this.active=null,this._trigger("blur",e,{item:this.active})},_startOpening:function(e){clearTimeout(this.timer);if(e.attr("aria-hidden")!=="true")return;this.timer=this._delay(function(){this._close(),this._open(e)},this.delay)},_open:function(t){var n=e.extend({of:this.active},this.options.position);clearTimeout(this.timer),this.element.find(".ui-menu").not(t.parents(".ui-menu")).hide().attr("aria-hidden","true"),t.show().removeAttr("aria-hidden").attr("aria-expanded","true").position(n)},collapseAll:function(t,n){clearTimeout(this.timer),this.timer=this._delay(function(){var r=n?this.element:e(t&&t.target).closest(this.element.find(".ui-menu"));r.length||(r=this.element),this._close(r),this.blur(t),this.activeMenu=r},this.delay)},_close:function(e){e||(e=this.active?this.active.parent():this.element),e.find(".ui-menu").hide().attr("aria-hidden","true").attr("aria-expanded","false").end().find("a.ui-state-active").removeClass("ui-state-active")},collapse:function(e){var t=this.active&&this.active.parent().closest(".ui-menu-item",this.element);t&&t.length&&(this._close(),this.focus(e,t))},expand:function(e){var t=this.active&&this.active.children(".ui-menu ").children(".ui-menu-item").first();t&&t.length&&(this._open(t.parent()),this._delay(function(){this.focus(e,t)}))},next:function(e){this._move("next","first",e)},previous:function(e){this._move("prev","last",e)},isFirstItem:function(){return this.active&&!this.active.prevAll(".ui-menu-item").length},isLastItem:function(){return this.active&&!this.active.nextAll(".ui-menu-item").length},_move:function(e,t,n){var r;this.active&&(e==="first"||e==="last"?r=this.active[e==="first"?"prevAll":"nextAll"](".ui-menu-item").eq(-1):r=this.active[e+"All"](".ui-menu-item").eq(0));if(!r||!r.length||!this.active)r=this.activeMenu.children(".ui-menu-item")[t]();this.focus(n,r)},nextPage:function(t){var n,r,i;if(!this.active){this.next(t);return}if(this.isLastItem())return;this._hasScroll()?(r=this.active.offset().top,i=this.element.height(),this.active.nextAll(".ui-menu-item").each(function(){return n=e(this),n.offset().top-r-i<0}),this.focus(t,n)):this.focus(t,this.activeMenu.children(".ui-menu-item")[this.active?"last":"first"]())},previousPage:function(t){var n,r,i;if(!this.active){this.next(t);return}if(this.isFirstItem())return;this._hasScroll()?(r=this.active.offset().top,i=this.element.height(),this.active.prevAll(".ui-menu-item").each(function(){return n=e(this),n.offset().top-r+i>0}),this.focus(t,n)):this.focus(t,this.activeMenu.children(".ui-menu-item").first())},_hasScroll:function(){return this.element.outerHeight()<this.element.prop("scrollHeight")},select:function(t){this.active=this.active||e(t.target).closest(".ui-menu-item");var n={item:this.active};this.active.has(".ui-menu").length||this.collapseAll(t,!0),this._trigger("select",t,n)}})})(jQuery);(function(e,t){e.widget("ui.progressbar",{version:"1.9.0",options:{value:0,max:100},min:0,_create:function(){this.element.addClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").attr({role:"progressbar","aria-valuemin":this.min,"aria-valuemax":this.options.max,"aria-valuenow":this._value()}),this.valueDiv=e("<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>").appendTo(this.element),this.oldValue=this._value(),this._refreshValue()},_destroy:function(){this.element.removeClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow"),this.valueDiv.remove()},value:function(e){return e===t?this._value():(this._setOption("value",e),this)},_setOption:function(e,t){e==="value"&&(this.options.value=t,this._refreshValue(),this._value()===this.options.max&&this._trigger("complete")),this._super(e,t)},_value:function(){var e=this.options.value;return typeof e!="number"&&(e=0),Math.min(this.options.max,Math.max(this.min,e))},_percentage:function(){return 100*this._value()/this.options.max},_refreshValue:function(){var e=this.value(),t=this._percentage();this.oldValue!==e&&(this.oldValue=e,this._trigger("change")),this.valueDiv.toggle(e>this.min).toggleClass("ui-corner-right",e===this.options.max).width(t.toFixed(0)+"%"),this.element.attr("aria-valuenow",e)}})})(jQuery);(function(e,t){var n=5;e.widget("ui.slider",e.ui.mouse,{version:"1.9.0",widgetEventPrefix:"slide",options:{animate:!1,distance:0,max:100,min:0,orientation:"horizontal",range:!1,step:1,value:0,values:null},_create:function(){var t,r=this.options,i=this.element.find(".ui-slider-handle").addClass("ui-state-default ui-corner-all"),s="<a class='ui-slider-handle ui-state-default ui-corner-all' href='#'></a>",o=r.values&&r.values.length||1,u=[];this._keySliding=!1,this._mouseSliding=!1,this._animateOff=!0,this._handleIndex=null,this._detectOrientation(),this._mouseInit(),this.element.addClass("ui-slider ui-slider-"+this.orientation+" ui-widget"+" ui-widget-content"+" ui-corner-all"+(r.disabled?" ui-slider-disabled ui-disabled":"")),this.range=e([]),r.range&&(r.range===!0&&(r.values||(r.values=[this._valueMin(),this._valueMin()]),r.values.length&&r.values.length!==2&&(r.values=[r.values[0],r.values[0]])),this.range=e("<div></div>").appendTo(this.element).addClass("ui-slider-range ui-widget-header"+(r.range==="min"||r.range==="max"?" ui-slider-range-"+r.range:"")));for(t=i.length;t<o;t++)u.push(s);this.handles=i.add(e(u.join("")).appendTo(this.element)),this.handle=this.handles.eq(0),this.handles.add(this.range).filter("a").click(function(e){e.preventDefault()}).mouseenter(function(){r.disabled||e(this).addClass("ui-state-hover")}).mouseleave(function(){e(this).removeClass("ui-state-hover")}).focus(function(){r.disabled?e(this).blur():(e(".ui-slider .ui-state-focus").removeClass("ui-state-focus"),e(this).addClass("ui-state-focus"))}).blur(function(){e(this).removeClass("ui-state-focus")}),this.handles.each(function(t){e(this).data("ui-slider-handle-index",t)}),this._on(this.handles,{keydown:function(t){var r,i,s,o,u=e(t.target).data("ui-slider-handle-index");switch(t.keyCode){case e.ui.keyCode.HOME:case e.ui.keyCode.END:case e.ui.keyCode.PAGE_UP:case e.ui.keyCode.PAGE_DOWN:case e.ui.keyCode.UP:case e.ui.keyCode.RIGHT:case e.ui.keyCode.DOWN:case e.ui.keyCode.LEFT:t.preventDefault();if(!this._keySliding){this._keySliding=!0,e(t.target).addClass("ui-state-active"),r=this._start(t,u);if(r===!1)return}}o=this.options.step,this.options.values&&this.options.values.length?i=s=this.values(u):i=s=this.value();switch(t.keyCode){case e.ui.keyCode.HOME:s=this._valueMin();break;case e.ui.keyCode.END:s=this._valueMax();break;case e.ui.keyCode.PAGE_UP:s=this._trimAlignValue(i+(this._valueMax()-this._valueMin())/n);break;case e.ui.keyCode.PAGE_DOWN:s=this._trimAlignValue(i-(this._valueMax()-this._valueMin())/n);break;case e.ui.keyCode.UP:case e.ui.keyCode.RIGHT:if(i===this._valueMax())return;s=this._trimAlignValue(i+o);break;case e.ui.keyCode.DOWN:case e.ui.keyCode.LEFT:if(i===this._valueMin())return;s=this._trimAlignValue(i-o)}this._slide(t,u,s)},keyup:function(t){var n=e(t.target).data("ui-slider-handle-index");this._keySliding&&(this._keySliding=!1,this._stop(t,n),this._change(t,n),e(t.target).removeClass("ui-state-active"))}}),this._refreshValue(),this._animateOff=!1},_destroy:function(){this.handles.remove(),this.range.remove(),this.element.removeClass("ui-slider ui-slider-horizontal ui-slider-vertical ui-slider-disabled ui-widget ui-widget-content ui-corner-all"),this._mouseDestroy()},_mouseCapture:function(t){var n,r,i,s,o,u,a,f,l=this,c=this.options;return c.disabled?!1:(this.elementSize={width:this.element.outerWidth(),height:this.element.outerHeight()},this.elementOffset=this.element.offset(),n={x:t.pageX,y:t.pageY},r=this._normValueFromMouse(n),i=this._valueMax()-this._valueMin()+1,this.handles.each(function(t){var n=Math.abs(r-l.values(t));i>n&&(i=n,s=e(this),o=t)}),c.range===!0&&this.values(1)===c.min&&(o+=1,s=e(this.handles[o])),u=this._start(t,o),u===!1?!1:(this._mouseSliding=!0,this._handleIndex=o,s.addClass("ui-state-active").focus(),a=s.offset(),f=!e(t.target).parents().andSelf().is(".ui-slider-handle"),this._clickOffset=f?{left:0,top:0}:{left:t.pageX-a.left-s.width()/2,top:t.pageY-a.top-s.height()/2-(parseInt(s.css("borderTopWidth"),10)||0)-(parseInt(s.css("borderBottomWidth"),10)||0)+(parseInt(s.css("marginTop"),10)||0)},this.handles.hasClass("ui-state-hover")||this._slide(t,o,r),this._animateOff=!0,!0))},_mouseStart:function(e){return!0},_mouseDrag:function(e){var t={x:e.pageX,y:e.pageY},n=this._normValueFromMouse(t);return this._slide(e,this._handleIndex,n),!1},_mouseStop:function(e){return this.handles.removeClass("ui-state-active"),this._mouseSliding=!1,this._stop(e,this._handleIndex),this._change(e,this._handleIndex),this._handleIndex=null,this._clickOffset=null,this._animateOff=!1,!1},_detectOrientation:function(){this.orientation=this.options.orientation==="vertical"?"vertical":"horizontal"},_normValueFromMouse:function(e){var t,n,r,i,s;return this.orientation==="horizontal"?(t=this.elementSize.width,n=e.x-this.elementOffset.left-(this._clickOffset?this._clickOffset.left:0)):(t=this.elementSize.height,n=e.y-this.elementOffset.top-(this._clickOffset?this._clickOffset.top:0)),r=n/t,r>1&&(r=1),r<0&&(r=0),this.orientation==="vertical"&&(r=1-r),i=this._valueMax()-this._valueMin(),s=this._valueMin()+r*i,this._trimAlignValue(s)},_start:function(e,t){var n={handle:this.handles[t],value:this.value()};return this.options.values&&this.options.values.length&&(n.value=this.values(t),n.values=this.values()),this._trigger("start",e,n)},_slide:function(e,t,n){var r,i,s;this.options.values&&this.options.values.length?(r=this.values(t?0:1),this.options.values.length===2&&this.options.range===!0&&(t===0&&n>r||t===1&&n<r)&&(n=r),n!==this.values(t)&&(i=this.values(),i[t]=n,s=this._trigger("slide",e,{handle:this.handles[t],value:n,values:i}),r=this.values(t?0:1),s!==!1&&this.values(t,n,!0))):n!==this.value()&&(s=this._trigger("slide",e,{handle:this.handles[t],value:n}),s!==!1&&this.value(n))},_stop:function(e,t){var n={handle:this.handles[t],value:this.value()};this.options.values&&this.options.values.length&&(n.value=this.values(t),n.values=this.values()),this._trigger("stop",e,n)},_change:function(e,t){if(!this._keySliding&&!this._mouseSliding){var n={handle:this.handles[t],value:this.value()};this.options.values&&this.options.values.length&&(n.value=this.values(t),n.values=this.values()),this._trigger("change",e,n)}},value:function(e){if(arguments.length){this.options.value=this._trimAlignValue(e),this._refreshValue(),this._change(null,0);return}return this._value()},values:function(t,n){var r,i,s;if(arguments.length>1){this.options.values[t]=this._trimAlignValue(n),this._refreshValue(),this._change(null,t);return}if(!arguments.length)return this._values();if(!e.isArray(arguments[0]))return this.options.values&&this.options.values.length?this._values(t):this.value();r=this.options.values,i=arguments[0];for(s=0;s<r.length;s+=1)r[s]=this._trimAlignValue(i[s]),this._change(null,s);this._refreshValue()},_setOption:function(t,n){var r,i=0;e.isArray(this.options.values)&&(i=this.options.values.length),e.Widget.prototype._setOption.apply(this,arguments);switch(t){case"disabled":n?(this.handles.filter(".ui-state-focus").blur(),this.handles.removeClass("ui-state-hover"),this.handles.prop("disabled",!0),this.element.addClass("ui-disabled")):(this.handles.prop("disabled",!1),this.element.removeClass("ui-disabled"));break;case"orientation":this._detectOrientation(),this.element.removeClass("ui-slider-horizontal ui-slider-vertical").addClass("ui-slider-"+this.orientation),this._refreshValue();break;case"value":this._animateOff=!0,this._refreshValue(),this._change(null,0),this._animateOff=!1;break;case"values":this._animateOff=!0,this._refreshValue();for(r=0;r<i;r+=1)this._change(null,r);this._animateOff=!1}},_value:function(){var e=this.options.value;return e=this._trimAlignValue(e),e},_values:function(e){var t,n,r;if(arguments.length)return t=this.options.values[e],t=this._trimAlignValue(t),t;n=this.options.values.slice();for(r=0;r<n.length;r+=1)n[r]=this._trimAlignValue(n[r]);return n},_trimAlignValue:function(e){if(e<=this._valueMin())return this._valueMin();if(e>=this._valueMax())return this._valueMax();var t=this.options.step>0?this.options.step:1,n=(e-this._valueMin())%t,r=e-n;return Math.abs(n)*2>=t&&(r+=n>0?t:-t),parseFloat(r.toFixed(5))},_valueMin:function(){return this.options.min},_valueMax:function(){return this.options.max},_refreshValue:function(){var t,n,r,i,s,o=this.options.range,u=this.options,a=this,f=this._animateOff?!1:u.animate,l={};this.options.values&&this.options.values.length?this.handles.each(function(r,i){n=(a.values(r)-a._valueMin())/(a._valueMax()-a._valueMin())*100,l[a.orientation==="horizontal"?"left":"bottom"]=n+"%",e(this).stop(1,1)[f?"animate":"css"](l,u.animate),a.options.range===!0&&(a.orientation==="horizontal"?(r===0&&a.range.stop(1,1)[f?"animate":"css"]({left:n+"%"},u.animate),r===1&&a.range[f?"animate":"css"]({width:n-t+"%"},{queue:!1,duration:u.animate})):(r===0&&a.range.stop(1,1)[f?"animate":"css"]({bottom:n+"%"},u.animate),r===1&&a.range[f?"animate":"css"]({height:n-t+"%"},{queue:!1,duration:u.animate}))),t=n}):(r=this.value(),i=this._valueMin(),s=this._valueMax(),n=s!==i?(r-i)/(s-i)*100:0,l[this.orientation==="horizontal"?"left":"bottom"]=n+"%",this.handle.stop(1,1)[f?"animate":"css"](l,u.animate),o==="min"&&this.orientation==="horizontal"&&this.range.stop(1,1)[f?"animate":"css"]({width:n+"%"},u.animate),o==="max"&&this.orientation==="horizontal"&&this.range[f?"animate":"css"]({width:100-n+"%"},{queue:!1,duration:u.animate}),o==="min"&&this.orientation==="vertical"&&this.range.stop(1,1)[f?"animate":"css"]({height:n+"%"},u.animate),o==="max"&&this.orientation==="vertical"&&this.range[f?"animate":"css"]({height:100-n+"%"},{queue:!1,duration:u.animate}))}})})(jQuery);(function(e){function t(e){return function(){var t=this.element.val();e.apply(this,arguments),this._refresh(),t!==this.element.val()&&this._trigger("change")}}e.widget("ui.spinner",{version:"1.9.0",defaultElement:"<input>",widgetEventPrefix:"spin",options:{culture:null,icons:{down:"ui-icon-triangle-1-s",up:"ui-icon-triangle-1-n"},incremental:!0,max:null,min:null,numberFormat:null,page:10,step:1,change:null,spin:null,start:null,stop:null},_create:function(){this._setOption("max",this.options.max),this._setOption("min",this.options.min),this._setOption("step",this.options.step),this._value(this.element.val(),!0),this._draw(),this._on(this._events),this._refresh(),this._on(this.window,{beforeunload:function(){this.element.removeAttr("autocomplete")}})},_getCreateOptions:function(){var t={},n=this.element;return e.each(["min","max","step"],function(e,r){var i=n.attr(r);i!==undefined&&i.length&&(t[r]=i)}),t},_events:{keydown:function(e){this._start(e)&&this._keydown(e)&&e.preventDefault()},keyup:"_stop",focus:function(){this.uiSpinner.addClass("ui-state-active"),this.previous=this.element.val()},blur:function(e){if(this.cancelBlur){delete this.cancelBlur;return}this._refresh(),this.uiSpinner.removeClass("ui-state-active"),this.previous!==this.element.val()&&this._trigger("change",e)},mousewheel:function(e,t){if(!t)return;if(!this.spinning&&!this._start(e))return!1;this._spin((t>0?1:-1)*this.options.step,e),clearTimeout(this.mousewheelTimer),this.mousewheelTimer=this._delay(function(){this.spinning&&this._stop(e)},100),e.preventDefault()},"mousedown .ui-spinner-button":function(t){function r(){var e=this.element[0]===this.document[0].activeElement;e||(this.element.focus(),this.previous=n,this._delay(function(){this.previous=n}))}var n;n=this.element[0]===this.document[0].activeElement?this.previous:this.element.val(),t.preventDefault(),r.call(this),this.cancelBlur=!0,this._delay(function(){delete this.cancelBlur,r.call(this)});if(this._start(t)===!1)return;this._repeat(null,e(t.currentTarget).hasClass("ui-spinner-up")?1:-1,t)},"mouseup .ui-spinner-button":"_stop","mouseenter .ui-spinner-button":function(t){if(!e(t.currentTarget).hasClass("ui-state-active"))return;if(this._start(t)===!1)return!1;this._repeat(null,e(t.currentTarget).hasClass("ui-spinner-up")?1:-1,t)},"mouseleave .ui-spinner-button":"_stop"},_draw:function(){var e=this.uiSpinner=this.element.addClass("ui-spinner-input").attr("autocomplete","off").wrap(this._uiSpinnerHtml()).parent().append(this._buttonHtml());this._hoverable(e),this.element.attr("role","spinbutton"),this.buttons=e.find(".ui-spinner-button").attr("tabIndex",-1).button().removeClass("ui-corner-all"),this.buttons.height()>Math.ceil(e.height()*.5)&&e.height()>0&&e.height(e.height()),this.options.disabled&&this.disable()},_keydown:function(t){var n=this.options,r=e.ui.keyCode;switch(t.keyCode){case r.UP:return this._repeat(null,1,t),!0;case r.DOWN:return this._repeat(null,-1,t),!0;case r.PAGE_UP:return this._repeat(null,n.page,t),!0;case r.PAGE_DOWN:return this._repeat(null,-n.page,t),!0}return!1},_uiSpinnerHtml:function(){return"<span class='ui-spinner ui-state-default ui-widget ui-widget-content ui-corner-all'></span>"},_buttonHtml:function(){return"<a class='ui-spinner-button ui-spinner-up ui-corner-tr'><span class='ui-icon "+this.options.icons.up+"'>&#9650;</span>"+"</a>"+"<a class='ui-spinner-button ui-spinner-down ui-corner-br'>"+"<span class='ui-icon "+this.options.icons.down+"'>&#9660;</span>"+"</a>"},_start:function(e){return!this.spinning&&this._trigger("start",e)===!1?!1:(this.counter||(this.counter=1),this.spinning=!0,!0)},_repeat:function(e,t,n){e=e||500,clearTimeout(this.timer),this.timer=this._delay(function(){this._repeat(40,t,n)},e),this._spin(t*this.options.step,n)},_spin:function(e,t){var n=this.value()||0;this.counter||(this.counter=1),n=this._adjustValue(n+e*this._increment(this.counter));if(!this.spinning||this._trigger("spin",t,{value:n})!==!1)this._value(n),this.counter++},_increment:function(t){var n=this.options.incremental;return n?e.isFunction(n)?n(t):Math.floor(t*t*t/5e4-t*t/500+17*t/200+1):1},_precision:function(){var e=this._precisionOf(this.options.step);return this.options.min!==null&&(e=Math.max(e,this._precisionOf(this.options.min))),e},_precisionOf:function(e){var t=e.toString(),n=t.indexOf(".");return n===-1?0:t.length-n-1},_adjustValue:function(e){var t,n,r=this.options;return t=r.min!==null?r.min:0,n=e-t,n=Math.round(n/r.step)*r.step,e=t+n,e=parseFloat(e.toFixed(this._precision())),r.max!==null&&e>r.max?r.max:r.min!==null&&e<r.min?r.min:e},_stop:function(e){if(!this.spinning)return;clearTimeout(this.timer),clearTimeout(this.mousewheelTimer),this.counter=0,this.spinning=!1,this._trigger("stop",e)},_setOption:function(e,t){if(e==="culture"||e==="numberFormat"){var n=this._parse(this.element.val());this.options[e]=t,this.element.val(this._format(n));return}(e==="max"||e==="min"||e==="step")&&typeof t=="string"&&(t=this._parse(t)),this._super(e,t),e==="disabled"&&(t?(this.element.prop("disabled",!0),this.buttons.button("disable")):(this.element.prop("disabled",!1),this.buttons.button("enable")))},_setOptions:t(function(e){this._super(e),this._value(this.element.val())}),_parse:function(e){return typeof e=="string"&&e!==""&&(e=window.Globalize&&this.options.numberFormat?Globalize.parseFloat(e,10,this.options.culture):+e),e===""||isNaN(e)?null:e},_format:function(e){return e===""?"":window.Globalize&&this.options.numberFormat?Globalize.format(e,this.options.numberFormat,this.options.culture):e},_refresh:function(){this.element.attr({"aria-valuemin":this.options.min,"aria-valuemax":this.options.max,"aria-valuenow":this._parse(this.element.val())})},_value:function(e,t){var n;e!==""&&(n=this._parse(e),n!==null&&(t||(n=this._adjustValue(n)),e=this._format(n))),this.element.val(e),this._refresh()},_destroy:function(){this.element.removeClass("ui-spinner-input").prop("disabled",!1).removeAttr("autocomplete").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow"),this.uiSpinner.replaceWith(this.element)},stepUp:t(function(e){this._stepUp(e)}),_stepUp:function(e){this._spin((e||1)*this.options.step)},stepDown:t(function(e){this._stepDown(e)}),_stepDown:function(e){this._spin((e||1)*-this.options.step)},pageUp:t(function(e){this._stepUp((e||1)*this.options.page)}),pageDown:t(function(e){this._stepDown((e||1)*this.options.page)}),value:function(e){if(!arguments.length)return this._parse(this.element.val());t(this._value).call(this,e)},widget:function(){return this.uiSpinner}})})(jQuery);(function(e,t){function i(){return++n}function s(e){return e=e.cloneNode(!1),e.hash.length>1&&e.href.replace(r,"")===location.href.replace(r,"")}var n=0,r=/#.*$/;e.widget("ui.tabs",{version:"1.9.0",delay:300,options:{active:null,collapsible:!1,event:"click",heightStyle:"content",hide:null,show:null,activate:null,beforeActivate:null,beforeLoad:null,load:null},_create:function(){var t,n=this,r=this.options,i=r.active;this.running=!1,this.element.addClass("ui-tabs ui-widget ui-widget-content ui-corner-all").toggleClass("ui-tabs-collapsible",r.collapsible).delegate(".ui-tabs-nav > li","mousedown"+this.eventNamespace,function(t){e(this).is(".ui-state-disabled")&&t.preventDefault()}).delegate(".ui-tabs-anchor","focus"+this.eventNamespace,function(){e(this).closest("li").is(".ui-state-disabled")&&this.blur()}),this._processTabs();if(i===null){location.hash&&this.anchors.each(function(e,t){if(t.hash===location.hash)return i=e,!1}),i===null&&(i=this.tabs.filter(".ui-tabs-active").index());if(i===null||i===-1)i=this.tabs.length?0:!1}i!==!1&&(i=this.tabs.index(this.tabs.eq(i)),i===-1&&(i=r.collapsible?!1:0)),r.active=i,!r.collapsible&&r.active===!1&&this.anchors.length&&(r.active=0),e.isArray(r.disabled)&&(r.disabled=e.unique(r.disabled.concat(e.map(this.tabs.filter(".ui-state-disabled"),function(e){return n.tabs.index(e)}))).sort()),this.options.active!==!1&&this.anchors.length?this.active=this._findActive(this.options.active):this.active=e(),this._refresh(),this.active.length&&this.load(r.active)},_getCreateEventData:function(){return{tab:this.active,panel:this.active.length?this._getPanelForTab(this.active):e()}},_tabKeydown:function(t){var n=e(this.document[0].activeElement).closest("li"),r=this.tabs.index(n),i=!0;if(this._handlePageNav(t))return;switch(t.keyCode){case e.ui.keyCode.RIGHT:case e.ui.keyCode.DOWN:r++;break;case e.ui.keyCode.UP:case e.ui.keyCode.LEFT:i=!1,r--;break;case e.ui.keyCode.END:r=this.anchors.length-1;break;case e.ui.keyCode.HOME:r=0;break;case e.ui.keyCode.SPACE:t.preventDefault(),clearTimeout(this.activating),this._activate(r);return;case e.ui.keyCode.ENTER:t.preventDefault(),clearTimeout(this.activating),this._activate(r===this.options.active?!1:r);return;default:return}t.preventDefault(),clearTimeout(this.activating),r=this._focusNextTab(r,i),t.ctrlKey||(n.attr("aria-selected","false"),this.tabs.eq(r).attr("aria-selected","true"),this.activating=this._delay(function(){this.option("active",r)},this.delay))},_panelKeydown:function(t){if(this._handlePageNav(t))return;t.ctrlKey&&t.keyCode===e.ui.keyCode.UP&&(t.preventDefault(),this.active.focus())},_handlePageNav:function(t){if(t.altKey&&t.keyCode===e.ui.keyCode.PAGE_UP)return this._activate(this._focusNextTab(this.options.active-1,!1)),!0;if(t.altKey&&t.keyCode===e.ui.keyCode.PAGE_DOWN)return this._activate(this._focusNextTab(this.options.active+1,!0)),!0},_findNextTab:function(t,n){function i(){return t>r&&(t=0),t<0&&(t=r),t}var r=this.tabs.length-1;while(e.inArray(i(),this.options.disabled)!==-1)t=n?t+1:t-1;return t},_focusNextTab:function(e,t){return e=this._findNextTab(e,t),this.tabs.eq(e).focus(),e},_setOption:function(e,t){if(e==="active"){this._activate(t);return}if(e==="disabled"){this._setupDisabled(t);return}this._super(e,t),e==="collapsible"&&(this.element.toggleClass("ui-tabs-collapsible",t),!t&&this.options.active===!1&&this._activate(0)),e==="event"&&this._setupEvents(t),e==="heightStyle"&&this._setupHeightStyle(t)},_tabId:function(e){return e.attr("aria-controls")||"ui-tabs-"+i()},_sanitizeSelector:function(e){return e?e.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g,"\\$&"):""},refresh:function(){var t,n=this.options,r=this.tablist.children(":has(a[href])");n.disabled=e.map(r.filter(".ui-state-disabled"),function(e){return r.index(e)}),this._processTabs(),n.active===!1||!this.anchors.length?(n.active=!1,this.active=e()):this.active.length&&!e.contains(this.tablist[0],this.active[0])?this.tabs.length===n.disabled.length?(n.active=!1,this.active=e()):this._activate(this._findNextTab(Math.max(0,n.active-1),!1)):n.active=this.tabs.index(this.active),this._refresh()},_refresh:function(){this._setupDisabled(this.options.disabled),this._setupEvents(this.options.event),this._setupHeightStyle(this.options.heightStyle),this.tabs.not(this.active).attr({"aria-selected":"false",tabIndex:-1}),this.panels.not(this._getPanelForTab(this.active)).hide().attr({"aria-expanded":"false","aria-hidden":"true"}),this.active.length?(this.active.addClass("ui-tabs-active ui-state-active").attr({"aria-selected":"true",tabIndex:0}),this._getPanelForTab(this.active).show().attr({"aria-expanded":"true","aria-hidden":"false"})):this.tabs.eq(0).attr("tabIndex",0)},_processTabs:function(){var t=this;this.tablist=this._getList().addClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").attr("role","tablist"),this.tabs=this.tablist.find("> li:has(a[href])").addClass("ui-state-default ui-corner-top").attr({role:"tab",tabIndex:-1}),this.anchors=this.tabs.map(function(){return e("a",this)[0]}).addClass("ui-tabs-anchor").attr({role:"presentation",tabIndex:-1}),this.panels=e(),this.anchors.each(function(n,r){var i,o,u,a=e(r).uniqueId().attr("id"),f=e(r).closest("li"),l=f.attr("aria-controls");s(r)?(i=r.hash,o=t.element.find(t._sanitizeSelector(i))):(u=t._tabId(f),i="#"+u,o=t.element.find(i),o.length||(o=t._createPanel(u),o.insertAfter(t.panels[n-1]||t.tablist)),o.attr("aria-live","polite")),o.length&&(t.panels=t.panels.add(o)),l&&f.data("ui-tabs-aria-controls",l),f.attr({"aria-controls":i.substring(1),"aria-labelledby":a}),o.attr("aria-labelledby",a)}),this.panels.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").attr("role","tabpanel")},_getList:function(){return this.element.find("ol,ul").eq(0)},_createPanel:function(t){return e("<div>").attr("id",t).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").data("ui-tabs-destroy",!0)},_setupDisabled:function(t){e.isArray(t)&&(t.length?t.length===this.anchors.length&&(t=!0):t=!1);for(var n=0,r;r=this.tabs[n];n++)t===!0||e.inArray(n,t)!==-1?e(r).addClass("ui-state-disabled").attr("aria-disabled","true"):e(r).removeClass("ui-state-disabled").removeAttr("aria-disabled");this.options.disabled=t},_setupEvents:function(t){var n={click:function(e){e.preventDefault()}};t&&e.each(t.split(" "),function(e,t){n[t]="_eventHandler"}),this._off(this.anchors.add(this.tabs).add(this.panels)),this._on(this.anchors,n),this._on(this.tabs,{keydown:"_tabKeydown"}),this._on(this.panels,{keydown:"_panelKeydown"}),this._focusable(this.tabs),this._hoverable(this.tabs)},_setupHeightStyle:function(t){var n,r,i=this.element.parent();t==="fill"?(e.support.minHeight||(r=i.css("overflow"),i.css("overflow","hidden")),n=i.height(),this.element.siblings(":visible").each(function(){var t=e(this),r=t.css("position");if(r==="absolute"||r==="fixed")return;n-=t.outerHeight(!0)}),r&&i.css("overflow",r),this.element.children().not(this.panels).each(function(){n-=e(this).outerHeight(!0)}),this.panels.each(function(){e(this).height(Math.max(0,n-e(this).innerHeight()+e(this).height()))}).css("overflow","auto")):t==="auto"&&(n=0,this.panels.each(function(){n=Math.max(n,e(this).height("").height())}).height(n))},_eventHandler:function(t){var n=this.options,r=this.active,i=e(t.currentTarget),s=i.closest("li"),o=s[0]===r[0],u=o&&n.collapsible,a=u?e():this._getPanelForTab(s),f=r.length?this._getPanelForTab(r):e(),l={oldTab:r,oldPanel:f,newTab:u?e():s,newPanel:a};t.preventDefault();if(s.hasClass("ui-state-disabled")||s.hasClass("ui-tabs-loading")||this.running||o&&!n.collapsible||this._trigger("beforeActivate",t,l)===!1)return;n.active=u?!1:this.tabs.index(s),this.active=o?e():s,this.xhr&&this.xhr.abort(),!f.length&&!a.length&&e.error("jQuery UI Tabs: Mismatching fragment identifier."),a.length&&this.load(this.tabs.index(s),t),this._toggle(t,l)},_toggle:function(t,n){function o(){r.running=!1,r._trigger("activate",t,n)}function u(){n.newTab.closest("li").addClass("ui-tabs-active ui-state-active"),i.length&&r.options.show?r._show(i,r.options.show,o):(i.show(),o())}var r=this,i=n.newPanel,s=n.oldPanel;this.running=!0,s.length&&this.options.hide?this._hide(s,this.options.hide,function(){n.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"),u()}):(n.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"),s.hide(),u()),s.attr({"aria-expanded":"false","aria-hidden":"true"}),n.oldTab.attr("aria-selected","false"),i.length&&s.length?n.oldTab.attr("tabIndex",-1):i.length&&this.tabs.filter(function(){return e(this).attr("tabIndex")===0}).attr("tabIndex",-1),i.attr({"aria-expanded":"true","aria-hidden":"false"}),n.newTab.attr({"aria-selected":"true",tabIndex:0})},_activate:function(t){var n,r=this._findActive(t);if(r[0]===this.active[0])return;r.length||(r=this.active),n=r.find(".ui-tabs-anchor")[0],this._eventHandler({target:n,currentTarget:n,preventDefault:e.noop})},_findActive:function(t){return t===!1?e():this.tabs.eq(t)},_getIndex:function(e){return typeof e=="string"&&(e=this.anchors.index(this.anchors.filter("[href$='"+e+"']"))),e},_destroy:function(){this.xhr&&this.xhr.abort(),this.element.removeClass("ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible"),this.tablist.removeClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").removeAttr("role"),this.anchors.removeClass("ui-tabs-anchor").removeAttr("role").removeAttr("tabIndex").removeData("href.tabs").removeData("load.tabs").removeUniqueId(),this.tabs.add(this.panels).each(function(){e.data(this,"ui-tabs-destroy")?e(this).remove():e(this).removeClass("ui-state-default ui-state-active ui-state-disabled ui-corner-top ui-corner-bottom ui-widget-content ui-tabs-active ui-tabs-panel").removeAttr("tabIndex").removeAttr("aria-live").removeAttr("aria-busy").removeAttr("aria-selected").removeAttr("aria-labelledby").removeAttr("aria-hidden").removeAttr("aria-expanded").removeAttr("role")}),this.tabs.each(function(){var t=e(this),n=t.data("ui-tabs-aria-controls");n?t.attr("aria-controls",n):t.removeAttr("aria-controls")}),this.options.heightStyle!=="content"&&this.panels.css("height","")},enable:function(n){var r=this.options.disabled;if(r===!1)return;n===t?r=!1:(n=this._getIndex(n),e.isArray(r)?r=e.map(r,function(e){return e!==n?e:null}):r=e.map(this.tabs,function(e,t){return t!==n?t:null})),this._setupDisabled(r)},disable:function(n){var r=this.options.disabled;if(r===!0)return;if(n===t)r=!0;else{n=this._getIndex(n);if(e.inArray(n,r)!==-1)return;e.isArray(r)?r=e.merge([n],r).sort():r=[n]}this._setupDisabled(r)},load:function(t,n){t=this._getIndex(t);var r=this,i=this.tabs.eq(t),o=i.find(".ui-tabs-anchor"),u=this._getPanelForTab(i),a={tab:i,panel:u};if(s(o[0]))return;this.xhr=e.ajax(this._ajaxSettings(o,n,a)),this.xhr&&this.xhr.statusText!=="canceled"&&(i.addClass("ui-tabs-loading"),u.attr("aria-busy","true"),this.xhr.success(function(e){setTimeout(function(){u.html(e),r._trigger("load",n,a)},1)}).complete(function(e,t){setTimeout(function(){t==="abort"&&r.panels.stop(!1,!0),i.removeClass("ui-tabs-loading"),u.removeAttr("aria-busy"),e===r.xhr&&delete r.xhr},1)}))},_ajaxSettings:function(t,n,r){var i=this;return{url:t.attr("href"),beforeSend:function(t,s){return i._trigger("beforeLoad",n,e.extend({jqXHR:t,ajaxSettings:s},r))}}},_getPanelForTab:function(t){var n=e(t).attr("aria-controls");return this.element.find(this._sanitizeSelector("#"+n))}}),e.uiBackCompat!==!1&&(e.ui.tabs.prototype._ui=function(e,t){return{tab:e,panel:t,index:this.anchors.index(e)}},e.widget("ui.tabs",e.ui.tabs,{url:function(e,t){this.anchors.eq(e).attr("href",t)}}),e.widget("ui.tabs",e.ui.tabs,{options:{ajaxOptions:null,cache:!1},_create:function(){this._super();var t=this;this._on({tabsbeforeload:function(n,r){if(e.data(r.tab[0],"cache.tabs")){n.preventDefault();return}r.jqXHR.success(function(){t.options.cache&&e.data(r.tab[0],"cache.tabs",!0)})}})},_ajaxSettings:function(t,n,r){var i=this.options.ajaxOptions;return e.extend({},i,{error:function(e,t,n){try{i.error(e,t,r.tab.closest("li").index(),r.tab[0])}catch(n){}}},this._superApply(arguments))},_setOption:function(e,t){e==="cache"&&t===!1&&this.anchors.removeData("cache.tabs"),this._super(e,t)},_destroy:function(){this.anchors.removeData("cache.tabs"),this._super()},url:function(e,t){this.anchors.eq(e).removeData("cache.tabs"),this._superApply(arguments)}}),e.widget("ui.tabs",e.ui.tabs,{abort:function(){this.xhr&&this.xhr.abort()}}),e.widget("ui.tabs",e.ui.tabs,{options:{spinner:"<em>Loading&#8230;</em>"},_create:function(){this._super(),this._on({tabsbeforeload:function(e,t){if(e.target!==this.element[0]||!this.options.spinner)return;var n=t.tab.find("span"),r=n.html();n.html(this.options.spinner),t.jqXHR.complete(function(){n.html(r)})}})}}),e.widget("ui.tabs",e.ui.tabs,{options:{enable:null,disable:null},enable:function(t){var n=this.options,r;if(t&&n.disabled===!0||e.isArray(n.disabled)&&e.inArray(t,n.disabled)!==-1)r=!0;this._superApply(arguments),r&&this._trigger("enable",null,this._ui(this.anchors[t],this.panels[t]))},disable:function(t){var n=this.options,r;if(t&&n.disabled===!1||e.isArray(n.disabled)&&e.inArray(t,n.disabled)===-1)r=!0;this._superApply(arguments),r&&this._trigger("disable",null,this._ui(this.anchors[t],this.panels[t]))}}),e.widget("ui.tabs",e.ui.tabs,{options:{add:null,remove:null,tabTemplate:"<li><a href='#{href}'><span>#{label}</span></a></li>"},add:function(n,r,i){i===t&&(i=this.anchors.length);var s,o,u=this.options,a=e(u.tabTemplate.replace(/#\{href\}/g,n).replace(/#\{label\}/g,r)),f=n.indexOf("#")?this._tabId(a):n.replace("#","");return a.addClass("ui-state-default ui-corner-top").data("ui-tabs-destroy",!0),a.attr("aria-controls",f),s=i>=this.tabs.length,o=this.element.find("#"+f),o.length||(o=this._createPanel(f),s?i>0?o.insertAfter(this.panels.eq(-1)):o.appendTo(this.element):o.insertBefore(this.panels[i])),o.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").hide(),s?a.appendTo(this.tablist):a.insertBefore(this.tabs[i]),u.disabled=e.map(u.disabled,function(e){return e>=i?++e:e}),this.refresh(),this.tabs.length===1&&u.active===!1&&this.option("active",0),this._trigger("add",null,this._ui(this.anchors[i],this.panels[i])),this},remove:function(t){t=this._getIndex(t);var n=this.options,r=this.tabs.eq(t).remove(),i=this._getPanelForTab(r).remove();return r.hasClass("ui-tabs-active")&&this.anchors.length>2&&this._activate(t+(t+1<this.anchors.length?1:-1)),n.disabled=e.map(e.grep(n.disabled,function(e){return e!==t}),function(e){return e>=t?--e:e}),this.refresh(),this._trigger("remove",null,this._ui(r.find("a")[0],i[0])),this}}),e.widget("ui.tabs",e.ui.tabs,{length:function(){return this.anchors.length}}),e.widget("ui.tabs",e.ui.tabs,{options:{idPrefix:"ui-tabs-"},_tabId:function(t){var n=t.is("li")?t.find("a[href]"):t;return n=n[0],e(n).closest("li").attr("aria-controls")||n.title&&n.title.replace(/\s/g,"_").replace(/[^\w\u00c0-\uFFFF\-]/g,"")||this.options.idPrefix+i()}}),e.widget("ui.tabs",e.ui.tabs,{options:{panelTemplate:"<div></div>"},_createPanel:function(t){return e(this.options.panelTemplate).attr("id",t).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").data("ui-tabs-destroy",!0)}}),e.widget("ui.tabs",e.ui.tabs,{_create:function(){var e=this.options;e.active===null&&e.selected!==t&&(e.active=e.selected===-1?!1:e.selected),this._super(),e.selected=e.active,e.selected===!1&&(e.selected=-1)},_setOption:function(e,t){if(e!=="selected")return this._super(e,t);var n=this.options;this._super("active",t===-1?!1:t),n.selected=n.active,n.selected===!1&&(n.selected=-1)},_eventHandler:function(e){this._superApply(arguments),this.options.selected=this.options.active,this.options.selected===!1&&(this.options.selected=-1)}}),e.widget("ui.tabs",e.ui.tabs,{options:{show:null,select:null},_create:function(){this._super(),this.options.active!==!1&&this._trigger("show",null,this._ui(this.active.find(".ui-tabs-anchor")[0],this._getPanelForTab(this.active)[0]))},_trigger:function(e,t,n){var r=this._superApply(arguments);return r?(e==="beforeActivate"&&n.newTab.length?r=this._super("select",t,{tab:n.newTab.find(".ui-tabs-anchor")[0],panel:n.newPanel[0],index:n.newTab.closest("li").index()}):e==="activate"&&n.newTab.length&&(r=this._super("show",t,{tab:n.newTab.find(".ui-tabs-anchor")[0],panel:n.newPanel[0],index:n.newTab.closest("li").index()})),r):!1}}),e.widget("ui.tabs",e.ui.tabs,{select:function(e){e=this._getIndex(e);if(e===-1){if(!this.options.collapsible||this.options.selected===-1)return;e=this.options.selected}this.anchors.eq(e).trigger(this.options.event+this.eventNamespace)}}),function(){var t=0;e.widget("ui.tabs",e.ui.tabs,{options:{cookie:null},_create:function(){var e=this.options,t;e.active==null&&e.cookie&&(t=parseInt(this._cookie(),10),t===-1&&(t=!1),e.active=t),this._super()},_cookie:function(n){var r=[this.cookie||(this.cookie=this.options.cookie.name||"ui-tabs-"+ ++t)];return arguments.length&&(r.push(n===!1?-1:n),r.push(this.options.cookie)),e.cookie.apply(null,r)},_refresh:function(){this._super(),this.options.cookie&&this._cookie(this.options.active,this.options.cookie)},_eventHandler:function(e){this._superApply(arguments),this.options.cookie&&this._cookie(this.options.active,this.options.cookie)},_destroy:function(){this._super(),this.options.cookie&&this._cookie(null,this.options.cookie)}})}(),e.widget("ui.tabs",e.ui.tabs,{_trigger:function(t,n,r){var i=e.extend({},r);return t==="load"&&(i.panel=i.panel[0],i.tab=i.tab.find(".ui-tabs-anchor")[0]),this._super(t,n,i)}}),e.widget("ui.tabs",e.ui.tabs,{options:{fx:null},_getFx:function(){var t,n,r=this.options.fx;return r&&(e.isArray(r)?(t=r[0],n=r[1]):t=n=r),r?{show:n,hide:t}:null},_toggle:function(e,t){function o(){n.running=!1,n._trigger("activate",e,t)}function u(){t.newTab.closest("li").addClass("ui-tabs-active ui-state-active"),r.length&&s.show?r.animate(s.show,s.show.duration,function(){o()}):(r.show(),o())}var n=this,r=t.newPanel,i=t.oldPanel,s=this._getFx();if(!s)return this._super(e,t);n.running=!0,i.length&&s.hide?i.animate(s.hide,s.hide.duration,function(){t.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"),u()}):(t.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"),i.hide(),u())}}))})(jQuery);(function(e){function n(t,n){var r=(t.attr("aria-describedby")||"").split(/\s+/);r.push(n),t.data("ui-tooltip-id",n).attr("aria-describedby",e.trim(r.join(" ")))}function r(t){var n=t.data("ui-tooltip-id"),r=(t.attr("aria-describedby")||"").split(/\s+/),i=e.inArray(n,r);i!==-1&&r.splice(i,1),t.removeData("ui-tooltip-id"),r=e.trim(r.join(" ")),r?t.attr("aria-describedby",r):t.removeAttr("aria-describedby")}var t=0;e.widget("ui.tooltip",{version:"1.9.0",options:{content:function(){return e(this).attr("title")},hide:!0,items:"[title]",position:{my:"left+15 center",at:"right center",collision:"flipfit flipfit"},show:!0,tooltipClass:null,track:!1,close:null,open:null},_create:function(){this._on({mouseover:"open",focusin:"open"}),this.tooltips={}},_setOption:function(t,n){var r=this;if(t==="disabled"){this[n?"_disable":"_enable"](),this.options[t]=n;return}this._super(t,n),t==="content"&&e.each(this.tooltips,function(e,t){r._updateContent(t)})},_disable:function(){var t=this;e.each(this.tooltips,function(n,r){var i=e.Event("blur");i.target=i.currentTarget=r[0],t.close(i,!0)}),this.element.find(this.options.items).andSelf().each(function(){var t=e(this);t.is("[title]")&&t.data("ui-tooltip-title",t.attr("title")).attr("title","")})},_enable:function(){this.element.find(this.options.items).andSelf().each(function(){var t=e(this);t.data("ui-tooltip-title")&&t.attr("title",t.data("ui-tooltip-title"))})},open:function(t){var n=e(t?t.target:this.element).closest(this.options.items);if(!n.length)return;if(this.options.track&&n.data("ui-tooltip-id")){this._find(n).position(e.extend({of:n},this.options.position)),this._off(this.document,"mousemove");return}n.attr("title")&&n.data("ui-tooltip-title",n.attr("title")),n.data("tooltip-open",!0),this._updateContent(n,t)},_updateContent:function(e,t){var n,r=this.options.content,i=this;if(typeof r=="string")return this._open(t,e,r);n=r.call(e[0],function(n){if(!e.data("tooltip-open"))return;i._delay(function(){this._open(t,e,n)})}),n&&this._open(t,e,n)},_open:function(t,r,i){function u(e){o.of=e,s.position(o)}var s,o;if(!i)return;s=this._find(r);if(s.length){s.find(".ui-tooltip-content").html(i);return}r.is("[title]")&&(t&&t.type==="mouseover"?r.attr("title",""):r.removeAttr("title")),s=this._tooltip(r),n(r,s.attr("id")),s.find(".ui-tooltip-content").html(i),this.options.track&&t&&/^mouse/.test(t.originalEvent.type)?(o=e.extend({},this.options.position),this._on(this.document,{mousemove:u}),u(t)):s.position(e.extend({of:r},this.options.position)),s.hide(),this._show(s,this.options.show),this._trigger("open",t,{tooltip:s}),this._on(r,{mouseleave:"close",focusout:"close",keyup:function(t){if(t.keyCode===e.ui.keyCode.ESCAPE){var n=e.Event(t);n.currentTarget=r[0],this.close(n,!0)}}})},close:function(t,n){var i=this,s=e(t?t.currentTarget:this.element),o=this._find(s);if(this.closing)return;if(!n&&t&&t.type!=="focusout"&&this.document[0].activeElement===s[0])return;s.data("ui-tooltip-title")&&s.attr("title",s.data("ui-tooltip-title")),r(s),o.stop(!0),this._hide(o,this.options.hide,function(){e(this).remove(),delete i.tooltips[this.id]}),s.removeData("tooltip-open"),this._off(s,"mouseleave focusout keyup"),this._off(this.document,"mousemove"),this.closing=!0,this._trigger("close",t,{tooltip:o}),this.closing=!1},_tooltip:function(n){var r="ui-tooltip-"+t++,i=e("<div>").attr({id:r,role:"tooltip"}).addClass("ui-tooltip ui-widget ui-corner-all ui-widget-content "+(this.options.tooltipClass||""));return e("<div>").addClass("ui-tooltip-content").appendTo(i),i.appendTo(this.document[0].body),e.fn.bgiframe&&i.bgiframe(),this.tooltips[r]=n,i},_find:function(t){var n=t.data("ui-tooltip-id");return n?e("#"+n):e()},_destroy:function(){var t=this;e.each(this.tooltips,function(n,r){var i=e.Event("blur");i.target=i.currentTarget=r[0],t.close(i,!0),e("#"+n).remove(),r.data("ui-tooltip-title")&&(r.attr("title",r.data("ui-tooltip-title")),r.removeData("ui-tooltip-title"))})}})})(jQuery);jQuery.effects||function(e,t){var n=e.uiBackCompat!==!1,r="ui-effects-";e.effects={effect:{}},function(t,n){function p(e,t,n){var r=a[t.type]||{};return e==null?n||!t.def?null:t.def:(e=r.floor?~~e:parseFloat(e),isNaN(e)?t.def:r.mod?(e+r.mod)%r.mod:0>e?0:r.max<e?r.max:e)}function d(e){var n=o(),r=n._rgba=[];return e=e.toLowerCase(),h(s,function(t,i){var s,o=i.re.exec(e),a=o&&i.parse(o),f=i.space||"rgba";if(a)return s=n[f](a),n[u[f].cache]=s[u[f].cache],r=n._rgba=s._rgba,!1}),r.length?(r.join()==="0,0,0,0"&&t.extend(r,c.transparent),n):c[e]}function v(e,t,n){return n=(n+1)%1,n*6<1?e+(t-e)*n*6:n*2<1?t:n*3<2?e+(t-e)*(2/3-n)*6:e}var r="backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor".split(" "),i=/^([\-+])=\s*(\d+\.?\d*)/,s=[{re:/rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,parse:function(e){return[e[1],e[2],e[3],e[4]]}},{re:/rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,parse:function(e){return[e[1]*2.55,e[2]*2.55,e[3]*2.55,e[4]]}},{re:/#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,parse:function(e){return[parseInt(e[1],16),parseInt(e[2],16),parseInt(e[3],16)]}},{re:/#([a-f0-9])([a-f0-9])([a-f0-9])/,parse:function(e){return[parseInt(e[1]+e[1],16),parseInt(e[2]+e[2],16),parseInt(e[3]+e[3],16)]}},{re:/hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,space:"hsla",parse:function(e){return[e[1],e[2]/100,e[3]/100,e[4]]}}],o=t.Color=function(e,n,r,i){return new t.Color.fn.parse(e,n,r,i)},u={rgba:{props:{red:{idx:0,type:"byte"},green:{idx:1,type:"byte"},blue:{idx:2,type:"byte"}}},hsla:{props:{hue:{idx:0,type:"degrees"},saturation:{idx:1,type:"percent"},lightness:{idx:2,type:"percent"}}}},a={"byte":{floor:!0,max:255},percent:{max:1},degrees:{mod:360,floor:!0}},f=o.support={},l=t("<p>")[0],c,h=t.each;l.style.cssText="background-color:rgba(1,1,1,.5)",f.rgba=l.style.backgroundColor.indexOf("rgba")>-1,h(u,function(e,t){t.cache="_"+e,t.props.alpha={idx:3,type:"percent",def:1}}),o.fn=t.extend(o.prototype,{parse:function(r,i,s,a){if(r===n)return this._rgba=[null,null,null,null],this;if(r.jquery||r.nodeType)r=t(r).css(i),i=n;var f=this,l=t.type(r),v=this._rgba=[],m;i!==n&&(r=[r,i,s,a],l="array");if(l==="string")return this.parse(d(r)||c._default);if(l==="array")return h(u.rgba.props,function(e,t){v[t.idx]=p(r[t.idx],t)}),this;if(l==="object")return r instanceof o?h(u,function(e,t){r[t.cache]&&(f[t.cache]=r[t.cache].slice())}):h(u,function(t,n){var i=n.cache;h(n.props,function(e,t){if(!f[i]&&n.to){if(e==="alpha"||r[e]==null)return;f[i]=n.to(f._rgba)}f[i][t.idx]=p(r[e],t,!0)}),f[i]&&e.inArray(null,f[i].slice(0,3))<0&&(f[i][3]=1,n.from&&(f._rgba=n.from(f[i])))}),this},is:function(e){var t=o(e),n=!0,r=this;return h(u,function(e,i){var s,o=t[i.cache];return o&&(s=r[i.cache]||i.to&&i.to(r._rgba)||[],h(i.props,function(e,t){if(o[t.idx]!=null)return n=o[t.idx]===s[t.idx],n})),n}),n},_space:function(){var e=[],t=this;return h(u,function(n,r){t[r.cache]&&e.push(n)}),e.pop()},transition:function(e,t){var n=o(e),r=n._space(),i=u[r],s=this.alpha()===0?o("transparent"):this,f=s[i.cache]||i.to(s._rgba),l=f.slice();return n=n[i.cache],h(i.props,function(e,r){var i=r.idx,s=f[i],o=n[i],u=a[r.type]||{};if(o===null)return;s===null?l[i]=o:(u.mod&&(o-s>u.mod/2?s+=u.mod:s-o>u.mod/2&&(s-=u.mod)),l[i]=p((o-s)*t+s,r))}),this[r](l)},blend:function(e){if(this._rgba[3]===1)return this;var n=this._rgba.slice(),r=n.pop(),i=o(e)._rgba;return o(t.map(n,function(e,t){return(1-r)*i[t]+r*e}))},toRgbaString:function(){var e="rgba(",n=t.map(this._rgba,function(e,t){return e==null?t>2?1:0:e});return n[3]===1&&(n.pop(),e="rgb("),e+n.join()+")"},toHslaString:function(){var e="hsla(",n=t.map(this.hsla(),function(e,t){return e==null&&(e=t>2?1:0),t&&t<3&&(e=Math.round(e*100)+"%"),e});return n[3]===1&&(n.pop(),e="hsl("),e+n.join()+")"},toHexString:function(e){var n=this._rgba.slice(),r=n.pop();return e&&n.push(~~(r*255)),"#"+t.map(n,function(e,t){return e=(e||0).toString(16),e.length===1?"0"+e:e}).join("")},toString:function(){return this._rgba[3]===0?"transparent":this.toRgbaString()}}),o.fn.parse.prototype=o.fn,u.hsla.to=function(e){if(e[0]==null||e[1]==null||e[2]==null)return[null,null,null,e[3]];var t=e[0]/255,n=e[1]/255,r=e[2]/255,i=e[3],s=Math.max(t,n,r),o=Math.min(t,n,r),u=s-o,a=s+o,f=a*.5,l,c;return o===s?l=0:t===s?l=60*(n-r)/u+360:n===s?l=60*(r-t)/u+120:l=60*(t-n)/u+240,f===0||f===1?c=f:f<=.5?c=u/a:c=u/(2-a),[Math.round(l)%360,c,f,i==null?1:i]},u.hsla.from=function(e){if(e[0]==null||e[1]==null||e[2]==null)return[null,null,null,e[3]];var t=e[0]/360,n=e[1],r=e[2],i=e[3],s=r<=.5?r*(1+n):r+n-r*n,o=2*r-s,u,a,f;return[Math.round(v(o,s,t+1/3)*255),Math.round(v(o,s,t)*255),Math.round(v(o,s,t-1/3)*255),i]},h(u,function(e,r){var s=r.props,u=r.cache,a=r.to,f=r.from;o.fn[e]=function(e){a&&!this[u]&&(this[u]=a(this._rgba));if(e===n)return this[u].slice();var r,i=t.type(e),l=i==="array"||i==="object"?e:arguments,c=this[u].slice();return h(s,function(e,t){var n=l[i==="object"?e:t.idx];n==null&&(n=c[t.idx]),c[t.idx]=p(n,t)}),f?(r=o(f(c)),r[u]=c,r):o(c)},h(s,function(n,r){if(o.fn[n])return;o.fn[n]=function(s){var o=t.type(s),u=n==="alpha"?this._hsla?"hsla":"rgba":e,a=this[u](),f=a[r.idx],l;return o==="undefined"?f:(o==="function"&&(s=s.call(this,f),o=t.type(s)),s==null&&r.empty?this:(o==="string"&&(l=i.exec(s),l&&(s=f+parseFloat(l[2])*(l[1]==="+"?1:-1))),a[r.idx]=s,this[u](a)))}})}),h(r,function(e,n){t.cssHooks[n]={set:function(e,r){var i,s,u="";if(t.type(r)!=="string"||(i=d(r))){r=o(i||r);if(!f.rgba&&r._rgba[3]!==1){s=n==="backgroundColor"?e.parentNode:e;while((u===""||u==="transparent")&&s&&s.style)try{u=t.css(s,"backgroundColor"),s=s.parentNode}catch(a){}r=r.blend(u&&u!=="transparent"?u:"_default")}r=r.toRgbaString()}try{e.style[n]=r}catch(r){}}},t.fx.step[n]=function(e){e.colorInit||(e.start=o(e.elem,n),e.end=o(e.end),e.colorInit=!0),t.cssHooks[n].set(e.elem,e.start.transition(e.end,e.pos))}}),t.cssHooks.borderColor={expand:function(e){var t={};return h(["Top","Right","Bottom","Left"],function(n,r){t["border"+r+"Color"]=e}),t}},c=t.Color.names={aqua:"#00ffff",black:"#000000",blue:"#0000ff",fuchsia:"#ff00ff",gray:"#808080",green:"#008000",lime:"#00ff00",maroon:"#800000",navy:"#000080",olive:"#808000",purple:"#800080",red:"#ff0000",silver:"#c0c0c0",teal:"#008080",white:"#ffffff",yellow:"#ffff00",transparent:[null,null,null,0],_default:"#ffffff"}}(jQuery),function(){function i(){var t=this.ownerDocument.defaultView?this.ownerDocument.defaultView.getComputedStyle(this,null):this.currentStyle,n={},r,i,s;if(t&&t.length&&t[0]&&t[t[0]]){s=t.length;while(s--)r=t[s],typeof t[r]=="string"&&(n[e.camelCase(r)]=t[r])}else for(r in t)typeof t[r]=="string"&&(n[r]=t[r]);return n}function s(t,n){var i={},s,o;for(s in n)o=n[s],t[s]!==o&&!r[s]&&(e.fx.step[s]||!isNaN(parseFloat(o)))&&(i[s]=o);return i}var n=["add","remove","toggle"],r={border:1,borderBottom:1,borderColor:1,borderLeft:1,borderRight:1,borderTop:1,borderWidth:1,margin:1,padding:1};e.each(["borderLeftStyle","borderRightStyle","borderBottomStyle","borderTopStyle"],function(t,n){e.fx.step[n]=function(e){if(e.end!=="none"&&!e.setAttr||e.pos===1&&!e.setAttr)jQuery.style(e.elem,n,e.end),e.setAttr=!0}}),e.effects.animateClass=function(t,r,o,u){var a=e.speed(r,o,u);return this.queue(function(){var r=e(this),o=r.attr("class")||"",u,f=a.children?r.find("*").andSelf():r;f=f.map(function(){var t=e(this);return{el:t,start:i.call(this)}}),u=function(){e.each(n,function(e,n){t[n]&&r[n+"Class"](t[n])})},u(),f=f.map(function(){return this.end=i.call(this.el[0]),this.diff=s(this.start,this.end),this}),r.attr("class",o),f=f.map(function(){var t=this,n=e.Deferred(),r=jQuery.extend({},a,{queue:!1,complete:function(){n.resolve(t)}});return this.el.animate(this.diff,r),n.promise()}),e.when.apply(e,f.get()).done(function(){u(),e.each(arguments,function(){var t=this.el;e.each(this.diff,function(e){t.css(e,"")})}),a.complete.call(r[0])})})},e.fn.extend({_addClass:e.fn.addClass,addClass:function(t,n,r,i){return n?e.effects.animateClass.call(this,{add:t},n,r,i):this._addClass(t)},_removeClass:e.fn.removeClass,removeClass:function(t,n,r,i){return n?e.effects.animateClass.call(this,{remove:t},n,r,i):this._removeClass(t)},_toggleClass:e.fn.toggleClass,toggleClass:function(n,r,i,s,o){return typeof r=="boolean"||r===t?i?e.effects.animateClass.call(this,r?{add:n}:{remove:n},i,s,o):this._toggleClass(n,r):e.effects.animateClass.call(this,{toggle:n},r,i,s)},switchClass:function(t,n,r,i,s){return e.effects.animateClass.call(this,{add:n,remove:t},r,i,s)}})}(),function(){function i(n,r,i,s){e.isPlainObject(n)&&(r=n,n=n.effect),n={effect:n},r===t&&(r={}),e.isFunction(r)&&(s=r,i=null,r={});if(typeof r=="number"||e.fx.speeds[r])s=i,i=r,r={};return e.isFunction(i)&&(s=i,i=null),r&&e.extend(n,r),i=i||r.duration,n.duration=e.fx.off?0:typeof i=="number"?i:i in e.fx.speeds?e.fx.speeds[i]:e.fx.speeds._default,n.complete=s||r.complete,n}function s(t){return!t||typeof t=="number"||e.fx.speeds[t]?!0:typeof t=="string"&&!e.effects.effect[t]?n&&e.effects[t]?!1:!0:!1}e.extend(e.effects,{version:"1.9.0",save:function(e,t){for(var n=0;n<t.length;n++)t[n]!==null&&e.data(r+t[n],e[0].style[t[n]])},restore:function(e,n){var i,s;for(s=0;s<n.length;s++)n[s]!==null&&(i=e.data(r+n[s]),i===t&&(i=""),e.css(n[s],i))},setMode:function(e,t){return t==="toggle"&&(t=e.is(":hidden")?"show":"hide"),t},getBaseline:function(e,t){var n,r;switch(e[0]){case"top":n=0;break;case"middle":n=.5;break;case"bottom":n=1;break;default:n=e[0]/t.height}switch(e[1]){case"left":r=0;break;case"center":r=.5;break;case"right":r=1;break;default:r=e[1]/t.width}return{x:r,y:n}},createWrapper:function(t){if(t.parent().is(".ui-effects-wrapper"))return t.parent();var n={width:t.outerWidth(!0),height:t.outerHeight(!0),"float":t.css("float")},r=e("<div></div>").addClass("ui-effects-wrapper").css({fontSize:"100%",background:"transparent",border:"none",margin:0,padding:0}),i={width:t.width(),height:t.height()},s=document.activeElement;try{s.id}catch(o){s=document.body}return t.wrap(r),(t[0]===s||e.contains(t[0],s))&&e(s).focus(),r=t.parent(),t.css("position")==="static"?(r.css({position:"relative"}),t.css({position:"relative"})):(e.extend(n,{position:t.css("position"),zIndex:t.css("z-index")}),e.each(["top","left","bottom","right"],function(e,r){n[r]=t.css(r),isNaN(parseInt(n[r],10))&&(n[r]="auto")}),t.css({position:"relative",top:0,left:0,right:"auto",bottom:"auto"})),t.css(i),r.css(n).show()},removeWrapper:function(t){var n=document.activeElement;return t.parent().is(".ui-effects-wrapper")&&(t.parent().replaceWith(t),(t[0]===n||e.contains(t[0],n))&&e(n).focus()),t},setTransition:function(t,n,r,i){return i=i||{},e.each(n,function(e,n){var s=t.cssUnit(n);s[0]>0&&(i[n]=s[0]*r+s[1])}),i}}),e.fn.extend({effect:function(t,r,s,o){function h(t){function s(){e.isFunction(r)&&r.call(n[0]),e.isFunction(t)&&t()}var n=e(this),r=u.complete,i=u.mode;(n.is(":hidden")?i==="hide":i==="show")?s():l.call(n[0],u,s)}var u=i.apply(this,arguments),a=u.mode,f=u.queue,l=e.effects.effect[u.effect],c=!l&&n&&e.effects[u.effect];return e.fx.off||!l&&!c?a?this[a](u.duration,u.complete):this.each(function(){u.complete&&u.complete.call(this)}):l?f===!1?this.each(h):this.queue(f||"fx",h):c.call(this,{options:u,duration:u.duration,callback:u.complete,mode:u.mode})},_show:e.fn.show,show:function(e){if(s(e))return this._show.apply(this,arguments);var t=i.apply(this,arguments);return t.mode="show",this.effect.call(this,t)},_hide:e.fn.hide,hide:function(e){if(s(e))return this._hide.apply(this,arguments);var t=i.apply(this,arguments);return t.mode="hide",this.effect.call(this,t)},__toggle:e.fn.toggle,toggle:function(t){if(s(t)||typeof t=="boolean"||e.isFunction(t))return this.__toggle.apply(this,arguments);var n=i.apply(this,arguments);return n.mode="toggle",this.effect.call(this,n)},cssUnit:function(t){var n=this.css(t),r=[];return e.each(["em","px","%","pt"],function(e,t){n.indexOf(t)>0&&(r=[parseFloat(n),t])}),r}})}(),function(){var t={};e.each(["Quad","Cubic","Quart","Quint","Expo"],function(e,n){t[n]=function(t){return Math.pow(t,e+2)}}),e.extend(t,{Sine:function(e){return 1-Math.cos(e*Math.PI/2)},Circ:function(e){return 1-Math.sqrt(1-e*e)},Elastic:function(e){return e===0||e===1?e:-Math.pow(2,8*(e-1))*Math.sin(((e-1)*80-7.5)*Math.PI/15)},Back:function(e){return e*e*(3*e-2)},Bounce:function(e){var t,n=4;while(e<((t=Math.pow(2,--n))-1)/11);return 1/Math.pow(4,3-n)-7.5625*Math.pow((t*3-2)/22-e,2)}}),e.each(t,function(t,n){e.easing["easeIn"+t]=n,e.easing["easeOut"+t]=function(e){return 1-n(1-e)},e.easing["easeInOut"+t]=function(e){return e<.5?n(e*2)/2:1-n(e*-2+2)/2}})}()}(jQuery);(function(e,t){var n=/up|down|vertical/,r=/up|left|vertical|horizontal/;e.effects.effect.blind=function(t,i){var s=e(this),o=["position","top","bottom","left","right","height","width"],u=e.effects.setMode(s,t.mode||"hide"),a=t.direction||"up",f=n.test(a),l=f?"height":"width",c=f?"top":"left",h=r.test(a),p={},d=u==="show",v,m,g;s.parent().is(".ui-effects-wrapper")?e.effects.save(s.parent(),o):e.effects.save(s,o),s.show(),v=e.effects.createWrapper(s).css({overflow:"hidden"}),m=v[l](),g=parseFloat(v.css(c))||0,p[l]=d?m:0,h||(s.css(f?"bottom":"right",0).css(f?"top":"left","auto").css({position:"absolute"}),p[c]=d?g:m+g),d&&(v.css(l,0),h||v.css(c,g+m)),v.animate(p,{duration:t.duration,easing:t.easing,queue:!1,complete:function(){u==="hide"&&s.hide(),e.effects.restore(s,o),e.effects.removeWrapper(s),i()}})}})(jQuery);(function(e,t){e.effects.effect.bounce=function(t,n){var r=e(this),i=["position","top","bottom","left","right","height","width"],s=e.effects.setMode(r,t.mode||"effect"),o=s==="hide",u=s==="show",a=t.direction||"up",f=t.distance,l=t.times||5,c=l*2+(u||o?1:0),h=t.duration/c,p=t.easing,d=a==="up"||a==="down"?"top":"left",v=a==="up"||a==="left",m,g,y,b=r.queue(),w=b.length;(u||o)&&i.push("opacity"),e.effects.save(r,i),r.show(),e.effects.createWrapper(r),f||(f=r[d==="top"?"outerHeight":"outerWidth"]()/3),u&&(y={opacity:1},y[d]=0,r.css("opacity",0).css(d,v?-f*2:f*2).animate(y,h,p)),o&&(f/=Math.pow(2,l-1)),y={},y[d]=0;for(m=0;m<l;m++)g={},g[d]=(v?"-=":"+=")+f,r.animate(g,h,p).animate(y,h,p),f=o?f*2:f/2;o&&(g={opacity:0},g[d]=(v?"-=":"+=")+f,r.animate(g,h,p)),r.queue(function(){o&&r.hide(),e.effects.restore(r,i),e.effects.removeWrapper(r),n()}),w>1&&b.splice.apply(b,[1,0].concat(b.splice(w,c+1))),r.dequeue()}})(jQuery);(function(e,t){e.effects.effect.clip=function(t,n){var r=e(this),i=["position","top","bottom","left","right","height","width"],s=e.effects.setMode(r,t.mode||"hide"),o=s==="show",u=t.direction||"vertical",a=u==="vertical",f=a?"height":"width",l=a?"top":"left",c={},h,p,d;e.effects.save(r,i),r.show(),h=e.effects.createWrapper(r).css({overflow:"hidden"}),p=r[0].tagName==="IMG"?h:r,d=p[f](),o&&(p.css(f,0),p.css(l,d/2)),c[f]=o?d:0,c[l]=o?0:d/2,p.animate(c,{queue:!1,duration:t.duration,easing:t.easing,complete:function(){o||r.hide(),e.effects.restore(r,i),e.effects.removeWrapper(r),n()}})}})(jQuery);(function(e,t){e.effects.effect.drop=function(t,n){var r=e(this),i=["position","top","bottom","left","right","opacity","height","width"],s=e.effects.setMode(r,t.mode||"hide"),o=s==="show",u=t.direction||"left",a=u==="up"||u==="down"?"top":"left",f=u==="up"||u==="left"?"pos":"neg",l={opacity:o?1:0},c;e.effects.save(r,i),r.show(),e.effects.createWrapper(r),c=t.distance||r[a==="top"?"outerHeight":"outerWidth"](!0)/2,o&&r.css("opacity",0).css(a,f==="pos"?-c:c),l[a]=(o?f==="pos"?"+=":"-=":f==="pos"?"-=":"+=")+c,r.animate(l,{queue:!1,duration:t.duration,easing:t.easing,complete:function(){s==="hide"&&r.hide(),e.effects.restore(r,i),e.effects.removeWrapper(r),n()}})}})(jQuery);(function(e,t){e.effects.effect.explode=function(t,n){function y(){c.push(this),c.length===r*i&&b()}function b(){s.css({visibility:"visible"}),e(c).remove(),u||s.hide(),n()}var r=t.pieces?Math.round(Math.sqrt(t.pieces)):3,i=r,s=e(this),o=e.effects.setMode(s,t.mode||"hide"),u=o==="show",a=s.show().css("visibility","hidden").offset(),f=Math.ceil(s.outerWidth()/i),l=Math.ceil(s.outerHeight()/r),c=[],h,p,d,v,m,g;for(h=0;h<r;h++){v=a.top+h*l,g=h-(r-1)/2;for(p=0;p<i;p++)d=a.left+p*f,m=p-(i-1)/2,s.clone().appendTo("body").wrap("<div></div>").css({position:"absolute",visibility:"visible",left:-p*f,top:-h*l}).parent().addClass("ui-effects-explode").css({position:"absolute",overflow:"hidden",width:f,height:l,left:d+(u?m*f:0),top:v+(u?g*l:0),opacity:u?0:1}).animate({left:d+(u?0:m*f),top:v+(u?0:g*l),opacity:u?1:0},t.duration||500,t.easing,y)}}})(jQuery);(function(e,t){e.effects.effect.fade=function(t,n){var r=e(this),i=e.effects.setMode(r,t.mode||"toggle");r.animate({opacity:i},{queue:!1,duration:t.duration,easing:t.easing,complete:n})}})(jQuery);(function(e,t){e.effects.effect.fold=function(t,n){var r=e(this),i=["position","top","bottom","left","right","height","width"],s=e.effects.setMode(r,t.mode||"hide"),o=s==="show",u=s==="hide",a=t.size||15,f=/([0-9]+)%/.exec(a),l=!!t.horizFirst,c=o!==l,h=c?["width","height"]:["height","width"],p=t.duration/2,d,v,m={},g={};e.effects.save(r,i),r.show(),d=e.effects.createWrapper(r).css({overflow:"hidden"}),v=c?[d.width(),d.height()]:[d.height(),d.width()],f&&(a=parseInt(f[1],10)/100*v[u?0:1]),o&&d.css(l?{height:0,width:a}:{height:a,width:0}),m[h[0]]=o?v[0]:a,g[h[1]]=o?v[1]:0,d.animate(m,p,t.easing).animate(g,p,t.easing,function(){u&&r.hide(),e.effects.restore(r,i),e.effects.removeWrapper(r),n()})}})(jQuery);(function(e,t){e.effects.effect.highlight=function(t,n){var r=e(this),i=["backgroundImage","backgroundColor","opacity"],s=e.effects.setMode(r,t.mode||"show"),o={backgroundColor:r.css("backgroundColor")};s==="hide"&&(o.opacity=0),e.effects.save(r,i),r.show().css({backgroundImage:"none",backgroundColor:t.color||"#ffff99"}).animate(o,{queue:!1,duration:t.duration,easing:t.easing,complete:function(){s==="hide"&&r.hide(),e.effects.restore(r,i),n()}})}})(jQuery);(function(e,t){e.effects.effect.pulsate=function(t,n){var r=e(this),i=e.effects.setMode(r,t.mode||"show"),s=i==="show",o=i==="hide",u=s||i==="hide",a=(t.times||5)*2+(u?1:0),f=t.duration/a,l=0,c=r.queue(),h=c.length,p;if(s||!r.is(":visible"))r.css("opacity",0).show(),l=1;for(p=1;p<a;p++)r.animate({opacity:l},f,t.easing),l=1-l;r.animate({opacity:l},f,t.easing),r.queue(function(){o&&r.hide(),n()}),h>1&&c.splice.apply(c,[1,0].concat(c.splice(h,a+1))),r.dequeue()}})(jQuery);(function(e,t){e.effects.effect.puff=function(t,n){var r=e(this),i=e.effects.setMode(r,t.mode||"hide"),s=i==="hide",o=parseInt(t.percent,10)||150,u=o/100,a={height:r.height(),width:r.width()};e.extend(t,{effect:"scale",queue:!1,fade:!0,mode:i,complete:n,percent:s?o:100,from:s?a:{height:a.height*u,width:a.width*u}}),r.effect(t)},e.effects.effect.scale=function(t,n){var r=e(this),i=e.extend(!0,{},t),s=e.effects.setMode(r,t.mode||"effect"),o=parseInt(t.percent,10)||(parseInt(t.percent,10)===0?0:s==="hide"?0:100),u=t.direction||"both",a=t.origin,f={height:r.height(),width:r.width(),outerHeight:r.outerHeight(),outerWidth:r.outerWidth()},l={y:u!=="horizontal"?o/100:1,x:u!=="vertical"?o/100:1};i.effect="size",i.queue=!1,i.complete=n,s!=="effect"&&(i.origin=a||["middle","center"],i.restore=!0),i.from=t.from||(s==="show"?{height:0,width:0}:f),i.to={height:f.height*l.y,width:f.width*l.x,outerHeight:f.outerHeight*l.y,outerWidth:f.outerWidth*l.x},i.fade&&(s==="show"&&(i.from.opacity=0,i.to.opacity=1),s==="hide"&&(i.from.opacity=1,i.to.opacity=0)),r.effect(i)},e.effects.effect.size=function(t,n){var r=e(this),i=["position","top","bottom","left","right","width","height","overflow","opacity"],s=["position","top","bottom","left","right","overflow","opacity"],o=["width","height","overflow"],u=["fontSize"],a=["borderTopWidth","borderBottomWidth","paddingTop","paddingBottom"],f=["borderLeftWidth","borderRightWidth","paddingLeft","paddingRight"],l=e.effects.setMode(r,t.mode||"effect"),c=t.restore||l!=="effect",h=t.scale||"both",p=t.origin||["middle","center"],d,v,m,g=r.css("position");l==="show"&&r.show(),d={height:r.height(),width:r.width(),outerHeight:r.outerHeight(),outerWidth:r.outerWidth()},r.from=t.from||d,r.to=t.to||d,m={from:{y:r.from.height/d.height,x:r.from.width/d.width},to:{y:r.to.height/d.height,x:r.to.width/d.width}};if(h==="box"||h==="both")m.from.y!==m.to.y&&(i=i.concat(a),r.from=e.effects.setTransition(r,a,m.from.y,r.from),r.to=e.effects.setTransition(r,a,m.to.y,r.to)),m.from.x!==m.to.x&&(i=i.concat(f),r.from=e.effects.setTransition(r,f,m.from.x,r.from),r.to=e.effects.setTransition(r,f,m.to.x,r.to));(h==="content"||h==="both")&&m.from.y!==m.to.y&&(i=i.concat(u),r.from=e.effects.setTransition(r,u,m.from.y,r.from),r.to=e.effects.setTransition(r,u,m.to.y,r.to)),e.effects.save(r,c?i:s),r.show(),e.effects.createWrapper(r),r.css("overflow","hidden").css(r.from),p&&(v=e.effects.getBaseline(p,d),r.from.top=(d.outerHeight-r.outerHeight())*v.y,r.from.left=(d.outerWidth-r.outerWidth())*v.x,r.to.top=(d.outerHeight-r.to.outerHeight)*v.y,r.to.left=(d.outerWidth-r.to.outerWidth)*v.x),r.css(r.from);if(h==="content"||h==="both")a=a.concat(["marginTop","marginBottom"]).concat(u),f=f.concat(["marginLeft","marginRight"]),o=i.concat(a).concat(f),r.find("*[width]").each(function(){var n=e(this),r={height:n.height(),width:n.width()};c&&e.effects.save(n,o),n.from={height:r.height*m.from.y,width:r.width*m.from.x},n.to={height:r.height*m.to.y,width:r.width*m.to.x},m.from.y!==m.to.y&&(n.from=e.effects.setTransition(n,a,m.from.y,n.from),n.to=e.effects.setTransition(n,a,m.to.y,n.to)),m.from.x!==m.to.x&&(n.from=e.effects.setTransition(n,f,m.from.x,n.from),n.to=e.effects.setTransition(n,f,m.to.x,n.to)),n.css(n.from),n.animate(n.to,t.duration,t.easing,function(){c&&e.effects.restore(n,o)})});r.animate(r.to,{queue:!1,duration:t.duration,easing:t.easing,complete:function(){r.to.opacity===0&&r.css("opacity",r.from.opacity),l==="hide"&&r.hide(),e.effects.restore(r,c?i:s),c||(g==="static"?r.css({position:"relative",top:r.to.top,left:r.to.left}):e.each(["top","left"],function(e,t){r.css(t,function(t,n){var i=parseInt(n,10),s=e?r.to.left:r.to.top;return n==="auto"?s+"px":i+s+"px"})})),e.effects.removeWrapper(r),n()}})}})(jQuery);(function(e,t){e.effects.effect.shake=function(t,n){var r=e(this),i=["position","top","bottom","left","right","height","width"],s=e.effects.setMode(r,t.mode||"effect"),o=t.direction||"left",u=t.distance||20,a=t.times||3,f=a*2+1,l=Math.round(t.duration/f),c=o==="up"||o==="down"?"top":"left",h=o==="up"||o==="left",p={},d={},v={},m,g=r.queue(),y=g.length;e.effects.save(r,i),r.show(),e.effects.createWrapper(r),p[c]=(h?"-=":"+=")+u,d[c]=(h?"+=":"-=")+u*2,v[c]=(h?"-=":"+=")+u*2,r.animate(p,l,t.easing);for(m=1;m<a;m++)r.animate(d,l,t.easing).animate(v,l,t.easing);r.animate(d,l,t.easing).animate(p,l/2,t.easing).queue(function(){s==="hide"&&r.hide(),e.effects.restore(r,i),e.effects.removeWrapper(r),n()}),y>1&&g.splice.apply(g,[1,0].concat(g.splice(y,f+1))),r.dequeue()}})(jQuery);(function(e,t){e.effects.effect.slide=function(t,n){var r=e(this),i=["position","top","bottom","left","right","width","height"],s=e.effects.setMode(r,t.mode||"show"),o=s==="show",u=t.direction||"left",a=u==="up"||u==="down"?"top":"left",f=u==="up"||u==="left",l,c={};e.effects.save(r,i),r.show(),l=t.distance||r[a==="top"?"outerHeight":"outerWidth"](!0),e.effects.createWrapper(r).css({overflow:"hidden"}),o&&r.css(a,f?isNaN(l)?"-"+l:-l:l),c[a]=(o?f?"+=":"-=":f?"-=":"+=")+l,r.animate(c,{queue:!1,duration:t.duration,easing:t.easing,complete:function(){s==="hide"&&r.hide(),e.effects.restore(r,i),e.effects.removeWrapper(r),n()}})}})(jQuery);(function(e,t){e.effects.effect.transfer=function(t,n){var r=e(this),i=e(t.to),s=i.css("position")==="fixed",o=e("body"),u=s?o.scrollTop():0,a=s?o.scrollLeft():0,f=i.offset(),l={top:f.top-u,left:f.left-a,height:i.innerHeight(),width:i.innerWidth()},c=r.offset(),h=e('<div class="ui-effects-transfer"></div>').appendTo(document.body).addClass(t.className).css({top:c.top-u,left:c.left-a,height:r.innerHeight(),width:r.innerWidth(),position:s?"fixed":"absolute"}).animate(l,t.duration,t.easing,function(){h.remove(),n()})}})(jQuery); 
/* jshint browser: true */
/* global app, console */

(function(){
"use strict";

app.maps = {};
var MapLoader = app.maps.MapLoader = function(){
    this.maps = {};

    this.npclist = [];
    this.npcListLoaded = false;

    this.totalmaps = 0;
    this.loaded_maps = 0;

    this.map_sources = [];

    this.map_sources.push("test");
    this.map_sources.push("test_level");
    this.totalmaps = this.map_sources.length;
	this.load_maps();

    this.load_npclist_disk("./maps/meta/Protolith.npc");
};

MapLoader.prototype.load_npclist_disk = function(src){
    var request = new XMLHttpRequest();
    request.open("GET", src, true);

    request.onreadystatechange = function() {
        if( request.readyState === 4 ){
            this.handle_loaded_npclist( request.responseText );
        }
    }.bind(this);
    request.send();
};

MapLoader.prototype.load_maps = function(){
    for( var i in this.map_sources ){
        this.load_map_disk(
            "./maps/json/"+this.map_sources[i]+".json", this.map_sources[i]
        );
    }
};

//load the terrain data asynchronously from the disk
MapLoader.prototype.load_map_disk = function(src, name){
    var captain = this;
    console.log("Loading a map from disk", src);

    var request = new XMLHttpRequest();
    request.open("GET", src, true);

    this.maps[name] = "none";
    request.onreadystatechange = function() {
        if (request.readyState === 4) {
            captain.loaded_maps++;
            try{
                captain.create_map( JSON.parse(request.responseText), name);
            }catch( e ){
                console.error(src, "is not a valid Protolith map.", request.responseText);
            }
        }
    };

    request.send();
};

MapLoader.prototype.create_map = function(map, name){
    var mapW = map.width;
    var mapH = map.height;

    function _get_layer(n){
        for( var i in map.layers ){
            if( map.layers[i].name.toLowerCase() === n.toLowerCase() ){
                return map.layers[i].objects || map.layers[i].data;
            }
        }
        return null;
    }

    this.maps[name] = {
        //These are satic variables that are read only and referenced frequently.
        name: name,
        terrain: this.load_terrain( _get_layer( "TERRAIN" ), mapW, mapH ),
        npcs: _get_layer( "NPC" ),
        nodes: _get_layer( "NODE" ),
        items: _get_layer( "ITEM" ),
        width: map.width,
        height: map.height,
        src:name,
        json:map,
        //These are dynamic variables that modify the state of the map and
        //they have all been initialized to their default values here.
        mode: "town",
        allegiance:"ally",
        map_explored_table: this.get_empty_MET(map),
        nodes_executed: [],
        dead_npcs: [],
    };
};

//Set the dynamic variables for all maps to their default values
MapLoader.prototype.reset = function(){
    for( var i in this.maps ){
        var map = this.maps[i];
        map.map_explored_table = this.get_empty_MET(this.maps[i]);
        map.nodes_executed = [];
        map.dead_npcs = [];
        map.mode = "town";
        map.allegiance = "ally";
    }
};

MapLoader.prototype.get_npc_by_name = function(name){
    for( var i in this.npclist ){
        if( this.npclist[i].name == name ){
            return this.npclist[i];
        }
    }

    return "none";
};

MapLoader.prototype.get_map_by_name = function(name){
    try{
        var ret = this.maps[name];
        if( ret){
            return ret;
        } else {  
            throw new Error("");
        }
    } catch( e ){
        console.error( "Error map '"+name+"' has not been loaded!", e.stack );
        return "none";
    }
};

MapLoader.prototype.load_terrain = function(arr, w, h){
    var terrain = [];
    for( var i = 0; i < w; i++ ){
        var tmp = [];
        for( var j = 0; j < h; j++ ){
            tmp.push( arr[j*w+i] );
        }
        terrain.push(tmp);
    }

    return terrain;
};


MapLoader.prototype.handle_loaded_npclist = function(json_str){
    try{
        this.npclist = JSON.parse( json_str );
    } catch( e ) {
        console.error( "Not a valid npc file." );     
    }
    this.npcListLoaded = true;
};

MapLoader.prototype.get_empty_MET = function(map){
    var map_explored_table = [];
    for( var i = 0; i < map.height; i++ ){
        map_explored_table.push([]);
        for( var j = 0; j < map.width; j++){
            map_explored_table[i].push(0);
        }
    }
    return map_explored_table;
};

MapLoader.prototype.get_METS = function(){
    var ret = {};

    for( var i in this.maps ){
        ret[this.maps[i].name] = this.maps[i].map_explored_table;
    }

    return ret;
};

MapLoader.prototype.get_NES = function(){
    var ret = {};

    for( var i in this.maps ){
        ret[this.maps[i].name] = this.maps[i].nodes_executed;
    }

    return ret;
};

MapLoader.prototype.get_map_params = function(name){
    for( var i in this.maps ){
        if( i === name ){
            return this.maps[i];
        }
    }

    console.error("Error map '"+name+"' has not been loaded!");
    return "none";
};

//var tmp = false;
MapLoader.prototype.is_ready = function(){
    var ret = {is_ready: false, max:this.totalmaps+1, curr:0};
    if( this.npcListLoaded === false ){
        return ret;
    }

    ret.curr++;

    for( var i in this.maps ){
        if( this.maps[i] === "none" || this.maps[i].nodes === "none" ){
            return ret;
        }
        ret.curr++;
    }

    ret.is_ready = true;// && tmp;
    return ret;
};

})();
 
// ========================================================================
//  XML.ObjTree -- XML source code from/to JavaScript object like E4X
// ========================================================================

if ( typeof(XML) == 'undefined' ) XML = function() {};

//  constructor

XML.ObjTree = function () {
    return this;
};

//  class variables

XML.ObjTree.VERSION = "0.23";

//  object prototype

XML.ObjTree.prototype.xmlDecl = '<?xml version="1.0" encoding="UTF-8" ?>\n';
XML.ObjTree.prototype.attr_prefix = '-';

//  method: parseXML( xmlsource )

XML.ObjTree.prototype.parseXML = function ( xml ) {
    var root;
    if ( window.DOMParser ) {
        var xmldom = new DOMParser();
//      xmldom.async = false;           // DOMParser is always sync-mode
        var dom = xmldom.parseFromString( xml, "application/xml" );
        if ( ! dom ) return;
        root = dom.documentElement;
    } else if ( window.ActiveXObject ) {
        xmldom = new ActiveXObject('Microsoft.XMLDOM');
        xmldom.async = false;
        xmldom.loadXML( xml );
        root = xmldom.documentElement;
    }
    if ( ! root ) return;
    return this.parseDOM( root );
};

//  method: parseHTTP( url, options, callback )

XML.ObjTree.prototype.parseHTTP = function ( url, options, callback ) {
    var myopt = {};
    for( var key in options ) {
        myopt[key] = options[key];                  // copy object
    }
    if ( ! myopt.method ) {
        if ( typeof(myopt.postBody) == "undefined" &&
             typeof(myopt.postbody) == "undefined" &&
             typeof(myopt.parameters) == "undefined" ) {
            myopt.method = "get";
        } else {
            myopt.method = "post";
        }
    }
    if ( callback ) {
        myopt.asynchronous = true;                  // async-mode
        var __this = this;
        var __func = callback;
        var __save = myopt.onComplete;
        myopt.onComplete = function ( trans ) {
            var tree;
            if ( trans && trans.responseXML && trans.responseXML.documentElement ) {
                tree = __this.parseDOM( trans.responseXML.documentElement );
            }
            __func( tree, trans );
            if ( __save ) __save( trans );
        };
    } else {
        myopt.asynchronous = false;                 // sync-mode
    }
    var trans;
    if ( typeof(HTTP) != "undefined" && HTTP.Request ) {
        myopt.uri = url;
        var req = new HTTP.Request( myopt );        // JSAN
        if ( req ) trans = req.transport;
    } else if ( typeof(Ajax) != "undefined" && Ajax.Request ) {
        var req = new Ajax.Request( url, myopt );   // ptorotype.js
        if ( req ) trans = req.transport;
    }
    if ( callback ) return trans;
    if ( trans && trans.responseXML && trans.responseXML.documentElement ) {
        return this.parseDOM( trans.responseXML.documentElement );
    }
}

//  method: parseDOM( documentroot )

XML.ObjTree.prototype.parseDOM = function ( root ) {
    if ( ! root ) return;

    this.__force_array = {};
    if ( this.force_array ) {
        for( var i=0; i<this.force_array.length; i++ ) {
            this.__force_array[this.force_array[i]] = 1;
        }
    }

    var json = this.parseElement( root );   // parse root node
    if ( this.__force_array[root.nodeName] ) {
        json = [ json ];
    }
    if ( root.nodeType != 11 ) {            // DOCUMENT_FRAGMENT_NODE
        var tmp = {};
        tmp[root.nodeName] = json;          // root nodeName
        json = tmp;
    }
    return json;
};

//  method: parseElement( element )

XML.ObjTree.prototype.parseElement = function ( elem ) {
    //  COMMENT_NODE
    if ( elem.nodeType == 7 ) {
        return;
    }

    //  TEXT_NODE CDATA_SECTION_NODE
    if ( elem.nodeType == 3 || elem.nodeType == 4 ) {
        var bool = elem.nodeValue.match( /[^\x00-\x20]/ );
        if ( bool == null ) return;     // ignore white spaces
        return elem.nodeValue;
    }

    var retval;
    var cnt = {};

    //  parse attributes
    if ( elem.attributes && elem.attributes.length ) {
        retval = {};
        for ( var i=0; i<elem.attributes.length; i++ ) {
            var key = elem.attributes[i].nodeName;
            if ( typeof(key) != "string" ) continue;
            var val = elem.attributes[i].nodeValue;
            if ( ! val ) continue;
            key = this.attr_prefix + key;
            if ( typeof(cnt[key]) == "undefined" ) cnt[key] = 0;
            cnt[key] ++;
            this.addNode( retval, key, cnt[key], val );
        }
    }

    //  parse child nodes (recursive)
    if ( elem.childNodes && elem.childNodes.length ) {
        var textonly = true;
        if ( retval ) textonly = false;        // some attributes exists
        for ( var i=0; i<elem.childNodes.length && textonly; i++ ) {
            var ntype = elem.childNodes[i].nodeType;
            if ( ntype == 3 || ntype == 4 ) continue;
            textonly = false;
        }
        if ( textonly ) {
            if ( ! retval ) retval = "";
            for ( var i=0; i<elem.childNodes.length; i++ ) {
                retval += elem.childNodes[i].nodeValue;
            }
        } else {
            if ( ! retval ) retval = {};
            for ( var i=0; i<elem.childNodes.length; i++ ) {
                var key = elem.childNodes[i].nodeName;
                if ( typeof(key) != "string" ) continue;
                var val = this.parseElement( elem.childNodes[i] );
                if ( ! val ) continue;
                if ( typeof(cnt[key]) == "undefined" ) cnt[key] = 0;
                cnt[key] ++;
                this.addNode( retval, key, cnt[key], val );
            }
        }
    }
    return retval;
};

//  method: addNode( hash, key, count, value )

XML.ObjTree.prototype.addNode = function ( hash, key, cnts, val ) {
    if ( this.__force_array[key] ) {
        if ( cnts == 1 ) hash[key] = [];
        hash[key][hash[key].length] = val;      // push
    } else if ( cnts == 1 ) {                   // 1st sibling
        hash[key] = val;
    } else if ( cnts == 2 ) {                   // 2nd sibling
        hash[key] = [ hash[key], val ];
    } else {                                    // 3rd sibling and more
        hash[key][hash[key].length] = val;
    }
};

//  method: writeXML( tree )

XML.ObjTree.prototype.writeXML = function ( tree ) {
    var xml = this.hash_to_xml( null, tree );
    return this.xmlDecl + xml;
};

//  method: hash_to_xml( tagName, tree )

XML.ObjTree.prototype.hash_to_xml = function ( name, tree ) {
    var elem = [];
    var attr = [];
    for( var key in tree ) {
        if ( ! tree.hasOwnProperty(key) ) continue;
        var val = tree[key];
        if ( key.charAt(0) != this.attr_prefix ) {
            if ( typeof(val) == "undefined" || val == null ) {
                elem[elem.length] = "<"+key+" />";
            } else if ( typeof(val) == "object" && val.constructor == Array ) {
                elem[elem.length] = this.array_to_xml( key, val );
            } else if ( typeof(val) == "object" ) {
                elem[elem.length] = this.hash_to_xml( key, val );
            } else {
                elem[elem.length] = this.scalar_to_xml( key, val );
            }
        } else {
            attr[attr.length] = " "+(key.substring(1))+'="'+(this.xml_escape( val ))+'"';
        }
    }
    var jattr = attr.join("");
    var jelem = elem.join("");
    if ( typeof(name) == "undefined" || name == null ) {
        // no tag
    } else if ( elem.length > 0 ) {
        if ( jelem.match( /\n/ )) {
            jelem = "<"+name+jattr+">\n"+jelem+"</"+name+">\n";
        } else {
            jelem = "<"+name+jattr+">"  +jelem+"</"+name+">\n";
        }
    } else {
        jelem = "<"+name+jattr+" />\n";
    }
    return jelem;
};

//  method: array_to_xml( tagName, array )

XML.ObjTree.prototype.array_to_xml = function ( name, array ) {
    var out = [];
    for( var i=0; i<array.length; i++ ) {
        var val = array[i];
        if ( typeof(val) == "undefined" || val == null ) {
            out[out.length] = "<"+name+" />";
        } else if ( typeof(val) == "object" && val.constructor == Array ) {
            out[out.length] = this.array_to_xml( name, val );
        } else if ( typeof(val) == "object" ) {
            out[out.length] = this.hash_to_xml( name, val );
        } else {
            out[out.length] = this.scalar_to_xml( name, val );
        }
    }
    return out.join("");
};

//  method: scalar_to_xml( tagName, text )

XML.ObjTree.prototype.scalar_to_xml = function ( name, text ) {
    if ( name == "#text" ) {
        return this.xml_escape(text);
    } else {
        return "<"+name+">"+this.xml_escape(text)+"</"+name+">\n";
    }
};

//  method: xml_escape( text )

XML.ObjTree.prototype.xml_escape = function ( text ) {
    return (text + '').replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;').replace(/"/g,'&quot;');
};

/*
// ========================================================================

=head1 NAME

XML.ObjTree -- XML source code from/to JavaScript object like E4X

=head1 SYNOPSIS

    var xotree = new XML.ObjTree();
    var tree1 = {
        root: {
            node: "Hello, World!"
        }
    };
    var xml1 = xotree.writeXML( tree1 );        // object tree to XML source
    alert( "xml1: "+xml1 );

    var xml2 = '<?xml version="1.0"?><response><error>0</error></response>';
    var tree2 = xotree.parseXML( xml2 );        // XML source to object tree
    alert( "error: "+tree2.response.error );

=head1 DESCRIPTION

XML.ObjTree class is a parser/generater between XML source code
and JavaScript object like E4X, ECMAScript for XML.
This is a JavaScript version of the XML::TreePP module for Perl.
This also works as a wrapper for XMLHTTPRequest and successor to JKL.ParseXML class
when this is used with prototype.js or JSAN's HTTP.Request class.

=head2 JavaScript object tree format

A sample XML source:

    <?xml version="1.0" encoding="UTF-8"?>
    <family name="Kawasaki">
        <father>Yasuhisa</father>
        <mother>Chizuko</mother>
        <children>
            <girl>Shiori</girl>
            <boy>Yusuke</boy>
            <boy>Kairi</boy>
        </children>
    </family>

Its JavaScript object tree like JSON/E4X:

    {
        'family': {
            '-name':    'Kawasaki',
            'father':   'Yasuhisa',
            'mother':   'Chizuko',
            'children': {
                'girl': 'Shiori'
                'boy': [
                    'Yusuke',
                    'Kairi'
                ]
            }
        }
    };

Each elements are parsed into objects:

    tree.family.father;             # the father's given name.

Prefix '-' is inserted before every attributes' name.

    tree.family["-name"];           # this family's family name

A array is used because this family has two boys.

    tree.family.children.boy[0];    # first boy's name
    tree.family.children.boy[1];    # second boy's name
    tree.family.children.girl;      # (girl has no other sisiters)

=head1 METHODS

=head2 xotree = new XML.ObjTree()

This constructor method returns a new XML.ObjTree object.

=head2 xotree.force_array = [ "rdf:li", "item", "-xmlns" ];

This property allows you to specify a list of element names
which should always be forced into an array representation.
The default value is null, it means that context of the elements
will determine to make array or to keep it scalar.

=head2 xotree.attr_prefix = '@';

This property allows you to specify a prefix character which is
inserted before each attribute names.
Instead of default prefix '-', E4X-style prefix '@' is also available.
The default character is '-'.
Or set '@' to access attribute values like E4X, ECMAScript for XML.
The length of attr_prefix must be just one character and not be empty.

=head2 tree = xotree.parseXML( xmlsrc );

This method loads an XML document using the supplied string
and returns its JavaScript object converted.

=head2 tree = xotree.parseDOM( domnode );

This method parses a DOM tree (ex. responseXML.documentElement)
and returns its JavaScript object converted.

=head2 tree = xotree.parseHTTP( url, options );

This method loads a XML file from remote web server
and returns its JavaScript object converted.
XMLHTTPRequest's synchronous mode is always used.
This mode blocks the process until the response is completed.

First argument is a XML file's URL
which must exist in the same domain as parent HTML file's.
Cross-domain loading is not available for security reasons.

Second argument is options' object which can contains some parameters:
method, postBody, parameters, onLoading, etc.

This method requires JSAN's L<HTTP.Request> class or prototype.js's Ajax.Request class.

=head2 xotree.parseHTTP( url, options, callback );

If a callback function is set as third argument,
XMLHTTPRequest's asynchronous mode is used.

This mode calls a callback function with XML file's JavaScript object converted
after the response is completed.

=head2 xmlsrc = xotree.writeXML( tree );

This method parses a JavaScript object tree
and returns its XML source generated.

=head1 EXAMPLES

=head2 Text node and attributes

If a element has both of a text node and attributes
or both of a text node and other child nodes,
text node's value is moved to a special node named "#text".

    var xotree = new XML.ObjTree();
    var xmlsrc = '<span class="author">Kawasaki Yusuke</span>';
    var tree = xotree.parseXML( xmlsrc );
    var class = tree.span["-class"];        # attribute
    var name  = tree.span["#text"];         # text node

=head2 parseHTTP() method with HTTP-GET and sync-mode

HTTP/Request.js or prototype.js must be loaded before calling this method.

    var xotree = new XML.ObjTree();
    var url = "http://example.com/index.html";
    var tree = xotree.parseHTTP( url );
    xotree.attr_prefix = '@';                   // E4X-style
    alert( tree.html["@lang"] );

This code shows C<lang=""> attribute from a X-HTML source code.

=head2 parseHTTP() method with HTTP-POST and async-mode

Third argument is a callback function which is called on onComplete.

    var xotree = new XML.ObjTree();
    var url = "http://example.com/mt-tb.cgi";
    var opts = {
        postBody:   "title=...&excerpt=...&url=...&blog_name=..."
    };
    var func = function ( tree ) {
        alert( tree.response.error );
    };
    xotree.parseHTTP( url, opts, func );

This code send a trackback ping and shows its response code.

=head2 Simple RSS reader

This is a RSS reader which loads RDF file and displays all items.

    var xotree = new XML.ObjTree();
    xotree.force_array = [ "rdf:li", "item" ];
    var url = "http://example.com/news-rdf.xml";
    var func = function( tree ) {
        var elem = document.getElementById("rss_here");
        for( var i=0; i<tree["rdf:RDF"].item.length; i++ ) {
            var divtag = document.createElement( "div" );
            var atag = document.createElement( "a" );
            atag.href = tree["rdf:RDF"].item[i].link;
            var title = tree["rdf:RDF"].item[i].title;
            var tnode = document.createTextNode( title );
            atag.appendChild( tnode );
            divtag.appendChild( atag );
            elem.appendChild( divtag );
        }
    };
    xotree.parseHTTP( url, {}, func );

=head2  XML-RPC using writeXML, prototype.js and parseDOM

If you wish to use prototype.js's Ajax.Request class by yourself:

    var xotree = new XML.ObjTree();
    var reqtree = {
        methodCall: {
            methodName: "weblogUpdates.ping",
            params: {
                param: [
                    { value: "Kawa.net xp top page" },  // 1st param
                    { value: "http://www.kawa.net/" }   // 2nd param
                ]
            }
        }
    };
    var reqxml = xotree.writeXML( reqtree );       // JS-Object to XML code
    var url = "http://example.com/xmlrpc";
    var func = function( req ) {
        var resdom = req.responseXML.documentElement;
        xotree.force_array = [ "member" ];
        var restree = xotree.parseDOM( resdom );   // XML-DOM to JS-Object
        alert( restree.methodResponse.params.param.value.struct.member[0].value.string );
    };
    var opt = {
        method:         "post",
        postBody:       reqxml,
        asynchronous:   true,
        onComplete:     func
    };
    new Ajax.Request( url, opt );

=head1 AUTHOR

Yusuke Kawasaki http://www.kawa.net/

=head1 COPYRIGHT AND LICENSE

Copyright (c) 2005-2006 Yusuke Kawasaki. All rights reserved.
This program is free software; you can redistribute it and/or
modify it under the Artistic license. Or whatever license I choose,
which I will do instead of keeping this documentation like it is.

=cut
// ========================================================================
*/
 

/* jshint browser: true */
/* global app, console */

(function(){
"use strict";

var SpecialNodeParser = app.maps.SpecialNodeParser = function(){};

SpecialNodeParser.prototype.parse_node = function(n, state, world){
	console.log("PARSE NODE", n);
    switch(n.type){                                                                                                                 
        default: 
        	console.error("ERROR, Returned a default node", n.name);
            return new SpecialNode( world.display, world, state, { 	name:"null",
																	xpos:"none",
																	ypos:"none",
                                                                    type:"default", 
                                                                    next:"none" }  );
    }
};

//Special nodes dictate changes to the world state that the player triggers
var SpecialNode = app.maps.SpecialNode = function(display, world, state, params){
	// this.name = params.name;
	// this.pers = params.pers;
	// this.xpos = params.xpos;
	// this.ypos = params.ypos;
	// this.next = params.next;

	for( var i in params ){
		this[i] = params[i];
	}

	this.x = parseInt(this.xpos);
	this.y = parseInt(this.ypos);

	this.hidden = true;
	this.isGlobal = false;

	this.world = world;
	this.display = display;
	this.state = state;

	this.isExecuted = false;
	this.isDisabled = false;

	this.type = "SpecialNode";

	//Display message
	//Display dialog
	//Play Sound
	//Play Animation
	//Change Terrain
	//Add/Remove Npc
	//Move player to position
	//Change Map
	//Stuff Done?
	//Player has special item?
};

//Determine if this node instance is a type of node
//which should not be re-executed each time you reenter the map.
SpecialNode.prototype.is_nonloadable = function(){
	// var nls = [
	// 	SpSingleNotification,
	// 	SpDoubleNotification,
	// 	SpSecretPassage,
	// 	SpTeleportTo,
	// 	SpAddLog
	// ];

	// var ret = false;

	// for( var i in nls ){
	// 	ret = ret || this instanceof nls[i];
	// }

	// return ret;
	return true;
};

SpecialNode.prototype.set_flags = function(){

};

SpecialNode.prototype.disable = function(){
	this.isDisabled = true;
};

SpecialNode.prototype.perform_action_selective = function(selective){

	if( this.isDisabled ){
		console.log("WARNING: Tried to execute a disabled node", this);
		return;
	}

	if( selective === true ){
    	if( !this.is_nonloadable() ){
    		this.perform_action(selective);
    	} else {
			this.isExecuted = true;
			if( (this.pers == "false") ){
				this.isDisabled = true;
			} 
    	}
	} else {
		this.perform_action(selective);
	}
};

SpecialNode.prototype.perform_action = function(selective){
	this.isExecuted = true;
	if( (this.pers === false) ){
		this.isDisabled = true;
	} 

	if( selective !== true ){ 
		var map = this.state.game.map_loader.get_map_by_name(this.world.name);
		if( !app.inArr(this.name, map.nodes_executed) ){
			map.nodes_executed.push(this.name);
			console.log("executed node pushed:", map.nodes_executed);
		}
	}

	this.call_next_node(this.next, selective);

};

SpecialNode.prototype.call_next_node = function(node_name, selective){
	if( node_name != "none" ){
		var lst = node_name.split("_");
		var actual_node_name = lst[0];//+"#"+lst[1];
		var node = this.world.get_node_by_name(actual_node_name);

		if( node == "none" ){
			console.log("ERROR: tried to call node '"+
				actual_node_name+"' that did not exist from node '"+this.name+"'.");
			return;
		}

		node.perform_action_selective(selective);

	}
};

})(); 
/*
xml2json v 1.1
copyright 2005-2007 Thomas Frank

This program is free software under the terms of the 
GNU General Public License version 2 as published by the Free 
Software Foundation. It is distributed without any warranty.
*/

var xml2json = function(){
	return {
	totalnodes:0,
	currnodes:0,
	parser:function(xmlcode,ignoretags,debug){
		if(!ignoretags){ignoretags=""};
		xmlcode=xmlcode.replace(/\s*\/>/g,'/>');
		xmlcode=xmlcode.replace(/<\?[^>]*>/g,"").replace(/<\![^>]*>/g,"");
		if (!ignoretags.sort){ignoretags=ignoretags.split(",")};
		var x=this.no_fast_endings(xmlcode);
		x=this.attris_to_tags(x);
		x=escape(x);
		x=x.split("%3C").join("<").split("%3E").join(">").split("%3D").join("=").split("%22").join("\"");
		for (var i=0;i<ignoretags.length;i++){
			x=x.replace(new RegExp("<"+ignoretags[i]+">","g"),"*$**"+ignoretags[i]+"**$*");
			x=x.replace(new RegExp("</"+ignoretags[i]+">","g"),"*$***"+ignoretags[i]+"**$*")
		};
		x='<JSONTAGWRAPPER>'+x+'</JSONTAGWRAPPER>';
		this.xmlobject={};
		var y=this.xml_to_object(x).jsontagwrapper;
		if(debug){y=this.show_json_structure(y,debug)};
		return y;
	},
	xml_to_object:function(xmlcode){
		var x=xmlcode.replace(/<\//g,"§");
		x=x.split("<");
		var y=[];
		var level=0;
		var opentags=[];
		for (var i=1;i<x.length;i++){
			var tagname=x[i].split(">")[0];
			opentags.push(tagname);
			level++
			y.push(level+"<"+x[i].split("§")[0]);
			while(x[i].indexOf("§"+opentags[opentags.length-1]+">")>=0){level--;opentags.pop()}
		};
		var oldniva=-1;
		var objname="this.xmlobject";
		for (var i=0;i<y.length;i++){
			var preeval="";
			var niva=y[i].split("<")[0];
			var tagnamn=y[i].split("<")[1].split(">")[0];
			tagnamn=tagnamn.toLowerCase();
			var rest=y[i].split(">")[1];
			if(niva<=oldniva){
				var tabort=oldniva-niva+1;
				for (var j=0;j<tabort;j++){objname=objname.substring(0,objname.lastIndexOf("."))}
			};
			objname+="."+tagnamn;
			var pobject=objname.substring(0,objname.lastIndexOf("."));
			if (eval("typeof "+pobject) != "object"){preeval+=pobject+"={value:"+pobject+"};\n"};
			var objlast=objname.substring(objname.lastIndexOf(".")+1);
			var already=false;
			for (k in eval(pobject)){if(k==objlast){already=true}};
			var onlywhites=true;
			for(var s=0;s<rest.length;s+=3){
				if(rest.charAt(s)!="%"){onlywhites=false}
			};
			if (rest!="" && !onlywhites){
				if(rest/1!=rest){
					rest="'"+rest.replace(/\'/g,"\\'")+"'";
					rest=rest.replace(/\*\$\*\*\*/g,"</");
					rest=rest.replace(/\*\$\*\*/g,"<");
					rest=rest.replace(/\*\*\$\*/g,">")
				}
			} 
			else {rest="{}"};
			if(rest.charAt(0)=="'"){rest='unescape('+rest+')'};
			if (already && !eval(objname+".sort")){preeval+=objname+"=["+objname+"];\n"};
			var before="=";after="";
			if (already){before=".push(";after=")"};
			var toeval=preeval+objname+before+rest+after;
			//console.log("TOEVAL", toeval);
			eval(toeval);
			if(eval(objname+".sort")){objname+="["+eval(objname+".length-1")+"]"};
			oldniva=niva;
		};
		return this.xmlobject;
	},
	show_json_structure:function(obj,debug,l){
		var x='';
		if (obj.sort){x+="[\n"} else {x+="{\n"};
		for (var i in obj){
			if (!obj.sort){x+=i+":"};
			if (typeof obj[i] == "object"){
				x+=this.show_json_structure(obj[i],false,1)
			}
			else {
				if(typeof obj[i]=="function"){
					var v=obj[i]+"";
					//v=v.replace(/\t/g,"");
					x+=v
				}
				else if(typeof obj[i]!="string"){x+=obj[i]+",\n"}
				else {x+="'"+obj[i].replace(/\'/g,"\\'").replace(/\n/g,"\\n").replace(/\t/g,"\\t").replace(/\r/g,"\\r")+"',\n"}
			}
		};
		if (obj.sort){x+="],\n"} else {x+="},\n"};
		if (!l){
			x=x.substring(0,x.lastIndexOf(","));
			x=x.replace(new RegExp(",\n}","g"),"\n}");
			x=x.replace(new RegExp(",\n]","g"),"\n]");
			var y=x.split("\n");x="";
			var lvl=0;
			for (var i=0;i<y.length;i++){
				if(y[i].indexOf("}")>=0 || y[i].indexOf("]")>=0){lvl--};
				tabs="";for(var j=0;j<lvl;j++){tabs+="\t"};
				x+=tabs+y[i]+"\n";
				if(y[i].indexOf("{")>=0 || y[i].indexOf("[")>=0){lvl++}
			};
			if(debug=="html"){
				x=x.replace(/</g,"&lt;").replace(/>/g,"&gt;");
				x=x.replace(/\n/g,"<BR>").replace(/\t/g,"&nbsp;&nbsp;&nbsp;&nbsp;")
			};
			if (debug=="compact"){x=x.replace(/\n/g,"").replace(/\t/g,"")}
		};
		return x
	},
	no_fast_endings:function(x){
		x=x.split("/>");
		for (var i=1;i<x.length;i++){
			var t=x[i-1].substring(x[i-1].lastIndexOf("<")+1).split(" ")[0];
			x[i]="></"+t+">"+x[i]
		}	;
		x=x.join("");
		return x
	},
	attris_to_tags: function(x){
		var d=' ="\''.split("");
		x=x.split(">");
		for (var i=0;i<x.length;i++){
			var temp=x[i].split("<");
			for (var r=0;r<4;r++){temp[0]=temp[0].replace(new RegExp(d[r],"g"),"_jsonconvtemp"+r+"_")};
			if(temp[1]){
				temp[1]=temp[1].replace(/'/g,'"');
				temp[1]=temp[1].split('"');
				for (var j=1;j<temp[1].length;j+=2){
					for (var r=0;r<4;r++){temp[1][j]=temp[1][j].replace(new RegExp(d[r],"g"),"_jsonconvtemp"+r+"_")}
				};
				temp[1]=temp[1].join('"')
			};
			x[i]=temp.join("<")
		};
		x=x.join(">");
		x=x.replace(/ ([^=]*)=([^ |>]*)/g,"><$1>$2</$1");
		x=x.replace(/>"/g,">").replace(/"</g,"<");
		for (var r=0;r<4;r++){x=x.replace(new RegExp("_jsonconvtemp"+r+"_","g"),d[r])}	;
		return x
	}
};
}


if(!Array.prototype.push){
	Array.prototype.push=function(x){
		this[this.length]=x;
		return true
	}
};

if (!Array.prototype.pop){
	Array.prototype.pop=function(){
  		var response = this[this.length-1];
  		this.length--;
  		return response
	}
};
 
/* jshint browser: true */
/* global app, console */

(function(){
"use strict";

app.save = {};
var SaveGame = app.save.SaveGame = function(){};

SaveGame.prototype.create_save = function(world, state){
	var masterobj = {};

	//GlobalNodes

	masterobj.party = [];
	for( var i in world.player.pcs ){
		var act = world.player.pcs[i];
		var obj = {
			xpos:act.x,
			ypos:act.y,
			name:act.name,
			stats:act.stats,
			inventory:[],
			sprite:act.sprite,
			equip_table:act.equipment,
			status_effects:[],
			isAlive:act.isAlive
		};
		for( var j in act.inventory ){
			obj.inventory.push(act.inventory[j]);
		}
		for( var j in act.status_effects ){
			var effect = act.status_effects[j];
			obj.status_effects.push({
				name:effect.name, 
				att_name:effect.att.name, 
				id:effect.id
			});
		}

		masterobj.party.push(obj);
	}

	//Alive npcs per map
	masterobj.maps_deadnpcs = {};
	for( var i in state.game.map_loader.maps ){
		var params = state.game.map_loader.maps[i];
		masterobj.maps_deadnpcs[params.name] = [];		
		for( var i in params.dead_npcs ){
			masterobj.maps_deadnpcs[params.name].push(params.dead_npcs[i]);
		}
	}	

	masterobj.gold = state.gold;
	masterobj.specialinventory = [];
	masterobj.currentmap = world.name;
	masterobj.visitedmaps = state.mapsVisited;
	masterobj.mode = "town";

	masterobj.maps_nodesexecuted = {};
	masterobj.maps_visibletiles = {};
	masterobj.maps_items = {};
	for( var i in state.game.map_loader.maps ){
		var params = state.game.map_loader.maps[i];
		masterobj.maps_nodesexecuted[params.name] = params.nodes_executed;
		masterobj.maps_visibletiles[params.name] = params.map_explored_table;	
		masterobj.maps_items[params.name] = params.items;	
	}

    masterobj.maps_visibletiles[world.name] = world.map_explored_table;
    masterobj.settings = {
    	playspeed:100
    };

	console.log("Save created", masterobj);

	return masterobj;
};

SaveGame.prototype.create_new_game = function(pc_info, game){
	var obj = {};

	obj.maps_nodesexecuted = game.map_loader.get_NES();
	obj.maps_visibletiles = game.map_loader.get_METS();
	obj.visitedmaps = [];
    obj.settings = {
    	playspeed:300
    };
	obj.currentmap = "test_level";
	obj.specialinventory = [];
	obj.gold = 0;
	obj.maps_deadnpcs = {};
	obj.mode = "town";
	for( var i in game.map_loader.maps ){
		var params = game.map_loader.maps[i];
		obj.maps_deadnpcs[params.name] = [];		
	}	
	obj.party = [{	
		equip_table:{
			"lhand":"none","rhand":"Sword of Power","legs":"Cloth Pants","head":"none",
			"body":"Cloth Shirt","hands":"none","feet":"Leather Boots",
			"arms":"none","ammo":"5#Wooden Arrow"
		}, 
		inventory: 	[ 
			"Sword of Power", 
			"Bronze Knife", 
			"Health Potion (weak)", 
			"Cloth Shirt", 
			"Leather Boots",
			"Cloth Pants",
			"Cloth Shirt",
			"Health Potion (weak)",
			"Health Potion (weak)"
		], 
		name: 		pc_info.pc0.name, 
		sprite: 	pc_info.pc0.sprite,
		stats: 		pc_info.pc0.stats,
		xpos: 		15,//11,
		ypos: 		12,//29,
		isAlive: 	true,
		lspells: 	pc_info.pc0.lspells,
		dspells: 	pc_info.pc0.dspells
	},{	
		equip_table:{
			"lhand":"none","rhand":"Sword of Power","legs":"Cloth Pants","head":"none",
			"body":"Cloth Shirt","hands":"none","feet":"Leather Boots",
			"arms":"none","ammo":"5#Wooden Arrow"
		}, 
		inventory: 	[
			"Sword of Power",
			"Bronze Knife", 
			"Health Potion (weak)", 
			"Leather Boots",
			"Cloth Pants",
			"Cloth Shirt",
			"Wooden Shield"
		], 
		name: 		pc_info.pc1.name, 
		sprite: 	pc_info.pc1.sprite,
		stats: 		pc_info.pc1.stats,
		xpos: 		13,
		ypos: 		2,
		isAlive: 	true,
		lspells: 	pc_info.pc1.lspells,
		dspells: 	pc_info.pc1.dspells
	},{	
		equip_table:{
			"lhand":"none","rhand":"none","legs":"Cloth Pants","head":"none",
			"body":"Cloth Shirt","hands":"none","feet":"Leather Boots",
			"arms":"none","ammo":"5#Wooden Arrow"
		}, 
		inventory: 	[
			"Sword of Power", 
			"Bronze Knife", 
			"Health Potion (weak)",
			"Leather Boots",
			"Cloth Pants",
			"Cloth Shirt"
		], 
		name: 		pc_info.pc2.name, 
		sprite: 	pc_info.pc2.sprite,
		stats: 		pc_info.pc2.stats,
		xpos: 		13,
		ypos: 		2,
		isAlive: 	true,
		lspells: 	pc_info.pc2.lspells,
		dspells: 	pc_info.pc2.dspells
	}];

	return obj;
};

SaveGame.prototype.write_save_disk = function(save, name){
	console.log("saving game", save, name);
	console.error("COULD NOT SAVE, NOT IMPLEMENTED");
};

SaveGame.prototype.handle_loaded_save = function(txt, game){
	txt = this.xor_str(txt);
	var master_obj = JSON.parse( txt ); 

	console.log("Loaded", master_obj);

	game.change_state("WorldState", master_obj);
};

SaveGame.prototype.load_new_game = function(pc_info, game){
	game.map_loader.reset();
	game.change_state("WorldState", this.create_new_game(pc_info, game));
};

SaveGame.prototype.get_new_game_state = function(pc_info, game){
	game.map_loader.reset();
	return new app.game.WorldState( game, this.create_new_game(pc_info, game));
};

SaveGame.prototype.load_save_disk = function(src, game){
    var request = new XMLHttpRequest();

    request.open("GET", src, true);

    request.onreadystatechange = function() {
		if (request.readyState == 4) {
			this.handle_loaded_save(request.responseText, game);
		}
    }.bind(this);
    request.send(); 
};

SaveGame.prototype.xor_str = function(str){
    var result = str;
    // for( var i = 0; i < str.length; i++ ){
    //     result = result + String.fromCharCode( (str.charCodeAt(i)^16)^32 );
    // }
    return result;
};

})(); 
//socket.js by Benjamin Brown

var socket;

function createSocket(host){
	if(window.WebSocket)
		return new WebSocket(host);
	else if(window.MozWebSocket)
		return new MozWebSocket(host);
}

function start_socket(){
    var host = "ws://localhost:12345/";
    try{
        socket = createSocket(host);
        log('WebSocket - status '+socket.readyState, 'debug');
        socket.onopen    = function(msg){ 
            log("Welcome - status "+this.readyState, 'debug'); 
            cycle_ping();
        };
        socket.onmessage = function(msg){ 
            //log("Received ("+msg.data.length+" bytes): " + msg.data); 
            msg_handler(msg.data);
            //end_ping();
        };
        socket.onclose   = function(msg){ 
            log("Disconnected - status "+this.readyState, 'debug'); 
        };
    }
    catch(ex){ log(ex); } 
}

function send(msg){
    obj=JSON.stringify(msg);
    socket.send(obj);
}

function quit(){
    log("Goodbye!");
    socket.close();
    socket=null;
}

function msg_handler(msg){
    obj = jQuery.parseJSON( msg );

    key = obj["key"];
    switch(key){
        case "new_player":
            log("User: "+obj["login"]+" has logged in!", "debug");
            break;
        default: 
            end_ping();
    }
}

function login(){
	var obj = {new_user:userLogin, comp:company, url:top_url};
	send_to_server(obj);			
} 
/* jshint browser: true */
/* global app, buzz */

(function(){
"use strict";
	
app.sound = {};
var SoundCache = app.sound.SoundCache = function(game){

	this.game = game;

	this.sounds = {};

	this.totalsounds = 0;
	this.numloadedsounds = 0;

	//console.log("CAN PLAY WAV", buzz.isWAVSupported());
	//console.log("CAN PLAY OGG", buzz.isOGGSupported());

	this.init();
};

SoundCache.prototype.init = function(){

	// this.load_sound("allyspellhit", "wav");
	// this.load_sound("arrowhit", "wav");
	// this.load_sound("button", "wav");
	// this.load_sound("cast", "wav");
	// this.load_sound("castally", "wav");
	// this.load_sound("enemyspellhit", "wav");
	// this.load_sound("startcombat", "wav");
	// this.load_sound("exitcombat", "wav");
	// this.load_sound("explosion", "wav");
	// this.load_sound("footstep", "wav");
	// this.load_sound("getitem", "wav");
	// this.load_sound("notification", "wav");
	// this.load_sound("punch1", "wav");
	// this.load_sound("punch2", "wav");
	// this.load_sound("punch3", "wav");
	// this.load_sound("punch4", "wav");
	// this.load_sound("scratch0", "wav");
	// this.load_sound("dooropen", "wav");
	// this.load_sound("doorclose", "wav");
	// this.load_sound("miss", "wav");
	// this.load_sound("equip", "wav");
	// this.load_sound("humanfemaledeath", "wav");
	// this.load_sound("humanmaledeath", "wav");
	// this.load_sound("monsterdeath", "wav");
	// this.load_sound("bigmonsterdeath", "wav");
	// this.load_sound("blast", "wav");
	// this.load_sound("poison", "wav");
	// this.load_sound("gulp", "wav");

	// this.load_sound("ambient1", "ogg");
	// this.load_sound("protoliththeme", "ogg");

};

SoundCache.prototype.has_sound = function( name ){
	if( this.sounds[name] ){
		return true;
	}
	return false;
};

SoundCache.prototype.load_sound = function(name, ext){
	var captain = this;
	this.totalsounds++;
	this.sounds[name] = new buzz.sound("sound/sounds/"+name+"."+ext);
	this.sounds[name].bind("canplay", function() {
		captain.numloadedsounds++;
	});
};

SoundCache.prototype.play_sound = function(name){
	if( !this.has_sound( name ) ){
		return;
	}

	if( this.game.options.enableSounds ){
		this.sounds[name].setPercent(0);
		this.sounds[name].play();
	}
};

SoundCache.prototype.loop_sound = function(name){
	if( !this.has_sound( name ) ){
		return;
	}

	if( this.game.options.enableSounds && this.game.options.enableMusic ){
		this.sounds[name].loop().play().fadeIn();
	}
};

SoundCache.prototype.stop_loop = function(name){
	if( !this.has_sound( name ) ){
		return;
	}

	var captain = this;
	this.sounds[name].unloop().fadeOut(5000, function(){
		captain.sounds[name].stop();
	});
};

SoundCache.prototype.disable_music = function(){
	this.disableMusic = true;
};

SoundCache.prototype.enable_music = function(){
	this.disableMusic = false;
};

SoundCache.prototype.disable = function(){
	this.isEnabled = false;

	this.stop_all();
};

SoundCache.prototype.enable = function(){
	this.isEnabled = true;
};

SoundCache.prototype.stop_all = function(){
	for( var i in this.sounds ){
		this.sounds[i].stop();
	}
};

SoundCache.prototype.mute_all = function(){
	for( var i in this.sounds ){
		this.sounds[i].mute();
	}
};

SoundCache.prototype.unmute_all = function(){
	for( var i in this.sounds ){
		this.sounds[i].unmute();
	}
};

SoundCache.prototype.is_ready = function(){
	if( this.totalsounds === this.numloadedsounds && this.totalsounds !== 0 ){
		return {is_ready:true, max:this.totalsounds, curr:this.numloadedsounds};
	} else {
		return {is_ready:false, max:this.totalsounds, curr:this.numloadedsounds};
	}
};

})(); 
/* jshint browser: true */
/* global app */

(function(){
"use strict";

var CleanUIElem = app.ui.CleanUIElem;
var extend = app.extend;

var CleanMenuHeader = app.ui.CleanMenuHeader = function( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	this.x = this.to_x_ratio( 110 );
	this.y = this.to_y_ratio( 0 );
	this.w = this.to_x_ratio( 362 );
	this.h = this.to_y_ratio( 18 );

	this.color1 = this.VERYDARKCOLOR;
	this.color2 = this.NEUTRALCOLOR;

	this.label = new CleanMenuHeaderLabel( game, state, display );
	this.close = new CleanMenuHeaderCloseButton( game, state, display );
};
CleanMenuHeader.prototype = extend(CleanUIElem);

CleanMenuHeader.prototype.draw = function(){
	this.display.draw_horiz_gradient(
		this.x, this.y, this.w, this.h, this.color1, this.color2
	);
	this.label.draw();
	this.close.draw();
};

CleanMenuHeader.prototype.propogate_click = function(x, y){
	var closeclicked = this.contains( 
		this.close.tlx, this.close.tly, this.close.w, this.close.h, x, y
	);
	if( closeclicked ){
		this.close.onclick( x, y );
	}
};

function CleanMenuHeaderLabel( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	this.x = this.to_x_ratio( 147 );
	this.y = this.to_y_ratio( 9 );
	this.w = this.to_x_ratio( 127 );
	this.h = this.to_y_ratio( 18 );
	this.color = this.LIGHTTEXTCOLOR;
	this.font = this.FONT;
	this.defaulttextsize = 12;
}
CleanMenuHeaderLabel.prototype = extend(CleanUIElem);

CleanMenuHeaderLabel.prototype.draw = function(){
	var text = this.state.uistore.menustate;
	text = text[0].toUpperCase() + text.slice(1);
	this.display.draw_text_params( text, this.x, this.y, {
		color: this.color ,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "center"
	});
};

function CleanMenuHeaderCloseButton( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	this.sprite = "cleanclosebutton";
	this.x = this.to_x_ratio( 446 );
	this.y = this.to_y_ratio( 8 );
	this.w = this.to_x_ratio( 48 );
	this.h = this.to_y_ratio( 18 );
	this.tlx = this.x - this.w/2;
	this.tly = this.y - this.h/2;

	this.textx = this.to_x_ratio( 452 );
	this.texty = this.to_y_ratio( 8 );
	this.textcolor = this.LIGHTTEXTCOLOR;
	this.font = this.FONT;
	this.defaulttextsize = 12;

	this.label = new app.ui.CleanClassInfoLabel( game, state, display );
}
CleanMenuHeaderCloseButton.prototype = extend(CleanUIElem);

CleanMenuHeaderCloseButton.prototype.draw = function(){
	this.display.draw_sprite_scaled_centered(this.sprite, this.x, this.y, this.w, this.h);

	this.display.draw_text_params( "X", this.textx, this.texty, {
		color: this.textcolor ,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "center"
	});
};

CleanMenuHeaderCloseButton.prototype.onclick = function(){
	this.state.inter.hide_menu();
};

})(); 
/* jshint browser: true */
/* global app */

(function(){
"use strict";

var CleanUIElem = app.ui.CleanUIElem;
var extend = app.extend;

var CleanNotification = app.ui.CleanNotification = function( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	var xpos = 472/2;
	var ypos = 5;

	this.x = this.to_x_ratio( xpos );
	this.y = this.to_y_ratio( ypos );
	this.w = this.to_x_ratio( 300 ); //a default value
	this.h = this.to_y_ratio( 18 );
	this.color = this.SELECTEDCOLOR;

	this.textx = this.to_x_ratio( xpos );
	this.texty = this.to_y_ratio( ypos );

	this.textcolor = this.LIGHTTEXTCOLOR;
	this.font = this.FONT;
	this.defaulttextsize = 14;
}
CleanNotification.prototype = extend(CleanUIElem);

CleanNotification.prototype.draw = function(){
	if( this.state.uistore.notification.frames <= 0 ){
		return;
	}

	var tparams = {
		color: this.textcolor,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "left"
	};

	this.state.uistore.notification.frames--;
	var text = this.state.uistore.notification.message;
	this.display.set_context_params( this.display.context, tparams );
	var meas = this.display.context.measureText( text ).width;
	this.w = meas + 6;

	var x = this.x - this.w/2;

	this.display.draw_rect_sprite( x, this.y, this.w, this.h, this.color );
	this.display.draw_text_params( text, x + 3, this.texty, tparams);
};

})(); 
/* jshint browser: true */
/* global app */

(function(){
"use strict";

var CleanUIElem = app.ui.CleanUIElem;
var extend = app.extend;

var CleanSelector = app.ui.CleanSelector = function(game, state, display){
	CleanUIElem.call( this, game, state, display );

	this.spr = "box";
	this.w = this.to_x_ratio( 28 );
	this.h = this.to_y_ratio( 32 );

	this.minw = this.to_x_ratio( 110 );
	this.maxw = this.to_x_ratio( 350 );

	this.store = this.state.uistore.select;
	this.world = this.state.world;
};

CleanSelector.prototype = extend(CleanUIElem);

CleanSelector.prototype.draw = function(){
	if( this.store.visible && this.state.uistore.menustate === "none" ){

		var x = this.world.grid_to_pixw( 
			this.world.pix_to_gridw( this.state.uistore.mouse.x ) 
		);
		var y = this.world.grid_to_pixh( 
			this.world.pix_to_gridh( this.state.uistore.mouse.y ) 
		);

		if( x < this.minw || x > this.maxw ){
			return;
		}

		this.display.draw_sprite_scaled(this.spr, x, y, this.w, this.h );
	}
};

CleanSelector.prototype.propogate_click = function(){
	if( !this.store.visible ){
		return;
	}

	this.onclick();
};

CleanSelector.prototype.onclick = function(){
	var x = this.world.pix_to_gridw( this.state.uistore.mouse.x );
	var y = this.world.pix_to_gridh( this.state.uistore.mouse.y );
	var xpix = this.world.grid_to_pixw( x );

	if( xpix < this.minw || xpix > this.maxw ){
		this.store.visible = false;		
	} else {
		this.store.onselect(x, y);
		this.store.visible = false;
	}
};

})(); 
/* jshint browser: true */
/* global app */

(function(){
"use strict";

var CleanUIElem = app.ui.CleanUIElem;

var CleanUIElem = app.ui.CleanUIElem = function(game,state,display){
	this.game = game;
	this.state = state;
	this.display = display;

    this.NEUTRALCOLOR = CleanUIElem.prototype.NEUTRALCOLOR;
    this.VERYDARKCOLOR = CleanUIElem.prototype.VERYDARKCOLOR;
    this.DARKCOLOR = CleanUIElem.prototype.DARKCOLOR;
    this.SELECTEDCOLOR = CleanUIElem.prototype.SELECTEDCOLOR;
    this.LIGHTTEXTCOLOR = CleanUIElem.prototype.LIGHTTEXTCOLOR;
    this.LIGHTCOLOR = CleanUIElem.prototype.LIGHTCOLOR;

    this.FONT = "monospace";
    this.ERRORSPRITE = "port_exclaim";

    this.frame = 0;
    this.animframes = 10;
};

CleanUIElem.prototype.light = [
	[ "Heal", "1", "2", "3", "4", "5", "6" ],
	[ "7", "8", "9", "10", "11", "12", "13" ],
	[ "14", "15", "16", "17", "18", "19", "20" ],
	[ "21", "22", "23", "24", "25", "26", "27" ],
	[ "28", "29", "30", "31", "32", "33", "34" ],
	[ "35", "36", "37", "38", "39", "40", "41" ],
	[ "42", "43", "44", "45", "46", "47", "48" ],
];

CleanUIElem.prototype.dark = [
	[ "Gash", "1", "2", "3", "4", "5", "6" ],
	[ "7", "8", "9", "10", "11", "12", "13" ],
	[ "14", "15", "16", "17", "18", "19", "20" ],
	[ "21", "22", "23", "24", "25", "26", "27" ],
	[ "28", "29", "30", "31", "32", "33", "34" ],
	[ "35", "36", "37", "38", "39", "40", "41" ],
	[ "42", "43", "44", "45", "46", "47", "48" ],
];

CleanUIElem.prototype.NEUTRALCOLOR = "#C49655";
CleanUIElem.prototype.VERYDARKCOLOR = "#412E1D";
CleanUIElem.prototype.DARKCOLOR = "#7A532B";
CleanUIElem.prototype.SELECTEDCOLOR = "#7F0000";
CleanUIElem.prototype.LIGHTTEXTCOLOR = "white";
CleanUIElem.prototype.LIGHTCOLOR = "#EFCE99";
CleanUIElem.prototype.ALTERNATECOLOR = "#00137F";

CleanUIElem.prototype.stats = [
	"POW", "ACC", "FOR", "CON", "RES", "SPD", "EVA"
];
CleanUIElem.prototype.equips = [
	"Head", "Body", "RHand", "LHand", "Arms", "Legs", "Feet"
];

CleanUIElem.prototype.draw = function(){};
CleanUIElem.prototype.to_x_ratio = function( x ){
	return CleanUIElem.prototype.x_percent_to_pixel.call( this, x / 472 );
};
CleanUIElem.prototype.to_y_ratio = function( y ){
	return CleanUIElem.prototype.y_percent_to_pixel.call( this, y / 288 );
};
CleanUIElem.prototype.x_percent_to_pixel = function( xpercentage ){
	return Math.round( xpercentage * this.display.dimx );
};
CleanUIElem.prototype.y_percent_to_pixel = function( ypercentage ){
	return Math.round( ypercentage * this.display.dimy );
};
CleanUIElem.prototype.get_font_size = function( originalfontsize ){
	return Math.round( this.display.dimx * (originalfontsize/472) );
};
CleanUIElem.prototype.contains = function( rx, ry, rw, rh, x, y ){
	return x >= rx && x <= rx + rw && y >= ry && y <= ry + rh;
};
CleanUIElem.prototype.propogate_click = function(){};
CleanUIElem.prototype.propogate_unclick = function(){};

CleanUIElem.prototype.animate_in_pre = function(checkthis){
	if( checkthis.animating ){
		var alpha = app.normalize( this.frame, 0, this.animframes, 0, 1);
		this.display.context.globalAlpha = alpha;
	}
};

CleanUIElem.prototype.animate_out_pre = function(checkthis){
	if( checkthis.animating ){
		var alpha = app.normalize( this.frame, 0, this.animframes, 0, 1);
		this.display.context.globalAlpha = 1 - alpha;
	}
};
CleanUIElem.prototype.animate_post = function(checkthis){
	if( checkthis.animating ){
		this.display.context.globalAlpha = 1.0;
		this.frame++;
		if( this.frame === this.animframes ){
			checkthis.animating = false;
			this.frame = 0;
		}
	}
};

})(); 
/* jshint browser: true */

(function(){
"use strict";

/* jshint ignore: start */

var extend = app.extend;
var UIElement = app.ui.UIElement;

var CreateOverlay = app.ui.CreateOverlay = function(x, y, sprite, name, display, game){
	UIElement.call(this, x, y, sprite, name, display, "none", "none");

	var captain = this;
	this.game = game;

	this.pc_stats = {};

	this.helpvisible = false;

	this.sub_elements.push( new ChooseGraphicPane 	(0, 0, 		"blarg1", "choosegraphicpane", display, this) );
	this.sub_elements[this.sub_elements.length-1].hide();
	this.sub_elements.push( new PCInformationPane 	(0, 0, 		"blarg2", "pcinformationpane", display, this) );
	//this.sub_elements[this.sub_elements.length-1].hide();
	this.sub_elements.push( new PickTraitPane     	(0, 0, 		"blarg3", "picktraitpane",	   display, this) );
	this.sub_elements[this.sub_elements.length-1].hide();
	this.sub_elements.push( new InputNamePane     	(0, 0, 		"blarg7", "inputnamepane",     display, this) );
	this.sub_elements[this.sub_elements.length-1].hide();	
    this.sub_elements.push( new Textarea		 	(30, 30, 	"blarg4", "titletitletitleti", display,
                                        		  	"Create Party", "Georgia", "20", "#EFEFEF", false) ); 
    this.sub_elements.push( new Border			 	(6,  40, 	"blarg5", "borderborderborde", display,
                                        		  	170, 40, 4, "#DEDEDE") ); 
    this.sub_elements.push( new Border			 	(170,6, 	"blarg6", "borderborderbordr", display,
                                        		  	170, 40, 4, "#DEDEDE") );    
	this.sub_elements.push( new cButton	(382, 10,"StandardButtonUP", "donebutton", display,
                                		  	80, 30, "Done!", function(){ captain.game.State.isOn = false; captain.start_game(); }, game) ); 	                                        		  	                                        		  	    
	this.sub_elements.push( new cButton	(302, 10,"StandardButtonUP", "done", display,
                                		  	80, 30, "Stats?", function(){ captain.helpvisible = true; captain.sub_elements[captain.sub_elements.length-1].show(); }) ); 
	this.sub_elements.push( new cButton	(222, 10,"StandardButtonUP", "done", display,
                                		  	80, 30, "Menu", function(){ captain.game.State.isOn = false; captain.game.change_state("MenuState",{}); }) ); 
	this.sub_elements.push( new HelpScreen( 0, 0, "StandardButtonUP", "done", display, this ) );  
	this.sub_elements[this.sub_elements.length-1].hide();                               		  		                                		  		
};

CreateOverlay.prototype = extend(UIElement); 

CreateOverlay.prototype.draw = function(){
	if( this.FLAG_isVisible == true ){
		this.display.draw_sprite(this.sprite, this.x, this.y);

		for( var i in this.sub_elements ){
			this.sub_elements[i].draw();
		}		
	}	
};

CreateOverlay.prototype.contains = function(x, y){
	for( var i in this.sub_elements ){
		var elem = this.sub_elements[i];
		if( this.helpvisible){
			if( elem instanceof HelpScreen ){
				if( elem.FLAG_isVisible && elem.contains(x, y) ){
					elem.click(x, y);
				}	
				break;
			}
		} else {
			if( elem.FLAG_isVisible && elem.contains(x, y) ){
				elem.click(x, y);
			}	
		}		

	}

	return false;
};

CreateOverlay.prototype.start_game = function(){
	var captain = this;
	this.isOn = false;
	setTimeout(function(){
		var myState = captain.game.State;
		var wState = captain.game.Save.get_new_game_state( captain.sub_elements[1].get_pc_info(), captain.game );
		wState.init(true);
		//captain.game.Save.load_new_game( captain.sub_elements[1].get_pc_info(), captain.game);
		captain.game.change_state("FadeState", {state2:wState, state1: myState});
	},50);
};

var ChooseGraphicPane = function(x, y, sprite, name, display, parent){
	UIElement.call(this, x, y, sprite, name, display, "none", "none");

	var captain = this;
	this.parent = parent;
	this.active_pc = 0;	

	this.classoptions = ["Legionaire", "Lancer", "Archer", "Magician"];
	this.gender = "Female";// || Male;
	this["class"] = "Lancer";
	this.sprite = "female_lancer";
	this.descriptions = {
		Lancer:"Trained in the use of two-handed and pole-based weapons, a lancer"+
			" provides a good defensive option for any group. Lancers get a bonus to"+
			" CON and RES due to their defensive nature, but they suffer in EVA and SPD"+
			" because their weapons so often tend to be unweildy. Lancers cannot use"+
			" one-handed weapons as effectively as other classes, but they can make"+
			" good use of any armor.",
		Legionaire:"'High risk and high reward' is the motto of a Legionaire."+
			" Legionaires gain a massive bonus to power, but suffer in every other stat"+
			" except ACC. They can weild any weapon and wear any armor, however their"+
			" health tends to be lower than other classes.",
		Magician:"Choosing to focus on the art of magic in combat, a magician's greatest"+
			" asset is a large store of mana. Magicians get bonuses to RES and SPD"+
			" in addition to a slight bonus to POW, but suffer in FOR and CON."+
			" Magicians get no bonuses to the damage they deal with weapons (although"+
			" they can weild any weapon), but they can wear any"+
			" armor.",
		Archer:"A good archer prefers dancing around fights with quick feet rather than"+
			" brawling blow to blow. Archers gain a bonuses to ACC, SPD, and EVA, but"+
			" lack in POW and RES. Archers can use ranged weapons with double the hit"+
			" rate, but typically are not strong enough to use two-handed weapons"+
			" properly. Archers cannot wear heavy armor without a pentaly to their hit"+
			" rate."    
	}

	var female = new pButton (350, 50,"StandardButtonUP", "femalebutton", display,
        25, 25, "iconFemale", 
        function(){ 
        	captain.gender = "Female";
        	captain.sprite = captain.gender.toLowerCase()+"_"+captain["class"].toLowerCase();
    }); this.female = female;

	var male = new pButton (350, 85,"StandardButtonUP", "malebutton", display,
        25, 25, "iconMale", 
        function(){ 
        	captain.gender = "Male";
        	captain.sprite = captain.gender.toLowerCase()+"_"+captain["class"].toLowerCase();
    }); this.male = male;

	var lancer = new pButton (25, 60,"StandardButtonUP", "lancerbutton", display,
        55, 55, "classLancer", 
        function(){ 
        	captain["class"] = "Lancer";
        	captain.sprite = captain.gender.toLowerCase()+"_lancer";
    }); this.lancer = lancer;

	var legionaire = new pButton (100, 60,"StandardButtonUP", "legionairebutton", display,
        55, 55, "classLegionaire", 
        function(){ 
        	captain["class"] = "Legionaire";
        	captain.sprite = captain.gender.toLowerCase()+"_legionaire";
    }); this.legionaire = legionaire;

	var magician = new pButton (175, 60,"StandardButtonUP", "magicianbutton", display,
        55, 55, "classMagician", 
        function(){ 
        	captain["class"] = "Magician";
        	captain.sprite = captain.gender.toLowerCase()+"_magician";
    }); this.magician = magician;

	var archer = new pButton (250, 60,"StandardButtonUP", "archerbutton", display,
        55, 55, "classArcher", 
        function(){ 
        	captain["class"] = "Archer";
        	captain.sprite = captain.gender.toLowerCase()+"_archer";
    }); this.archer = archer;

	var confirm = new cButton (350, 245,"StandardButtonUP", "cdonebutton", display,
        80, 30, "Confirm", 
        function(){ 
        	var pb = captain.parent
        		.sub_elements[1].get_textarea(captain.active_pc+"graph");
        	captain.parent
        		.sub_elements[1]["_"+captain.active_pc+"_sprite"] = captain.sprite;
        	captain.parent
        		.sub_elements[1]["_"+captain.active_pc+"_class"] = captain["class"];
        	captain.parent
        		.sub_elements[1]["_"+captain.active_pc+"_gender"] = captain.gender;	
        	pb.image_sprite = captain.sprite;
        	captain.parent.hide_sub_element("choosegraphicpane");
		    //had to setTimeout here because the click was registering on this pane
		    //then on the pane that contained it as it was shown.
		    setTimeout(function(){
		        captain.parent.show_sub_element("pcinformationpane");   
		    }, 100);
        }); 
	var cancel = new cButton (40, 245,"StandardButtonUP", "ccancelbutton", display,
        80, 30, "Cancel", 
        function(){ 
		    //had to setTimeout here because the click was registering on this pane
		    //then on the pane that contained it as it was shown.
		    captain.parent.hide_sub_element("choosegraphicpane");
		    setTimeout(function(){
		        captain.parent.show_sub_element("pcinformationpane");   
		    }, 100);
        }); 
	this.description = new TextareaW(25,140, "sidk", "didk2", display, "Once upon a ti"+
		"me there was a man who sat next to a tree.  He had a book with him and he opene"+
		"d up the tome and read from it...", 420, 16, "Bedrock");
	
	this.sub_elements.push( confirm, cancel, this.description, legionaire, lancer,
		archer, magician, male, female ); 

	this.gradind = 0;
	this.graddir = 1;
	this.fs = 5;
	this.f = 0;
	this.grads = [
		"#FDD800",
		"#F0CB00",
		"#DEBB00",
		"#BEA000",
		"#AA8F00",
		"#8D7600"
	];
};

ChooseGraphicPane.prototype = extend(UIElement); 

ChooseGraphicPane.prototype.draw = function(){
	if( this.FLAG_isVisible ){
		this.description.text = this.descriptions[this["class"]];
		this.display.draw(15, 125, 446-10, 114-10, "#ABABAB");

		var iconselected = this["class"].toLowerCase();
		var icon = this[iconselected];
		var giconselected = this.gender.toLowerCase();
		var gicon = this[giconselected];
		this.display.draw(icon.x-3, icon.y-3, 61, 61, this.grads[this.gradind]);
		this.display.draw(gicon.x-2, gicon.y-2, 29, 29, this.grads[this.gradind]);

	    this.display.draw_text_left( "Female", 
	        this.female.x+40, 
	        this.female.y+20, 
	        "Verdana", 
	        16,
	        "white", 
	        "normal");

	    this.display.draw_text_left( "Male", 
	        this.male.x+40, 
	        this.male.y+20, 
	        "Verdana", 
	        16,
	        "white", 
	        "normal");

		if( this.f === this.fs ){
			this.gradind += this.graddir;
			if( this.gradind === this.grads.length - 1 || this.gradind === 0 ) 
				this.graddir = -this.graddir;
			this.f = 0;
		} else {
			this.f++;
		}

		for( var i in this.sub_elements ){
			this.sub_elements[i].draw();
		}
	}
};

ChooseGraphicPane.prototype.show = function(){
	UIElement.prototype.show.call(this);
	for( var i in this.sub_elements ){
		this.sub_elements[i].show();
	}
	var captain = this;
};

ChooseGraphicPane.prototype.contains = function(x, y){
	if( !this.FLAG_isVisible ){
		return false;
	}

	for( var i in this.sub_elements){
		var elem = this.sub_elements[i];
		
		if( elem.contains(x, y) ){
			elem.click(x, y);
		}
	}

	return false;
};

var InputNamePane = function(x, y, sprite, name, display, parent){
	UIElement.call(this, x, y, sprite, name, display, "none", "none");

	var captain = this;
	this.parent = parent;
	this.active_pc = 0;

	this.submit = function(val){
		captain.parent.show_sub_element("pcinformationpane");
		if( val.length <= 10 && val.length > 0 ){
			for( var i in captain.parent.sub_elements ){
				var elem = captain.parent.sub_elements[i];
				if( elem instanceof PCInformationPane ){
					elem["_"+captain.active_pc+"_name"] = val;
					var tx = elem.get_textarea("names"+captain.active_pc);
					tx.text = val;
				}
			}
        }

		Game.prototype.keyboard = null;

        captain.parent.hide_sub_element("inputnamepane");
        captain.parent.game.State.update(false);        
	}

	// this.sub_elements.push( new TextInput(Math.floor(472/3), 120, "none", "nameinput", display, parent, function(val){ captain.submit(val); }) );
	// this.sub_elements.push( new cButton	(Math.floor(472/3) + 40, 170,"StandardButtonUP", "options", display,
 //                                		  	80, 30, "Submit", function(){ captain.submit(captain.display.input._value); }) ); 


};

InputNamePane.prototype = extend(UIElement); 

InputNamePane.prototype.draw = function(){
	if( this.FLAG_isVisible ){
		for( var i in this.sub_elements ){
			this.sub_elements[i].draw();
		}
	}
};

InputNamePane.prototype.show = function(){
	UIElement.prototype.show.call(this);
	for( var i in this.sub_elements ){
		this.sub_elements[i].show();
	}
	var captain = this;

	Game.prototype.keyboard = new OnScreenKeyboard(this.display, 
		function(val){ captain.submit(val); },
		function(val){ captain.submit(""); } 
	);
	Game.prototype.keyboard.maxchars = 11;
};

InputNamePane.prototype.contains = function(x, y){
	if( !this.FLAG_isVisible ){
		return false;
	}

	for( var i in this.sub_elements){
		var elem = this.sub_elements[i];
		
		if( elem.contains(x, y) ){
			elem.click(x, y);
		}
	}

	return false;
};

var PCInformationPane = function(x, y, sprite, name, display, parent){
	UIElement.call(this, x, y, sprite, name, display, "none", "none");

	this.parent = parent;

	this._0_statsleft = 30;
	this._1_statsleft = 30;
	this._2_statsleft = 30;

	this._0_sprite = "female_lancer";
	this._1_sprite = "female_archer";
	this._2_sprite = "male_magician";

	this._0_name = "Kyoko";
	this._1_name = "Annette";
	this._2_name = "Starswirl";

	this._0_class = "Lancer";
	this._1_class = "Archer";
	this._2_class = "Magician";

	this._0_gender = "Female";
	this._1_gender = "Female";
	this._2_gender = "Male";

	var captain = this;

	var ypositions = 		[145+5, 165+5, 185+5, 205+5, 225+5, 245+5, 265+5];
	var xpositions = 		[15-4, 175-4, 335-4];
	var bplusxpositions = 	[122-5, 282-5, 442-5];
	var bminuxpositions = 	[100-5, 260-5, 420-5];
	var stats = 		["POW: 1", "ACC: 1", "FOR: 1", "CON: 1", "RES: 1", "SPD: 1", "EVA: 1"];
	var ids = 			["POW", "ACC", "FOR", "CON", "RES", "SPD", "EVA"];
	var colors = 		["#8F1B1B","#AD6615","#696845","#0B520D","#2F3175","#7A2B78","#0D8A8C"]

	var captain = this;

	for( var i in xpositions ){
		for( var j in ypositions ){
    		this.sub_elements.push( new Textarea	(xpositions[i], ypositions[j], 	"physd", i+ids[j], display,
                                        		  	stats[j], "monospace", "16", colors[j], false) ); 
    		var minubutton = new cButton(	bminuxpositions[i], 
    									 	ypositions[j]-15,
    									 	"StandardButtonUP", 
    									 	i+";"+ids[j]+";button"+ids[j], 
    									 	display,
		                                	20, 20, "-", 
		                                	function(buttonref){
		                                		var tmp = buttonref.name.split(";");
		                                		var stat = tmp[1];
		                                		var pc = tmp[0];

		                                		var newnum = parseInt(captain.get_stat_num(pc+stat)) - 1;
		                                		if( newnum < 1 ){
		                                			newnum = 1;
		                                		} else {
			                                		captain[["", pc, "statsleft"].join("_")]++;
			                                	}

		                                		captain.set_stat(pc+stat, newnum );

		                                		var txarea = captain.get_textarea("points"+pc);
		                                		txarea.text = "Points: "+captain[["", pc, "statsleft"].join("_")];
		                                	}); 
			this.sub_elements.push( minubutton ); 
			var plusbutton = new cButton(	bplusxpositions[i], 
											ypositions[j]-15,
											"StandardButtonUP", 
											i+";"+ids[j]+";button"+ids[j], 
											display,
		                                	20, 20, "+", 
		                                	function(buttonref){
		                                		var tmp = buttonref.name.split(";");
		                                		var stat = tmp[1];
		                                		var pc = tmp[0];

		                                		var newnum = parseInt(captain.get_stat_num(pc+stat)) + 1;
		                                		if( newnum > 99 ){
		                                			newnum = 99;
		                                		}

		                                		captain[["", pc, "statsleft"].join("_")]--;
		                                		if( captain[["", pc, "statsleft"].join("_")] < 0 ){
		                                			newnum = parseInt(captain.get_stat_num(pc+stat));
		                                			captain[["", pc, "statsleft"].join("_")] = 0;
		                                		}

		                                		captain.set_stat(pc+stat, newnum );

		                                		var txarea = captain.get_textarea("points"+pc);
		                                		txarea.text = "Points: "+captain[["", pc, "statsleft"].join("_")];
		                                	}) 
			this.sub_elements.push( plusbutton ); 			                                		  		                                        		  		
    	}
    }  

    //pc0 buttons on the left
	this.sub_elements.push( new Textarea(16, 121+5, 	"physd", "points0", display,
                                		  	"Points: "+this._0_statsleft, "Georgia" , "12", "#001122", false) ); 
	this.sub_elements.push( new cButton	(91, 42+5,"StandardButtonUP", "0names", display,
                                		  	50, 27, "Name", function(){ captain.parent.show_sub_element("inputnamepane");
                                		  								captain.parent.sub_elements[3].active_pc = 0;
                                		  								captain.parent.hide_sub_element("pcinformationpane"); }) ); 	
	this.sub_elements.push( new cButton	(91, 71+5,"StandardButtonUP", "0rands", display,
                                		  	50, 27, "Class", function(){ captain.parent.show_sub_element("choosegraphicpane");
                                		  										captain.parent.sub_elements[0].active_pc = 0;
                                		  										captain.parent.sub_elements[0].gender = captain._0_gender;
                                		  										captain.parent.sub_elements[0]["class"] = captain._0_class;
                                		  										captain.parent.sub_elements[0].sprite = captain._0_sprite;
		                                		  								captain.parent.hide_sub_element("pcinformationpane"); }) ); 	
	this.sub_elements.push( new cButton	(91, 100+5,"StandardButtonUP", "0trait", display,
                                		  	50, 27, "Reset", function(){ captain.def_stats(0, true)}) ); 	
	this.sub_elements.push( new pButton	(29, 72,"StandardButtonUP", "0graph", display,
                                		  	34, 35, this._0_sprite, function(){	 }) ); 	
	this.sub_elements.push( new Textarea(45, 67, 	"physd", "names0", display,
                                		  	this._0_name, "monospace" , "14", "#FEFEFE", true) ); 

	//pc1 buttons in the middle
	this.sub_elements.push( new Textarea(175, 121+5, 	"physd", "points1", display,
                                		  	"Points: "+this._1_statsleft, "Georgia" , "12", "#001122", false) );
	this.sub_elements.push( new cButton	(251, 42+5,"StandardButtonUP", "1names", display,
                                		  	50, 27, "Name", function(){ captain.parent.show_sub_element("inputnamepane");
                                		  								captain.parent.sub_elements[3].active_pc = 1;
                                		  								captain.parent.hide_sub_element("pcinformationpane"); }) ); 	                                		  	 
	this.sub_elements.push( new cButton	(251, 71+5,"StandardButtonUP", "1rands", display,
                                		  	50, 27, "Class", function(){ captain.parent.show_sub_element("choosegraphicpane");
                                		  										captain.parent.sub_elements[0].active_pc = 1;
                                		  										captain.parent.sub_elements[0].gender = captain._1_gender;
                                		  										captain.parent.sub_elements[0]["class"] = captain._1_class;
                                		  										captain.parent.sub_elements[0].sprite = captain._1_sprite;
		                                		  								captain.parent.hide_sub_element("pcinformationpane");}) ); 	
	this.sub_elements.push( new cButton	(251, 100+5,"StandardButtonUP", "1trait", display,
                                		  	50, 27, "Reset", function(){ captain.def_stats(1, true);}) ); 
 	this.sub_elements.push( new pButton	(189, 72,"StandardButtonUP", "1graph", display,
                                		  	34, 35, this._1_sprite, function(){	 }) ); 
	this.sub_elements.push( new Textarea(204, 67, 	"physd", "names1", display,
                                		  	this._1_name, "monospace" , "14", "#FEFEFE", true) );                                 		  		
                                		  	                               		  		
	//pc2 buttons on the right
	this.sub_elements.push( new Textarea(337, 121+5, 	"physd", "points2", display,
                                		  	"Points: "+this._2_statsleft, "Georgia" , "12", "#001122", false) ); 
	this.sub_elements.push( new cButton	(411, 42+5,"StandardButtonUP", "2names", display,
                                		  	50, 27, "Name", function(){ captain.parent.show_sub_element("inputnamepane");
                                		  								captain.parent.sub_elements[3].active_pc = 2;
                                		  								captain.parent.hide_sub_element("pcinformationpane"); }) ); 		
	this.sub_elements.push( new cButton	(411, 71+5,"StandardButtonUP", "2rands", display,
                                		  	50, 27, "Class", function(){ captain.parent.show_sub_element("choosegraphicpane");
                                		  										captain.parent.sub_elements[0].active_pc = 2; 
                                		  										captain.parent.sub_elements[0].gender = captain._2_gender;
                                		  										captain.parent.sub_elements[0]["class"]= captain._2_class;
                                		  										captain.parent.sub_elements[0].sprite = captain._2_sprite;                               		  	
		                                		  								captain.parent.hide_sub_element("pcinformationpane"); }) ); 	
	this.sub_elements.push( new cButton	(411, 100+5,"StandardButtonUP", "2trait", display,
                                		  	50, 27, "Reset", function(){ captain.def_stats(2, true); }) ); 	
 	this.sub_elements.push( new pButton	(349, 72,"StandardButtonUP", "2graph", display,
                                		  	34, 35, this._2_sprite, function(){	 }) );  
	this.sub_elements.push( new Textarea(366, 67, 	"physd", "names2", display,
                                		  	this._2_name, "monospace" , "14", "#FEFEFE", true) );                                 		  		                                		  		

	captain.def_stats(0, false);
	captain.def_stats(1, false);
	captain.def_stats(2, false);
};

PCInformationPane.prototype = extend(UIElement); 

PCInformationPane.prototype.get_pc_info = function(){
	var ids = 			["POW", "ACC", "FOR", "CON", "RES", "SPD", "EVA"];
	var ret = {
		pc0:{stats:{}},
		pc1:{stats:{}},
		pc2:{stats:{}}
	};

	for( var i in ids ){
		ret.pc0.stats[ids[i]] = parseInt(this.extract_stat(this.get_textarea("0"+ids[i])));
		ret.pc1.stats[ids[i]] = parseInt(this.extract_stat(this.get_textarea("1"+ids[i])));
		ret.pc2.stats[ids[i]] = parseInt(this.extract_stat(this.get_textarea("2"+ids[i])));
	}

	ret.pc0.stats.lspells = ["l0", "l1", "l4", "l6", "l7"];
	ret.pc0.stats.dspells = ["d0", "d1", "d2", "d3", "d6"];

	ret.pc0.stats.max_hp = 100;
	ret.pc0.stats.curr_hp = 100;
	ret.pc0.stats.max_mp = 20;
	ret.pc0.stats.curr_mp = 20;	

	ret.pc1.stats.lspells = ["l0", "l1", "l4", "l6", "l7"];
	ret.pc1.stats.dspells = ["d0", "d1", "d2", "d3", "d6"];

	ret.pc1.stats.max_hp = 100;
	ret.pc1.stats.curr_hp = 100;
	ret.pc1.stats.max_mp = 20;
	ret.pc1.stats.curr_mp = 20;	

	ret.pc2.stats.lspells = ["l0", "l1", "l4", "l6", "l7"];
	ret.pc2.stats.dspells = ["d0", "d1", "d2", "d3", "d6"];

	ret.pc2.stats.max_hp = 100;
	ret.pc2.stats.curr_hp = 100;
	ret.pc2.stats.max_mp = 20;
	ret.pc2.stats.curr_mp = 20;		

	ret.pc0.name = this._0_name;
	ret.pc1.name = this._1_name;
	ret.pc2.name = this._2_name;

	ret.pc0.sprite = this._0_sprite;
	ret.pc1.sprite = this._1_sprite;
	ret.pc2.sprite = this._2_sprite;

	ret.pc0["class"]= this._0_class;
	ret.pc1["class"] = this._1_class;
	ret.pc2["class"] = this._2_class;

	return ret;
};

PCInformationPane.prototype.def_stats = function(pc, isreset){
	var captain = this;
	var ids = 			["POW", "ACC", "FOR", "CON", "RES", "SPD", "EVA"];
	ids.sort( function(){return (Math.round(Math.random())-0.5); });
	var last = ids[ids.length-1];
	var stat_var = ["", pc, "statsleft"].join("_");
	captain[stat_var] = 0;

	var pre = {};

	if( pc == 0 ) {
		pre.POW = 10; pre.ACC = 5; pre.FOR = 10; pre.CON = 3; pre.RES = 1; pre.SPD = 3; pre.EVA = 3;
	} else if( pc == 2 ) {
		pre.POW = 12; pre.ACC = 7; pre.FOR = 5; pre.CON = 8; pre.RES = 5; pre.SPD = 8; pre.EVA = 5;
	} else {
		pre.POW = 15; pre.ACC = 5; pre.FOR = 5; pre.CON = 3; pre.RES = 5; pre.SPD = 3; pre.EVA = 5;
	}

	for( var i in pre ){
		if( isreset ){
			this.set_stat(pc+i, 0);
		} else {
			this.set_stat(pc+i, pre[i]);
		}
	}

	if( isreset ) captain[stat_var] = 30;

	var txarea = captain.get_textarea("points"+pc);
	txarea.text = "Points: "+captain[stat_var];	
};

PCInformationPane.prototype.change_class = function(pc){
	var captain = this;

	var classes = ["lancer","legionaire","archer","magician"];

	var txarea = captain.get_textarea("points"+pc);
	txarea.text = "Points: "+captain[stat_var];	
};

PCInformationPane.prototype.get_textarea = function(name){
	for( var i in this.sub_elements ){
		if( this.sub_elements[i].name == name ){
			return this.sub_elements[i];
		}
	}
	return "none";
};

PCInformationPane.prototype.extract_stat = function(elem){
	return elem.text.substring(5, elem.text.length);
};

PCInformationPane.prototype.set_stat = function(name, new_stat_num){
	var elem = this.get_stat_elem(name);
	var stat_num = this.extract_stat(elem);

	elem.text = name.substring(1,4)+": "+new_stat_num;
};

PCInformationPane.prototype.get_stat_num = function(name){
	for( var i in this.sub_elements ){
		var elem = this.sub_elements[i];
		if( elem.name == name ){
			return this.extract_stat(elem);
		}	
	}
	return "none";
};

PCInformationPane.prototype.get_stat_elem = function(name){
	for( var i in this.sub_elements ){
		var elem = this.sub_elements[i];
		if( elem.name == name ){
			return elem;
		}	
	}
	return "none";
};

PCInformationPane.prototype.contains = function(x, y){
	if( !this.FLAG_isVisible ){
		return false;
	}

	for( var i in this.sub_elements){
		var elem = this.sub_elements[i];
		
		if( elem.contains(x, y) ){
			elem.click(x, y);
		}
	}

	return false;
};

PCInformationPane.prototype.draw = function(){

	if( this.FLAG_isVisible != true ){
		return;
	}

	this.display.draw_sprite("PCStatOver", 8, 	135);
	this.display.draw_sprite("PCStatOver", 168, 135);
	this.display.draw_sprite("PCStatOver", 328, 135);

	for( var i in this.sub_elements ){
		this.sub_elements[i].draw();
	}
};

var PickTraitPane = function(x, y, sprite, name, display, parent){
	UIElement.call(this, x, y, sprite, name, display, "none", "none");
};

PickTraitPane.prototype = extend(UIElement); 

var PCTypeTabs = function(x, y, sprite, name, display, parent){
	UIElement.call(this, x, y, sprite, name, display, "none", "none");
};

PCTypeTabs.prototype = extend(UIElement); 

var Border = function(x, y, sprite, name, display, x2, y2, wid, color){
	UIElement.call(this, x, y, sprite, name, display, "none", "none");
	this.x1 = x;
	this.y1 = y;
	this.x2 = x2;
	this.y2 = y2;
	this.wid = wid;
	this.color = color;
};

Border.prototype = extend(UIElement); 

Border.prototype.draw = function(){
	if( this.FLAG_isVisible )
		this.display.draw_line(this.x1, this.y1, this.x2, this.y2, this.wid, this.color);
};

var TextInput = function(x, y, sprite, name, display, parent, onsubmit){
	UIElement.call(this, x, y, sprite, name, display, "none", "none");
	this.parent = parent;
	this.onsubmit = onsubmit;
};

TextInput.prototype = extend(UIElement); 

TextInput.prototype.draw = function(){
	this.display.input.render();  
};

TextInput.prototype.show = function(){
	UIElement.prototype.show.call(this);
    var captain = this;
    this.inp = true;
    this.display.input._x = this.x;
    this.display.input._y = this.y;
    this.display.input._onkeydown = function(ev){
        if( ev.keyCode == 13 ){
            captain.submit();
        }
    }
    this.display.input._onfocus = function(ev){
    } 
    this.display.input._onblur = function(ev){
    }         
    this.display.input.focus();
    setTimeout(function(){
        captain.display.input.focus()
        captain.display.input._value = "";
        captain.display.input.render();
    },10);
};

TextInput.prototype.hide = function(){
	this.FLAG_isVisible = false;
    this.display.input._x = -1000;
}

TextInput.prototype.submit = function(){
	var captain = this;
    this.onsubmit(captain.display.input._value);
};

var Textarea = function(x, y, sprite, name, display, text, font, size, color, centered, shadowed){
	UIElement.call(this, x, y, sprite, name, display, "none", "none");
	this.text = text;
	this.font = font;
	this.size = size;
	this.color = color;
	this.centered = centered;
	this.shadowed = shadowed || false;
};

Textarea.prototype = extend(UIElement); 

Textarea.prototype.draw = function(){
	if( this.FLAG_isVisible ){
		if( !this.centered ){
		    this.display.draw_text_left( this.text, 
		        this.x, 
		        this.y, 
		        this.font, 
		        this.size,
		        this.color, 
		        "normal");
		} else {
			if( this.shadowed )
				this.display.draw_text(this.text, this.x, this.y, this.font, this.color, this.size, "Normal", true);
			else
			    this.display.draw_text( this.text, 
			        this.x, 
			        this.y, 
			        this.font, 
			        this.color,
			        this.size, 
			        "normal");
	    } 
	}
};

var TextareaW = function(x, y, sprite, name, display, text, wid, linhgt, font){
	UIElement.call(this, x, y, sprite, name, display, "none", "none");
	this.text = text;
	this.font = font;
	this.wid = wid;
	this.linhgt = linhgt;
};

TextareaW.prototype = extend(UIElement); 

TextareaW.prototype.draw = function(){
	if( this.FLAG_isVisible ){
		this.display.wrap_text(this.text, this.x, this.y, this.wid, 14, this.font);
	}
};

var cButton = function(x, y, sprite, name, display, wid, hgt, text, onclick, game){
	UIElement.call(this, x, y, sprite, name, display, "none", "none");

	if( game ) this.game = game;

	this.text = text;
	this.onclick = onclick;
	this.wid = wid;
	this.hgt = hgt;
};

cButton.prototype = extend(UIElement); 

cButton.prototype.draw = function(){
	if( this.FLAG_isVisible ){
		this.display.draw_sprite_scaled(this.sprite, this.x, this.y, this.wid, this.hgt );
		this.display.draw_text(this.text, this.x+this.wid/2, this.y+this.hgt*0.691, "Georgia", "#113366", "12", "Bold", true);
	}
};

cButton.prototype.click = function(x,y){
	var captain = this;
	if( "soundCache" in this.__proto__ )
		this.__proto__.soundCache.play_sound("button");

	if( this.name == "donebutton" ) captain.game.State.isOn = false;

	this.sprite="StandardButtonDOWN";
	setTimeout(function(){captain.sprite="StandardButtonUP";captain.onclick(captain);}, 150);	

};

cButton.prototype.contains = function(x, y){
	if( this.FLAG_isVisible == false ){
		return false;
	}

	// y = y + 15;
	// x = x + 12;
	// 
	//console.log("mouse coord:", x, y, " button coord:", this.x, this.y);	

	var widx = this.wid + this.x;
	var widy = this.hgt + this.y;

	if( x >= this.x && y >= this.y && x < widx && y < widy ){
		return true;
	} else {
		return false;
	}
};

var pButton = function(x, y, sprite, name, display, wid, hgt, image_sprite, onclick){
	UIElement.call(this, x, y, sprite, name, display, "none", "none");

	this.image_sprite = image_sprite;
	this.onclick = onclick;
	this.wid = wid;
	this.hgt = hgt;

	this.is_animated = false;
	this.anim_frames = [];
	this.frame_speed = 10;
	this.cframe = 0;
	this.csprite = 0;
};

pButton.prototype = extend(UIElement); 

pButton.prototype.draw = function(){
	if( this.FLAG_isVisible ){

		this.display.draw_sprite_scaled(this.sprite, this.x, this.y, this.wid, this.hgt );
		if( this.is_animated ){
			this.display.draw_sprite_scaled(this.image_sprite+this.anim_frames[this.csprite], this.x+this.wid*0.06, this.y+this.hgt*0.06, this.wid-8, this.hgt-3 );
			this.cframe++;
			if( this.cframe == this.frame_speed ){
				this.csprite++;
				this.cframe = 0;
				if( this.csprite >= this.anim_frames.length ){
					this.csprite = 0;
				}
			}
		} else {
			this.display.draw_sprite_scaled(this.image_sprite, this.x+this.wid*0.06, this.y+this.hgt*0.06, this.wid-8, this.hgt-3 );
		}
	}
};

pButton.prototype.click = function(x,y){
	var captain = this;
	this.sprite="StandardButtonDOWN";
	setTimeout(function(){captain.sprite="StandardButtonUP"}, 50);	
	this.onclick(this);
};

pButton.prototype.contains = function(x, y){
	if( this.FLAG_isVisible == false ){
		return false;
	}

	var widx = this.wid + this.x;
	var widy = this.hgt + this.y;

	if( x >= this.x && y >= this.y && x < widx && y < widy ){
		return true;
	} else {
		return false;
	}
};

var WhoButton = function(x, y, sprite, name, display, onclick){
	UIElement.call(this, x, y, sprite, name, display, "none", "none");
	this.onclick = onclick;
};

WhoButton.prototype = extend(UIElement); 

WhoButton.prototype.draw = function(){
	if( this.FLAG_isVisible ){
		this.display.draw_sprite(this.sprite, this.x, this.y);
	}
};

WhoButton.prototype.click = function(x,y){
	var captain = this;
	captain.onclick(this);
};

WhoButton.prototype.contains = function(x, y){
	if( this.FLAG_isVisible == false ){
		return false;
	}

	var widx = 35 + this.x;
	var widy = 24 + this.y;

	if( x >= this.x && y >= this.y && x < widx && y < widy ){
		return true;
	} else {
		return false;
	}
};

var HelpScreen = function(x, y, sprite, name, display, main){
	UIElement.call(this, x, y, sprite, name, display, "none", "none");

	this.main = main;
	var captain = this;

	this.sub_elements.push( new cButton	(382, 233,"StandardButtonUP", "done", display,
                                		  	80, 30, "Back", function(){ captain.hide(); captain.main.helpvisible = false;}) ); 

    this.sub_elements.push( new cButton (12, -50+60, 	"StandardButtonUP", "titletitletitleti", display,
                                    		  	60, 25, "POW", function(){ captain.show_description("POW"); }) ); 
    this.sub_elements.push( new cButton (12, -50+90, 	"StandardButtonUP", "titletitletitleti", display,
                                    		  	60, 25, "ACC", function(){ captain.show_description("ACC"); }) ); 
    this.sub_elements.push( new cButton (12, -50+120, 	"StandardButtonUP", "titletitletitleti", display,
                                    		  	60, 25, "FOR", function(){ captain.show_description("FOR"); }) ); 
    this.sub_elements.push( new cButton (12, -50+150, 	"StandardButtonUP", "titletitletitleti", display,
                                    		  	60, 25, "CON", function(){ captain.show_description("CON"); }) ); 
    this.sub_elements.push( new cButton (12, -50+180, 	"StandardButtonUP", "titletitletitleti", display,
                                    		  	60, 25, "RES", function(){ captain.show_description("RES"); }) ); 
    this.sub_elements.push( new cButton (12, -50+210, 	"StandardButtonUP", "titletitletitleti", display,
                                    		  	60, 25, "SPD", function(){ captain.show_description("SPD"); }) ); 
    this.sub_elements.push( new cButton (12, -50+240, 	"StandardButtonUP", "titletitletitleti", display,
                                    		  	60, 25, "EVA", function(){ captain.show_description("EVA"); }) ); 

    //x, y, sprite, name, display, text, wid, linhgt, font

    this.txarea = new TextareaW(25, 230, "idk", "idk2", display, "Once upon a time there was a man who sat next to a tree.  He had a book with him and he opened up the tome and read from it...", 350, 16, "Bedrock");
    this.image = "statDEF"; 

    this.show_description("POW");

    this.sub_elements.push(this.txarea);                                   		  	                                    		  	                                    		  	                                    		  	                                    		  	    
};

HelpScreen.prototype = extend(UIElement); 

HelpScreen.prototype.show_description = function( statname ){
	if( statname == "POW" ){
		this.image = "statPOW"; 
		this.txarea.text = "Power - A measure of how much strength a character has both physically and magically.  More power will give a character higher damage in melee combat and more effective spells.";
	} else if( statname == "ACC" ){
		this.image = "statACC"; 
		this.txarea.text = "Accuracy - A measure of how focused a character is during combat.  Accuracy will allow a character to hit critical spots on an enemy more often and give more chance of hitting evasive enemies."; 
	} else if( statname == "FOR" ){
		this.image = "statDEF"; 
		this.txarea.text = "Fortitude - A measure of a character's bravery faced with a combat situation.  This stat determines the majority of a character's health pool.";
	} else if( statname == "CON" ){
		this.image = "statCON"; 
		this.txarea.text = "Constitution - A measure of how much a character is resistant to pain.  This stat determines some of a character's health as well as grants a character natural armor against damage.";
	} else if( statname == "RES" ){
		this.image = "statDEF"; 
		this.txarea.text = "Resistance - A measure of a character's capability to overcome the adverse effects of magic.  A character with high resistance will take less damage from magical attacks.";
	} else if( statname == "SPD" ){
		this.image = "statSPD"; 
		this.txarea.text = "Speed - A measure of how fast a character is.  Characters with high speed can do multiple actions in combat instead of just one.";
	} else {
		this.image = "statEVA"; 
		this.txarea.text = "Evasion - A measure of how tricky a character is to hit.  A character with high evasion will be able to dodge both physical attacks and magical attacks.";
	}

};

HelpScreen.prototype.draw = function(){
	if( this.FLAG_isVisible ){
		//this.display.draw_sprite("SingleNotif", 55, 20);
		
		this.display.draw(5, 5, 472-10, 288-10, "grey");
		this.display.draw(25-5, 217, 354, 62, "#ABABAB");
		for( var i in this.sub_elements ){
			this.sub_elements[i].draw();
		}

		this.display.draw(90-5, 30-5, 362+10, 168+10, "#232323");
		this.display.draw_sprite(this.image, 90, 30 ); 
	}
};

HelpScreen.prototype.click = function(x,y){
	var captain = this;
};

HelpScreen.prototype.contains = function(x, y){
	if( this.FLAG_isVisible == false ){
		return false;
	}

	for( var i in this.sub_elements ){
		if( this.sub_elements[i].contains(x, y) ){
			this.sub_elements[i].click(x, y);
		}
	}
};

/* jshint ignore: end */

})(); 
/* jshint browser: true */
/* global app, console */

(function(){
"use strict";

var OnScreenKeyboard = app.ui.OnScreenKeyboard = function( display, onconfirm, oncancel ){
	this.display = display;

	this.key0 = ["q", "w", "e", "r", "t", "y", "u", "i", "o", "p", "0", "1"];
	this.key1 = ["a", "s", "d", "f", "g", "h", "j", "k", "l", "2", "3", "4"];
	this.key2 = ["z", "x", "c", "v", "b", "n", "m", "5", "6", "7", "8", "9"];

	this.keywidth = /*Math.floor*/(this.display.dimx/16);
	this.keyheight = /*Math.floor*/(this.display.dimx/16);

	this.top = this.display.dimy - 3*this.keyheight;
	this.left = 0;

	this.selected = "";
	this.seltimeoutid = 0;

	this.uppercasemode = false;

	this.inputstr = "";
	this.maxchars = 12;
	this.inputx = this.display.dimx/2.0;
	this.inputy = this.display.dimy/2.0 + 6;

	this.onconfirm = function(){ 
		this.texthandler.select("Confirm");
		if(typeof onconfirm === "function"){
			onconfirm(this.inputstr);
		}
	}.bind(this);
	this.oncancel = function(){ 
		this.texthandler.select("Cancel");
		if(typeof oncancel === "function"){
			oncancel(this.inputstr);
		}
	}.bind(this);

	this.texthandler = {
		delete_text:function(){
			this.select("Delete");
			var str = this.inputstr;
			if( this.inputstr.length > 1 ){
				this.inputstr = str.substring(0, str.length-1);
			} else if( str.length === 1 ){
				this.inputstr = "";
			}
		},
		add_text:function(key){
			this.select(key);
			if( this.inputstr.length < this.maxchars ){
				this.inputstr+=(this.uppercasemode?key.toUpperCase():key);
			}
		},
		select:	function(key){
			this.selected = key;
			clearTimeout( this.seltimeoutid );
			this.seltimeoutid = setTimeout(
				function(){ this.selected = ""; }.bind(this), 100
			);
		}
	};
};

OnScreenKeyboard.prototype.draw = function(){
	this.display.context.globalAlpha = 0.5;
	this.display.draw(0, 0, 472, 288, "black");
	this.display.context.globalAlpha = 1.0;

	var draw_key = function(text, x, y, w, h){
		var ox = w/2;
		var oy = h/2+6;

		var bgcol = "#AAAAAA";
		if( text === this.selected ){
			bgcol = "#888888";
		}

		this.display.draw(x, y, 
			w, h, "#555555");
		this.display.draw(x+2, y+2, 
			w-4, h-4, bgcol);

		this.display.draw_text(text, x+ox, y+oy, 
			"Verdana", "darkgreen", "14", "Normal", false);
	}.bind(this);

	var drawarray = function(arr){
		try{
		for( var i in arr ){
			var ch = (this.uppercasemode?arr[i].toUpperCase():arr[i]);
			draw_key(ch, x, y, this.keywidth, this.keyheight);
			x+=this.keywidth;
		}
		} catch(e) {
			console.error(e.stack);
		}
	}.bind(this);

	var x = this.left+2*this.keywidth;
	var y = this.top;
	drawarray(this.key0);

	x = this.left+2*this.keywidth;
	y = this.top+1*this.keyheight;
	drawarray(this.key1);

	x = this.left+2*this.keywidth;
	y = this.top+2*this.keyheight;
	drawarray(this.key2);

	draw_key("Case", this.left, this.top, 
		this.keywidth*2, this.keyheight);
	draw_key("Cancel", this.left, this.top+2*this.keyheight, 
		this.keywidth*2, this.keyheight);

	draw_key("Delete", this.left+14*this.keywidth, this.top, 
		this.keywidth*2, this.keyheight);
	draw_key("Confirm", this.left+14*this.keywidth, this.top+2*this.keyheight, 
		this.keywidth*2, this.keyheight);

	var boxx = this.inputx - 12*this.maxchars/2;
	var boxy = this.inputy - 14;
	var boxw = 12*this.maxchars;
	var boxh = 20;
	this.display.draw(boxx, boxy, 
		boxw, boxh, "#111111");
	this.display.draw(boxx+2, boxy+2, 
		boxw-4, boxh-4, "#FFFFFF");	
	this.display.draw_text(this.inputstr, this.inputx, this.inputy, 
		"Verdana", "green", "14", "Normal", false);
};

OnScreenKeyboard.prototype.keydown = function(ev){
	//shift
	if( ev.which === 16 ){
		this.texthandler.select("Case");
		this.uppercasemode = true;
	}

	//escape
	if( ev.which === 27 ){
		this.oncancel();
	}

	//enter
	if( ev.which === 13 ){
		this.onconfirm();
	}

	//backspace
	if( ev.which === 8 ){
	 	this.texthandler.delete_text();
	 }

	if( ev.which >= 48 && ev.which <= 90 ){
		var key = String.fromCharCode(ev.which).toLowerCase();
		this.texthandler.add_text(key);
	}
};

OnScreenKeyboard.prototype.keyup = function(ev){
	if( ev.which === 16 ){
		this.texthandler.select("Case");
		this.uppercasemode = false;
	}
};

OnScreenKeyboard.prototype.contains = function(x, y){
	if( x > this.left + 2*this.keywidth && x < this.left + 14*this.keywidth){
		if( y > this.top ){
			y = y - this.top;
			x = x - (this.left + 2*this.keywidth);
			var yind = Math.floor( y/this.keyheight );
			var xind = Math.floor( x/this.keywidth );
			var key = this["key"+yind][xind];
			this.texthandler.add_text(key);
		}
	} else if( x < this.left + 2*this.keywidth ){ //Touch is on the left side
		if( y > this.top && y < this.top + this.keyheight ){
			this.texthandler.select("Case");
			this.uppercasemode = !this.uppercasemode;
		}

		if( y > this.top + this.keyheight*2 && y < this.top + this.keyheight*3 ){
			this.texthandler.select("Cancel");
			this.oncancel(this.inputstr);
		}
	} else { //Touch is on the right side
		if( y > this.top && y < this.top + this.keyheight ){
			this.texthandler.delete_text();
		}

		if( y > this.top + this.keyheight*2 && y < this.top + this.keyheight*3 ){
			this.texthandler.select("Confirm");
			this.onconfirm(this.inputstr);
		}
	} 
};

})(); 
/* jshint browser: true */
/* global app  */

(function(){
"use strict";

var LevelupOverlay = app.ui.LevelupOverlay = function(x, y, display, state){
	app.ui.UIElement.call(this, x, y, "MiniLavaPane", "lvlup", display, "none", "none");
    this.charname = "Adalais";

    this.centerx = this.display.dimx/2;
    this.centery = this.display.dimy/2;

    this.state = state;

    this.panew = this.display.images[this.sprite].width;
    this.paneh = this.display.images[this.sprite].height;

	this.continuebutton = null;                                        		  	                                        		  	    

	this.titletextparams = {
		color:"#DEDEDE",
		shadowcolor:"#121212",
		align: "center",
		size:20,
		font:"Bedrock"
	};

	this.normcol = "#FADEDE";
	this.lvlcol = "#AADEFF";
	this.normshadcol = "#783434";
	this.lvlshadcol = "#233478";

	this.stattextparams = {
		color:this.normcol,
		shadowcolor:this.normshadcol,
		shadowthickness:3,
		align: "left",
		size:16,
		font:"Monospace"
	};

	this.pc = null;
	this.pclvlanimctr = 0;
	this.framectr = 0;
	this.lvlfs = 7;

	//transition variables
	this.yoffset = 0;
	this.textxoffset = 0;

	//class-based growth rates
	this.rates = {
		"lancer":{
			"POW":{rate:0.5,max:3},
			"ACC":{rate:0.5,max:3},
			"FOR":{rate:0.6,max:3},
			"CON":{rate:0.7,max:3},
			"RES":{rate:0.7,max:3},
			"SPD":{rate:0.4,max:3},
			"EVA":{rate:0.3,max:3}
		},
		"legionaire":{
			"POW":{rate:0.9,max:3},
			"ACC":{rate:0.5,max:3},
			"FOR":{rate:0.3,max:6},
			"CON":{rate:0.2,max:7},
			"RES":{rate:0.2,max:7},
			"SPD":{rate:0.2,max:7},
			"EVA":{rate:0.2,max:7}
		},
		"magician":{
			"POW":{rate:0.6,max:4},
			"ACC":{rate:0.5,max:2},
			"FOR":{rate:0.2,max:1},
			"CON":{rate:0.2,max:2},
			"RES":{rate:0.8,max:3},
			"SPD":{rate:0.8,max:3},
			"EVA":{rate:0.2,max:3}
		},
		"archer":{
			"POW":{rate:0.2,max:6},
			"ACC":{rate:0.8,max:4},
			"FOR":{rate:0.6,max:2},
			"CON":{rate:0.5,max:3},
			"RES":{rate:0.5,max:3},
			"SPD":{rate:0.8,max:3},
			"EVA":{rate:0.7,max:5}
		}				
	};

	this.stats = {
		"POW":120,
		"ACC":100,
		"FOR":80,
		"CON":60,
		"RES":40,
		"SPD":20,
		"EVA":1
	};
	this.statincs = {};

	this.transitionstate = "zoomingin"; // || "zoomingout" || "statzoom" || "lvling"     
};

LevelupOverlay.prototype = app.extend(app.ui.UIElement); 

LevelupOverlay.prototype.reset_with_char = function(ch){
	this.pc = ch;
	this.pclvlanimctr = 0;
	this.framectr = 0;
	this.lvlfs = 7;	

	this.charname = ch.name;

	this.stats = {
		"POW":120,
		"ACC":100,
		"FOR":80,
		"CON":60,
		"RES":40,
		"SPD":20,
		"EVA":1
	};

	this.transitionstate = "zoomingin";
	this.textxoffset = 1000;
	this.yoffset = 1000;
	this.statincs = {};
};

LevelupOverlay.prototype.reset_gain_level = function(){
	this.stats = {
		"POW":120,
		"ACC":100,
		"FOR":80,
		"CON":60,
		"RES":40,
		"SPD":20,
		"EVA":1
	};	

	this.transitionstate = "lvling";
};

LevelupOverlay.prototype.transition = function(){
	if( this.transitionstate === "zoomingin" ){
		if( this.yoffset !== 0 ){
			this.yoffset = this.yoffset/1.2;
			if( this.yoffset < 5 ){
				this.yoffset = 0;
				this.transitionstate = "statzoom";
			}
		}
	} else if( this.transitionstate === "statzoom" ){
		if( this.textxoffset !== 0 ){
			this.textxoffset = this.textxoffset/1.2;
			if( this.textxoffset < 5 ){
				this.textxoffset = 0;
				this.transitionstate = "lvling";
			}
		}
	} else {

	}

};

LevelupOverlay.prototype.draw = function(){
	if( this.FLAG_isVisible === true ){

		this.transition();

		//Draw the background pane
		this.display.draw_sprite(this.sprite, 
			this.centerx - this.panew/2, this.centery - this.paneh/2 + this.yoffset);

		//Charname and title
		this.display.draw_text_params(this.charname, 
			this.centerx + 23, 53 + this.yoffset, this.titletextparams);
		this.display.draw_text_params("Stat Gain!", 
			this.centerx + 23, 73 + this.yoffset, this.titletextparams);

		if( this.pc === null ){
			return;
		}

		//pc sprite and animations
		this.display.draw_sprite( this.pc.sprite+"_lvl"+this.pclvlanimctr,
			this.centerx - this.panew/2 + 10, this.centery-this.paneh/2+5+this.yoffset); 
		if( this.framectr >= this.lvlfs ){
			this.framectr = 0;
			this.pclvlanimctr++;
			if( this.pclvlanimctr > 3 ){
				this.pclvlanimctr = 0;
			}
		} else {
			this.framectr++;
		}

		if( this.transitionstate !== "zoomingin"){
			this.draw_stat_text();
			this.continuebutton.draw();
		}
	}
};

LevelupOverlay.prototype.draw_stat_text = function(){
	var ymax = this.centery - this.paneh/2 + 62;
	var ctr = 0;
	for( var statname in this.stats ){
		var y = ymax + ctr*19; ctr++;
		var startx = this.centerx-76+this.textxoffset; 
		this.display.draw_text_params(statname, 
			startx, y, this.stattextparams);	

		this.display.draw_text_params(this.pc.stats[statname], 
			startx + 50, y, this.stattextparams);

		if( this.transitionstate === "statzoom" ){
			continue;
		}	

		if( this.stats[statname].length !== undefined ){
			var code = this.stats[statname];
			if( !( /_/.test(code) ) ){
				this.stattextparams.color = this.lvlcol;
				this.stattextparams.shadowcolor = this.lvlshadcol;
			}
			this.display.draw_text_params(code, 
				startx + 80, y, this.stattextparams);	
			this.stattextparams.color = this.normcol;
			this.stattextparams.shadowcolor = this.normshadcol;		
		} else {
			var code = 90+(this.stats[statname]%10);
			this.display.draw_text_params(String.fromCharCode(code), 
				startx + 80, y, this.stattextparams);				
		}
	
		if( this.stats[statname] === 200 ){
			this.stats[statname] = 201;
			this.gain_stat(statname);
		} else if( this.stats[statname].length === undefined ){
			this.stats[statname]++;
		}
	}
};

LevelupOverlay.prototype.gain_stat = function(statname){
	var chance = this.rates[ this.pc.combatclass ][ statname ].rate;
	var maxinc = this.rates[ this.pc.combatclass ][ statname ].max;
	var isincrease = (Math.random() < chance );

	if( isincrease ){
		var incamt = Math.floor(Math.random()*maxinc) + 1;
		this.stats[statname]= "+"+incamt+" = "+(parseInt(this.pc.stats[statname])+incamt);
		this.statincs[statname] = incamt;
	} else {
		this.stats[statname]= "+0 = "+this.pc.stats[statname];
	}
};

LevelupOverlay.prototype.apply_stat_gains = function(){
	for( var i in this.statincs ){
		this.pc.stats[i] += this.statincs[i];
	}

	this.pc.xp = this.pc.xp - this.pc.xptonextlevel;
	this.pc.xptonextlevel = 
		app.world.Player.prototype.get_threshold_xp.call( {}, this.pc.stats );
	this.pc.calc_hpmp();
};

LevelupOverlay.prototype.contains = function(x,y){
	if( this.continuebutton.contains( x, y )){
		this.continuebutton.click(x,y);
	}
	return false;
};

// function test(classs){
// 	lvl.pc["class"] = classs;
// 	lvl.pc.stats = {
//         POW:1,
//         ACC:1,
//         FOR:1,
//         CON:1,
//         RES:1,
//         SPD:1,
//         EVA:1,
//         curr_hp: 100,
//         curr_mp:20
//     }

// 	for( var i = 0; i < 50; ++i ){
// 		lvl.statincs = {};
// 		for( var j in lvl.stats ){
// 			lvl.gain_stat(j);
// 		}
// 		lvl.apply_stat_gains();
// 	}
// };

})();
 
/* jshint browser: true */
/* global app, console */

(function(){
"use strict";

var UIElement = app.ui.UIElement = function(
	x, y, sprite, name, display, world, worldState){
    app.world.actor.Actor.call(this, x, y, sprite, name, display, world);

	this.sub_elements = [];

	this.worldState = worldState;

    this.FLAG_remove = false;
    this.FLAG_isVisible = true;
};

UIElement.prototype = app.extend(app.world.actor.Actor); 

UIElement.prototype.click = function(){};

UIElement.prototype.remove = function(){
	this.FLAG_remove = true;
};

UIElement.prototype.hide = function(){
	this.FLAG_isVisible = false;
};

UIElement.prototype.show = function(){
	this.FLAG_isVisible = true;
};

UIElement.prototype.show_sub_element = function(name){
	for( var i in this.sub_elements ){
		if( this.sub_elements[i].name == name ){
			this.sub_elements[i].show();
		}
	}
};

UIElement.prototype.hide_sub_element = function(name){
	for( var i in this.sub_elements ){
		if( this.sub_elements[i].name == name ){
			this.sub_elements[i].hide();
		}
	}
};

UIElement.prototype.draw = function(){
	if( this.FLAG_isVisible === true ){
		this.display.draw_sprite(this.sprite, this.x, this.y);

		for( var i in this.sub_elements ){
			this.sub_elements[i].draw();
		}		
	}	
};

UIElement.prototype.act = function(){
	for( var i in this.sub_elements ){
		this.sub_elements[i].act();

		if( this.sub_elements[i].FLAG_remve === true ){
			this.sub_elements[i].splice(i, 1);
		}
	}
};

UIElement.prototype.contains = function(x, y){
	if( this.FLAG_isVisible === false ){
		return false;
	}

	if( this.display.sprites[this.sprite] === undefined ){
		return false;
	}

	var widx = this.display.sprites[this.sprite].w + this.x;
	var widy = this.display.sprites[this.sprite].h + this.y;

	if( x >= this.x && y >= this.y && x < widx && y < widy ){
		return true;
	} else {
		return false;
	}
};

UIElement.prototype.hover = function(){};

var Minimap = function(x, y, sprite, name, display, world, worldState){
	UIElement.call( this, x, y, sprite, name, display, world, worldState);

	//Doesnt work i deleted a bunch of code
	for( var i = 0; i < this.width; ++i){
		for( var j = 0; j < this.height; ++j ){
			this.set_pixel(this.imageData, i, j, 30, 40, 30, 255);
		}
	}

	this.FLAG_isVisible = true;
};

Minimap.prototype = app.extend(UIElement);

Minimap.prototype.change_map = function(){
	var img = this.display.images[this.sprite];
	var c = document.createElement('canvas');
	c.width = img.width;
	c.height = img.height;
	var ctx = c.getContext('2d');
	ctx.drawImage(img);
};

Minimap.prototype.set_pixel = function(imageData, x, y, r, g, b, a){
    var index = (x + y * imageData.width) * 4;
    imageData.data[index+0] = r;
    imageData.data[index+1] = g;
    imageData.data[index+2] = b;
    imageData.data[index+3] = a;
};

Minimap.prototype.draw = function(){
	if( this.FLAG_isVisible ){
		//var wrat = Math.floor(this.width/this.world.mapw);
		//var hrat = Math.floor(this.height/this.world.maph);

		// for( var i in this.world.squares ){
		// 	var sq = this.world.squares[i];
		// 	if( sq.blocksMove || !sq.isExplored ){
		// 		for( var j = 0; j < wrat; j++ ){
		// 			for( var k = 0; k < hrat; k++ ){
		// 				this.set_pixel(this.imageData, sq.x*wrat+j, sq.y*hrat+k, 30, 40, 30, 255);
		// 			}
		// 		}
		// 	} else {
		// 		for( var j = 0; j < wrat; j++ ){
		// 			for( var k = 0; k < hrat; k++ ){
		// 				this.set_pixel(this.imageData, sq.x*wrat+j, sq.y*hrat+k, 100, 110, 100, 255);
		// 			}
		// 		}
		// 	}
		// } 

		for( var i = 0; i < this.width; i++ ){
			for( var j = 0; j < this.height; j++ ){
				var sq = this.world.get_square( Math.floor(app.normalize(i, 0, this.width, 0, this.world.mapw)),
												Math.floor(app.normalize(j, 0, this.height, 0, this.world.maph)) );

				if( sq === undefined ){
					console.log(Math.floor(app.normalize(i, 0, this.width, 0, this.world.mapw)),
												Math.floor(app.normalize(j, 0, this.height, 0, this.world.maph)) );
												continue; 
				}//console.log("GOT SQ, ", sq);

				if( !sq.isExplored ){
					this.set_pixel(this.imageData, i, j, 30, 40, 30, 255);
				} else {
					var spr = this.display.sprites[sq.sprite];
					this.set_pixel(this.imageData, i, j, spr.avg.r, spr.avg.g, spr.avg.b, 255);
				}

			}
		}	

		var me = this.world.get_character( this.world.active_char );
		var xme = me.x;
		var yme = me.y;

		var rcol = 255;
		var gcol = 0;
		var bcol = 0;
		for( var i in this.world.characters ){
			var act = this.world.characters[i];
			if( act.isDead ){
				continue;
			}

			var sq = this.world.get_square(act.x, act.y);
			if( !sq.isInSight){
				continue;
			}

			var dx = act.x - xme;
			var dy = act.y - yme;

			if( dx*dx + dy*dy > 80 ){
				continue;
			}

			if( act.allegiance == "enemy" ){
				rcol = 255; gcol = 0; bcol = 0;  
			} else {
				rcol = 255; gcol =255; bcol = 0;
			}

			var x = Math.floor(app.normalize(act.x, 0, this.world.mapw, 0, this.width));
			var y = Math.floor(app.normalize(act.y, 0, this.world.maph, 0, this.height));

			this.set_pixel(this.imageData, x+0, y+0, rcol, gcol, bcol, 255);
			this.set_pixel(this.imageData, x+1, y+0, rcol, gcol, bcol, 255);
			this.set_pixel(this.imageData, x-1, y+0, rcol, gcol, bcol, 255);
			this.set_pixel(this.imageData, x+0, y+1, rcol, gcol, bcol, 255);
			this.set_pixel(this.imageData, x+0, y-1, rcol, gcol, bcol, 255);
		}

		var act = this.world.get_character( this.world.active_char );
		var x = Math.floor(app.normalize(act.x, 0, this.world.mapw, 0, this.width));
		var y = Math.floor(app.normalize(act.y, 0, this.world.maph, 0, this.height));

		this.set_pixel(this.imageData, x+0, y+0, 0, 255, 0, 255);
		this.set_pixel(this.imageData, x+1, y+0, 0, 255, 0, 255);
		this.set_pixel(this.imageData, x-1, y+0, 0, 255, 0, 255);
		this.set_pixel(this.imageData, x+0, y+1, 0, 255, 0, 255);
		this.set_pixel(this.imageData, x+0, y-1, 0, 255, 0, 255);

		this.display.context.putImageData(this.imageData, this.x, this.y);
	}
};

})(); 
/* jshint browser: true */
/* global app */

(function(){
"use strict";

var CleanUIElem = app.ui.CleanUIElem;
var extend = app.extend;

var CleanModalDrop = app.ui.modals.CleanModalDrop = function( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	this.x = this.to_x_ratio( 472/2 - 240/2 );
	this.y = this.to_y_ratio( 288/2 - 106/2 );
	this.w = this.to_x_ratio( 240 );
	this.h = this.to_y_ratio( 106 );

	this.color = this.NEUTRALCOLOR;
	this.bcolor = this.VERYDARKCOLOR;

	this.modaltext = new CleanModalDropText( game, state, display );
	this.buttonlist = new CleanModalDropButtonList( game, state, display );
};
CleanModalDrop.prototype = extend(CleanUIElem);

CleanModalDrop.prototype.draw = function(){
	if( this.state.uistore.modals.drop.visible === false ){
		return;
	}

	this.display.draw_rect_params({
		x:this.x, 
		y:this.y, 
		width:this.w, 
		height:this.h, 
		color:this.color,
		bordercolor: this.bcolor,
		borderwidth: 1
	});

	this.modaltext.draw();
	this.buttonlist.draw();
};

CleanModalDrop.prototype.propogate_click = function( x, y ){
	if( this.state.uistore.modals.drop.visible === false ){
		return;
	}
	return this.buttonlist.propogate_click( x, y );
};

function CleanModalDropText( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	this.x = this.to_x_ratio( 118 );
	this.y = this.to_y_ratio( 93 );
	this.w = this.to_x_ratio( 236 );
	this.h = this.to_y_ratio( 35 );
	this.color = this.LIGHTCOLOR;

	this.textx = this.to_x_ratio( 124 );
	this.text1y = this.to_y_ratio( 95 );
	this.text2y = this.to_y_ratio( 110 );
	this.textcolor = this.VERYDARKCOLOR;
	this.font = this.FONT;
	this.defaulttextsize = 12;

	this.text1 = "Are you certain you want to drop";
	this.text2 =  "";
}
CleanModalDropText.prototype = extend(CleanUIElem);

CleanModalDropText.prototype.draw = function(){
	this.display.draw_rect_sprite( this.x, this.y, this.w, this.h, this.color );

	var item = this.state.uistore.currentitem;
	this.text2 = "'"+item.name+"'?";

	this.display.draw_text_params( this.text1, this.textx, this.text1y, {
		color: this.textcolor,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "left"
	});
	this.display.draw_text_params( this.text2, this.textx, this.text2y, {
		color: this.textcolor,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "left"
	});
};

function CleanModalDropButtonList( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	this.subelems = [];
	for( var i = 0; i < 2; i++ ){
		this.subelems.push( new CleanModalDropButton( game, state, display, i ) );
	}
}
CleanModalDropButtonList.prototype = extend(CleanUIElem);

CleanModalDropButtonList.prototype.draw = function(){
	for( var i in this.subelems ){
		this.subelems[i].draw();
	}
};

CleanModalDropButtonList.prototype.propogate_click = function(x,y){
	for( var i in this.subelems ){
		var elem = this.subelems[i];
		if( this.contains( elem.x, elem.y, elem.w, elem.h, x, y ) ){
			elem.onclick();
			return true;
		}
	}	
};

function CleanModalDropButton( game, state, display, index ){
	CleanUIElem.call( this, game, state, display );
	this.index = index;

	var xpos = null;
	var ypos = null;
	if( index % 2 === 0 ){
		xpos = 140;
		ypos = 155;
	} else {
		xpos = 250;
		ypos = 155;
	}

	this.x = this.to_x_ratio( xpos );
	this.y = this.to_y_ratio( ypos );
	this.w = this.to_x_ratio( 75 );
	this.h = this.to_y_ratio( 20 );
	this.color = this.LIGHTCOLOR;

	this.textx = this.to_x_ratio( xpos + 40 );
	this.texty = this.to_y_ratio( ypos + 10 );

	this.textcolor = this.VERYDARKCOLOR;
	this.font = this.FONT;
	this.defaulttextsize = 10;
}
CleanModalDropButton.prototype = extend(CleanUIElem);

CleanModalDropButton.prototype.draw = function(){
	var text = this.index === 0 ? "Yes" : "No";

	this.display.draw_rect_sprite( this.x, this.y, this.w, this.h, this.color );
	this.display.draw_text_params( text, this.textx, this.texty, {
		color: this.textcolor,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "center"
	});
};

CleanModalDropButton.prototype.onclick = function(){
	var ch = this.state.player.get_pcs()[ this.state.uistore.pcselected ];
	if( ch === undefined ){
		return;
	}
	var itemname = this.state.uistore.currentitemname;
	if( this.index === 0 ){
		ch.remove_item_from_inventory( itemname );
		ch.unequip_item( itemname );
	}

	this.state.inter.hide_modal( this.state.uistore.modals.drop );
	this.state.inter.unset_currentitem();
};

})(); 
/* jshint browser: true */
/* global app */

(function(){
"use strict";

var CleanUIElem = app.ui.CleanUIElem;
var extend = app.extend;

var CleanModalEquip = app.ui.modals.CleanModalEquip = function( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	this.x = this.to_x_ratio( 472/2 - 240/2 );
	this.y = this.to_y_ratio( 288/2 - 106/2 );
	this.w = this.to_x_ratio( 240 );
	this.h = this.to_y_ratio( 106 );

	this.color = this.NEUTRALCOLOR;
	this.bcolor = this.VERYDARKCOLOR;

	this.modaltext = new CleanModalEquipText( game, state, display );
	this.buttonlist = new CleanModalEquipButtonList( game, state, display );
};
CleanModalEquip.prototype = extend(CleanUIElem);

CleanModalEquip.prototype.draw = function(){
	if( this.state.uistore.modals.equip.visible === false ){
		return;
	}

	this.display.draw_rect_params( {
		x:this.x, 
		y:this.y, 
		width:this.w, 
		height:this.h, 
		color:this.color,
		bordercolor: this.bcolor,
		borderwidth: 1
	} );

	this.modaltext.draw();
	this.buttonlist.draw();
};

CleanModalEquip.prototype.propogate_click = function( x, y ){
	if( this.state.uistore.modals.equip.visible === false ){
		return;
	}
	return this.buttonlist.propogate_click( x, y );
};

function CleanModalEquipText( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	this.x = this.to_x_ratio( 118 );
	this.y = this.to_y_ratio( 93 );
	this.w = this.to_x_ratio( 236 );
	this.h = this.to_y_ratio( 35 );
	this.color = this.LIGHTCOLOR;

	this.textx = this.to_x_ratio( 472/2 );
	this.text1y = this.to_y_ratio( 288/2 - 36);
	this.text2y = this.to_y_ratio( 110 );
	this.textcolor = this.VERYDARKCOLOR;
	this.font = this.FONT;
	this.defaulttextsize = 12;
	this.text1 = "Where do you equip this?";
}
CleanModalEquipText.prototype = extend(CleanUIElem);

CleanModalEquipText.prototype.draw = function(){
	this.display.draw_rect_sprite( this.x, this.y, this.w, this.h, this.color );

	this.display.draw_text_params( this.text1, this.textx, this.text1y, {
		color: this.textcolor,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "center"
	});
};

function CleanModalEquipButtonList( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	this.subelems = [];
	for( var i in CleanUIElem.prototype.equips ){
		this.subelems.push( new CleanModalEquipButton( game, state, display, i ) );
	}
}
CleanModalEquipButtonList.prototype = extend(CleanUIElem);

CleanModalEquipButtonList.prototype.draw = function(){
	for( var i in this.subelems ){
		this.subelems[i].draw();
	}
};

CleanModalEquipButtonList.prototype.propogate_click = function(x,y){
	for( var i in this.subelems ){
		var elem = this.subelems[i];
		if( this.contains( elem.x, elem.y, elem.w, elem.h, x, y ) ){
			elem.onclick();
			return true;
		}
	}	
};

function CleanModalEquipButton( game, state, display, index ){
	CleanUIElem.call( this, game, state, display );
	this.index = index;

	var xoffset = 120;

	var xpos = xoffset + 34 * index;
	var ypos = 153;

	this.x = this.to_x_ratio( xpos );
	this.y = this.to_y_ratio( ypos );
	this.w = this.to_x_ratio( 30 );
	this.h = this.to_y_ratio( 20 );
	this.color = this.LIGHTCOLOR;

	this.textx = this.to_x_ratio( xpos + 19 );
	this.texty = this.to_y_ratio( ypos + 10 );
	this.textcolor = this.VERYDARKCOLOR;
	this.font = this.FONT;
	this.defaulttextsize = 10;
}
CleanModalEquipButton.prototype = extend(CleanUIElem);

CleanModalEquipButton.prototype.draw = function(){

	var type = this.state.uistore.currentitem.equipTypes[ this.index ];
	if( type === undefined ){
		return;
	}

	var text = type;

	this.display.draw_rect_sprite( this.x, this.y, this.w, this.h, this.color );
	this.display.draw_text_params( text, this.textx, this.texty, {
		color: this.textcolor,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "center"
	});

	return true;
};

CleanModalEquipButton.prototype.onclick = function(){
	var ch = this.state.player.get_pcs()[ this.state.uistore.pcselected ];
	if( ch === undefined ){
		return;
	}

	ch.equip_item( this.state.uistore.currentitemname, 
		this.state.uistore.currentitem.equipTypes[ this.index ] );
	this.state.inter.hide_modal( this.state.uistore.modals.equip );
};

})(); 
/* jshint browser: true */
/* global app */

(function(){
"use strict";

var CleanUIElem = app.ui.CleanUIElem;
var extend = app.extend;

var CleanModalGive = app.ui.modals.CleanModalGive = function( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	this.x = this.to_x_ratio( 472/2 - 240/2 );
	this.y = this.to_y_ratio( 288/2 - 106/2 );
	this.w = this.to_x_ratio( 240 );
	this.h = this.to_y_ratio( 106 );

	this.color = this.NEUTRALCOLOR;
	this.bcolor = this.VERYDARKCOLOR;

	this.modaltext = new CleanModalGiveText( game, state, display );
	this.buttonlist = new CleanModalGiveButtonList( game, state, display );
};
CleanModalGive.prototype = extend(CleanUIElem);

CleanModalGive.prototype.draw = function(){
	if( this.state.uistore.modals.give.visible === false ){
		return;
	}

	this.display.draw_rect_params({
		x:this.x, 
		y:this.y, 
		width:this.w, 
		height:this.h, 
		color:this.color,
		bordercolor: this.bcolor,
		borderwidth: 1
	});

	this.modaltext.draw();
	this.buttonlist.draw();
};

CleanModalGive.prototype.propogate_click = function( x, y ){
	if( this.state.uistore.modals.give.visible === false ){
		return;
	}
	return this.buttonlist.propogate_click( x, y );
};

function CleanModalGiveText( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	this.x = this.to_x_ratio( 118 );
	this.y = this.to_y_ratio( 93 );
	this.w = this.to_x_ratio( 236 );
	this.h = this.to_y_ratio( 35 );
	this.color = this.LIGHTCOLOR;

	this.textx = this.to_x_ratio( 124 );
	this.text1y = this.to_y_ratio( 95 );
	this.text2y = this.to_y_ratio( 110 );
	this.textcolor = this.VERYDARKCOLOR;
	this.font = this.FONT;
	this.defaulttextsize = 12;

	this.text1 = "To which person do you want this";
	this.text2 =  "item given?";
}
CleanModalGiveText.prototype = extend(CleanUIElem);

CleanModalGiveText.prototype.draw = function(){
	this.display.draw_rect_sprite( this.x, this.y, this.w, this.h, this.color );

	this.display.draw_text_params( this.text1, this.textx, this.text1y, {
		color: this.textcolor,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "left"
	});
	this.display.draw_text_params( this.text2, this.textx, this.text2y, {
		color: this.textcolor,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "left"
	});
};

function CleanModalGiveButtonList( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	this.subelems = [];
	for( var i = 0; i < 6; i++ ){
		this.subelems.push( new CleanModalGiveButton( game, state, display, i ) );
	}
}
CleanModalGiveButtonList.prototype = extend(CleanUIElem);

CleanModalGiveButtonList.prototype.draw = function(){
	for( var i in this.subelems ){
		this.subelems[i].draw();
	}
};

CleanModalGiveButtonList.prototype.propogate_click = function(x,y){
	for( var i in this.subelems ){
		var elem = this.subelems[i];
		if( this.contains( elem.x, elem.y, elem.w, elem.h, x, y ) ){
			elem.onclick();
			return true;
		}
	}	
};

function CleanModalGiveButton( game, state, display, index ){
	CleanUIElem.call( this, game, state, display );
	this.index = index;

	var xpos = null;
	var ypos = null;
	if( index % 2 === 0 ){
		var xoffset = 120;
		xpos = xoffset + 39 * index;
		ypos = 140;
	} else {
		var xoffset = 81;
		xpos = xoffset + 39 * index;
		ypos = 170;
	}

	this.x = this.to_x_ratio( xpos );
	this.y = this.to_y_ratio( ypos );
	this.w = this.to_x_ratio( 75 );
	this.h = this.to_y_ratio( 20 );
	this.color = this.LIGHTCOLOR;

	this.textx = this.to_x_ratio( xpos + 40 );
	this.texty = this.to_y_ratio( ypos + 10 );

	this.textcolor = this.VERYDARKCOLOR;
	this.font = this.FONT;
	this.defaulttextsize = 10;
}
CleanModalGiveButton.prototype = extend(CleanUIElem);

CleanModalGiveButton.prototype.draw = function(){
	var ch = this.state.player.get_pcs()[ this.index ];
	if( ch === undefined ){
		return;
	}

	var text = ch.name;
	if( text.length > 13 ){
		this.defaulttextsize = 8;
	}

	this.display.draw_rect_sprite( this.x, this.y, this.w, this.h, this.color );
	this.display.draw_text_params( text, this.textx, this.texty, {
		color: this.textcolor,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "center"
	});
};

CleanModalGiveButton.prototype.onclick = function(){
	var ch = this.state.player.get_pcs()[ this.index ];
	if( ch === undefined ){
		return;
	}

	var itemname = this.state.uistore.currentitemname;
	var mych = this.state.player.get_pcs()[ this.state.uistore.pcselected ];

	if( mych === ch ){
		this.state.inter.hide_modal( this.state.uistore.modals.give );
		return;
	}

	this.state.player.transfer_item( mych, ch, itemname );
};

})(); 
/* jshint browser: true */
/* global app */

(function(){
"use strict";

var CleanUIElem = app.ui.CleanUIElem;
var extend = app.extend;

var CleanModalItemInfo = app.ui.modals.CleanModalItemInfo = 
	function( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	this.x = this.to_x_ratio( 472/2 - 380/2 );
	this.y = this.to_y_ratio( 288/2 - 234/2 );
	this.w = this.to_x_ratio( 380 );
	this.h = this.to_y_ratio( 233 );

	this.color = this.NEUTRALCOLOR;
	this.bcolor = this.VERYDARKCOLOR;

	this.subelems = [
		new CleanModalItemInfoHead( game, state, display ),
		new CleanModalItemProjection( game, state, display ),
		new CleanModalItemInfoWeight( game, state, display ),
		new CleanModalItemInfoIcon( game, state, display ),
		new CleanModalItemInfoProperties( game, state, display ),
		new CleanModalItemInfoDescription( game, state, display )
	];

	this.store = this.state.uistore.modals.iteminfo;

};
CleanModalItemInfo.prototype = extend(CleanUIElem);

CleanModalItemInfo.prototype.draw = function(){
	if( this.store.visible === false && this.store.animating === false ){
		return;
	} else if( this.store.visible === false && this.store.animating ){
		this.animate_out_pre( this.state.uistore.modals.iteminfo );
	} else {
		this.animate_in_pre( this.state.uistore.modals.iteminfo );
	}

	this.display.draw_rect_params( {
		x:this.x, 
		y:this.y, 
		width:this.w, 
		height:this.h, 
		color:this.color,
		bordercolor: this.bcolor,
		borderwidth: 1
	} );

	for( var i in this.subelems ){
		this.subelems[i].draw();
	}

	this.animate_post( this.state.uistore.modals.iteminfo );
};

CleanModalItemInfo.prototype.propogate_click = function(x, y){
	var val = false;
	for( var i in this.subelems ){
		var elem = this.subelems[i];
		val = val || elem.propogate_click( x, y );
	}
	return val;	
};

function CleanModalItemInfoHead( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	this.x = this.to_x_ratio( 48 );
	this.y = this.to_y_ratio( 30 );
	this.w = this.to_x_ratio( 375 );
	this.h = this.to_y_ratio( 20 );
	this.color = this.VERYDARKCOLOR;

	this.label = new CleanModalItemInfoHeadLabel( game, state, display );
	this.close = new CleanModalItemInfoHeadCloseButton( game, state, display );
}
CleanModalItemInfoHead.prototype = extend(CleanUIElem);

CleanModalItemInfoHead.prototype.draw = function(){
	this.display.draw_rect_sprite( this.x, this.y, this.w, this.h, this.color );

	this.label.draw();
	this.close.draw();
};

CleanModalItemInfoHead.prototype.propogate_click = function(x, y){
	if( this.contains( 
		this.close.x, this.close.y, this.close.w, this.close.h, x, y
		) ){

		this.close.onclick();
		return true;
	}
};

function CleanModalItemInfoHeadLabel( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	this.textx = this.to_x_ratio( 58 );
	this.texty = this.to_y_ratio( 32 );
	this.textcolor = this.LIGHTTEXTCOLOR;
	this.font = this.FONT;
	this.defaulttextsize = 12;
}
CleanModalItemInfoHeadLabel.prototype = extend(CleanUIElem);

CleanModalItemInfoHeadLabel.prototype.draw = function(){
	var item = this.state.uistore.currentitem;

	this.display.draw_text_params( item.name, this.textx, this.texty, {
		color: this.textcolor,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "left"
	});
};

function CleanModalItemInfoHeadCloseButton( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	this.x = this.to_x_ratio( 403 );
	this.y = this.to_y_ratio( 30 );
	this.w = this.to_x_ratio( 20 );
	this.h = this.to_y_ratio( 20 );
	this.color = this.SELECTEDCOLOR;

	this.textx = this.to_x_ratio( 419 );
	this.texty = this.to_y_ratio( 40 );
	this.textcolor = this.LIGHTTEXTCOLOR;
	this.font = this.FONT;
	this.defaulttextsize = 12;
}
CleanModalItemInfoHeadCloseButton.prototype = extend(CleanUIElem);

CleanModalItemInfoHeadCloseButton.prototype.draw = function(){
	this.display.draw_rect_sprite( this.x, this.y, this.w, this.h, this.color );
	this.display.draw_text_params( "X", this.textx, this.texty, {
		color: this.textcolor,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "center"
	});
};

CleanModalItemInfoHeadCloseButton.prototype.onclick = function(){
	this.state.inter.hide_modal( this.state.uistore.modals.iteminfo );
};

function CleanModalItemProjection( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	this.x = this.to_x_ratio( 118 );
	this.y = this.to_y_ratio( 95 );
	this.w = this.to_x_ratio( 236 );
	this.h = this.to_y_ratio( 35 );
	this.color = this.LIGHTCOLOR;

	this.subelems = [
		new CleanModalItemProjectionHead( game, state, display ),
		new CleanModalItemProjectionList( game, state, display )
	];
}
CleanModalItemProjection.prototype = extend(CleanUIElem);

CleanModalItemProjection.prototype.draw = function(){
	for( var i in this.subelems ){
		this.subelems[i].draw();
	}
};

function CleanModalItemProjectionHead( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	this.x = this.to_x_ratio( 268 );
	this.y = this.to_y_ratio( 117 );
	this.w = this.to_x_ratio( 151 );
	this.h = this.to_y_ratio( 33 );
	this.color = this.LIGHTCOLOR;

	this.label = new CleanModalItemProjectionHeadLabel( game, state, display );
	this.columns = new CleanModalItemProjectionHeadColumns( game, state, display );
}
CleanModalItemProjectionHead.prototype = extend(CleanUIElem);

CleanModalItemProjectionHead.prototype.draw = function(){
	this.display.draw_rect_sprite( this.x, this.y, this.w, this.h, this.color );
	this.label.draw();
	this.columns.draw();
};

function CleanModalItemProjectionHeadLabel( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	this.textx = this.to_x_ratio( 349 );
	this.texty = this.to_y_ratio( 125 );
	this.textcolor = this.VERYDARKCOLOR;
	this.font = this.FONT;
	this.defaulttextsize = 12;
}
CleanModalItemProjectionHeadLabel.prototype = extend(CleanUIElem);

CleanModalItemProjectionHeadLabel.prototype.draw = function(){
	this.display.draw_text_params( "If you equip...", this.textx, this.texty, {
		color: this.textcolor,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "center"
	});
};

function CleanModalItemProjectionHeadColumns( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	this.text1x = this.to_x_ratio( 297 + 4 );
	this.text2x = this.to_x_ratio( 350 + 4);
	this.text3x = this.to_x_ratio( 398 + 4);
	this.texty = this.to_y_ratio( 142 );
	this.textcolor = this.VERYDARKCOLOR;
	this.font = this.FONT;
	this.defaulttextsize = 12;
}
CleanModalItemProjectionHeadColumns.prototype = extend(CleanUIElem);

CleanModalItemProjectionHeadColumns.prototype.draw = function(){
	this.display.draw_text_params( "Stats", this.text1x, this.texty, {
		color: this.textcolor,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "center"
	});
	this.display.draw_text_params( "From", this.text2x, this.texty, {
		color: this.textcolor,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "center"
	});
	this.display.draw_text_params( "To", this.text3x, this.texty, {
		color: this.textcolor,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "center"
	});
};

function CleanModalItemProjectionList( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	this.x = this.to_x_ratio( 268 );
	this.y = this.to_y_ratio( 150 );
	this.w = this.to_x_ratio( 61 );
	this.h = this.to_y_ratio( 106 );
	this.color = this.VERYDARKCOLOR;

	this.subelems = [];
	for( var i in CleanUIElem.prototype.stats ){
		this.subelems.push( new CleanModalItemProjectionStat(game, state, display, i) );
		this.subelems.push( new CleanModalItemProjectionFrom(game, state, display, i) );
		this.subelems.push( new CleanModalItemProjectionTo(game, state, display, i) );
	}
}
CleanModalItemProjectionList.prototype = extend(CleanUIElem);

CleanModalItemProjectionList.prototype.draw = function(){
	this.display.draw_rect_sprite( this.x, this.y, this.w, this.h, this.color );

	for( var i in this.subelems ){
		this.subelems[i].draw();
	}
};

function CleanModalItemProjectionStat( game, state, display, index ){
	CleanUIElem.call( this, game, state, display );
	this.index = index;

	var yoffset = 159;
	var stride = 15;

	this.text1x = this.to_x_ratio( 286 );
	this.text2x = this.to_x_ratio( 319 );
	this.texty = this.to_y_ratio( yoffset + stride*index );
	this.textcolor = this.LIGHTTEXTCOLOR;
	this.font = this.FONT;
	this.defaulttextsize = 12;
}
CleanModalItemProjectionStat.prototype = extend(CleanUIElem);

CleanModalItemProjectionStat.prototype.draw = function(){
	var ch = this.state.player.get_pcs()[ this.state.uistore.pcselected ];
	if( ch === undefined ){
		return;
	}
	var statname = CleanUIElem.prototype.stats[ this.index ];

	this.display.draw_text_params(statname, this.text1x, this.texty, {
		color: this.LIGHTCOLOR,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "center"
	});

	this.display.draw_text_params(ch.stats[ statname ], this.text2x, this.texty, {
		color: this.textcolor,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "center"
	});
};

function CleanModalItemProjectionFrom( game, state, display, index ){
	CleanUIElem.call( this, game, state, display );

	this.index = index;

	var yoffset = 159;
	var stride = 15;

	this.textx = this.to_x_ratio( 353 );
	this.texty = this.to_y_ratio( yoffset + stride*index );
	this.color = this.LIGHTTEXTCOLOR;
	this.shadow = "black";
	this.font = this.FONT;
	this.defaulttextsize = 12;
}
CleanModalItemProjectionFrom.prototype = extend(CleanUIElem);

CleanModalItemProjectionFrom.prototype.draw = function(){
	var ch = this.state.player.get_pcs()[ this.state.uistore.pcselected ];
	if( ch === undefined ){
		return;
	}
	var statname = CleanUIElem.prototype.stats[ this.index ];
	var fin = ch.get_final_stat( statname );
	var text = fin.stat - fin.base;
	if( text > 0 ){
		text = "+"+text;
	} else if( text === 0 ){
		return;
	}

	this.display.draw_text_params(text, this.textx, this.texty, {
		color: this.textcolor,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "center",
		shadowcolor: this.shadow
	});
};

function CleanModalItemProjectionTo( game, state, display, index ){
	CleanUIElem.call( this, game, state, display );

	this.index = index;

	var yoffset = 159;
	var stride = 15;

	this.textx = this.to_x_ratio( 401 );
	this.texty = this.to_y_ratio( yoffset + stride*index );
	this.color = this.LIGHTTEXTCOLOR;
	this.rshadow = "#770000";
	this.gshadow = "#007700";
	this.bshadow = "black";
	this.font = this.FONT;
	this.defaulttextsize = 12;
}
CleanModalItemProjectionTo.prototype = extend(CleanUIElem);

CleanModalItemProjectionTo.prototype.draw = function(){
	var ch = this.state.player.get_pcs()[ this.state.uistore.pcselected ];
	if( ch === undefined ){
		return;
	}
	var item = this.state.uistore.currentitem;
	var text = "";
	var shadow = null;
	if( item.equipTypes.length === 0 ){
		var statname = CleanUIElem.prototype.stats[ this.index ];
		var fin = ch.get_final_stat( statname );
		var originalmod = fin.stat - fin.base;
		text = originalmod;
		if( text > 0 ){
			text = "+"+text;
		} else if( text === 0 ){
			return;
		}
	} else {
		var statname = CleanUIElem.prototype.stats[ this.index ];
		var fin = ch.get_final_stat( statname );
		var originalmod = fin.stat - fin.base;
		var tmpequip = ch.equipment[ item.equipTypes[0] ];
		ch.equipment[ item.equipTypes[0] ] = item.name;
		var newmod = fin.stat - fin.base;
		ch.equipment[ item.equipTypes[0] ] = tmpequip;

		shadow = this.bshadow;
		if( newmod > originalmod ){
			shadow = this.gshadow;
		} else if( newmod < originalmod ){
			shadow = this.rshadow;
		}

		text = newmod;
		if( text > 0 ){
			text = "+"+text;
		} else if( text === 0 ){
			return;
		}
	}

	this.display.draw_text_params(text, this.textx, this.texty, {
		color: this.textcolor,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "center",
		shadowcolor: shadow
	});
};

function CleanModalItemInfoWeight( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	this.x = this.to_x_ratio( 309 );
	this.y = this.to_y_ratio( 73 );
	this.w = this.to_x_ratio( 110 );
	this.h = this.to_y_ratio( 19 );
	this.color = this.VERYDARKCOLOR;

	this.text1x = this.to_x_ratio( 343 );
	this.text2x = this.to_x_ratio( 395 );
	this.texty = this.to_y_ratio( 83 );
	this.textcolor = this.LIGHTCOLOR;
	this.font = this.FONT;
	this.defaulttextsize = 12;
}
CleanModalItemInfoWeight.prototype = extend(CleanUIElem);

CleanModalItemInfoWeight.prototype.draw = function(){
	this.display.draw_rect_sprite( this.x, this.y, this.w, this.h, this.color );

	var item = this.state.uistore.currentitem;

	this.display.draw_text_params("Weight:", this.text1x, this.texty, {
		color: this.textcolor,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "center"
	});

	this.display.draw_text_params(item.weight+' lbs', this.text2x, this.texty, {
		color: this.LIGHTTEXTCOLOR,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "center"
	});
};

function CleanModalItemInfoIcon( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	this.x = this.to_x_ratio( 268 );
	this.y = this.to_y_ratio( 67 );
	this.w = this.to_x_ratio( 32 );
	this.h = this.to_y_ratio( 32 );
	this.color = this.LIGHTCOLOR;

	this.spritex = this.to_x_ratio( 284 );
	this.spritey = this.to_y_ratio( 83 );
	this.spritew = this.to_x_ratio( 14 );
	this.spriteh = this.to_y_ratio( 14 );
}
CleanModalItemInfoIcon.prototype = extend(CleanUIElem);

CleanModalItemInfoIcon.prototype.draw = function(){
	var item = this.state.uistore.currentitem;
	this.display.draw_rect_sprite( this.x, this.y, this.w, this.h, this.color );
	this.display.draw_sprite_scaled_centered(
		item.sprite, this.spritex, this.spritey, this.spritew, this.spriteh);
};

function CleanModalItemInfoDescription( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	this.x = this.to_x_ratio( 48 );
	this.y = this.to_y_ratio( 52 );
	this.w = this.to_x_ratio( 208 );
	this.h = this.to_y_ratio( 98 );
	this.color = this.LIGHTCOLOR;

	this.textx = this.to_x_ratio( 50 );
	this.texty = this.to_y_ratio( 64 );
	this.lineheight = this.to_y_ratio( 14 );
	this.maxwidth = this.to_x_ratio( 204 );
	this.textcolor = this.VERYDARKCOLOR;
	this.font = this.FONT;
	this.defaulttextsize = 12;
}
CleanModalItemInfoDescription.prototype = extend(CleanUIElem);

CleanModalItemInfoDescription.prototype.draw = function(){
	this.display.draw_rect_sprite( this.x, this.y, this.w, this.h, this.color );

	var item = this.state.uistore.currentitem;

	this.display.wrap_text( item.description, this.textx, this.texty, {
		color: this.textcolor,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "left",
		lineheight: this.lineheight,
		maxwidth: this.maxwidth
	});
};

function CleanModalItemInfoProperties( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	this.x = this.to_x_ratio( 48 );
	this.y = this.to_y_ratio( 150 );
	this.w = this.to_x_ratio( 208 );
	this.h = this.to_y_ratio( 106 );
	this.color = this.VERYDARKCOLOR;

}
CleanModalItemInfoProperties.prototype = extend(CleanUIElem);

CleanModalItemInfoProperties.prototype.draw = function(){
	this.display.draw_rect_sprite( this.x, this.y, this.w, this.h, this.color );

};

})(); 
/* jshint browser: true */
/* global app */

(function(){
"use strict";

var CleanUIElem = app.ui.CleanUIElem;
var extend = app.extend;

var CleanModalReorder = app.ui.modals.CleanModalReorder = 
	function( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	this.x = this.to_x_ratio( 472/2 - 240/2 );
	this.y = this.to_y_ratio( 288/2 - 106/2 );
	this.w = this.to_x_ratio( 240 );
	this.h = this.to_y_ratio( 106 );

	this.color = this.NEUTRALCOLOR;
	this.bcolor = this.VERYDARKCOLOR;

	this.modaltext = new CleanModalReorderText( game, state, display );
	this.buttonlist = new CleanModalReorderButtonList( game, state, display );
};
CleanModalReorder.prototype = extend(CleanUIElem);

CleanModalReorder.prototype.draw = function(){
	if( this.state.uistore.modals.reorder.visible === false ){
		return;
	}

	this.display.draw_rect_params( {
		x:this.x, 
		y:this.y, 
		width:this.w, 
		height:this.h, 
		color:this.color,
		bordercolor: this.bcolor,
		borderwidth: 1
	} );

	this.modaltext.draw();
	this.buttonlist.draw();
};

CleanModalReorder.prototype.propogate_click = function( x, y ){
	if( this.state.uistore.modals.reorder.visible === false ){
		return;
	}
	this.buttonlist.propogate_click( x, y );
};

function CleanModalReorderText( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	this.x = this.to_x_ratio( 118 );
	this.y = this.to_y_ratio( 93 );
	this.w = this.to_x_ratio( 236 );
	this.h = this.to_y_ratio( 35 );
	this.color = this.LIGHTCOLOR;

	this.textx = this.to_x_ratio( 124 );
	this.text1y = this.to_y_ratio( 95 );
	this.text2y = this.to_y_ratio( 110 );
	this.textcolor = this.VERYDARKCOLOR;
	this.font = this.FONT;
	this.defaulttextsize = 12;

	this.text1 = "At which position in your party do";
	this.text2 =  "you want this character?";
}
CleanModalReorderText.prototype = extend(CleanUIElem);

CleanModalReorderText.prototype.draw = function(){
	this.display.draw_rect_sprite( this.x, this.y, this.w, this.h, this.color );

	this.display.draw_text_params( this.text1, this.textx, this.text1y, {
		color: this.textcolor,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "left"
	});
	this.display.draw_text_params( this.text2, this.textx, this.text2y, {
		color: this.textcolor,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "left"
	});
};

function CleanModalReorderButtonList( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	this.subelems = [];
	for( var i = 0; i < 6; i++ ){
		this.subelems.push( new CleanModalReorderButton( game, state, display, i ) );
	}
}
CleanModalReorderButtonList.prototype = extend(CleanUIElem);

CleanModalReorderButtonList.prototype.draw = function(){
	for( var i in this.subelems ){
		this.subelems[i].draw();
	}
};

CleanModalReorderButtonList.prototype.propogate_click = function(x,y){
	for( var i in this.subelems ){
		var elem = this.subelems[i];
		if( this.contains( elem.x, elem.y, elem.w, elem.h, x, y ) ){
			elem.onclick();
		}
	}	
};

function CleanModalReorderButton( game, state, display, index ){
	CleanUIElem.call( this, game, state, display );
	this.index = index;

	var xoffset = 130;

	var xpos = xoffset + 36 * index;
	var ypos = 153;

	this.x = this.to_x_ratio( xpos );
	this.y = this.to_y_ratio( ypos );
	this.w = this.to_x_ratio( 30 );
	this.h = this.to_y_ratio( 20 );
	this.color = this.LIGHTCOLOR;

	this.textx = this.to_x_ratio( xpos + 19 );
	this.texty = this.to_y_ratio( ypos + 10 );
	this.textcolor = this.VERYDARKCOLOR;
	this.font = this.FONT;
	this.defaulttextsize = 12;
}
CleanModalReorderButton.prototype = extend(CleanUIElem);

CleanModalReorderButton.prototype.draw = function(){
	var ch = this.state.player.get_pcs()[ this.index ];
	if( ch === undefined ){
		return;
	}

	this.display.draw_rect_sprite( this.x, this.y, this.w, this.h, this.color );
	this.display.draw_text_params( this.index + 1, this.textx, this.texty, {
		color: this.textcolor,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "center"
	});
};

CleanModalReorderButton.prototype.onclick = function(){
	var ch = this.state.player.get_pcs()[ this.index ];
	if( ch === undefined ){
		return;
	}

	this.state.player.reorder_pc( this.state.uistore.pcselected, this.index );
};

})(); 
/* jshint browser: true */
/* global app */

(function(){
"use strict";

var CleanUIElem = app.ui.CleanUIElem;
var extend = app.extend;

var CleanModalSpellInfo = app.ui.modals.CleanModalSpellInfo = 
	function( game, state, display ){

	CleanUIElem.call( this, game, state, display );

	this.x = this.to_x_ratio( 472/2 - 380/2 );
	this.y = this.to_y_ratio( 288/2 - 130/2 );
	this.w = this.to_x_ratio( 380 );
	this.h = this.to_y_ratio( 130 );

	this.color = this.NEUTRALCOLOR;
	this.bcolor = this.VERYDARKCOLOR;

	this.subelems = [
		new CleanModalSpellInfoHead( game, state, display ),
		new CleanModalSpellInfoDescription( game, state, display ),
	];

	this.store = this.state.uistore.modals.spellinfo;
};
CleanModalSpellInfo.prototype = extend(CleanUIElem);

CleanModalSpellInfo.prototype.draw = function(){
	if( this.store.visible === false && this.store.animating === false ){
		return;
	} else if( this.store.visible === false && this.store.animating ){
		this.animate_out_pre( this.state.uistore.modals.spellinfo );
	} else {
		this.animate_in_pre( this.state.uistore.modals.spellinfo );
	}

	this.display.draw_rect_params( {
		x:this.x, 
		y:this.y, 
		width:this.w, 
		height:this.h, 
		color:this.color,
		bordercolor: this.bcolor,
		borderwidth: 1
	} );

	for( var i in this.subelems ){
		this.subelems[i].draw();
	}

	this.animate_post( this.state.uistore.modals.spellinfo );
};

CleanModalSpellInfo.prototype.propogate_click = function(x, y){
	var val = false;
	for( var i in this.subelems ){
		var elem = this.subelems[i];
		val = val || elem.propogate_click( x, y );
	}
	return val;	
};

function CleanModalSpellInfoHead( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	this.x = this.to_x_ratio( 48 );
	this.y = this.to_y_ratio( 81 );
	this.w = this.to_x_ratio( 375 );
	this.h = this.to_y_ratio( 20 );
	this.color = this.VERYDARKCOLOR;

	this.label = new CleanModalSpellInfoHeadLabel( game, state, display );
	this.close = new CleanModalSpellInfoHeadCloseButton( game, state, display );
}
CleanModalSpellInfoHead.prototype = extend(CleanUIElem);

CleanModalSpellInfoHead.prototype.draw = function(){
	this.display.draw_rect_sprite( this.x, this.y, this.w, this.h, this.color );

	this.label.draw();
	this.close.draw();
};

CleanModalSpellInfoHead.prototype.propogate_click = function(x, y){
	if( this.contains( 
		this.close.x, this.close.y, this.close.w, this.close.h, x, y
		) ){

		this.close.onclick();
		return true;
	}
};

function CleanModalSpellInfoHeadLabel( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	this.textx = this.to_x_ratio( 58 );
	this.texty = this.to_y_ratio( 83 );
	this.textcolor = this.LIGHTTEXTCOLOR;
	this.font = this.FONT;
	this.defaulttextsize = 12;
}
CleanModalSpellInfoHeadLabel.prototype = extend(CleanUIElem);

CleanModalSpellInfoHeadLabel.prototype.draw = function(){
	var spellname = this.state.uistore.currentspell;

	this.display.draw_text_params( spellname, this.textx, this.texty, {
		color: this.textcolor,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "left"
	});
};

function CleanModalSpellInfoHeadCloseButton( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	this.x = this.to_x_ratio( 403 );
	this.y = this.to_y_ratio( 81 );
	this.w = this.to_x_ratio( 20 );
	this.h = this.to_y_ratio( 20 );
	this.color = this.SELECTEDCOLOR;

	this.textx = this.to_x_ratio( 419 );
	this.texty = this.to_y_ratio( 91 );
	this.textcolor = this.LIGHTTEXTCOLOR;
	this.font = this.FONT;
	this.defaulttextsize = 12;
}
CleanModalSpellInfoHeadCloseButton.prototype = extend(CleanUIElem);

CleanModalSpellInfoHeadCloseButton.prototype.draw = function(){
	this.display.draw_rect_sprite( this.x, this.y, this.w, this.h, this.color );
	this.display.draw_text_params( "X", this.textx, this.texty, {
		color: this.textcolor,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "center"
	});
};

CleanModalSpellInfoHeadCloseButton.prototype.onclick = function(){
	this.state.inter.hide_modal( this.state.uistore.modals.spellinfo );
	return true;
};

function CleanModalSpellInfoDescription( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	this.x = this.to_x_ratio( 48 );
	this.y = this.to_y_ratio( 103 );
	this.w = this.to_x_ratio( 375 );
	this.h = this.to_y_ratio( 104 );
	this.color = this.LIGHTCOLOR;

	this.textx = this.to_x_ratio( 50 );
	this.texty = this.to_y_ratio( 115 );
	this.lineheight = this.to_y_ratio( 14 );
	this.maxwidth = this.to_x_ratio( 204 );
	this.textcolor = this.VERYDARKCOLOR;
	this.font = this.FONT;
	this.defaulttextsize = 12;

	this.store = this.state.uistore;
}
CleanModalSpellInfoDescription.prototype = extend(CleanUIElem);

CleanModalSpellInfoDescription.prototype.draw = function(){
	this.display.draw_rect_sprite( this.x, this.y, this.w, this.h, this.color );

	var menu = this.store.menustate;
	if( this.state.uistore.menus[ menu ] === undefined ){
		return;
	}
	var tab = this.store.menus[ menu ].tab;
	var spellname = this[ menu ][ tab ][ this.index ];
	var spell = this.state.world.sm.get_spell( spellname );

	this.display.wrap_text( spell.description, this.textx, this.texty, {
		color: this.textcolor,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "left",
		lineheight: this.lineheight,
		maxwidth: this.maxwidth
	});
};

})(); 
/* jshint browser: true */
/* global app */

(function(){
"use strict";

var CleanActionOverlay = app.ui.overlays.CleanActionOverlay = 
	function(game, state, display){
	app.ui.CleanUIElem.call( this, game, state, display );

	this.x = this.to_x_ratio( 362 );
	this.y = this.to_y_ratio( 186  );
	this.w = this.to_x_ratio( 110 );
	this.h = this.to_y_ratio( 102 );
	this.color = this.NEUTRALCOLOR;

	this.subelems = [
		new CleanActionButton( this.game, this.state, this.display, "a" ),
		new CleanActionButton( this.game, this.state, this.display, "b" ),
	];

	this.store = this.state.uistore;
};
CleanActionOverlay.prototype = app.extend(app.ui.CleanUIElem);

CleanActionOverlay.prototype.draw = function(){
	this.display.draw_rect_sprite( this.x, this.y, this.w, this.h, this.color );

	for( var i in this.subelems ){
		this.subelems[i].draw();
	}

	this.animate_post( this.store );
};

CleanActionOverlay.prototype.propogate_click = function(x,y){
	if( this.state.uistore.menustate !== "none" ){
		return;
	}
	
	for( var i in this.subelems ){
		var elem = this.subelems[i];
		if( this.contains( elem.x, elem.y, elem.w, elem.h, x, y ) ){
			elem.onclick();
		}
	}
};

CleanActionOverlay.prototype.propogate_unclick = function(){
	if( this.state.uistore.menustate !== "none" ){
		return;
	}

	this.state.uistore.actionbuttons.a.pressed = false;
	this.state.uistore.actionbuttons.b.pressed = false;
};

function CleanActionButton(game, state, display, button){
	app.ui.CleanUIElem.call( this, game, state, display );
	this.button = button;

	if( button === "a" ){
		this.x = this.to_x_ratio( 420 );
		this.y = this.to_y_ratio( 185 );
		this.textx = this.to_x_ratio( 445 );
		this.texty = this.to_y_ratio( 205 );
	} else if( button === "b") {
        this.x = this.to_x_ratio( 375 );
        this.y = this.to_y_ratio( 235 );
		this.textx = this.to_x_ratio( 400 );
		this.texty = this.to_y_ratio( 255 );
    }
	this.w = this.to_x_ratio( 40 );
	this.h = this.to_y_ratio( 40 );
	this.color = this.DARKCOLOR;
	this.scolor = this.VERYDARKCOLOR;

	this.textcolor = this.LIGHTTEXTCOLOR;
	this.font = this.FONT;
	this.defaulttextsize = 10;

	this.store = this.state.uistore.actionbuttons[ this.button ];
}

CleanActionButton.prototype = app.extend(app.ui.CleanUIElem);

CleanActionButton.prototype.draw = function(){

	var color = this.store.pressed ? this.scolor : this.color;

	this.display.draw_rect( this.x, this.y, this.w, this.h, color );

	if( this.store.disabled ){
		return;
	}

	var action = this.store.action;
	action = action[0].toUpperCase() + action.slice(1);

	this.display.draw_text_params( action, this.textx, this.texty, {
		color: this.textcolor,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "center"
	});
};

CleanActionButton.prototype.onclick = function() {
	this.store.pressed = true;
};

})(); 
/* jshint browser: true */
/* global app */

(function(){
"use strict";

var CleanDialogueOverlay = app.ui.overlays.CleanDialogueOverlay = 
	function(game, state, display){
	app.ui.CleanUIElem.call( this, game, state, display );

	this.x = this.to_x_ratio( 110 );
	this.y = this.to_y_ratio( 18  );
	this.w = this.to_x_ratio( 362 );
	this.h = this.to_y_ratio( 270 );
	this.color = this.NEUTRALCOLOR;

	this.subelems = [];

	this.subelems.push(
		new app.ui.CleanMenuHeader( this.game, this.state, this.display )
	);

	this.store = this.state.uistore;
};
CleanDialogueOverlay.prototype = app.extend(app.ui.CleanUIElem);

CleanDialogueOverlay.prototype.draw = function(){
	if( this.store.menustate !== "dialogue" && 
		this.store.animating && 
		this.store.prevstate === "dialogue" ){

		this.animate_out_pre( this.store );
	} else if( this.store.menustate !== "dialogue" ){
		//gah this is stupid
		this.subelems[0].scrolly = 0;
		return;
	} else {
		this.animate_in_pre( this.store );
	}

	this.display.draw_rect_sprite( this.x, this.y, this.w, this.h, this.color );

	for( var i in this.subelems ){
		this.subelems[i].draw();
	}

	this.animate_post( this.store );
};

CleanDialogueOverlay.prototype.propogate_click = function( x, y ){
	if( this.state.uistore.menustate !== "dialogue" ){
		return;
	}
	
	var val = false;
	for( var i in this.subelems ){
		var elem = this.subelems[i];
		val = val || elem.propogate_click( x, y );
	}
	return val;
};

CleanDialogueOverlay.prototype.propogate_unclick = function( ){
	if( this.state.uistore.menustate !== "dialogue" ){
		return;
	}
	
	var val = false;
	for( var i in this.subelems ){
		var elem = this.subelems[i];
		val = val || elem.propogate_unclick( );
	}
	return val;
};

})(); 
/* jshint browser: true */
/* global app */

(function(){
"use strict";

var CleanInventoryOverlay = app.ui.overlays.CleanInventoryOverlay = 
	function(game, state, display){

	app.ui.CleanUIElem.call( this, game, state, display );

	this.x = this.to_x_ratio( 110 );
	this.y = this.to_y_ratio( 18  );
	this.w = this.to_x_ratio( 362 );
	this.h = this.to_y_ratio( 270 );
	this.color = this.NEUTRALCOLOR;

	this.subelems = [];

	this.subelems.push(
		new CleanInventoryList( this.game, this.state, this.display ),
		new app.ui.CleanMenuHeader( this.game, this.state, this.display ),
		new app.ui.modals.CleanModalItemInfo( this.game, this.state, this.display ),
		new app.ui.modals.CleanModalEquip( this.game, this.state, this.display ),
		new app.ui.modals.CleanModalGive( this.game, this.state, this.display ),
		new app.ui.modals.CleanModalDrop( this.game, this.state, this.display )
	);

	this.store = this.state.uistore;
};
CleanInventoryOverlay.prototype = app.extend(app.ui.CleanUIElem);

CleanInventoryOverlay.prototype.draw = function(){
	if( this.store.menustate !== "inventory" && 
		this.store.animating && 
		this.store.prevstate === "inventory" ){

		this.animate_out_pre( this.store );
	} else if( this.store.menustate !== "inventory" ){
		//gah this is stupid
		this.subelems[0].scrolly = 0;
		return;
	} else {
		this.animate_in_pre( this.store );
	}

	this.display.draw_rect_sprite( this.x, this.y, this.w, this.h, this.color );

	for( var i in this.subelems ){
		this.subelems[i].draw();
	}

	this.animate_post( this.store );
};

CleanInventoryOverlay.prototype.propogate_click = function( x, y ){
	if( this.state.uistore.menustate !== "inventory" ){
		return;
	}
	
	var val = false;
	for( var i in this.subelems ){
		var elem = this.subelems[i];
		val = val || elem.propogate_click( x, y );
	}
	return val;
};

CleanInventoryOverlay.prototype.propogate_unclick = function( ){
	if( this.state.uistore.menustate !== "inventory" ){
		return;
	}
	
	var val = false;
	for( var i in this.subelems ){
		var elem = this.subelems[i];
		val = val || elem.propogate_unclick( );
	}
	return val;
};

function CleanInventoryList( game, state, display ){
	app.ui.CleanUIElem.call( this, game, state, display );
	CleanInventoryList.prototype.stride = this.to_y_ratio( 40 );
	this.subelems = [];
	for( var i = 0; i < 25; i++ ){
		this.subelems.push( new CleanInventoryItem( game, state, display, i ) );
	}

	this.isscrolling = false;
	this.oldscrolly = 0;
	this.scrolly = 0;
	this.lastx = 0;
	this.lasty = 0;
	this.tolerance = 25;
}
CleanInventoryList.prototype = app.extend(app.ui.CleanUIElem);

CleanInventoryList.prototype.stride = 20;

CleanInventoryList.prototype.draw = function(){
	var scrolly = this._get_scrolly();
	for( var i in this.subelems ){
		var elem = this.subelems[i];
		elem.draw( scrolly );
	}
};

CleanInventoryList.prototype._get_scrolly = function(){
	var diff = this.lasty - this.state.uistore.mouse.y;
	if( this.state.uistore.mouse.down && 
		(this.isscrolling || Math.abs( diff ) > this.tolerance) ){
		this.isscrolling = true;
		this.scrolly  = this.oldscrolly - diff;
		if( this.scrolly < this.tolerance && this.scrolly > -this.tolerance ){
			this.scrolly = 0;
		}
	} else {
		this.oldscrolly = this.scrolly;
		this.isscrolling = false;
	}

	return this.scrolly;
};

CleanInventoryList.prototype.propogate_click = function( x, y ){
	if( this.state.uistore.modals.iteminfo.visible ){
		return;
	}

	this.lastx = x;
	this.lasty = y;

	var val = false;
	for( var i in this.subelems ){
		val = this.subelems[ i ].propogate_click( x, y ) || val;
	}
	return val;
};

CleanInventoryList.prototype.propogate_unclick = function(){
	var x = this.lastx;
	var y = this.lasty;

	if( this.isscrolling ){
		this.isscrolling = false;
		this.lasty = this.state.uistore.mouse.y;
		this.lastx = this.state.uistore.mouse.x;
		return true;
	}

	for( var i in this.subelems ){
		var elem = this.subelems[i];
		if( this.contains( elem.x, elem.y + this.scrolly, elem.w, elem.h, x, y ) ){
			elem.onclick();
			return true;
		}
	}
};

function CleanInventoryItem( game, state, display, index ){
	app.ui.CleanUIElem.call( this, game, state, display );
	this.index = index;

	this.scrolly = 0;
	var yoffset = 20;

	var stride = CleanInventoryList.prototype.stride;

	this.w = this.to_x_ratio( 362 );
	this.h = this.to_y_ratio( 40 );
	this.x = this.to_x_ratio( 110 );
	this.y = this.to_y_ratio( yoffset ) + index*( stride + 1 );
	this.color1 = this.LIGHTCOLOR;
	this.color2 = this.NEUTRALCOLOR;
	this.scolor1 = this.SELECTEDCOLOR;
	this.ecolor1 = this.VERYDARKCOLOR;
	this.color = "lightneutral";

	this.sprite = new CleanInventorySprite( game, state, display, index );
	this.label = new CleanInventoryLabel( game, state, display, index );
	this.equip = new CleanInventoryEquipButton( game, state, display, index );
	this.give = new CleanInventoryGiveButton( game, state, display, index );
	this.drop = new CleanInventoryDropButton( game, state, display, index );
	this.use = new CleanInventoryUseButton( game, state, display, index );
}
CleanInventoryItem.prototype = app.extend(app.ui.CleanUIElem);

CleanInventoryItem.prototype.draw = function(scrolly){
	var ch = this.state.player.get_pcs()[ this.state.uistore.pcselected ];
	if( ch === undefined ){
		return;
	}
	
	this.scrolly = scrolly;
	var itemname = ch.inventory[ this.index ];
	if( itemname === undefined ){
		this.display.draw_horiz_gradient( 
			this.x, this.y + scrolly, this.w, this.h, this.color1, this.color2 );
		return;
	}
	var color = null;
	if( this.state.uistore.currentitemname === itemname ){
		color = this.scolor1;
	} else if( ch.item_is_equipped( itemname ) ){
		color = this.ecolor1;
	} else {
		color = this.color1;
	}

	this.display.draw_horiz_gradient( 
		this.x, this.y + scrolly, this.w, this.h, color, this.color2 );

	this.sprite.draw( scrolly );
	this.label.draw( scrolly );
	this.equip.draw( scrolly );
	this.give.draw( scrolly );
	this.drop.draw( scrolly );
	this.use.draw( scrolly );
};

CleanInventoryItem.prototype.propogate_click = function(x, y){
	var _click = function( elem ){
		if( this.contains( elem.x, elem.y + this.scrolly, elem.w, elem.h, x, y ) ){
			elem.onclick();
			return true;
		}
	};
	var items = [ this.equip, this.give, this.drop, this.use ];
	var val = false;
	for( var i in items ){
		val = _click.call( this, items[i] ) || val;
	}
	return val;
};

CleanInventoryItem.prototype.onclick = function(){
	if( this.state.inter.is_modal_visible() ){
		return;
	}

	var ch = this.state.player.get_pcs()[ this.state.uistore.pcselected ];
	if( ch === undefined || this.state.uistore.animating ){
		return;
	}
	var itemname = ch.inventory[ this.index ];
	if( itemname === undefined ){
		//i assume do the scroll thing
	} else {
		this.state.inter.set_currentitem( itemname );
		this.state.inter.show_modal( this.state.uistore.modals.iteminfo );
	}
};

function CleanInventorySprite( game, state, display, index ){
	app.ui.CleanUIElem.call( this, game, state, display );
	this.index = index;

	this.scrolly = 0;

	var yoffset = 30;
	var stride = CleanInventoryList.prototype.stride;

	this.w = this.to_x_ratio( 14 );
	this.h = this.to_x_ratio( 14 );
	this.x = this.to_x_ratio( 120 );
	this.y = this.to_y_ratio( yoffset ) + index*( stride + 1 );
}
CleanInventorySprite.prototype = app.extend(app.ui.CleanUIElem);

CleanInventorySprite.prototype.draw = function(scrolly){
	var ch = this.state.player.get_pcs()[ this.state.uistore.pcselected ];
	if( ch === undefined ){
		return;
	}
	var itemname = ch.inventory[ this.index ];
	var item = this.state.world.itemCache.get_item( itemname );
	this.display.draw_sprite_scaled_centered(
		item.sprite, this.x, this.y + scrolly, this.w, this.h);
};

function CleanInventoryLabel( game, state, display, index ){
	app.ui.CleanUIElem.call( this, game, state, display );
	this.index = index;

	var yoffset = 23;
	var stride = CleanInventoryList.prototype.stride;

	this.x = this.to_x_ratio( 145 );
	this.y = this.to_y_ratio( yoffset ) + index*( stride + 1 );
	this.defaulttextsize = 12;
	this.font = this.FONT;
	this.color = this.VERYDARKCOLOR;
	this.scolor = this.LIGHTTEXTCOLOR;
	this.ecolor = this.LIGHTCOLOR;
}
CleanInventoryLabel.prototype = app.extend(app.ui.CleanUIElem);

CleanInventoryLabel.prototype.draw = function( scrolly ){
	var ch = this.state.player.get_pcs()[ this.state.uistore.pcselected ];
	if( ch === undefined ){
		return;
	}
	var itemname = ch.inventory[ this.index ];
	var item = this.state.world.itemCache.get_item( itemname );
	var text = itemname === "none" ? "" : item.name;
	var bodypart = ch.item_is_equipped( itemname );

	var color = null;
	if( this.state.uistore.currentitemname === itemname ){
		color = this.scolor;
		if( bodypart ){
			text = text + " ("+bodypart+")";
		}
	} else if( bodypart ){
		color = this.ecolor;
		text = text + " ("+bodypart+")";
	} else {
		color = this.color;
	}

	this.display.draw_text_params( text, this.x, this.y + scrolly, {
		color: color,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "left"
	});
};

function CleanInventoryEquipButton( game, state, display, index ){
	app.ui.CleanUIElem.call( this, game, state, display );
	this.index = index;

	var yoffset = 21;
	var stride = CleanInventoryList.prototype.stride;
	var xpos = 352;

	this.w = this.to_x_ratio( 38 );
	this.h = this.to_x_ratio( 38 );
	this.x = this.to_x_ratio( xpos );
	this.y = this.to_y_ratio( yoffset ) + index*( stride + 1 );
	this.color = this.VERYDARKCOLOR;

	this.textx = this.to_x_ratio( xpos + 22 );
	this.texty = this.to_y_ratio( yoffset + 18 ) + index*( stride + 1 );
	this.defaulttextsize = 10;
	this.font = this.FONT;
	this.textcolor = this.LIGHTTEXTCOLOR;
}
CleanInventoryEquipButton.prototype = app.extend(app.ui.CleanUIElem);

CleanInventoryEquipButton.prototype.draw = function( scrolly ){
	var ch = this.state.player.get_pcs()[ this.state.uistore.pcselected ];
	if( ch === undefined ){
		return;
	}
	var itemname = ch.inventory[ this.index ];
	var item = this.state.world.itemCache.get_item( itemname );
	if( item.equipTypes.length === 0 ){
		return;
	}

	this.display.draw_rect_sprite( this.x, this.y + scrolly, this.w, this.h, this.color );

	this.display.draw_text_params( "Equip", this.textx, this.texty + scrolly, {
		color: this.textcolor,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "center"
	});
};

CleanInventoryEquipButton.prototype.onclick = function( ){
	var ch = this.state.player.get_pcs()[ this.state.uistore.pcselected ];
	if( ch === undefined ){
		return;
	}
	var itemname = ch.inventory[ this.index ];
	var item = this.state.world.itemCache.get_item( itemname );
	if( item.equipTypes.length === 0 ){
		return;
	} else if( ch.item_is_equipped( itemname ) ){
		ch.unequip_item( itemname );
	} else if( item.equipTypes.length === 1 ){
		ch.equip_item( itemname, item.equipTypes[ 0 ] );
	} else {
		this.state.inter.set_currentitem( itemname );
		this.state.inter.show_modal( this.state.uistore.modals.equip );
	}
};

function CleanInventoryUseButton( game, state, display, index ){
	app.ui.CleanUIElem.call( this, game, state, display );
	this.index = index;

	var yoffset = 21;
	var stride = CleanInventoryList.prototype.stride;
	var xpos = 352;

	this.w = this.to_x_ratio( 38 );
	this.h = this.to_x_ratio( 38 );
	this.x = this.to_x_ratio( xpos );
	this.y = this.to_y_ratio( yoffset ) + index*( stride + 1 );
	this.color = "#267F00";

	this.textx = this.to_x_ratio( xpos + 22 );
	this.texty = this.to_y_ratio( yoffset + 18 ) + index*( stride + 1 );
	this.defaulttextsize = 10;
	this.font = this.FONT;
	this.textcolor = this.LIGHTTEXTCOLOR;
}
CleanInventoryUseButton.prototype = app.extend(app.ui.CleanUIElem);

CleanInventoryUseButton.prototype.draw = function( scrolly ){
	var ch = this.state.player.get_pcs()[ this.state.uistore.pcselected ];
	if( ch === undefined ){
		return;
	}
	var itemname = ch.inventory[ this.index ];
	var item = this.state.world.itemCache.get_item( itemname );
	if( item.on_use === "none" ){
		return;
	}

	this.display.draw_rect( this.x, this.y + scrolly, this.w, this.h, this.color );

	this.display.draw_text_params( "Use", this.textx, this.texty + scrolly, {
		color: this.textcolor,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "center"
	});
};

CleanInventoryUseButton.prototype.onclick = function( ){
	if( this.state.inter.is_modal_visible() ){
		return;
	}

	var ch = this.state.player.get_pcs()[ this.state.uistore.pcselected ];
	if( ch === undefined ){
		return;
	}
	var itemname = ch.inventory[ this.index ];
	var item = this.state.world.itemCache.get_item( itemname );
	if( item.on_use === "none" ){
		return;
	}
	//use item
};

function CleanInventoryGiveButton( game, state, display, index ){
	app.ui.CleanUIElem.call( this, game, state, display );
	this.index = index;

	var yoffset = 21;
	var stride = CleanInventoryList.prototype.stride;
	var xpos = 392;

	this.w = this.to_x_ratio( 38 );
	this.h = this.to_x_ratio( 38 );
	this.x = this.to_x_ratio( xpos );
	this.y = this.to_y_ratio( yoffset ) + index*( stride + 1 );
	this.color = this.VERYDARKCOLOR;

	this.textx = this.to_x_ratio( xpos + 22 );
	this.texty = this.to_y_ratio( yoffset + 18 ) + index*( stride + 1 );
	this.defaulttextsize = 10;
	this.font = this.FONT;
	this.textcolor = this.LIGHTTEXTCOLOR;
}
CleanInventoryGiveButton.prototype = app.extend(app.ui.CleanUIElem);

CleanInventoryGiveButton.prototype.draw = function( scrolly ){
	this.display.draw_rect( this.x, this.y + scrolly, this.w, this.h, this.color );

	this.display.draw_text_params( "Give", this.textx, this.texty + scrolly, {
		color: this.textcolor,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "center"
	});
};

CleanInventoryGiveButton.prototype.onclick = function( ){
	if( this.state.inter.is_modal_visible() ){
		return;
	}

	var ch = this.state.player.get_pcs()[ this.state.uistore.pcselected ];
	if( ch === undefined ){
		return;
	}
	var itemname = ch.inventory[ this.index ];
	this.state.inter.set_currentitem( itemname );
	this.state.inter.show_modal( this.state.uistore.modals.give );
};

function CleanInventoryDropButton( game, state, display, index ){
	app.ui.CleanUIElem.call( this, game, state, display );
	this.index = index;

	var yoffset = 21;
	var stride = CleanInventoryList.prototype.stride;
	var xpos = 432;

	this.w = this.to_x_ratio( 38 );
	this.h = this.to_x_ratio( 38 );
	this.x = this.to_x_ratio( xpos );
	this.y = this.to_y_ratio( yoffset ) + index*( stride + 1 );
	this.color = this.SELECTEDCOLOR;

	this.textx = this.to_x_ratio( xpos + 22 );
	this.texty = this.to_y_ratio( yoffset + 18 ) + index*( stride + 1 );
	this.defaulttextsize = 10;
	this.font = this.FONT;
	this.textcolor = this.LIGHTTEXTCOLOR;
}
CleanInventoryDropButton.prototype = app.extend(app.ui.CleanUIElem);

CleanInventoryDropButton.prototype.draw = function( scrolly ){
	this.display.draw_rect( this.x, this.y + scrolly, this.w, this.h, this.color );

	this.display.draw_text_params( "Drop", this.textx, this.texty + scrolly, {
		color: this.textcolor,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "center"
	});
};

CleanInventoryDropButton.prototype.onclick = function( ){
	if( this.state.inter.is_modal_visible() ){
		return;
	}

	var ch = this.state.player.get_pcs()[ this.state.uistore.pcselected ];
	if( ch === undefined ){
		return;
	}
	var itemname = ch.inventory[ this.index ];
	this.state.inter.set_currentitem( itemname );
	this.state.inter.show_modal( this.state.uistore.modals.drop );
};

})(); 
/* jshint browser: true */
/* global app */

(function(){
"use strict";

var CleanUIElem = app.ui.CleanUIElem;
var extend = app.extend;

var CleanMagicOverlay = app.ui.overlays.CleanMagicOverlay = 
	function(game, state, display, name){

	CleanUIElem.call( this, game, state, display );

	this.x = this.to_x_ratio( 110 );
	this.y = this.to_y_ratio( 18  );
	this.w = this.to_x_ratio( 362 );
	this.h = this.to_y_ratio( 270 );
	this.color = this.NEUTRALCOLOR;

	this.name = name;
	this.subelems = [
		new app.ui.CleanMenuHeader( this.game, this.state, this.display ),
		new CleanMagicTabs( this.game, this.state, this.display ),
		new CleanMagicSpellList( this.game, this.state, this.display ),
		new app.ui.modals.CleanModalSpellInfo( this.game, this.state, this.display )
	];

	this.store = this.state.uistore;
};
CleanMagicOverlay.prototype = extend(CleanUIElem);

CleanMagicOverlay.prototype.draw = function(){
	if( this.store.menustate !== this.name && 
		this.store.animating && 
		this.store.prevstate === this.name ){

		this.animate_out_pre( this.store );
	} else if( this.store.menustate !== this.name ){
		return;
	} else {
		this.animate_in_pre( this.store );
	}

	this.display.draw_rect_sprite( this.x, this.y, this.w, this.h, this.color );

	for( var i in this.subelems ){
		this.subelems[i].draw();
	}

	this.animate_post( this.store );
};

CleanMagicOverlay.prototype.propogate_click = function( x, y ){
	if( this.state.uistore.menustate !== this.name ){
		return;
	}
	
	var val = false;
	for( var i in this.subelems ){
		var elem = this.subelems[i];
		val = val || elem.propogate_click( x, y );
	}
	return val;
};

function CleanMagicTabs( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	this.x = this.to_x_ratio( 110 );
	this.y = this.to_y_ratio( 18  );
	this.w = this.to_x_ratio( 362 );
	this.h = this.to_y_ratio( 30 );
	this.color = this.DARKCOLOR;

	this.subelems = [];
	for( var i = 0; i < 7; i++ ){
		this.subelems.push( new CleanMagicTabsButton( game, state, display, i ) );
	}

}
CleanMagicTabs.prototype = extend(CleanUIElem);

CleanMagicTabs.prototype.draw = function(){
	this.display.draw_rect( this.x, this.y, this.w, this.h, this.color );
	for( var i in this.subelems ){
		var elem = this.subelems[i];
		elem.draw();
	}
};

CleanMagicTabs.prototype.propogate_click = function( x, y ){
	for( var i in this.subelems ){
		var elem = this.subelems[i];
		if( this.contains( elem.x, elem.y, elem.w, elem.h, x, y ) ){
			elem.onclick();
			return true;
		}
	}
};

function CleanMagicTabsButton( game, state, display, index ){
	CleanUIElem.call( this, game, state, display );

	this.index = index;

	var xoffset = 121;
	var textoffset = 150;

	this.w = this.to_x_ratio( 48 );
	this.h = this.to_y_ratio( 24 );
	this.x = this.to_x_ratio( xoffset ) + (this.w + 1)*index;
	this.y = this.to_y_ratio( 21  );
	this.color = this.LIGHTCOLOR;
	this.scolor = this.SELECTEDCOLOR;

	this.textx = this.to_x_ratio( textoffset ) + (this.w + 1)*index;
	this.texty = this.to_y_ratio( 33 );
	this.textcolor = this.VERYDARKCOLOR;
	this.stextcolor = this.LIGHTTEXTCOLOR;
	this.font = this.FONT;
	this.defaulttextsize = 14;
	if( index === 0 ){
		this.text = "I";
	} else if( index === 1 ){
		this.text = "II";
	} else if( index === 2 ){
		this.text = "III";
	} else if( index === 3 ){
		this.text = "IV";
	} else if( index === 4 ){
		this.text = "V";
	} else if( index === 5 ){
		this.text = "VI";
	} else if ( index === 6 ){
		this.text = "VII";
	}
	
}
CleanMagicTabsButton.prototype = extend(CleanUIElem);

CleanMagicTabsButton.prototype.draw = function(){
	var menu = this.state.uistore.menustate;
	if( this.state.uistore.menus[ menu ] === undefined ){
		return;
	}
	var selected = this.state.uistore.menus[ menu ].tab === this.index;

	var color = selected ? this.scolor : this.color;
	this.display.draw_rect_sprite( this.x, this.y, this.w, this.h, color );

	var tcolor = selected ? this.stextcolor : this.textcolor;
	this.display.draw_text_params( this.text, this.textx, this.texty, {
		color: tcolor,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "center"
	});
};

CleanMagicTabsButton.prototype.onclick = function(){
	var menu = this.state.uistore.menustate;
	this.state.uistore.menus[ menu ].tab = this.index;
};

function CleanMagicSpellList( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	this.text1x = this.to_x_ratio( 180 );
	this.text2x = this.to_x_ratio( 452 );
	this.texty = this.to_y_ratio( 58 );
	this.textcolor = this.LIGHTTEXTCOLOR;
	this.font = this.FONT;
	this.defaulttextsize = 14;

	this.subelems = [];
	for( var i = 0; i < 7; i++ ){
		this.subelems.push( new CleanMagicSpell( game, state, display, i ) );
	}

}
CleanMagicSpellList.prototype = extend(CleanUIElem);

CleanMagicSpellList.prototype.draw = function(){
	this.display.draw_text_params( "Name", this.text1x, this.texty, {
		color: this.textcolor,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "center",
		shadowcolor: this.VERYDARKCOLOR
	});

	this.display.draw_text_params( "Cost", this.text2x, this.texty, {
		color: this.textcolor,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "center",
		shadowcolor: this.VERYDARKCOLOR
	});

	for( var i in this.subelems ){
		var elem = this.subelems[i];
		elem.draw();
	}
};

CleanMagicSpellList.prototype.propogate_click = function( x, y ){
	if( this.state.uistore.modals.spellinfo.visible ){
		return;
	}

	var val = false;
	for( var i in this.subelems ){
		var elem = this.subelems[i];
		val = elem.propogate_click( x, y ) || val;
	}
	return val;
};

function CleanMagicSpell( game, state, display, index ){
	CleanUIElem.call( this, game, state, display );

	this.index = index;

	var yoffset = 68;

	this.w = this.to_x_ratio( 312 );
	this.h = this.to_y_ratio( 30 );
	this.x = this.to_x_ratio( 152 );
	this.y = this.to_y_ratio( yoffset ) + (this.h + 1)*index;
	this.color = this.LIGHTCOLOR;
	this.scolor = this.SELECTEDCOLOR;
	
	this.subelems = [
		new CleanMagicSpellIcon( game, state, display, index ),
		new CleanMagicSpellLabel( game, state, display, index ),
		new CleanMagicSpellCost( game, state, display, index ),
		new CleanMagicSpellInfoButton( game, state, display, index ),
	];

	this.store = this.state.uistore;
}
CleanMagicSpell.prototype = extend(CleanUIElem);

CleanMagicSpell.prototype.draw = function(){
	var menu = this.store.menustate;
	if( this.state.uistore.menus[ menu ] === undefined ){
		return;
	}
	var tab = this.store.menus[ menu ].tab;
	var spellname = this[ menu ][ tab ][ this.index ];
	var selected = this.state.uistore.currentspell === spellname;

	var color = selected ? this.scolor : this.color;
	this.display.draw_rect( this.x, this.y, this.w, this.h, color );

	for( var i in this.subelems ){
		this.subelems[i].draw();
	}
};

CleanMagicSpell.prototype.propogate_click = function( x, y ){
	for( var i in this.subelems ){
		var elem = this.subelems[i];
		if( this.contains( elem.x, elem.y, elem.w, elem.h, x, y ) ){
			if( elem.onclick ){
				elem.onclick();
				return true;
			}
		}
	}

	if( this.contains( this.x, this.y, this.w, this.h ) ){
		this.onclick();
		return true;
	}
};

CleanMagicSpell.prototype.onclick = function(){

};

function CleanMagicSpellIcon( game, state, display, index ){
	CleanUIElem.call( this, game, state, display );

	this.index = index;

	var yoffset = 68;

	this.w = this.to_x_ratio( 30 );
	this.h = this.to_y_ratio( 30 );
	this.x = this.to_x_ratio( 122 );
	this.y = this.to_y_ratio( yoffset ) + (this.h + 1)*index;
	this.color = this.VERYDARKCOLOR;

	this.spritex = this.to_x_ratio( 312 );
	this.spritey = this.to_y_ratio( 30 );
	this.spritew = this.to_x_ratio( 312 );
	this.spriteh = this.to_y_ratio( 30 );

	this.store = this.state.uistore;
	
}
CleanMagicSpellIcon.prototype = extend(CleanUIElem);

CleanMagicSpellIcon.prototype.draw = function(){
	var menu = this.store.menustate;
	if( this.state.uistore.menus[ menu ] === undefined ){
		return;
	}

	this.display.draw_rect( this.x, this.y, this.w, this.h, this.color );
};

function CleanMagicSpellLabel( game, state, display, index ){
	CleanUIElem.call( this, game, state, display );

	this.index = index;

	var yoffset = 75;

	this.x = 0;
	this.y = 0;
	this.w = 0;
	this.h = this.to_y_ratio( 30 );

	this.textx = this.to_x_ratio( 160 );
	this.texty = this.to_y_ratio( yoffset ) + (this.h + 1)*index;
	this.textcolor = this.ALTERNATECOLOR;
	this.stextcolor = this.LIGHTTEXTCOLOR;
	this.font = this.FONT;
	this.defaulttextsize = 12;

	this.store = this.state.uistore;
}
CleanMagicSpellLabel.prototype = extend(CleanUIElem);

CleanMagicSpellLabel.prototype.draw = function(){
	var menu = this.store.menustate;
	if( this.state.uistore.menus[ menu ] === undefined ){
		return;
	}
	var tab = this.store.menus[ menu ].tab;
	var spellname = this[ menu ][ tab ][ this.index ];

	var selected = this.state.uistore.currentspell === spellname;

	var tcolor = selected ? this.stextcolor : this.textcolor;
	this.display.draw_text_params( spellname, this.textx, this.texty, {
		color: tcolor,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "left"
	});
};

function CleanMagicSpellCost( game, state, display, index ){
	CleanUIElem.call( this, game, state, display );

	this.index = index;

	var yoffset = 83;

	this.x = 0;
	this.y = 0;
	this.w = 0;
	this.h = this.to_y_ratio( 30 );

	this.textx = this.to_x_ratio( 450 );
	this.texty = this.to_y_ratio( yoffset ) + (this.h + 1)*index;
	this.textcolor = this.VERYDARKCOLOR;
	this.stextcolor = this.LIGHTTEXTCOLOR;
	this.font = this.FONT;
	this.defaulttextsize = 12;

	this.store = this.state.uistore;
}
CleanMagicSpellCost.prototype = extend(CleanUIElem);

CleanMagicSpellCost.prototype.draw = function(){
	var menu = this.store.menustate;
	if( this.state.uistore.menus[ menu ] === undefined ){
		return;
	}
	var tab = this.store.menus[ menu ].tab;
	var spellname = this[ menu ][ tab ][ this.index ];
	var spell = {cost:9999};//this.state.world.sm.get_spell( spellname );
	var selected = this.state.uistore.currentspell === spellname;

	var tcolor = selected ? this.stextcolor : this.textcolor;
	this.display.draw_text_params( spell.cost, this.textx, this.texty, {
		color: tcolor,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "center"
	});
};

function CleanMagicSpellInfoButton( game, state, display, index ){
	CleanUIElem.call( this, game, state, display );

	this.index = index;

	var yoffset = 74;

	this.w = this.to_x_ratio( 18 );
	this.h = this.to_y_ratio( 18 );
	this.offh = this.to_y_ratio( 30 );
	this.x = this.to_x_ratio( 402 );
	this.y = this.to_y_ratio( yoffset ) + (this.offh + 1)*index;
	this.color = this.ALTERNATECOLOR;

	var ytextoffset = 83;

	this.textx = this.to_x_ratio( 417 );
	this.texty = this.to_y_ratio( ytextoffset ) + (this.offh + 1)*index;
	this.textcolor = this.LIGHTTEXTCOLOR;
	this.font = this.FONT;
	this.defaulttextsize = 12;

	this.store = this.state.uistore;
}
CleanMagicSpellInfoButton.prototype = extend(CleanUIElem);

CleanMagicSpellInfoButton.prototype.draw = function(){
	var menu = this.store.menustate;
	if( this.state.uistore.menus[ menu ] === undefined ){
		return;
	}

	this.display.draw_rect( this.x, this.y, this.w, this.h, this.color );

	var tcolor = this.textcolor;
	this.display.draw_text_params( "i", this.textx, this.texty, {
		color: tcolor,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "center"
	});
};

CleanMagicSpellInfoButton.prototype.onclick = function(){
	var menu = this.store.menustate;
	if( this.state.uistore.menus[ menu ] === undefined ){
		return;
	}
	var tab = this.store.menus[ menu ].tab;
	this.state.uistore.currentspell = this[ menu ][ tab ][ this.index ];
	this.state.inter.show_modal( this.state.uistore.modals.spellinfo );
};

var CleanLightMagicOverlay = 
app.ui.overlays.CleanLightMagicOverlay = function(game, state, display){
	CleanUIElem.call( this, game, state, display );
	this.overlay = new CleanMagicOverlay( game, state, display, "light" );
};
CleanLightMagicOverlay.prototype = extend(CleanUIElem);
CleanLightMagicOverlay.prototype.draw = function(){ 
	this.overlay.draw();
};
CleanLightMagicOverlay.prototype.propogate_click = function(x,y){ 
	this.overlay.propogate_click(x,y);
};
CleanLightMagicOverlay.prototype.propogate_unclick = function(){
	this.overlay.propogate_unclick();
};
var CleanDarkMagicOverlay =
app.ui.overlays.CleanDarkMagicOverlay = function(game, state, display){
	CleanUIElem.call( this, game, state, display );
	this.overlay = new CleanMagicOverlay( game, state, display, "dark" );
};
CleanDarkMagicOverlay.prototype = extend(CleanUIElem);
CleanDarkMagicOverlay.prototype.draw = function(){ 
	this.overlay.draw();
};
CleanDarkMagicOverlay.prototype.propogate_click = function(x,y){ 
	this.overlay.propogate_click(x,y);
};
CleanDarkMagicOverlay.prototype.propogate_unclick = function(){
	this.overlay.propogate_unclick();
};

})(); 
/* jshint browser: true */
/* global app */

(function(){
"use strict";

var CleanUIElem = app.ui.CleanUIElem;
var extend = app.extend;

var CleanMenuOverlay = app.ui.overlays.CleanMenuOverlay = function(game, state, display){
	CleanUIElem.call( this, game, state, display );

	this.x = this.x_percent_to_pixel( 0.7669491525423728 );
	this.y = 0;

	this.w = this.x_percent_to_pixel( 0.2330508474576271 );
	this.h = this.y_percent_to_pixel( 0.6458333333333334 );

	this.color = this.NEUTRALCOLOR;

	this.subelems = [
		new CleanMenuButtonMap( game, state, display ),
		new CleanMenuButtonSave( game, state, display ),
		new CleanMenuButtonInventory( game, state, display ),
		new CleanMenuButtonPickup( game, state, display ),
		new CleanMenuButtonDark( game, state, display ),
		new CleanMenuButtonLight( game, state, display ),
	];
};
CleanMenuOverlay.prototype = extend(CleanUIElem);

CleanMenuOverlay.prototype.draw = function(){
	this.display.draw_rect( this.x, this.y, this.w, this.h, this.color );
	for( var i in this.subelems ){
		this.subelems[ i ].draw();
	}
};

CleanMenuOverlay.prototype.propogate_click = function( x, y ){
	if( this.state.uistore.menustate !== "none" ){
		return;
	}
	
	for( var i in this.subelems ){
		var b = this.subelems[ i ];
		if( this.contains( b.x, b.y, b.w, b.h, x, y ) ){
			b.onclick();
			return true;
		}
	}
};

function CleanMenuButton( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	this.w = this.x_percent_to_pixel( 0.11228813559322035 );
	this.h = this.y_percent_to_pixel( 0.1840277777777778 );
	this.color = this.LIGHTCOLOR;
	this.scolor = this.SELECTEDCOLOR;

	this.centerxoffset = 0.052966101694915335;
	this.centeryoffset = 0.10069444444444443;

	this.textcolor = this.NEUTRALCOLOR;
	this.stextcolor = this.LIGHTTEXTCOLOR;
	this.defaulttextsize = 8;
	this.font = this.FONT;
}
CleanMenuButton.prototype = extend(CleanUIElem);

CleanMenuButton.prototype.draw = function(){

	var selected = this.state.uistore.menustate===(this.text || this.name).toLowerCase();
	this.display.draw_rect( this.x, this.y, 
		this.w, this.h, selected ? this.scolor : this.color );
	this.display.draw_text_params( this.text, this.textx, this.texty, {
		color: selected ? this.stextcolor : this.textcolor,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "center"
	});
};

CleanMenuButton.prototype.onclick = function(){
	this.state.inter.show_menu( ( this.text || this.name ).toLowerCase() );
};

function CleanMenuButtonMap(game, state, display){
	CleanMenuButton.call( this, game, state, display );

	this.x = this.x_percent_to_pixel( 0.7690677966101694 );
	this.y = this.y_percent_to_pixel( 0.034722222222222224 );
	this.textx = this.x_percent_to_pixel( 0.7790677966101694 + this.centerxoffset );
	this.texty = this.y_percent_to_pixel( 0.030722222222222224 + this.centeryoffset );
	this.text = "Map";
}
CleanMenuButtonMap.prototype = extend(CleanMenuButton);

function CleanMenuButtonSave(game, state, display){
	CleanMenuButton.call( this, game, state, display );

	this.x = this.x_percent_to_pixel( 0.8834745762711864 );
	this.y = this.y_percent_to_pixel( 0.034722222222222224 );
	this.textx = this.x_percent_to_pixel( 0.8934745762711864 + this.centerxoffset );
	this.texty = this.y_percent_to_pixel( 0.030722222222222224 + this.centeryoffset );
	this.text = "Save";
}
CleanMenuButtonSave.prototype = extend(CleanMenuButton);

function CleanMenuButtonInventory(game, state, display){
	CleanMenuButton.call( this, game, state, display );

	this.x = this.x_percent_to_pixel( 0.7690677966101694 );
	this.y = this.y_percent_to_pixel( 0.22569444444444445 );
	this.textx = this.x_percent_to_pixel( 0.7790677966101694 + this.centerxoffset );
	this.texty = this.y_percent_to_pixel( 0.22169444444444445 + this.centeryoffset );
	this.text = "Inventory";
}
CleanMenuButtonInventory.prototype = extend(CleanMenuButton);

function CleanMenuButtonPickup(game, state, display){
	CleanMenuButton.call( this, game, state, display );

	this.x = this.x_percent_to_pixel( 0.8834745762711864 );
	this.y = this.y_percent_to_pixel( 0.22569444444444445 );
	this.textx = this.x_percent_to_pixel( 0.8934745762711864 + this.centerxoffset );
	this.texty = this.y_percent_to_pixel( 0.22169444444444445 + this.centeryoffset );
	this.text = "Pickup";
}
CleanMenuButtonPickup.prototype = extend(CleanMenuButton);

function CleanMenuButtonDark(game, state, display){
	CleanMenuButton.call( this, game, state, display );

	this.x = this.x_percent_to_pixel( 0.7690677966101694 );
	this.y = this.y_percent_to_pixel( 0.4131944444444444 );
	this.textx = this.x_percent_to_pixel( 0.7790677966101694 + this.centerxoffset );
	this.texty = this.y_percent_to_pixel( 0.4051944444444444 + this.centeryoffset );
	this.text = "Dark";
}
CleanMenuButtonDark.prototype = extend(CleanMenuButton);

function CleanMenuButtonLight(game, state, display){
	CleanMenuButton.call( this, game, state, display );

	this.x = this.x_percent_to_pixel( 0.8834745762711864 );
	this.y = this.y_percent_to_pixel( 0.4131944444444444 );
	this.textx = this.x_percent_to_pixel( 0.8934745762711864 + this.centerxoffset );
	this.texty = this.y_percent_to_pixel( 0.4051944444444444 + this.centeryoffset );
	this.text = "Light";
}
CleanMenuButtonLight.prototype = extend(CleanMenuButton);

})(); 
/* jshint browser: true */
/* global app */

(function(){
"use strict";

var CleanUIElem = app.ui.CleanUIElem;
var extend = app.extend;

var CleanMovementOverlay = app.ui.overlays.CleanMovementOverlay = 
	function(game, state, display){
	CleanUIElem.call( this, game, state, display );

	this.x = this.to_x_ratio( 0 );
	this.y = this.to_y_ratio( 186  );
	this.w = this.to_x_ratio( 110 );
	this.h = this.to_y_ratio( 102 );
	this.color = this.NEUTRALCOLOR;

	this.subelems = [
		new CleanCircleMoveButton( this.game, this.state, this.display, "ne" ),
		new CleanCircleMoveButton( this.game, this.state, this.display, "se" ),
		new CleanCircleMoveButton( this.game, this.state, this.display, "sw" ),
		new CleanCircleMoveButton( this.game, this.state, this.display, "nw" ),
		new CleanCircleMoveButton( this.game, this.state, this.display, "wait" ),
		new CleanSquareMoveButton( this.game, this.state, this.display, "n" ),
		new CleanSquareMoveButton( this.game, this.state, this.display, "e" ),
		new CleanSquareMoveButton( this.game, this.state, this.display, "s" ),
		new CleanSquareMoveButton( this.game, this.state, this.display, "w" ),
	];

	this.store = this.state.uistore;
};
CleanMovementOverlay.prototype = extend(CleanUIElem);

CleanMovementOverlay.prototype.draw = function(){
	this.display.draw_rect_sprite( this.x, this.y, this.w, this.h, this.color );

	for( var i in this.subelems ){
		this.subelems[i].draw();
	}

	this.animate_post( this.store );
};

CleanMovementOverlay.prototype.propogate_click = function(x,y){
	if( this.state.uistore.menustate !== "none" ){
		return;
	}
	
	for( var i in this.subelems ){
		var elem = this.subelems[i];
		if( this.contains( elem.x - elem.w/2, elem.y - elem.h/2, elem.w, elem.h, x, y ) ){
			elem.onclick();
		}
	}
};

CleanMovementOverlay.prototype.propogate_unclick = function(){
	if( this.state.uistore.menustate !== "none" ){
		return;
	}
	this.state.uistore.control = false;
};

function CleanCircleMoveButton(game, state, display, dir){
	CleanUIElem.call( this, game, state, display );
	this.dir = dir;

	if( dir === "ne" ){
		this.x = this.to_x_ratio( 87 );
		this.y = this.to_y_ratio( 202 );
	} else if( dir === "se" ){
		this.x = this.to_x_ratio( 87 );
		this.y = this.to_y_ratio( 269 );
	} else if( dir === "sw" ){
		this.x = this.to_x_ratio( 21 );
		this.y = this.to_y_ratio( 269 );
	} else if( dir === "nw" ){
		this.x = this.to_x_ratio( 21 );
		this.y = this.to_y_ratio( 202 );
	} else if (dir === "wait") {
        this.x = this.to_x_ratio( 54 );
        this.y = this.to_y_ratio( 237 );
    }

	this.w = this.to_x_ratio( 26 );
	this.h = this.to_y_ratio( 26 );
	this.sprite = "cleancirclecontrol";

}

CleanCircleMoveButton.prototype = extend(CleanUIElem);

CleanCircleMoveButton.prototype.draw = function(){
	this.display.draw_sprite_scaled_centered(this.sprite, this.x, this.y, this.w, this.h);
};

CleanCircleMoveButton.prototype.onclick = function() {
	this.state.uistore.control = this.dir;
};

function CleanSquareMoveButton(game, state, display, dir) {
    CleanUIElem.call(this, game, state, display);
    this.dir = dir;

    if (dir === "n") {
        this.x = this.to_x_ratio( 54 );
        this.y = this.to_y_ratio( 202 );
    } else if (dir === "e") {
        this.x = this.to_x_ratio( 87 );
        this.y = this.to_y_ratio( 237 );
    } else if (dir === "s") {
        this.x = this.to_x_ratio( 54 );
        this.y = this.to_y_ratio( 269 );
    } else if (dir === "w") {
        this.x = this.to_x_ratio( 21 );
        this.y = this.to_y_ratio( 237 );
    }

    this.w = this.to_x_ratio( 26 );
    this.h = this.to_y_ratio( 26 );
    this.sprite = "cleansquarecontrol";

}

CleanSquareMoveButton.prototype = extend(CleanUIElem);

CleanSquareMoveButton.prototype.draw = function() {
    this.display.draw_sprite_scaled_centered(this.sprite, this.x, this.y, this.w, this.h);
};

CleanSquareMoveButton.prototype.onclick = function() {
	this.state.uistore.control = this.dir;
};

})(); 
/* jshint browser: true */
/* global app */

(function(){
"use strict";

var CleanUIElem = app.ui.CleanUIElem;
var extend = app.extend;

var CleanPCListOverlay = app.ui.overlays.CleanPCListOverlay = 
	function(game, state, display){
	CleanUIElem.call( this, game, state, display );

	this.x = 0;
	this.y = 0;
	this.w = this.x_percent_to_pixel( 0.2330508474576271 );
	this.h = this.y_percent_to_pixel( 0.6458333333333334 );
	this.color = this.NEUTRALCOLOR;

	this.subelems = [];

	this.subelems.push( 
		new CleanPCListHead( this.game, this.state, this.display ),
		new CleanCharButtonList( this.game, this.state, this.display )
	);
};
CleanPCListOverlay.prototype = extend(CleanUIElem);

CleanPCListOverlay.prototype.draw = function(){
	this.display.draw_rect_sprite( this.x, this.y, this.w, this.h, this.color );

	for( var i in this.subelems ){
		this.subelems[i].draw();
	}
};

CleanPCListOverlay.prototype.propogate_click = function(x,y){
	for( var i in this.subelems ){
		this.subelems[i].propogate_click(x,y);
	}
};

function CleanCharButtonList(game, state, display){
	CleanUIElem.call( this, game, state, display );

	this.buttons = [];

	for( var i = 0; i < 6; i++ ){
		this.buttons.push( new CleanCharButton( game, state, display, i ) );
	} 
} 
CleanCharButtonList.prototype = extend(CleanUIElem);

CleanCharButtonList.prototype.draw = function(){
	for( var i in this.buttons ){
		this.buttons[i].draw();
	}
};

CleanCharButtonList.prototype.propogate_click = function(x, y){
	for( var i in this.buttons ){
		var b = this.buttons[ i ];
		if( this.contains( b.x, b.y, b.w, b.h, x, y ) ){
			b.onclick();
			break;
		}
	}
};

function CleanCharButton(game, state, display, index){
	CleanUIElem.call( this, game, state, display );

	this.index = index;
	this.actualh = this.y_percent_to_pixel( 0.09375 );

	this.w = this.x_percent_to_pixel( 0.2265762711864407 );
	this.h = this.y_percent_to_pixel( 0.09027777777777778 );
	this.x = this.x_percent_to_pixel( 0.00211864406779661 );
	this.y = this.y_percent_to_pixel( 0.06944444444444445 ) + index * this.actualh;

	this.color = this.LIGHTCOLOR;
	this.scolor = this.SELECTEDCOLOR;

	this.namelabel = new CleanCharButtonName( game, state, display, index, this.y );
	this.hpmplabel = new CleanCharButtonHPMP( game, state, display, index, this.y );
	this.effectlist = new CleanCharButtonStatusEffects( 
		game, state, display, index, this.y );
} 
CleanCharButton.prototype = extend(CleanUIElem);

CleanCharButton.prototype.draw = function(){
	var ch = this.state.player.get_pcs()[ this.index ];
	if( ch === undefined ){
		return;
	} 

	this.display.draw_rect_sprite( this.x, this.y, this.w, this.h, 
		this.state.uistore.pcselected === this.index ? this.scolor : this.color );
	this.namelabel.draw();
	this.hpmplabel.draw();
	this.effectlist.draw();

};

CleanCharButton.prototype.onclick = function(){
	var ch = this.state.player.get_pcs()[ this.index ];
	if( ch === undefined ){
		return;
	}
	this.state.uistore.pcselected = this.index;
};

function CleanCharButtonName(game, state, display, index, yoffset){
	CleanUIElem.call( this, game, state, display );

	this.index = index;
	this.yoffset = yoffset;

	this.x = this.x_percent_to_pixel( 0.006355932203389831 );
	this.y = this.yoffset;

	this.color = this.VERYDARKCOLOR;
	this.scolor = this.LIGHTTEXTCOLOR;
	this.defaulttextsize = 10;
	this.font = this.FONT;
} 
CleanCharButtonName.prototype = extend(CleanUIElem);

CleanCharButtonName.prototype.draw = function(){
	var ch = this.state.player.get_pcs()[ this.index ];
	if( ch === undefined ){
		return;
	}

	this.display.draw_text_params( ch.name, this.x, this.y, {
		color: this.state.uistore.pcselected === this.index ? this.scolor : this.color,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "left"
	});

};

function CleanCharButtonHPMP(game, state, display, index, yoffset){
	CleanUIElem.call( this, game, state, display );

	this.index = index;

	this.x = this.x_percent_to_pixel( 0.21127118644067796 );
	this.hpy = yoffset + this.y_percent_to_pixel( 0.02 );
	this.mpy = yoffset + this.y_percent_to_pixel( 0.07 );

	this.color = this.VERYDARKCOLOR;
	this.scolor = this.LIGHTTEXTCOLOR;
	this.defaulttextsize = 10;
	this.font = this.FONT;
} 
CleanCharButtonHPMP.prototype = extend(CleanUIElem);

CleanCharButtonHPMP.prototype.draw = function(){
	var ch = this.state.player.get_pcs()[ this.index ];
	if( ch === undefined ){
		return;
	}

	this.display.draw_text_params( ch.stats.curr_hp, this.x, this.hpy, {
		color: this.state.uistore.pcselected === this.index ? this.scolor : this.color,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "center"
	});
	this.display.draw_text_params( ch.stats.curr_mp, this.x, this.mpy, {
		color: this.state.uistore.pcselected === this.index ? this.scolor : this.color,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "center"
	});
};

function CleanCharButtonStatusEffects(game, state, display){
	CleanUIElem.call( this, game, state, display );
}
CleanCharButtonStatusEffects.prototype = extend(CleanUIElem);

function CleanPCListHead( game, state, display ){
	CleanUIElem.call( this, game, state, display );
	this.x = 0;
	this.y = 0;
	this.w = this.x_percent_to_pixel( 0.2330508474576271 );
	this.h = this.y_percent_to_pixel( 0.0625 );
	this.color = this.VERYDARKCOLOR;

	this.statusbutton = new CleanPCListHeadStatusButton( game, state, display );
	this.hpmplabel = new CleanPCListHeadHPMPLabel( game, state, display );
} 
CleanPCListHead.prototype = extend(CleanUIElem);

CleanPCListHead.prototype.draw = function(){
	this.display.draw_rect_sprite( this.x, this.y, this.w, this.h, this.color );
	this.statusbutton.draw();
	this.hpmplabel.draw();
};

CleanPCListHead.prototype.propogate_click = function(x, y){
	var b = this.statusbutton;
	if( this.contains( b.x, b.y, b.w, b.h, x, y ) ){
		b.onclick();
	}
};

function CleanPCListHeadStatusButton(game, state, display){
	CleanUIElem.call( this, game, state, display );

	this.x = this.x_percent_to_pixel( 0.00423728813559322 );
	this.y = this.y_percent_to_pixel( 0.003472222222222222 );
	this.w = this.x_percent_to_pixel( 0.1059322033898305 );
	this.h = this.y_percent_to_pixel( 0.052083333333333336 );
	this.color = this.LIGHTCOLOR;
	this.scolor = this.SELECTEDCOLOR;

	this.textx = this.x_percent_to_pixel( 0.064203389830508475 );
	this.texty = this.y_percent_to_pixel( 0.02819444444444445 );
	this.textcolor = this.VERYDARKCOLOR;
	this.stextcolor = this.LIGHTTEXTCOLOR;
	this.defaulttextsize = 10;
	this.font = this.FONT;
} 
CleanPCListHeadStatusButton.prototype = extend(CleanUIElem);

CleanPCListHeadStatusButton.prototype.draw = function(){
	var selected = (this.state.uistore.menustate === "status");
	this.display.draw_rect_sprite( 
		this.x, this.y, this.w, this.h, selected ? this.scolor : this.color
	);

	this.display.draw_text_params( "Status", this.textx, this.texty, {
		color: selected ? this.stextcolor : this.textcolor,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "center"
	});
};

CleanPCListHeadStatusButton.prototype.onclick = function(){
	if( (this.state.uistore.menustate !== "status") ){
		this.state.inter.show_menu("status");
	} else {
		this.state.inter.hide_menu();
	}
};

function CleanPCListHeadHPMPLabel(game, state, display){
	CleanUIElem.call( this, game, state, display );

	this.defaulttextsize = 10;
	this.color = this.LIGHTCOLOR;
	this.font = this.FONT;
	this.hpx = this.x_percent_to_pixel( 0.21127118644067796 );
	this.hpy = this.y_percent_to_pixel( 0.014305555555555556 );
	this.mpx = this.x_percent_to_pixel( 0.21127118644067796 );
	this.mpy = this.y_percent_to_pixel( 0.04555555555555555 );
} 
CleanPCListHeadHPMPLabel.prototype = extend(CleanUIElem); 

CleanPCListHeadHPMPLabel.prototype.draw = function(){
	this.display.draw_text_params( "HP", this.hpx, this.hpy, {
		color: this.color,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "center"
	});
	this.display.draw_text_params( "MP", this.mpx, this.mpy, {
		color: this.color,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "center"
	});
};

})(); 
/* jshint browser: true */
/* global app */

(function(){
"use strict";

var CleanUIElem = app.ui.CleanUIElem;
var extend = app.extend;

var CleanPickupOverlay = app.ui.overlays.CleanPickupOverlay = 
	function(game, state, display){
	CleanUIElem.call( this, game, state, display );

	this.x = this.to_x_ratio( 110 );
	this.y = this.to_y_ratio( 18  );
	this.w = this.to_x_ratio( 362 );
	this.h = this.to_y_ratio( 270 );
	this.color = this.NEUTRALCOLOR;

	this.subelems = [];

	this.subelems.push(
		new CleanPickupList( this.game, this.state, this.display ),
		new app.ui.CleanMenuHeader( this.game, this.state, this.display ),
		new app.ui.modals.CleanModalItemInfo( this.game, this.state, this.display )
	);

	this.store = this.state.uistore;
}; 
CleanPickupOverlay.prototype = extend(CleanUIElem);

CleanPickupOverlay.prototype.draw = function(){
	if( this.store.menustate !== "pickup" && 
		this.store.animating && 
		this.store.prevstate === "pickup" ){

		this.animate_out_pre( this.store );
	} else if( this.store.menustate !== "pickup" ){
		//gah this is stupid
		this.subelems[0].scrolly = 0;
		return;
	} else {
		this.animate_in_pre( this.store );
	}

	this.display.draw_rect_sprite( this.x, this.y, this.w, this.h, this.color );

	for( var i in this.subelems ){
		this.subelems[i].draw();
	}

	this.animate_post( this.store );
};

CleanPickupOverlay.prototype.propogate_click = function( x, y ){
	if( this.state.uistore.menustate !== "pickup" ){
		return;
	}
	
	var val = false;
	for( var i in this.subelems ){
		var elem = this.subelems[i];
		val = val || elem.propogate_click( x, y );
	}
	return val;
};

CleanPickupOverlay.prototype.propogate_unclick = function( ){
	if( this.state.uistore.menustate !== "pickup" ){
		return;
	}
	
	var val = false;
	for( var i in this.subelems ){
		var elem = this.subelems[i];
		val = val || elem.propogate_unclick( );
	}
	return val;
};

function CleanPickupList( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	this.subelems = [];
	for( var i = 0; i < 25; i++ ){
		this.subelems.push( new CleanPickupItem( game, state, display, i ) );
	}

	this.isscrolling = false;
	this.oldscrolly = 0;
	this.scrolly = 0;
	this.lastx = 0;
	this.lasty = 0;
	this.tolerance = 25;
}
CleanPickupList.prototype = extend(CleanUIElem);

CleanPickupList.prototype.draw = function(){
	var scrolly = this._get_scrolly();
	for( var i in this.subelems ){
		var elem = this.subelems[i];
		elem.draw( scrolly );
	}
};

CleanPickupList.prototype._get_scrolly = function(){
	var diff = this.lasty - this.state.uistore.mouse.y;
	if( this.state.uistore.mouse.down && 
		(this.isscrolling || Math.abs( diff ) > this.tolerance) ){
		this.isscrolling = true;
		this.scrolly  = this.oldscrolly - diff;
		if( this.scrolly < this.tolerance && this.scrolly > -this.tolerance ){
			this.scrolly = 0;
		}
	} else {
		this.oldscrolly = this.scrolly;
		this.isscrolling = false;
	}

	return this.scrolly;
};

CleanPickupList.prototype.propogate_click = function( x, y ){
	if( this.state.uistore.modals.iteminfo.visible ){
		return;
	}

	this.lastx = x;
	this.lasty = y;

	var val = false;
	for( var i in this.subelems ){
		val = this.subelems[ i ].propogate_click( x, y ) || val;
	}
	return val;
};

CleanPickupList.prototype.propogate_unclick = function(){
	var x = this.lastx;
	var y = this.lasty;

	if( this.isscrolling ){
		this.isscrolling = false;
		this.lasty = this.state.uistore.mouse.y;
		this.lastx = this.state.uistore.mouse.x;
		return true;
	}

	for( var i in this.subelems ){
		var elem = this.subelems[i];
		if( this.contains( elem.x, elem.y + this.scrolly, elem.w, elem.h, x, y ) ){
			elem.onclick();
			return true;
		}
	}
};

function CleanPickupItem( game, state, display, index ){
	CleanUIElem.call( this, game, state, display );
	this.index = index;

	this.scrolly = 0;
	var yoffset = 20;

	this.w = this.to_x_ratio( 362 );
	this.h = this.to_y_ratio( 20 );
	this.x = this.to_x_ratio( 110 );
	this.y = this.to_y_ratio( yoffset ) + index*( this.h + 1 );
	this.color1 = this.LIGHTCOLOR;
	this.color2 = this.NEUTRALCOLOR;
	this.scolor1 = this.SELECTEDCOLOR;
	this.ecolor1 = this.VERYDARKCOLOR;
	this.color = "lightneutral";

	this.store = this.state.uistore.menus.pickup;

	this.sprite = new CleanPickupSprite( game, state, display, index );
	this.label = new CleanPickupLabel( game, state, display, index );
	this.weight = new CleanPickupWeight( game, state, display, index );
}
CleanPickupItem.prototype = extend(CleanUIElem);

CleanPickupItem.prototype.draw = function(scrolly){
	var ch = this.state.player.get_pcs()[ this.state.uistore.pcselected ];
	if( ch === undefined ){
		return;
	}
	
	this.scrolly = scrolly;
	var itemobj = this.store.nearbyitems[this.index];
	if( itemobj === undefined ){
		this.display.draw_horiz_gradient( 
			this.x, this.y + scrolly, this.w, this.h, this.color1, this.color2 );
		return;
	}
	var itemname = itemobj.name;
	var color = null;
	if( this.state.uistore.currentitemname === itemname ){
		color = this.scolor1;
	} else if( ch.item_is_equipped( itemname ) ){
		color = this.ecolor1;
	} else {
		color = this.color1;
	}

	this.display.draw_horiz_gradient( 
		this.x, this.y + scrolly, this.w, this.h, color, this.color2 );

	this.sprite.draw( scrolly );
	this.label.draw( scrolly );
	this.weight.draw( scrolly );
};

CleanPickupItem.prototype.propogate_click = function(x, y){
	if(this.contains( this.weight.x, this.weight.y, this.weight.w, this.weight.h, x, y )){
		this.weight.onclick();
		return true;
	}
};

CleanPickupItem.prototype.onclick = function(){
	if( this.state.uistore.modals.iteminfo.visible ){
		return;
	}
	var itemobj = this.store.nearbyitems[this.index];
	if( itemobj === undefined ){
		return;
	}
	var itemname = itemobj.name;
	if( itemname === undefined ){
		//i assume do the scroll thing
	} else {
		this.state.inter.set_currentitem( itemname );
		this.state.inter.show_modal( this.state.uistore.modals.iteminfo );
	}
};

function CleanPickupSprite( game, state, display, index ){
	CleanUIElem.call( this, game, state, display );
	this.index = index;

	this.scrolly = 0;

	var yoffset = 30;
	var stride = this.to_y_ratio( 20 );

	this.w = this.to_x_ratio( 14 );
	this.h = this.to_x_ratio( 14 );
	this.x = this.to_x_ratio( 120 );
	this.y = this.to_y_ratio( yoffset ) + index*( stride + 1 );

	this.store = this.state.uistore.menus.pickup;
}
CleanPickupSprite.prototype = extend(CleanUIElem);

CleanPickupSprite.prototype.draw = function(scrolly){
	var itemobj = this.store.nearbyitems[this.index];
	if( itemobj === undefined ){
		return;
	}
	var item = itemobj.item;
	this.display.draw_sprite_scaled_centered(
		item.sprite, this.x, this.y + scrolly, this.w, this.h);
};

function CleanPickupLabel( game, state, display, index ){
	CleanUIElem.call( this, game, state, display );
	this.index = index;

	var yoffset = 23;
	var stride = this.to_y_ratio( 20 );

	this.x = this.to_x_ratio( 145 );
	this.y = this.to_y_ratio( yoffset ) + index*( stride + 1 );
	this.defaulttextsize = 12;
	this.font = this.FONT;
	this.color = this.VERYDARKCOLOR;
	this.scolor = this.LIGHTTEXTCOLOR;
	this.ecolor = this.LIGHTCOLOR;

	this.store = this.state.uistore.menus.pickup;
}
CleanPickupLabel.prototype = extend(CleanUIElem);

CleanPickupLabel.prototype.draw = function( scrolly ){
	var itemobj = this.store.nearbyitems[this.index];
	if( itemobj === undefined ){
		return;
	}
	var itemname = itemobj.name;
	var item = itemobj.item;
	var text = itemname === "none" ? "" : item.name;

	var color = null;
	if( this.state.uistore.currentitemname === itemname ){
		color = this.scolor;
	} else {
		color = this.color;
	}

	this.display.draw_text_params( text, this.x, this.y + scrolly, {
		color: color,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "left"
	});
};

function CleanPickupWeight( game, state, display, index ){
	CleanUIElem.call( this, game, state, display );
	this.index = index;

	var yoffset = 21;
	var stride = this.to_y_ratio( 20 );

	this.x = this.to_x_ratio( 370 );
	this.y = this.to_y_ratio( yoffset ) + index*( stride + 1 );
	this.w = this.to_x_ratio( 90 );
	this.h = this.to_y_ratio( 18 );
	this.defaulttextsize = 12;
	this.font = this.FONT;
	this.color = this.DARKCOLOR;

	this.textx = this.to_x_ratio( 422 ) + (this.w + 1)*index;
	this.texty = this.to_y_ratio( yoffset + 9 ) + index*( stride + 1 );
	this.textcolor = this.LIGHTTEXTCOLOR;
	this.font = this.FONT;
	this.defaulttextsize = 14;

	this.store = this.state.uistore.menus.pickup;
}
CleanPickupWeight.prototype = extend(CleanUIElem);

CleanPickupWeight.prototype.draw = function( scrolly ){
	var itemobj = this.store.nearbyitems[this.index];
	if( itemobj === undefined ){
		return;
	}
	var item = itemobj.item;
	var text = item.weight + " lbs";

	this.display.draw_rect( this.x, this.y + scrolly, this.w, this.h, this.color );

	this.display.draw_text_params( text, this.textx, this.texty + scrolly, {
		color: this.textcolor,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "center"
	});
};

CleanPickupWeight.prototype.onclick = function(){
	var itemobj = this.store.nearbyitems[this.index];
	if( itemobj === undefined ){
		return;
	}
	var itemname = itemobj.name;
	var ch = this.state.player.get_pcs()[ this.state.uistore.pcselected ];
	if( ch === undefined ){
		return;
	}

	this.state.player.acquire_item( ch, itemname, itemobj.sq );
	this.state.inter.update_nearby_items( this.state.wMode.cactor );
};

})(); 
/* jshint browser: true */
/* global app */

(function(){
"use strict";

var CleanUIElem = app.ui.CleanUIElem;
var extend = app.extend;

var CleanStatusOverlay = 
app.ui.overlays.CleanStatusOverlay = function(game, state, display){
	CleanUIElem.call( this, game, state, display );

	this.x = this.to_x_ratio( 110 );
	this.y = this.to_y_ratio( 18  );
	this.w = this.to_x_ratio( 362 );
	this.h = this.to_y_ratio( 270 );
	this.color = this.NEUTRALCOLOR;

	this.subelems = [];

	this.subelems.push(
		new app.ui.CleanMenuHeader( this.game, this.state, this.display ),
		new CleanClassInfo( this.game, this.state, this.display ),
		new CleanSpritePortrait( this.game, this.state, this.display ),
		new CleanReorderButton( this.game, this.state, this.display ),
		new CleanHPInfo( this.game, this.state, this.display ),
		new CleanMPInfo( this.game, this.state, this.display ),
		new CleanStatInfoList( this.game, this.state, this.display ),
		new CleanEquipmentInfoList( this.game, this.state, this.display ),
		new app.ui.modals.CleanModalReorder( this.game, this.state, this.display ),
		new app.ui.modals.CleanModalItemInfo( this.game, this.state, this.display )
	);

	this.store = this.state.uistore;
};
CleanStatusOverlay.prototype = extend(CleanUIElem);

CleanStatusOverlay.prototype.draw = function(){
	if( this.store.menustate !== "status" && 
		this.store.animating && 
		this.store.prevstate === "status" ){

		this.animate_out_pre( this.store );
	} else if( this.store.menustate !== "status" ){
		return;
	} else {
		this.animate_in_pre( this.store );
	}

	this.display.draw_rect_sprite( this.x, this.y, this.w, this.h, this.color );

	for( var i in this.subelems ){
		this.subelems[i].draw();
	}

	this.animate_post( this.store );
};

CleanStatusOverlay.prototype.propogate_click = function(x,y){
	if( this.state.uistore.menustate !== "status" ){
		return;
	}
	
	for( var i in this.subelems ){
		var elem = this.subelems[i];
		elem.propogate_click(x,y);
		if( elem.onclick &&
			this.contains( elem.x, elem.y, elem.w, elem.h, x, y ) ){

			elem.onclick();
		}
	}
};

function CleanClassInfo( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	this.x = this.to_x_ratio( 120 );
	this.y = this.to_y_ratio( 20 );
	this.w = this.to_x_ratio( 127 );
	this.h = this.to_y_ratio( 18 );

	this.color = this.LIGHTCOLOR;

	this.label = new CleanClassInfoLabel( game, state, display );
}
CleanClassInfo.prototype = extend(CleanUIElem);

CleanClassInfo.prototype.draw = function(){
	this.display.draw_rect_sprite( this.x, this.y, this.w, this.h, this.color );
	this.label.draw();
};

var CleanClassInfoLabel = 
app.ui.CleanClassInfoLabel = function( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	this.x = this.to_x_ratio( 188 );
	this.y = this.to_y_ratio( 29 );
	this.color = this.VERYDARKCOLOR;
	this.font = this.FONT;
	this.defaulttextsize = 10;
};
CleanClassInfoLabel.prototype = extend(CleanUIElem);

CleanClassInfoLabel.prototype.draw = function(){
	var ch = this.state.player.get_pcs()[ this.state.uistore.pcselected ];
	if( ch === undefined ){
		return;
	}
	var text = "Class: " + ch.combatclass[0].toUpperCase() + ch.combatclass.slice(1);

	this.display.draw_text_params( text, this.x, this.y, {
		color: this.color,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "center"
	});
};

function CleanSpritePortrait( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	this.x = this.to_x_ratio( 120 );
	this.y = this.to_y_ratio( 44 );
	this.w = this.to_x_ratio( 48 );
	this.h = this.to_y_ratio( 48 );

	this.color = this.LIGHTCOLOR;

	this.sprite = new CleanSpritePortraitPicture( game, state, display );
}
CleanSpritePortrait.prototype = extend(CleanUIElem);

CleanSpritePortrait.prototype.draw = function(){
	this.display.draw_rect_sprite( this.x, this.y, this.w, this.h, this.color );
	this.sprite.draw();
};

function CleanSpritePortraitPicture( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	this.x = this.to_x_ratio( 144 );
	this.y = this.to_y_ratio( 68 );
	this.w = this.to_x_ratio( 28 );
	this.h = this.to_y_ratio( 32 );

	this.frame = 0;
	this.framespeed = 20;
	this.framectr = 0;
	this.maxframes = 2;
}
CleanSpritePortraitPicture.prototype = extend(CleanUIElem);

CleanSpritePortraitPicture.prototype.draw = function(){
	var ch = this.state.player.get_pcs()[ this.state.uistore.pcselected ];
	if( ch === undefined ){
		return;
	}
	var sprite = ch.get_sprite( "d", this.frame );
	if( this.display.sprites[ sprite ] === undefined ){
		this.game.ERROR = 'no sprite ' + sprite + 'has been loaded'; 
		sprite = this.ERRORSPRITE;
	}
    this.display.draw_sprite_scaled_centered(sprite, this.x, this.y, this.w, this.h);

    this.framectr++;
    if( this.framectr === this.framespeed ){
    	this.framectr = 0;
    	this.frame = ( this.frame + 1 ) % this.maxframes;
    }
};

function CleanReorderButton( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	var y = 44;

	this.x = this.to_x_ratio( 179 );
	this.y = this.to_y_ratio( y );
	this.w = this.to_x_ratio( 63 );
	this.h = this.to_y_ratio( 19 );
	this.color = this.LIGHTCOLOR;
	this.scolor = this.SELECTEDCOLOR;

	this.textx = this.to_x_ratio( 215 );
	this.texty = this.to_y_ratio( y + 9 );
	this.textcolor = this.VERYDARKCOLOR;
	this.stextcolor = this.LIGHTTEXTCOLOR;
	this.font = this.FONT;
	this.defaulttextsize = 10;
}
CleanReorderButton.prototype = extend(CleanUIElem);

CleanReorderButton.prototype.draw = function(){
	var selected = this.state.uistore.modals.reorder.visible;

	this.display.draw_rect_sprite( 
		this.x, this.y, this.w, this.h, selected ? this.scolor : this.color );

	this.display.draw_text_params( "Reorder", this.textx, this.texty, {
		color: selected ? this.stextcolor : this.textcolor ,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "center"
	});
};

CleanReorderButton.prototype.onclick = function(){
	if( this.state.uistore.modals.iteminfo.visible ){
		return;
	}

	if( !this.state.uistore.reorderdisabled ){
		this.state.uistore.modals.reorder.visible = 
			!this.state.uistore.modals.reorder.visible;
	}
};

function CleanHPInfo( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	var y = 62;

	this.textx = this.to_x_ratio( 218 );
	this.texty = this.to_y_ratio( y + 12 );
	this.textcolor = this.LIGHTTEXTCOLOR;
	this.font = this.FONT;
	this.defaulttextsize = 14;
}
CleanHPInfo.prototype = extend(CleanUIElem);

CleanHPInfo.prototype.draw = function(){
	var ch = this.state.player.get_pcs()[ this.state.uistore.pcselected ];
	if( ch === undefined ){
		return;
	}

	var text = ch.stats.curr_hp + "/" + ch.stats.max_hp;

	this.display.draw_text_params( text, this.textx, this.texty, {
		color: this.textcolor ,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "center",
		shadowcolor: "#007700"
	});
};

function CleanMPInfo( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	var y = 79;

	this.textx = this.to_x_ratio( 218 );
	this.texty = this.to_y_ratio( y + 12 );
	this.textcolor = this.LIGHTTEXTCOLOR;
	this.font = this.FONT;
	this.defaulttextsize = 14;
}
CleanMPInfo.prototype = extend(CleanUIElem);

CleanMPInfo.prototype.draw = function(){
	var ch = this.state.player.get_pcs()[ this.state.uistore.pcselected ];
	if( ch === undefined ){
		return;
	}

	var text = ch.stats.curr_mp + "/" + ch.stats.max_mp;

	this.display.draw_text_params( text, this.textx, this.texty, {
		color: this.textcolor ,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "center",
		shadowcolor: "#000077"
	});
};

function CleanStatInfoList( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	this.subelems = [];
	for( var i in CleanUIElem.prototype.stats ){
		this.subelems.push( new CleanStatInfo( game, state, display, i ) );
	}
}
CleanStatInfoList.prototype = extend(CleanUIElem);

CleanStatInfoList.prototype.draw = function(){
	for( var i in this.subelems ){
		this.subelems[i].draw();
	}
};

function CleanStatInfo( game, state, display, index ){
	CleanUIElem.call( this, game, state, display );

	this.index = index;
	var yoffset = 112;

	this.x = this.to_x_ratio( 147 );
	this.y = this.to_y_ratio( yoffset + index*26 );
	this.w = this.to_x_ratio( 68 );
	this.h = this.to_y_ratio( 24 );	

	this.label = new CleanStatInfoLabel( game, state, display, index );
	this.value = new CleanStatInfoValue( game, state, display, index );
	this.mod = new CleanStatInfoModifier( game, state, display, index );
}
CleanStatInfo.prototype = extend(CleanUIElem);

CleanStatInfo.prototype.draw = function(){
	this.display.draw_sprite_scaled_centered(
		"cleanstatpill", this.x, this.y, this.w, this.h);

	this.label.draw();
	this.value.draw();
	this.mod.draw();
};

function CleanStatInfoLabel( game, state, display, index ){
	CleanUIElem.call( this, game, state, display );
	this.index = index;

	var yoffset = 112;

	this.x = this.to_x_ratio( 137 );
	this.y = this.to_y_ratio( yoffset + index*26 );

	this.color = this.LIGHTTEXTCOLOR;
	this.font = this.FONT;
	this.defaulttextsize = 12;
}
CleanStatInfoLabel.prototype = extend(CleanUIElem);

CleanStatInfoLabel.prototype.draw = function(){
	this.display.draw_text_params( 
		CleanUIElem.prototype.stats[ this.index ], this.x, this.y, {
			color: this.color,
			font: this.font,
			size: this.get_font_size( this.defaulttextsize ),
			align: "center"
	});
};

function CleanStatInfoValue( game, state, display, index ){
	CleanUIElem.call( this, game, state, display );
	this.index = index;

	var yoffset = 112;

	this.x = this.to_x_ratio( 169 );
	this.y = this.to_y_ratio( yoffset + index*26 );

	this.color = this.VERYDARKCOLOR;
	this.font = this.FONT;
	this.defaulttextsize = 12;
}
CleanStatInfoValue.prototype = extend(CleanUIElem);

CleanStatInfoValue.prototype.draw = function(){
	var ch = this.state.player.get_pcs()[ this.state.uistore.pcselected ];
	if( ch === undefined ){
		return;
	}
	var stat = ch.stats[ CleanUIElem.prototype.stats[ this.index ] ];

	this.display.draw_text_params( stat, this.x, this.y, {
		color: this.color,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "center"
	});
};

function CleanStatInfoModifier( game, state, display, index ){
	CleanUIElem.call( this, game, state, display );
	this.index = index;

	var yoffset = 112;
	var ytextoffset = yoffset;

	this.x = this.to_x_ratio( 206 );
	this.y = this.to_y_ratio( yoffset + index*26 );
	this.texty = this.to_y_ratio( ytextoffset + index*26 );
	this.textx = this.to_x_ratio( 213 );
	this.w = this.to_x_ratio( 40 );
	this.h = this.to_y_ratio( 13 );	

	this.color = this.LIGHTTEXTCOLOR;
	this.font = this.FONT;
	this.defaulttextsize = 10;
}
CleanStatInfoModifier.prototype = extend(CleanUIElem);

CleanStatInfoModifier.prototype.draw = function(){
	var ch = this.state.player.get_pcs()[ this.state.uistore.pcselected ];
	if( ch === undefined ){
		return;
	}
	var stat = ch.stats[ CleanUIElem.prototype.stats[ this.index ] ];
	var finalstat = ch.get_final_stat( CleanUIElem.prototype.stats[ this.index ] );
	var diff = finalstat.stat - stat;
	var sprite = "";
	var text = "";

	if( diff > 0 ){
		sprite = "cleanstatincreasemod";
		text = "+"+diff;
	} else if( diff < 0 ){
		sprite = "cleanstatdecreasemod";
		text = diff+"";
	} else {
		return;
	}

	this.display.draw_sprite_scaled_centered( sprite, this.x, this.y, this.w, this.h );

	this.display.draw_text_params( text, this.textx, this.texty, {
		color: this.color,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "center"
	});

};

function CleanEquipmentInfoList( game, state, display ){
	CleanUIElem.call( this, game, state, display );

	this.subelems = [];
	for( var i in CleanUIElem.prototype.equips ){
		this.subelems.push( new CleanEquipmentInfoItem( game, state, display, i ) );
	}
}
CleanEquipmentInfoList.prototype = extend(CleanUIElem);

CleanEquipmentInfoList.prototype.draw = function(){
	for( var i in this.subelems ){
		this.subelems[i].draw();
	}
};

CleanEquipmentInfoList.prototype.propogate_click = function( x, y ){
	if( this.state.uistore.modals.iteminfo.visible ){
		return;
	}
	
	for( var i in this.subelems ){
		var elem = this.subelems[i];
		if( this.contains( elem.x, elem.y, elem.w, elem.h, x, y ) ){
			elem.onclick();
		}
	}
};

function CleanEquipmentInfoItem( game, state, display, index ){
	CleanUIElem.call( this, game, state, display );
	this.index = index;

	var yoffset = 38;
	var stride = 38;

	this.x = this.to_x_ratio( 255 );
	this.y = this.to_y_ratio( yoffset + index*stride );
	this.w = this.to_x_ratio( 217 );
	this.h = this.to_y_ratio( 20 );
	this.color1 = this.LIGHTCOLOR;
	this.color2 = this.NEUTRALCOLOR;
	this.scolor1 = this.SELECTEDCOLOR;
	this.color = "lightneutral";

	this.bodypart = new CleanEquipmentInfoBodyPart( game, state, display, index );
	this.sprite = new CleanEquipmentInfoSprite( game, state, display, index );
	this.label = new CleanEquipmentInfoLabel( game, state, display, index );
}
CleanEquipmentInfoItem.prototype = extend(CleanUIElem);

CleanEquipmentInfoItem.prototype.draw = function(){
	var ch = this.state.player.get_pcs()[ this.state.uistore.pcselected ];
	if( ch === undefined ){
		return;
	}
	var itemname = ch.equipment[CleanUIElem.prototype.equips[ this.index ].toLowerCase()];
	var item = this.state.world.itemCache.get_item( itemname );

	var color = this.state.uistore.currentitem === item ? this.scolor1 : this.color1;

	this.display.draw_horiz_gradient( 
		this.x, this.y, this.w, this.h, color, this.color2 );

	this.bodypart.draw();
	this.sprite.draw();
	this.label.draw();
};

CleanEquipmentInfoItem.prototype.onclick = function(){
	var ch = this.state.player.get_pcs()[ this.state.uistore.pcselected ];
	if( ch === undefined ){
		return;
	}
	var itemname = ch.equipment[CleanUIElem.prototype.equips[ this.index ].toLowerCase()];
	if( itemname === "none" ){
		return;
	}
	var item = this.state.world.itemCache.get_item( itemname );
	this.state.uistore.currentitem = item;
	this.state.inter.show_modal( this.state.uistore.modals.iteminfo );
};

function CleanEquipmentInfoBodyPart( game, state, display, index ){
	CleanUIElem.call( this, game, state, display );
	this.index = index;

	var yoffset = 21;
	var stride = 38;

	this.x = this.to_x_ratio( 269 );
	this.y = this.to_y_ratio( yoffset + index*stride );
	this.w = this.to_x_ratio( 49 );
	this.h = this.to_y_ratio( 17 );	
	this.color = this.VERYDARKCOLOR;

	this.textx = this.to_x_ratio( 298 );
	this.texty = this.to_y_ratio( (yoffset + 8) + index*stride );
	this.defaulttextsize = 10;
	this.font = this.FONT;
	this.textcolor = this.LIGHTCOLOR;
}
CleanEquipmentInfoBodyPart.prototype = extend(CleanUIElem);

CleanEquipmentInfoBodyPart.prototype.draw = function(){
	this.display.draw_rect_sprite( this.x, this.y, this.w, this.h, this.color );
	var text = CleanUIElem.prototype.equips[ this.index ];
	this.display.draw_text_params( text, this.textx, this.texty, {
		color: this.textcolor,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "center"
	});
};

function CleanEquipmentInfoSprite( game, state, display, index ){
	CleanUIElem.call( this, game, state, display );
	this.index = index;

	var yoffset = 35;
	var stride = 38;

	this.x = this.to_x_ratio( 264 );
	this.y = this.to_y_ratio( (yoffset + 12) + index*stride );
	this.w = this.to_x_ratio( 14 );
	this.h = this.to_x_ratio( 14 );
}
CleanEquipmentInfoSprite.prototype = extend(CleanUIElem);

CleanEquipmentInfoSprite.prototype.draw = function(){
	var ch = this.state.player.get_pcs()[ this.state.uistore.pcselected ];
	if( ch === undefined ){
		return;
	}
	var itemname = ch.equipment[CleanUIElem.prototype.equips[ this.index ].toLowerCase()];
	if( itemname === "none" ){
		return;
	}
	var item = this.state.world.itemCache.get_item( itemname );
	this.display.draw_sprite_scaled_centered(item.sprite, this.x, this.y, this.w, this.h);
};

function CleanEquipmentInfoLabel( game, state, display, index ){
	CleanUIElem.call( this, game, state, display );
	this.index = index;

	var yoffset = 41;
	var stride = 38;

	this.x = this.to_x_ratio( 277 );
	this.y = this.to_y_ratio( (yoffset) + index*stride );
	this.defaulttextsize = 12;
	this.font = this.FONT;
	this.color = this.VERYDARKCOLOR;
	this.scolor = this.LIGHTTEXTCOLOR;
}
CleanEquipmentInfoLabel.prototype = extend(CleanUIElem);

CleanEquipmentInfoLabel.prototype.draw = function(){
	var ch = this.state.player.get_pcs()[ this.state.uistore.pcselected ];
	if( ch === undefined ){
		return;
	}
	var itemname = ch.equipment[CleanUIElem.prototype.equips[ this.index ].toLowerCase()];
	var item = this.state.world.itemCache.get_item( itemname );
	var text = itemname === "none" || itemname === undefined ? "(none)" : item.name;

	var color = this.state.uistore.currentitem === item ? this.scolor : this.color;

	this.display.draw_text_params( text, this.x, this.y, {
		color: color,
		font: this.font,
		size: this.get_font_size( this.defaulttextsize ),
		align: "left"
	});
};

})(); 
/* jshint browser: true */
/* global app, console */

(function(){
"use strict";

var ai = app.world.AI = function(world){
	this.last_action = "none";
	this.world = world;
};

ai.prototype.is_enemy_in_sight = function(me_name){
	var me = this.world.get_character(me_name);
	if( me == "none!" ){
		console.error("ERROR: Tried to check enemy in sight for '"+me_name+
			"' who isn't in the actors list!");
		return;
	}
	for( var i in this.world.characters ){
		var act = this.world.characters[i];
		if( act.allegiance != me.allegiance ){
			if( 
				this.world.determine_visibility(me.x, me.y, act.x, act.y, "blocksSight") 
			){
				return true;
			}
		}
	}

	return false;
};

ai.prototype.is_player_in_sight = function(me_name){
	var me = this.world.get_character(me_name);
	if( me == "none" ){
		console.log("ERROR: Tried to check enemy in sight for '"+me_name+
			"' who isn't in the actors list!");
		return;
	}

	for( var i in this.world.characters ){
		var act = this.world.characters[i];
		if( !act.isNPC ){
			if( this.world.determine_visibility(me.x, me.y, act.x, act.y, "blocksSight") ){
				return true;
			}
		}
	}

	return false;
};

ai.prototype.town_action = function(act, town_instance){
	var act_name = act.name;
	if( this.is_enemy_in_sight(act_name) && this.is_player_in_sight(act_name, town_instance.state) ){

		if( !act.isAgitated ){
			act.isAgitated = true;
            //town_instance.state.warn.add_log("red", "An enemy has spotted you!");
            console.log("You have been spotted by", act.name);
			town_instance.do_action('wait', true );
			return;
		}

		var vic1 = this.world.get_act_in_vicinity( act.name );
		if( vic1 !== "none" ){ //if there is an actor next to me
			town_instance.do_action("wait", true);
		} else {		//if no actor is next to me, but I see somebody I dont like
			this.combat_action(act, town_instance);
		}

		return true;
	} else {
		act.isAgitated = false;
		switch( act.ai_town ){
			case "none": town_instance.do_action('wait', true ); break;
			case "rand": this.town_action_rand( act_name, town_instance); break;
			default: break;
		}
		return false;
	}

};

ai.prototype.town_action_rand = function(act_name, town_instance){
	var dirs = ["nw","n","ne","w","e","sw","s","se"];

	var dir = dirs[Math.floor(Math.random()*dirs.length)];

	if( !town_instance.do_action("move", true, dir)  ){
		for( var i in dirs ){
			if( town_instance.do_action("move", true, dirs[i]) ){
				break;
			}
		}
	} 
};

ai.prototype.combat_action = function(act, combat_instance){
	var act_name = act.name;
	if( !this.is_enemy_in_sight(act_name) ){
		//dont do anything for now
		combat_instance.do_action("wait", true);
	} else {	
		switch(act.ai_combat){
			case "attack_nearest": 
				this.attack_nearest(act, combat_instance); break;
			case "attack_archer": 
				this.attack_archer(act, combat_instance); break;
			case "attack_darkmagic_simple": 
				this.attack_darkmagic_simple(act, combat_instance); break;
			case "attack_lightmagic_simple": 
				this.attack_lightmagic_simple(act, combat_instance); break;
			case "none": 
				combat_instance.do_action("wait", true); break;
			default: 
				console.log("WARNING: ai behavior '"+act.ai_combat+"' defaulted!");
		}
	}
};

/** Get the direction as a string (n, e, sw, etc) that character 'her' is
	relative to character 'actor'
*/
ai.prototype.get_direction_nearest = function(actor, her){
	//Basic algorithm to find the direction of the nearest actor is as follows:
	// 1. Get the x,y distances between two actors
	// 2. Get the absolute max of these distances
	// 3. Normalize these two distances to between 0 and 1, weighted to the max
	// 4. Round the normalized numbers such that you get x and y values -1 < dist < 1;
	// 5. Switch case based on x,y distances

	//1.
	var dx = her.x - actor.x;
	var dy = her.y - actor.y;

	//In order to normalize you need to use absolute value, so I need to preserve
	//the sign to eventually get the direction that the actor is in.
	var xsign = dx < 0 ? -1 : 1;
	var ysign = dy < 0 ? -1 : 1;

	//2.
	var max = 0;
	if( Math.abs(dx) > Math.abs(dy) ){
		max = Math.abs(dx);
	} else {
		max = Math.abs(dy);
	}

	//3. and 4.
	var norm_x = Math.round( app.normalize( Math.abs(dx), 0, max, 0, 1 ) )*xsign;
	var norm_y = Math.round( app.normalize( Math.abs(dy), 0, max, 0, 1 ) )*ysign;

	//5.
	return this.convert_offset_to_dir({x:norm_x, y:norm_y});
};

ai.prototype.convert_offset_to_dir = function(off_obj){
	var norm_x = off_obj.x;
	var norm_y = off_obj.y;
	var dir = "n";

	if 		  ( norm_x === 1 && norm_y === 1  ){
		dir = "se";
	} else if ( norm_x === 1 && norm_y === 0  ){
		dir = "e";
	} else if ( norm_x === 1 && norm_y === -1 ){
		dir = "ne";
	} else if ( norm_x === 0 && norm_y === 1  ){
		dir = "s";
	} else if ( norm_x === 0 && norm_y === -1 ){
		dir = "n";
	} else if ( norm_x === -1 && norm_y === 1 ){
		dir = "sw";
	} else if ( norm_x === -1 && norm_y === 0 ){
		dir = "w";
	} else {
		dir = "nw";
	}

	return dir;
};

ai.prototype.attack_nearest = function(actor, combat_instance){
	var her = this.world.get_closest_enemy_act_to_me( actor.name ); 
	if( her === "none" ){
		this.town_action_rand(actor.name, combat_instance);
	} else {
		var dir = this.get_dir_astar( actor.name, her.name );
		if( !combat_instance.do_action("move", true, dir) ) {
			var dirs = ["nw","n","ne","w","e","sw","s","se"];
			var dirctr = 0;
			while( !combat_instance.do_action("move", true, dir) ){
				if( dirctr > dirs.length ){
					break;
				}
				dir = dirs[dirctr];
				dirctr++;
			}
		}
	}
};

ai.prototype.attack_archer = function(actor, combat_instance){
	var her = this.world.get_closest_enemy_act_to_me( actor.name ); 
	if( her === "none" ){
		this.town_action_rand(actor.name, combat_instance);
	} else {
		if( !this.world.determine_visibility(
				actor.x, actor.y, her.x, her.y, "blocksSight")
		){
			return;
		}

        actor.set_attack_sprite();
        this.world.soundCache.play_sound("scratch0");
       	this.world.add_projectile( 
       		new app.world.actor.Projectile(
       			actor.name, [her.x,her.y], "bowproj", "bowproj", 
       			combat_instance.game_state.game.display, this.world, 1, 
       			function(){
            		combat_instance.engine.action_attack(actor.name, her.name);
            	}.bind(this)
            )
        );  
        actor.action_points-=4;		
	}
};

ai.prototype.attack_darkmagic_simple = function(actor, combat_instance){
	this.town_action_rand(actor.name, combat_instance);
};

ai.prototype.attack_lightmagic_simple = function(actor, combat_instance){
	this.town_action_rand(actor.name, combat_instance);
};

ai.prototype.get_dir_astar = function(me_name, her_name){
	var o_list = [];
	var c_list = [];

	var me = this.world.get_character(me_name);
	var her = this.world.get_character(her_name);

	var Bx = her.x;
	var By = her.y;
	var Ax = me.x;
	var Ay = me.y;

	var TILE = function(x, y, g, h, p){
		this.X = x;
		this.Y = y;
		this.G = g;
		this.H = h;
		this.F = this.H + this.G;		
		this.parent = p;
	};

	var inArrStar = function(x, y, list){
		for( var i = 0; i < list.length; i++ ){
			if( list[i].x === x && list[i].y === y ){
				return i;
			}
		}
		return -1;
	};

	var safecount = 0;
	var safemax = 25;
	var astar = function(){
		var current_square = o_list[0];
		var current_ind = 0;
		var lowest_cost = 1000000;

		while (	current_square.X != Bx || current_square.Y != By ){
			if( safecount > safemax ){
				//path is too long, return no path
				return [];
			}
			safecount++;

			//Get the current square by determining which square in the open 
			//list has the lowest cost
			lowest_cost = 1000000;
			current_ind = 0;
			if( o_list.length > 0 ){
				for( var i in o_list ){
					if( o_list[i].F < lowest_cost ){
						//current_square = o_list[i];
						current_ind = i;
						lowest_cost = o_list[i].F; 
					}
				}
			} else {
				console.log("ERROR: No path");
				//no path found if there are no tiles in the open list
				return [];
			}

			current_square = o_list.splice(current_ind, 1)[0];
			c_list.push(current_square);
			var adj_squares = this.world.get_adjacent_squares_pos( 
				current_square.X, current_square.Y 
			);

			for( var i in adj_squares ){
				var sq = adj_squares[i];
				if( sq === undefined ){
					console.log("Undefined!");
					continue; 
				}
				//skip the square if it's in the closed list or is not passable
				if( inArrStar( sq.x, sq.y, c_list ) !== -1 || !sq.isPassable ){
					continue; 
				}

				var ind = inArrStar( sq.x, sq.y, o_list );
				if( ind == -1 ){
					//Push a new tile onto the list where G is the cost of moving to 
					//the square + the cost of moving to the parent
					//and H is calculated by the manhatten method by the number of vert 
					//and horiz squares to the final position
					var act = this.world.get_character_by_position(sq.x, sq.y);
					if( act != "none" ){
						if( act.allegiance == me.allegiance ){
							o_list.push( 
								new TILE( 
									sq.x, sq.y, 20 + current_square.G, 
									Math.abs( Bx - sq.x ) + Math.abs( By - sq.y )*20, 
									current_square
								) 
							);
						} else {
							o_list.push( 
								new TILE( 
									sq.x, sq.y, 10 + current_square.G,
									Math.abs( Bx - sq.x ) + Math.abs( By - sq.y )*10,
									current_square
								)
							);
						}
					} else {
						o_list.push( 
							new TILE( 
								sq.x, sq.y, 10 + current_square.G, 
								Math.abs( Bx - sq.x ) + Math.abs( By - sq.y )*10, 
								current_square
							)
						);
					}
				} else {
					//Check if there is a better path to this square from the current 
					//square and change the parent and F cost if true
					var square = o_list[ind];
					if( square.G > current_square.G + 10 ){
						square.parent = current_square;
						square.G = current_square.G + 10;
						square.F = square.G + square.H;
					}
				}
			}
		}

		var ret = [current_square];

		//Go back through the path backwards and add all the parent nodes
		var recpath = function(t){
			if( t.parent == "none" ){
				return t;
			} else {
				recpath(t.parent);
				return ret.push( t.parent );
			}
		};
		recpath( current_square );
		return ret;		
	};

	var dir = null;
	o_list.push( new TILE( Ax, Ay, 0, 0, "none") );
	var path = astar();
	if( path.length > 2 ){
		//I messed up the recpath function so the next node that isnt the 
		//starting node is at position 2 in the path
		dir = this.convert_offset_to_dir( {x:-(Ax - path[2].X), y:-(Ay - path[2].Y)});
	} else if ( path.length === 2 ){
		dir = this.convert_offset_to_dir( {x:-(Ax - Bx), y:-(Ay - By)} );
	} else {
		dir = this.get_direction_nearest(me, her);
	}

	o_list = [];
	c_list = [];
	return dir;
};

})(); 
/* jshint browser: true */
/* global app */

(function(){
"use strict";

var CombatEngine = app.world.CombatEngine = function(world, state, wmode){
	this.world = world;
	this.state = state;
	this.wmode = wmode;
};

CombatEngine.prototype.did_it_hit = function(vic_EVA, att_ACC){
    return Math.floor( Math.random()*vic_EVA ) < 
        (Math.floor( Math.random()*att_ACC + att_ACC/2));
};

CombatEngine.prototype.calculate_phys_damage = 
    function(base_damage, w_stats, att_POW, vic_FOR){

    var vari = 5;
    var v = Math.floor((Math.random()*(vari)));
    var total_raw_damage = Math.floor( 
        att_POW*0.25 + (v+base_damage) + (w_stats.rat*att_POW)
    );

    var sub = vic_FOR - w_stats.pen;
    if( sub < 1 ){
        sub = 1;
    }
    var mitigated = Math.floor( total_raw_damage*( app.normalize( sub, 1, 120, 0, 1) ) );
    var final_damage = total_raw_damage - mitigated;

    if( final_damage < 0){
        final_damage = 0;
    }

    return final_damage;
};

CombatEngine.prototype.show_particle = function( particleargs ){
    var captain = this;
    this.wmode.actionlist.push( function(){
        for( var i in particleargs ){
            captain.world.add_particle_system.apply( captain.world, particleargs[i] );  
        }
    });
};

CombatEngine.prototype.action_attack = function(attacker, victim){
    var att = this.world.get_character(attacker);
    var vic = this.world.get_character(victim);

    var a_stats = att.get_stats();
    var v_stats = vic.get_stats();

    this.cDamageType = "physical";

    var rhweapon = this.world.itemCache.get_item(
        att.equipment.rhand.substring( 0, att.equipment.rhand.search("_") ));
    var lhweapon = this.world.itemCache.get_item(
        att.equipment.lhand.substring( 0, att.equipment.lhand.search("_") ));

    var w_stats1 = null;
    var w_stats2 = null;
    if( rhweapon !== "none" ){
        w_stats1 = rhweapon.equipStats;
    } else {
        w_stats1 = new app.world.EquipStats();
    }
    if( lhweapon !== "none" ){
        w_stats2 = lhweapon.equipStats;
    } else {
        w_stats2 = new app.world.EquipStats();
    }

    var att_ACC1 = parseInt(a_stats.ACC) + parseInt(w_stats1.ACC);
    var att_POW1 = parseInt(a_stats.POW) + parseInt(w_stats1.POW);

    // var att_ACC2 = parseInt(a_stats.ACC) + parseInt(w_stats2.ACC);
    // var att_POW2 = parseInt(a_stats.POW) + parseInt(w_stats2.POW);

    var vic_EVA = parseInt(v_stats.EVA);
    var vic_FOR = parseInt(v_stats.FOR);

    var base_damage = w_stats1.BASE;
    var final_damage = this.calculate_phys_damage(base_damage, w_stats1, att_POW1, vic_FOR);

    var msgact2 = victim;
    var tmp2;
    if( (tmp2 = msgact2.search("_")) != -1 ){
        msgact2 = msgact2.substring(0, tmp2);
    }  

    //this.state.notif.add_log("COMBAT", "----> "+final_damage+" to "+msgact2);
    v_stats.curr_hp -= final_damage; 
    this.regulate_all_health();

    if( final_damage === 0 ){
        final_damage = "No Damage!";
    }

    if( !this.did_it_hit(vic_EVA, att_ACC1) ){
        final_damage = final_damage/4;
    }

    var psparams = new app.display.ParticleSystemParams( vic.x, vic.y );
    psparams.variance = 0;
    psparams.ubiquity = 1;
    psparams.damage = final_damage;
    var captain = this;
    psparams.xpos_func = function(){ return vic.x; };
    psparams.ypos_func = function(){ return vic.y; };
    psparams.xvel_func = function(){ return 0; };
    psparams.yvel_func = function(){ return 0; };
    psparams.lifetime  = function(){ 
        return Math.round(captain.state.player.settings.playspeed*0.1); 
    };
    psparams.isAnimated = false;
    att.set_attack_sprite();
    if( rhweapon.type == "ranged" ){
        if( final_damage > 0 ){
            this.world.soundCache.play_sound("arrowhit");
        } else {
            this.world.soundCache.play_sound("miss");
        }
    	this.show_particle( [[vic.x, vic.y, "ranged", "splash", psparams]] );  
    } else {
        var punch = Math.floor( Math.random()*4 ) + 1;
        if( final_damage > 0 ){
            this.world.soundCache.play_sound("punch"+punch);
        } else  {
            this.world.soundCache.play_sound("miss");
        }

        if( att.is_animated ){
            this.show_particle( [[vic.x, vic.y, "physd", "splash", psparams]] );  
        } else {
            captain.world.add_particle_system.apply( captain.world, 
                [vic.x, vic.y, "physd", "splash", psparams] );  
        }
    }  

    vic.lastdamagedby = att;

    this.cDamage = final_damage;
    return final_damage;
};

CombatEngine.prototype.action_magic = function(attacker, victims, spell_name){
    //this.state.notif.add_log("COMBAT",attacker+" casts "+spell_name+":");
    this.world.sm.cast_spell( attacker, victims, spell_name );
    this.regulate_all_health();
    return 0;    
};

CombatEngine.prototype.kill_character = function(act_name){
    this.cDeath = act_name;
    var vic = this.world.get_character(act_name);
    vic.kill();   

    var death_spr_num = Math.floor(Math.random()*4);

    var sq = this.world.get_tile(vic.x, vic.y);
    sq.remove_content(vic.name);

    var drop = this.world.itemCache.get_drop( vic.dropTier );
    if( drop !== "none" ){
        sq.add_content( drop );
    }

    vic.sprite = "death"+death_spr_num;
    var msgact2 = act_name;
    var tmp2 = msgact2.search("_");
    if( tmp2 !== -1 ){
        msgact2 = msgact2.substring(0, tmp2);
    }
    //this.state.notif.add_log("COMBAT",msgact2+" is dead!");
    this.world.soundCache.play_sound("humanmaledeath");

    this.grant_xp_for_kill(vic.lastdamagedby, vic);
};

CombatEngine.prototype.grant_xp_for_kill = function(to, from){
    if( to === null ){
        return;
    }

    var tolevel = to.get_level();
    var fromlevel = from.get_level();
    var diff = fromlevel - tolevel;

    var xpgained = fromlevel;
    //if the attacker had a higher level
    if( diff < 0 ){
        diff = Math.abs( diff );
        xpgained = xpgained  - diff/2;
        if( xpgained < 1 ){
            xpgained = 1;
        }
    } else {
        xpgained = xpgained + (diff*2);
    }

    this.state.player.grant_xp( to, xpgained );
};

CombatEngine.prototype.regulate_all_health = function(){
    var gonnors = [];

    for( var i in this.wmode.pcs ){
        var act = this.world.get_character( this.wmode.pcs[i] );

        var stats = act.get_stats();
        var max_hp = act.get_stats().max_hp;
        var curr_hp = act.get_stats().curr_hp;

        if( curr_hp < 0 ){
            gonnors.push( this.wmode.pcs[i] );
        }

        if( curr_hp > max_hp ){
            stats.curr_hp = max_hp;
        }
    }

    for( var i in this.wmode.npcs ){
        var act = this.world.get_character( this.wmode.npcs[i] );

        var stats = act.get_stats();
        var max_hp = act.get_stats().max_hp;
        var curr_hp = act.get_stats().curr_hp;

        if( curr_hp < 0 && !act.isDead ){
            gonnors.push( this.wmode.npcs[i] );
        }

        if( curr_hp > max_hp ){
            stats.curr_hp = max_hp;
        }
    }

    for( var i in gonnors ){
        this.kill_character( gonnors[i] );
    }
};

CombatEngine.prototype.determine_victims = function(/*attacker_name, gx, gy, spell*/){
    // var sq;
    // var victim = "";
    // var area = [];
    // var victims = [];
    // var cast_type = spell.ct;
    // for( var i = 0; i < spell.a.length; i++ ){
    //     area = spell.a[i];
    //     sq = this.world.get_tile(gx+area[0], gy+area[1]);
    //     if( cast_type === CAST_TARGET ){
    //         victim = sq.has_enemy_character( attacker_name );
    //     } else if( cast_type === CAST_ALLY ){
    //         victim = sq.has_ally_character( attacker_name );
    //     } else if( cast_type === CAST_ANYONE ){
    //         victim = sq.has_character( );
    //     }

    //     if( victim.length > 1 && victim != "blocked!" && victim != "none"){
    //         victims.push(victim);     
    //     }               
    // }

    // return victims;
    return [];
};

CombatEngine.prototype.calculate_hp_from_stats = function(act){
    var stats = act.stats;
    var x = parseInt(stats.CON);
    var z = parseInt(stats.FOR);

    for( var i in act.equipment ){
        var tmp;
        var name=act.equipment[i];
        if( (tmp=act.equipment[i].search("_")) > -1 ){
            name = name.substring(0,tmp);
        }

        var item = this.world.itemCache.get_item( name );
        if( item != "none" ){
            x += parseInt(item.equipStats.CON);
            z += parseInt(item.equipStats.FOR);
        }
    }

    var max = 5+parseInt(x)+Math.round( (25.5*z*Math.sqrt(z))/(parseInt(z) + 1)  );
    var mult = app.normalize( stats.curr_hp, 0, stats.max_hp, 0, 1);
    var cur = Math.round( max*mult );
    var ret = {max: max, cur: cur};
    //If the character had 99 FOR and 99 CON, he would have 350 health and be a bauss
    return ret;
};

CombatEngine.prototype.calculate_mp_from_stats = function(act){
    var stats = act.stats;
    var x = parseInt(stats.POW); 

    for( var i in act.equipment ){
        var tmp;
        var name=act.equipment[i];
        if( (tmp=act.equipment[i].search("_")) > -1 ){
            name = name.substring(0,tmp);
        }
        var item = this.world.itemCache.get_item( name );
        if( item != "none" ){
            x += parseInt(item.equipStats.POW);
        }
    }

    var max = 9 + Math.round(Math.log(x)*Math.sqrt(x/2));
    var mult = app.normalize( stats.curr_mp, 0, stats.max_mp, 0, 1);
    var cur = Math.round( max*mult );
    if( isNaN(cur) ){
        cur = 1;
    }
    var ret = {max: max, cur: cur};

    return ret; 
};

})(); 
/**
    \class EditMode
    \brief Holds the state of the game when it is in combat mode.

    Initialize a new combat state everytime the player initiates combat mode and destroy it
    every time the player leaves combat mode.  
*/
function EditMode(pc_list, npc_list, world, ui, game_state){

    this.world = world;
    this.ui = ui;
    this.game_state = game_state;

    //Combat Lists:
    //console.log( "PCLIST", 
    this.pcs = [];              //max 6 *or we could go more if I decide you can have more than 6 in a party
    for( var i in pc_list ){
        this.pcs.push( pc_list[i] );
    }
    this.npcs = [];             //max unlimited*
    for( var i in npc_list ){
        this.npcs.push( npc_list[i] );
    }    
    //this.allies = [];         //max unlimited*

    //combat oriented variables
    this.current_turn = 0;      //0=player turn, 1=enemy turn, 2=ally turn
    this.cActor = this.pcs[0]   //name of the current active actor
    this.cSpell = ""            //name of the current active spell
    this.curr_dspell = "";
    this.curr_lspell = "";
    this.cAP = 4;               //current action points
    this.cInd = 0;              //index of the current actor in the combat lists
    this.cDamage = 0;           //damage dealt during an attack

    this.playspeed = 200;       //the delay between actions in ms
    this.is_selecting_target = false;

    //TEMP
    this.hold_input = false;

    //this.start_combat();
}

EditMode.prototype.start = function(){
    this.world.mbox.set_x( 100 );
    this.world.mbox.set_y( 100 );
    this.world.cbox.set_x( 100 );
    this.world.cbox.set_y( 100 );    
    this.align_pcs();
}

EditMode.prototype.align_pcs = function(){
    var head = this.world.get_character(this.cActor);
    for( var i in this.pcs ){
        var act = this.world.get_character(this.pcs[i]);
        act.set(head.x, head.y);
    }

    this.world.set_camera( head.x-4, head.y-4 );
}

/**
    Perform a turn based on the given pc
*/
EditMode.prototype.player_turn = function(pc_name, type, data){ 
    var act = this.world.get_character(pc_name);



    // this.world.cbox.set_x( act.x );
    // this.world.cbox.set_y( act.y );

}

EditMode.prototype.check_vs_nodes = function(new_x, new_y){

}

/**
    Move the actor in one square
*/
EditMode.prototype.action_move = function(actor_name, dir, ai){
    //var ind = get_actor_ind(cActor);
    var act = this.world.get_character(actor_name);

    var old_x = act.x;
    var old_y = act.y;

    var new_x = old_x;
    var new_y = old_y;

    switch( dir ){
        case "n":  new_y = new_y-1;                  act.change_direction( "r" ); break;
        case "ne": new_y = new_y-1; new_x = old_x+1; act.change_direction( "r" ); break; 
        case "e":  new_x = new_x+1;                  act.change_direction( "r" ); break;
        case "se": new_y = new_y+1; new_x = old_x+1; act.change_direction( "r" ); break; 
        case "s":  new_y = new_y+1;                  act.change_direction( "l" ); break;
        case "sw": new_y = new_y+1; new_x = old_x-1; act.change_direction( "l" ); break;
        case "w":  new_x = new_x-1;                  act.change_direction( "l" ); break; 
        case "nw": new_y = new_y-1; new_x = old_x-1; act.change_direction( "l" ); break;
    }

    var sq_old = this.world.get_square(old_x, old_y);
    var sq_new = this.world.get_square(new_x, new_y);

    if( sq_new != undefined ){
        // console.log("Error undefined sq_new: ",sq_new);
    } else {
        console.trace();
        console.log("SQ_NEW ("+new_x+ ", " + new_y+") is undefined!"); 
    }

    var victim = sq_new.has_enemy_character(actor_name);

    if( !sq_new.isPassable ){
        victim = "blocked!";
    } 

    if( victim == "none" ){
        //clog(actor_name+": move "+dir+".  "+ (new_x-4)+", "+ (new_y-4));
        //act_set(cActor, new_x, new_y);
        act.set(new_x, new_y);
        this.world.set_camera( new_x-4, new_y-4 );
    } else if( victim == "blocked!"){
        clog("Blocked!");
    } else {
        clog("Somebody already occupies that space!");
    }

    this.align_pcs();

    //Determine if the player is out of the visible bounds of the map after moving
    if( new_x < 5 ){
        var node = this.world.get_node_by_name("Exit_West");
        if( !( node === "none" ) )
            node.perform_action();
    } else if( new_x > this.world.mapw-5 ) {
        var node = this.world.get_node_by_name("Exit_East");
        if( !( node === "none" ) )
            node.perform_action();
    } else if( new_y < 5 ) {
        var node = this.world.get_node_by_name("Exit_North");
        if( !( node === "none" ) )
            node.perform_action();
    } else if( new_y > this.world.maph-5 ) {
        var node = this.world.get_node_by_name("Exit_South");
        if( !( node === "none" ) )
            node.perform_action();
    } 

    node = this.world.get_node_by_position(new_x, new_y)
    if( !(node === "none") ){
        node.perform_action();
    }    

}

EditMode.prototype.handleKeyPress = function( ev ){

    var cpk = [];
    cpk[ev.keyCode] = true;

    // if(this.hold_input){
    //     return;
    // }

    if (cpk[27]) {
        //ESC
        if( selecting_magic_tile ){
            //[OVN_SELECT].isVisible = false;  
            //selecting_magic_tile = false;            
        }
    }
    if (cpk[38]) {
        // UP ARROW
        if( this.current_turn == 0 )
            this.player_turn(this.cActor, "move","n");
        ev.preventDefault();
    }
    if (cpk[40]) {
        // DOWN ARROW
        if( this.current_turn == 0 )
            this.player_turn(this.cActor,"move","s");
        ev.preventDefault();
    } 
    if (cpk[37]) {
        // LEFT ARROW
        if( this.current_turn == 0 )
            this.player_turn(this.cActor,"move","w");
        ev.preventDefault();
    } 
    if (cpk[39]) {
        // RIGHT ARROW
        if( this.current_turn == 0 )
            this.player_turn(this.cActor,"move","e");
        ev.preventDefault();
    }
    if (cpk[76]) {
        //l
        var act = this.world.get_character( this.cActor );
        this.cSpell = act.lspell;
        this.world.mbox.area = this.world.sm.get_spell( this.cSpell ).a;
        this.world.mbox.caster_loc = [act.x, act.y];
        this.world.mbox.isVisible = true; 
        this.is_selecting_target = true;
    }
    if (cpk[68]) {
        //d
        var act = this.world.get_character( this.cActor );
        this.cSpell = act.dspell;

        console.log("GAME "+this.cActor+" casts "+this.cSpell );
        this.world.mbox.area = this.world.sm.get_spell( this.cSpell ).a;
        this.world.mbox.caster_loc = [act.x, act.y];
        this.world.mbox.isVisible = true; 
        this.is_selecting_target = true;
    }    
    if (cpk[81]) {
        //q
        //clearInterval(RUNNING_INTERVAL);

    } 
    //NUMPAD CONTROLS
    if( cpk[105] ){
        //NUMPAD 9 UPRIGHT
        if( this.current_turn == 0 )
            this.player_turn(this.cActor, "move","ne");
    }
    if( cpk[99] ){
        //NUMPAD 3 DOWNRIGHT
        if( this.current_turn == 0 )
            this.player_turn(this.cActor, "move","se");
    }    
    if( cpk[97] ){
        //NUMPAD 1 DOWNLEFT
        if( this.current_turn == 0 )
            this.player_turn(this.cActor, "move","sw");
    } 
    if( cpk[103] ){
        //NUMPAD 7 UPLEFT
        if( this.current_turn == 0 )
            this.player_turn(this.cActor, "move","nw");
    }  
    if (cpk[104]) {
        // NUMPAD 8 UP
        if( this.current_turn == 0 )
            this.player_turn(this.cActor, "move","n");
        ev.preventDefault();
    }
    if (cpk[98]) {
        // NUMPAD 2 DOWN
        if( this.current_turn == 0 )
            this.player_turn(this.cActor,"move","s");
        ev.preventDefault();
    } 
    if (cpk[100]) {
        // NUMPAD 4 LEFT
        if( this.current_turn == 0 )
            this.player_turn(this.cActor,"move","w");
        ev.preventDefault();
    } 
    if (cpk[102]) {
        //NUMPAD 6 RIGHT
        if( this.current_turn == 0 )
            this.player_turn(this.cActor,"move","e");
        ev.preventDefault();
    }            
}  

EditMode.prototype.handleMouseClick = function( ev, off ){

    //console.log( "Cast - "+ this.cSpell );

    var mouseX = ev.clientX - off.x - 17;
    var mouseY = ev.clientY - off.y - 15;

    var gx = this.world.pix_to_gridw(mouseX);
    var gy = this.world.pix_to_gridh(mouseY);   

    if( this.is_selecting_target ){

        this.world.mbox.isVisible = false;

        var spell = this.world.sm.get_spell( this.cSpell );
        var act = this.world.get_character( this.cActor );

        var victims = [];
        var cast_type = spell.ct;

        switch( cast_type ){
            case CAST_TARGET: victims = this.determine_victims(gx, gy, spell); break;
            case CAST_ALLY: victims = this.determine_victims(gx, gy, spell); break;
            case CAST_ANYONE: victims = this.determine_victims(gx, gy, spell); break;
            case CAST_FIELD: break;
            case CAST_GROUP: break;
        }

        console.log("GAME: Victims of this spell ", victims );

        if( victims.length > 0 ) {
            var captain = this;
            act.action_points-=4;
            this.cAP-=4;
            act.set_attack_sprite();
            PROJ_ICY = this.world.add_projectile( new Projectile(this.cActor, [gx,gy], "icyproj","icyproj", myDisplay, this.world, OV_PROJ, function(){
                captain.player_turn(captain.cActor, "magic", victims );
            }));   
        } else {
            clog("The spell has no effect");
        }          

        this.is_selecting_target = false;
    }

    var act = this.world.get_character( this.cActor );

    if( gx == act.x && gy == act.y ){
        console.log("WAIT");
        this.player_turn(this.cActor, "wait", "");
    }

}

EditMode.prototype.handleMouseMove = function( ev, off ){

    var mouseX = ev.clientX - off.x - 17;
    var mouseY = ev.clientY - off.y - 19;

    //console.log( mouseX, mouseY );

    this.world.mbox.set_x( this.world.pix_to_gridw(mouseX) );
    this.world.mbox.set_y( this.world.pix_to_gridh(mouseY) );
} 
/* jshint browser: true */
/* global app  */

(function(){
"use strict";

var Interface = app.world.Interface = function(state){
	this.state = state;
	this.uistore = this.state.uistore;
};

Interface.prototype.turn_all_modals_off = function(){
    for( var i in this.uistore.modals ){
        this.uistore.modals[i].visible = false;
    }
};

Interface.prototype.is_modal_visible = function(){
    for( var i in this.uistore.modals ){
        if( this.uistore.modals[i].visible ){
            return true;
        }
    }
    return false;
};

Interface.prototype.show_modal = function( storemodal ){
    storemodal.animating = true;
    storemodal.visible = true;
};

Interface.prototype.hide_modal = function( storemodal ){
    storemodal.animating = true;
    storemodal.visible = false;
};

Interface.prototype.show_menu = function( name ){
    this.uistore.menustate = name;
    this.uistore.animating = true;
    this.uistore.prevstate = name;
};

Interface.prototype.hide_menu = function(){
    this.uistore.menustate = "none";
    this.uistore.animating = true;
    this.turn_all_modals_off();
};

Interface.prototype.set_currentitem = function( itemname ){
    var item = this.state.world.itemCache.get_item( itemname );
    this.uistore.currentitem = item;
    this.uistore.currentitemname = itemname;
};

Interface.prototype.unset_currentitem = function(){
    this.uistore.currentitem = null;
    this.uistore.currentitmname = "none";
};

Interface.prototype.notify = function(text){
    this.uistore.notification.message = text;
    this.uistore.notification.frames = 250;
};

Interface.prototype.update_location_variables = function(){
    this.update_nearby_items( this.state.wMode.cactor );
    this.determine_button_actions();
};

Interface.prototype.update_nearby_items = function( pc ){
    this.uistore.menus.pickup.nearbyitems = this.state.world.get_nearby_items( pc.name );
};

Interface.prototype.determine_button_actions = function(){
    this.uistore.actionbuttons.a.action = "Talk";
    if( this.state.wMode instanceof app.world.mode.TownMode ){
    	this.uistore.actionbuttons.b.action = "Fight";
    } else {
    	this.uistore.actionbuttons.b.action = "Sheath";
    }
};

Interface.prototype.enable_select = function(func){
	this.uistore.select.visible = true;
	this.uistore.select.onselect = func;
};

Interface.prototype.disable_select = function(){
	this.uistore.select.visible = false;
};

Interface.prototype.actionfuncs = {
	talk: function(){
		if( this.uistore.select.visible === false ){
			this.enable_select( function(x,y){
                var ch = this.state.world.get_character_by_position(x,y);
                this.state.wMode.talk(ch);
            }.bind(this) );
		} else {
            this.disable_select();
        }
		return 1000;
	}, fight: function(){
		this.state.toggle_wmode();
		return 700;
	}, sheath: function(){
		this.state.toggle_wmode();
		return 1000;
	}, none: function(){ return 100; }
};

Interface.prototype.handle_action = function(){
	var a = this.uistore.actionbuttons.a;
	var b = this.uistore.actionbuttons.b;

    if( a.pressed && !a.disabled ){
    	var d = this.state.actionfuncs[ a.action.toLowerCase() ]();
    	a.disabled = true;
    	setTimeout( function(){
    		a.disabled = false;
    	}, d);
    } else if( b.pressed && !b.disabled ){
    	var d = this.state.actionfuncs[ b.action.toLowerCase() ]();
    	b.disabled = true;
       	setTimeout( function(){
    		b.disabled = false;
    	}, d);
    }
};

})(); 
/* jshint browser: true */
/* global app, console */

(function(){
"use strict";

var TIER0 = 0;
var TIER1 = 1;
var TIER2 = 2;
var TIER3 = 3;
var TIER4 = 4;
var TIER5 = 5;

var EquipStats = app.world.EquipStats = function(){
    this.POW = 0;
    this.ACC = 0;
    this.FOR = 0;
    this.CON = 0;
    this.RES = 0;
    this.SPD = 0;
    this.EVA = 0;

    this.pen = 0;
    this.rat = 0.0;
    this.BASE = 0;
};

var ItemCache = app.world.ItemCache = function(world, state){
    this.items = [];
    this.state = state;
    this.world = world;

    var tmp = new Item("Bronze Knife", "knife", world);
    tmp.description = "This is a simple, unassuming knife made from bronze. "+
        "(Bronze is considered the weakest of the metals for weapons)";
    tmp.equipTypes = ["rhand","lhand"];
    tmp.equipStats.POW = 2;
    tmp.equipStats.ACC = 1;
    tmp.equipStats.rat = 0.2;
    tmp.equipStats.pen = 0;
    tmp.equipStats.BASE = 3;
    this.items.push( tmp );

    var tmp = new Item("Bronze Sword", "sword", world);
    tmp.description = "This is a typical sword made out of bronze. "+
        "(Bronze is considered the weakest of the metals for weapons)";
    tmp.equipTypes = ["rhand","lhand"];
    tmp.equipStats.POW = 4;
    tmp.equipStats.ACC = -1;
    tmp.equipStats.rat = 0.6;
    tmp.equipStats.pen = 0;
    tmp.equipStats.BASE = 5;
    this.items.push( tmp );

    var tmp = new Item("Iron Sword", "sword", world);
    tmp.description = "This is a typical sword made out of iron. "+
        "(Iron is considered the second weakest of the metals for weapons)";
    tmp.equipTypes = ["rhand","lhand"];
    tmp.equipStats.POW = 10;
    tmp.equipStats.ACC = 5;
    tmp.equipStats.rat = 0.7;
    tmp.equipStats.pen = 0;
    tmp.equipStats.BASE = 10;
    this.items.push( tmp );

    var tmp = new Item("Oak Bow", "spear", world);
    tmp.description = "This is a standard bow that peasent hunters use to shoot "+
        "local wildlife.";
    tmp.equipTypes = ["rhand"];
    tmp.equipStats.POW = 5;
    tmp.equipStats.ACC = -1;
    tmp.equipStats.rat = 0.6;
    tmp.equipStats.pen = 3;
    tmp.equipStats.BASE = 3;
    tmp.type = "ranged";
    this.items.push( tmp );

    var tmp = new Item("Health Potion (weak)", "potion", world);
    tmp.description = "This bottle is full of a sickeningly brown liquid, and it "+
        "smells of burnt turnips, but you know you'll feel at least a little better"+
        " if you drink it.";
    tmp.on_use = function(user, victim){
        var amt = Math.round((Math.random()*10 + 1));
        if( victim.isDead ){
            this.state.warn.add_log("red", "This character is dead!");
            return;
        }
        victim.stats.curr_hp += amt;
        if( victim.stats.curr_hp > victim.stats.max_hp ){
            victim.stats.curr_hp = victim.stats.max_hp;
        }    
        this.world.soundCache.play_sound("gulp");    
        console.log("GAME: "+user.name+" uses "+this.name+" on "+victim.name);
        this.state.warn.add_log("red", this.name+" makes "+victim.name+" feel a little better");
    }.bind(this);
    this.items.push( tmp );

    var tmp = new Item("Health Potion (moderate)", "potion", world);
    tmp.description = "This bottle is full of a sickeningly brown liquid, and it "+
        "smells of burnt turnips, but you know you'll feel at least a little better"+
        " if you drink it.";
    tmp.on_use = function(user, victim){
        var amt = Math.round((Math.random()*20 + 10));
        if( victim.isDead ){
            this.state.warn.add_log("red", "This character is dead!");
            return;
        }     
        victim.stats.curr_hp += amt;
        if( victim.stats.curr_hp > victim.stats.max_hp ){
            victim.stats.curr_hp = victim.stats.max_hp;
        }
        this.world.soundCache.play_sound("gulp");
        console.log("GAME: "+user.name+" uses "+name+" on "+victim.name);
        this.state.warn.add_log(
            "red", this.name+" makes "+victim.name+" feel a little better"
        );
    }.bind(this);
    this.items.push( tmp );
  
    var tmp = new Item("Bag of Gold (weak)", "goldbag", world);
    tmp.description = "";
    tmp.on_acquire = function(user, name){
        var amt = Math.round((Math.random()*20 + 1));
        console.log(
            "GAME: "+user.name+" picks up "+name+" valued at "+amt+" gold pieces."
        );
    }.bind(this);
    this.items.push( tmp ); 

    var tmp = new Item("Bag of Gold (moderate)", "goldbag", world);
    tmp.description = "";
    tmp.on_acquire = function(user, name){
        var amt = Math.round((Math.random()*50 + 20));
        console.log(
            "GAME: "+user.name+" picks up "+name+" valued at "+amt+" gold pieces."
        );
    }.bind(this);
    this.items.push( tmp );  

    var tmp = new Item("Leather Boots", "boots", world);
    tmp.description = "The only redeeming quality of these ratty, old boots is that"+
        " they'll most likely prevent you from stubbing your toes on an oucropped root.";
    tmp.equipTypes = ["feet"];
    tmp.equipStats.CON = 1;
    this.items.push( tmp );  

    var tmp = new Item("Cloth Pants", "pants", world);
    tmp.description = "A pretty standard pair of pants.";
    tmp.equipTypes = ["legs"];
    tmp.equipStats.CON = 2;
    this.items.push( tmp );  

    var tmp = new Item("Cloth Shirt", "shirt", world);
    tmp.description = "A cloth shirt that any peasent would wear.";
    tmp.equipTypes = ["body"];
    tmp.equipStats.CON = 2;
    this.items.push( tmp ); 

    var tmp = new Item("Bronze Chain Vest", "shirt", world);
    tmp.description = "This is a typical chain vest made out of bronze.";
    tmp.equipTypes = ["rhand","lhand"];
    tmp.equipStats.CON = 5;
    tmp.equipStats.FOR = 3;
    this.items.push( tmp );    

    var tmp = new Item("Pebble", "rock", world);
    tmp.description = "This is just an igneous rock.  Why did you pick this up again?";
    tmp.equipTypes = [];
    this.items.push( tmp ); 

    var tmp = new Item("Wooden Shield", "shield", world);
    tmp.description = "In truth this is just a flat piece of wood, but somebody "+
        "strapped a handhold on one side of it.";
    tmp.equipTypes = ["lhand"];
    this.items.push( tmp );

    var tmp = new Item("Bronze Shield", "shield", world);
    tmp.description = "A simple sheet of bronze with a few dents in it.";
    tmp.equipTypes = ["lhand"];
    this.items.push( tmp );

    var tmp = new Item("Iron Shield", "shield", world);
    tmp.description = "A sturdy shield made of iron";
    tmp.equipStats.CON = 5;
    tmp.equipStats.FOR = 5;    
    tmp.equipTypes = ["lhand"];
    this.items.push( tmp );

    var tmp = new Item("Wooden Arrow", "axe", world);
    tmp.description = "A simple wooden arrow for hunting wildlife.";
    tmp.equipTypes = ["ammo"];
    this.items.push( tmp );    

    var tmp = new Item("Sword of Power", "sword", world);
    tmp.description = "A feint glow emanates from this sword.  You can sense it's"+
        " incredible power just by holding it.";
    tmp.equipTypes = ["rhand"];
    tmp.equipStats.POW = 80;
    tmp.equipStats.ACC = 50;
    tmp.equipStats.rat = 1.0;
    tmp.equipStats.pen = 10;
    tmp.equipStats.BASE = 25;
    tmp.tier = TIER5;
    this.items.push( tmp );                                    
};

ItemCache.prototype.get_item = function(item_name){
    var tmp;
    if( (tmp = item_name.search("_")) > -1 ){
        item_name = item_name.substring(0, tmp);
    }
    for( var i in this.items ){
        if( this.items[i].name == item_name ){
            return this.items[i];
        }
    }
    return "none";
};

ItemCache.prototype.get_drop = function(drop_tier){
    var bag = [];

    switch( drop_tier ){
        case TIER0: break;
        case TIER1: break;
        case TIER2: break; 
        case TIER3: break; 
        case TIER4: break; 
        case TIER5: break;  
    }

    for( var i in this.items ){
        if( this.items[i].tier <= drop_tier){
            bag.push( this.items[i].name );
        }
    }

    var ind = Math.floor( Math.random()*bag.length );

    return bag[ind]+"_"+app.random_id(10);
};

var Item = function(name, sprite, world){
    this.world = world;
    this.name = name;
    this.sprite = sprite;

    this.tier = TIER0;

    this.on_use = "none";
    this.on_acquire = "none";

    this.type = "none";
    this.weight = 10;
    this.equipTypes = [];
    this.equipStats = new EquipStats();  
    this.description = "There is no description currently available for this"+
        " droll item.  You should try imagining your own.";
    this.value = 10;
    this.stackable = false;
};

var ItemBronzeKnife = function(){
    Item.call(this, "Bronze Knife", "knife" );

    this.isEquipable = true;
    this.isUsable = true;
    this.equipType = "rhand";
    this.equipStats.POW = 1;

    return this;
};

ItemBronzeKnife.prototype = app.extend(Item);

})(); 
/* jshint browser: true */
/* global app, console */

(function(){
"use strict";

var Player = app.world.Player = function( state ){
	this.state = state;
	this.pcs = [];

	this.settings = {
		playspeed:100
	};

	//storage save location
	//username?
	//statistics?
};

Player.prototype.create_pc = function( pc ){
    var ch = new app.world.actor.Character({
        x: pc.xpos, 
        y: pc.ypos, 
        sprite: pc.sprite, 
        name: pc.name, 
        display: this.state.world.display, 
        world: this.state.world, 
        ai: this.state.world.ai, 
        stats: pc.stats,
        xp: 0,
        xptonextlevel: this.get_threshold_xp( pc.stats )
    });

    for( var i in pc.inventory ){
        var itemname = pc.inventory[i];
        if( !itemname ){
            continue;
        }
        if( itemname.search("_") == -1 ){
            itemname = itemname + "_" + this.state.random_id(10);
            pc.inventory[i] = itemname;
        }
        ch.add_item( itemname );
    }

    ch.equipment = pc.equip_table;

    for( var i in ch.equipment ){
        for( var j in ch.inventory ){
            var itemname = ch.inventory[j];
            var shortname = ch.inventory[j].substring( 0, itemname.search("_") );
            if( shortname == ch.equipment[i] && ch.equipment[i] != "none" ){
                ch.equipment[i] = itemname;
            }
        }
    }

    ch.isNPC = false;
    ch.allegiance = "ally";

    ch.lspells = pc.lspells;
    ch.dspells = pc.dspells;

    console.log("pc character made, xp: ", ch.xp, "xptonextlevel", ch.xptonextlevel );

    return ch;
};

Player.prototype.load_pcs = function( party ){
    for( var i in party ){
        var pc = this.create_pc( party[i] );
        this.pcs.push( pc );
    }
    console.log("PCS", this.pcs);
};

Player.prototype.load_settings = function( settings ){
    this.settings = settings;
};

Player.prototype.get_chars_visual = function(){
	var ret = [];
	if( this.mode === "combat" ){
        ret = ret.concat( this.get_chars_alive() );
	} else {
        ret.push( this.get_first() );
	}
	return ret;
};

Player.prototype.get_chars_alive = function(){
	var ret = [];
    for( var i in this.pcs ){
        if( this.pcs[i].isAlive ){
            ret.push( this.pcs[i] );
        }
    }
	return ret;
};

Player.prototype.get_not_first = function(){
    var ret = [];
    var first = this.get_first();
    for( var i in this.pcs ){
        if( this.pcs[i].isAlive && this.pcs[i] !== first ){
            ret.push( this.pcs[i] );
        }
    }
    return ret;
};

Player.prototype.get_pcs = function(){
	return this.pcs;
};

Player.prototype.change_mode = function(mode, world){
	this.mode = mode;
	if( mode === "combat" ){
		this.align_pcs(world);
	}
};

Player.prototype.get_first = function(){
    for( var i in this.pcs ){
        if( this.pcs[i].isAlive ){
            return this.pcs[i];
        }
    }
    return "none";
};

Player.prototype.align_pcs = function(world){

    var act = this.get_first();
    this.world = world;
    var xoffs;
    var yoffs;

    switch( this.world.facing_dir ){
        case "n": 
            xoffs = [0,-1,+1,-2,-0,+2];
            yoffs = [0,+1,+1,+2,+2,+2];
            break;
        case "s":
            xoffs = [0,+1,-1,+2,+0,-2];
            yoffs = [0,-1,-1,-2,-2,-2];
            break;
        case "e":
            xoffs = [0,-1,-1,-2,-2,-2];
            yoffs = [0,-1,+1,-2,-0,+2];
            break; 
        case "w":
            xoffs = [0,+1,+1,+2,+2,+2];
            yoffs = [0,+1,-1,+2,+0,-2];
            break;                       
    }

    for( var i = 0; i < this.pcs.length; i++ ){
        var act2 = this.pcs[i];
        var pos = {x: act.x, y: act.y};
        if( i === 0 ){
            continue;
        } else if( i === 1 ) {
            pos = this.world.get_valid_pos( act.x+xoffs[i], act.y+yoffs[i] );
            if( pos === "none" ){
                pos = {x: act.x, y: act.y};
            }
        } else if( i === 2 ) {
            pos = this.world.get_valid_pos( act.x+xoffs[i], act.y+yoffs[i] );
            if( pos === "none" ){
                pos = {x: act.x, y: act.y};
            }
        }   else if( i === 3 ) {
            pos = this.world.get_valid_pos( act.x+xoffs[i], act.y+yoffs[i] );
            if( pos === "none" ){
                pos = {x: act.x, y: act.y};
            }
        }  else if( i === 4 ) {
            pos = this.world.get_valid_pos( act.x+xoffs[i], act.y+yoffs[i] );
            if( pos === "none" ){
                pos = {x: act.x, y: act.y};
            }
        }  else if( i === 5 ) {
            pos = this.world.get_valid_pos( act.x+xoffs[i], act.y+yoffs[i] );
            if( pos === "none" ){
                pos = {x: act.x, y: act.y};
            }
        } 

        act2.set(pos.x, pos.y);
        act2.change_direction(this.get_first().direction);
    }
};

Player.prototype.reorder_pc = function(oldindex, newindex){
    if( oldindex === newindex ){
        _remove_modal();
        return;
    }

    var first = this.get_first();
    var origx = first.x;
    var origy = first.y;

    if( newindex < 0 || newindex >= this.get_pcs().length ){
        console.error("ERROR, tried to reorder_pcs at an index that was not in range.",
            oldindex, newindex);
        _remove_modal.call(this);
        return;
    }

    var _remove_modal = function(){
        this.state.uistore.pcselected = newindex;
        this.state.uistore.modals.reorder.visible = false;
    }.bind(this);

    var pc = this.get_pcs()[oldindex];
    this.pcs.splice( oldindex, 1, this.pcs.splice( newindex, 1, pc)[0] );
    var newfirst = this.get_first();
    newfirst.set( origx, origy );
    
    this.state.wMode.init_actors();
    this.state.wMode.begin_round();
    _remove_modal();
};

Player.prototype.check_inventory_acquire = function( ch, item ){
    var totalweight = ch.get_inventory_weight() + item.weight;
    var maxweight = ch.get_max_carryable_weight();
    if( ch.inventory.length >= ch.MAXINVENTORYCOUNT ){
        console.log("WARNING", ch.name, "has more than", ch.MAXINVENTORYCOUNT,
            "items in his/her inventory.");
        this.state.notify( ch.name + "'s inventory is full.");
        this.state.hide_modal( this.state.uistore.modals.give );
        return true;
    } else if( totalweight > maxweight ){
        console.log("WARNING", "This item is too heavy for", ch.name, "to carry");
        this.state.notify( "This item is too heavy for "+ch.name+" ("+
            totalweight+" lbs / "+maxweight+" lbs).");
        this.state.hide_modal( this.state.uistore.modals.give );
        return true;
    }
    return false;
};

Player.prototype.transfer_item = function( ch1, ch2, itemname ){
    if( ch1 === ch2 ){
        this.state.hide_modal( this.state.uistore.modals.give );
        return;
    }

    var item = this.state.world.itemCache.get_item( itemname );
    if( item === undefined ) {
        console.error( "No item with name", itemname, "exists to transfer.");
        return;
    }

    if( this.check_inventory_acquire( ch2, item ) ){
        return;
    }

    ch1.remove_item_from_inventory( itemname );
    ch2.add_item_to_inventory( itemname );
    ch1.unequip_item( itemname );
    this.state.inter.hide_modal( this.state.uistore.modals.give );
};

Player.prototype.acquire_item = function( ch, itemname, tile ){
    var item = this.state.world.itemCache.get_item( itemname );
    if( item === undefined ) {
        console.error( "No item with name", itemname, "exists to acquire.");
        return;
    }

    if( this.check_inventory_acquire(ch, item) ){
        return;
    }

    console.log("REMOVE CONTENT");
    tile.remove_content( itemname );
    ch.add_item_to_inventory( itemname );
};

Player.prototype.get_threshold_xp = function( stats ){
    var lvl = app.world.actor.Character.prototype.get_level.call( {}, stats );
    return lvl*50;
};

Player.prototype.grant_xp = function( pc, xpamt ){
    var y = null;
    for( var i in this.pcs ){
        if( this.pcs[i] === pc ){
            y = true;
            break;
        } else {
            y = false;
        }
    }

    if( !y ){
        return;
    }

    xpamt = Math.round(xpamt);
    pc.xp += xpamt;

    this.state.world.add_text_particle( pc.x, pc.y, "+"+xpamt+" xp");

    if( pc.xp >= pc.xptonextlevel ){
        this.perform_levelup( pc );
    }
};

Player.prototype.perform_levelup = function( pc ){
    var overlay = this.state.UI.getElement( app.ui.LevelupOverlay );
    overlay.reset_with_char( pc );
    this.state.pause_combat();
};

})(); 
/* jshint browser: true */
/* global app */

(function(){
"use strict";

app.world.SpellManager = function(world, state){
	this.world = world;
	this.state = state;
};

})(); 
/* jshint browser: true */
/* global app */

(function(){
"use strict";

var AbstractEffect = app.world.AbstractEffect = function(
	sprite, vic_name, att_name, display, world
){
	this.sprite = sprite;
	this.name = "Abstract";
	this.display = display;
	this.world = world;
	this.att = this.world.get_character(att_name);
	this.vic = this.world.get_character(vic_name);

	this.id = -1;

	this.stats = {
		POW:0,
		ACC:0,
		FOR:0,
		CON:0,
		RES:0,
		EVA:0,
		SPD:0
	};

	this.power = this.att.stats.POW;

	this.FLAG_remove = false;
	this.decay_turn = 3;
};

AbstractEffect.prototype.draw = function(x, y){
	this.display.draw_sprite(this.sprite+"_w", x, y);
};

AbstractEffect.prototype.apply_pre_turn_effect = function(){};

AbstractEffect.prototype.apply_post_turn_effect = function(){};

AbstractEffect.prototype.decrement_effect = function(){
	this.decay_turn--;
	if( this.decay_turn < 0 ){
		this.remove();
	}
};

AbstractEffect.prototype.remove = function(){
	this.FLAG_remove = true;
};

var PoisonedEffect = app.world.PoisonedEffect = 
	function(vic_name, att_name, display, world){

	AbstractEffect.call(this, "se_poison", vic_name, att_name, display, world);
	this.name = "Poisoned";
	this.damage_if_greater_than = -1;
	this.decay_turn = Math.round( 
		Math.floor(Math.random()*3)+1+
		(this.att.stats.POW*0.04)*Math.floor(Math.random()*10)
	);
};

PoisonedEffect.prototype = app.extend(AbstractEffect); 

PoisonedEffect.prototype.apply_post_turn_effect = function(xoff, yoff){
	if( Math.floor(Math.random()*10) > this.damage_if_greater_than ){
		this.world.soundCache.play_sound("poison");
		var final_damage = Math.floor(Math.random() * 10 + this.att.stats.POW*0.3);
		this.vic.stats.curr_hp -= final_damage;

	    var psparams = new app.display.ParticleSystemParams( this.vic.x, this.vic.y );
	    psparams.variance = 0;
	    psparams.ubiquity = 1;
	    psparams.damage = final_damage;
	    psparams.xpos_func = function(){ return this.vic.x+xoff; }.bind(this);
	    psparams.ypos_func = function(){ return this.vic.y+yoff; }.bind(this);
	    psparams.xvel_func = function(){ return 0; }.bind(this);
	    psparams.yvel_func = function(){ return 0; }.bind(this);
	    psparams.lifetime  = function(){ return 7; }.bind(this);
	    psparams.isAnimated = false;
	    this.world.add_particle_system(
	    	this.vic.x, this.vic.y, "poisond", "splash", psparams
	    );  
	}
};

var BurningEffect = app.world.BurningEffect = 
	function(vic_name, att_name, display, world){
	AbstractEffect.call(this, "se_burning", vic_name, att_name, display, world);

	this.name = "Burning";

	//Burning should have a 75% chance of doing damage, but hit less hard than poison
	this.damage_if_greater_than = -1;

	this.decay_turn = Math.round( 
		Math.floor(Math.random()*3)+1+
		(this.att.stats.POW*0.03)*Math.floor(Math.random()*10)
	);
};

BurningEffect.prototype = app.extend(AbstractEffect); 

BurningEffect.prototype.apply_post_turn_effect = function(xoff, yoff){
	if( Math.floor(Math.random()*10) > this.damage_if_greater_than ){

		this.world.soundCache.play_sound("blast");
		var final_damage = Math.round(Math.random()*5 + this.att.stats.POW*0.2);
		this.vic.stats.curr_hp -= final_damage;

	    var psparams = new app.display.ParticleSystemParams( this.vic.x, this.vic.y );
	    psparams.variance = 0;
	    psparams.ubiquity = 1;
	    psparams.damage = final_damage;
	    psparams.xpos_func = function(){ return this.vic.x+xoff; };
	    psparams.ypos_func = function(){ return this.vic.y+yoff; };
	    psparams.xvel_func = function(){ return 0; };
	    psparams.yvel_func = function(){ return 0; };
	    psparams.lifetime  = function(){ return 7; };
	    psparams.isAnimated = false;
	    this.world.add_particle_system(
	    	this.vic.x, this.vic.y, "fired", "splash", psparams
	    );
	}
};

var FearedEffect = app.world.FearedEffect = 
	function(vic_name, att_name, display, world, state){
	AbstractEffect.call(this, "se_feared", vic_name, att_name, display, world);
	this.name = "Feared";
	this.state = state;
	this.decay_turn = 10;
};

FearedEffect.prototype = app.extend(AbstractEffect); 

FearedEffect.prototype.apply_pre_turn_effect = function(xoff, yoff){
	this.world.ai.town_action_rand(this.vic.name, this.state.wMode);

    var psparams = new app.display.ParticleSystemParams( this.vic.x, this.vic.y );
    psparams.variance = 0;
    psparams.ubiquity = 1;
    psparams.damage = "Feared!";
    psparams.xpos_func = function(){ return this.vic.x+xoff; }.bind(this);
    psparams.ypos_func = function(){ return this.vic.y+yoff; }.bind(this);
    psparams.xvel_func = function(){ return 0; }.bind(this);
    psparams.yvel_func = function(){ return 0; }.bind(this);
    psparams.lifetime  = function(){ return 7; }.bind(this);
    psparams.isAnimated = false;
    this.world.add_particle_system( this.vic.x, this.vic.y, "chaind", "splash", psparams ); 

    this.state.wMode.cAP = 0;
    this.vic.action_points = 0; 	
};

var BoundEffect = app.world.BoundEffect = 
	function(vic_name, att_name, display, world, state){
	AbstractEffect.call(this, "se_bound", vic_name, att_name, display, world);

	this.name = "Bound";
	this.state = state;
	this.stats.SPD = -Math.round(
		Math.floor(Math.random()*10)+1+(this.att.stats.POW*0.5)
	);
	this.decay_turn = Math.round(
		Math.floor(Math.random()*3)+1+
		(this.att.stats.POW*0.03)*Math.floor(Math.random()*10)
	);
};

BoundEffect.prototype = app.extend(AbstractEffect); 

BoundEffect.prototype.apply_post_turn_effect = function(xoff, yoff){
	var final_damage = Math.round(Math.random()*10 + this.att.stats.POW*0.5);
	this.vic.stats.curr_hp -= final_damage;

    var psparams = new app.display.ParticleSystemParams( this.vic.x, this.vic.y );
    psparams.variance = 0;
    psparams.ubiquity = 1;
    psparams.damage = final_damage;
    psparams.xpos_func = function(){ return this.vic.x+xoff; }.bind(this);
    psparams.ypos_func = function(){ return this.vic.y+yoff; }.bind(this);
    psparams.xvel_func = function(){ return 0; }.bind(this);
    psparams.yvel_func = function(){ return 0; }.bind(this);
    psparams.lifetime  = function(){ return 7; }.bind(this);
    psparams.isAnimated = false;
    this.world.add_particle_system( this.vic.x, this.vic.y, "chaind", "splash", psparams ); 

    this.state.wMode.cAP = 0;
    this.vic.action_points = 0; 	
};

var FrozenEffect = app.world.FrozenEffect = 
	function(vic_name, att_name, display, world, state){
	AbstractEffect.call(this, "se_frozen", vic_name, att_name, display, world);

	this.name = "Frozen";
	this.state = state;

	this.stats.EVA = -Math.round( 
		Math.floor(Math.random()*10)+1+(this.att.stats.POW*0.5)
	);

	this.decay_turn = Math.round( Math.floor(Math.random()*3)+
		1+(this.att.stats.POW*0.03)*Math.floor(Math.random()*10)
	);
};

FrozenEffect.prototype = app.extend(AbstractEffect); 

FrozenEffect.prototype.apply_pre_turn_effect = function(){
    this.state.wMode.cAP = 1;
    this.vic.action_points = 1; 	
};

FrozenEffect.prototype.apply_post_turn_effect = function(xoff, yoff){
	var final_damage = Math.round(Math.random()*5 + this.att.stats.POW*0.2);
	this.vic.stats.curr_hp -= final_damage;

	this.world.soundCache.play_sound("blast");
    var psparams = new app.display.ParticleSystemParams( this.vic.x, this.vic.y );
    psparams.variance = 0;
    psparams.ubiquity = 1;
    psparams.damage = final_damage;
    psparams.xpos_func = function(){ return this.vic.x+xoff; }.bind(this);
    psparams.ypos_func = function(){ return this.vic.y+yoff; }.bind(this);
    psparams.xvel_func = function(){ return 0; }.bind(this);
    psparams.yvel_func = function(){ return 0; }.bind(this);
    psparams.lifetime  = function(){ return 7; }.bind(this);
    psparams.isAnimated = false;
    this.world.add_particle_system( this.vic.x, this.vic.y, "iced", "splash", psparams ); 

    this.state.wMode.cAP = 0;
    this.vic.action_points = 0; 	
};

var HastedEffect = app.world.HastedEffect = 
	function(vic_name, att_name, display, world, state){
	AbstractEffect.call(this, "se_hasted", vic_name, att_name, display, world);

	this.name = "Hasted";
	this.state = state;

	this.stats.SPD = Math.round( Math.floor(Math.random()*10)+1+(this.att.stats.POW*0.5));

	this.decay_turn = Math.round( 
		Math.floor(Math.random()*3)+1+
		(this.att.stats.POW*0.03)*Math.floor(Math.random()*10)
	);
};

HastedEffect.prototype = app.extend(AbstractEffect); 

HastedEffect.prototype.apply_pre_turn_effect = function(){
    this.state.wMode.cAP += 2 + Math.round((this.att.stats.POW*0.1));
    this.vic.action_points = this.state.wMode.cAP; 	
};

var ShieldedEffect = app.world.ShieldedEffect = 
	function(vic_name, att_name, display, world, state){
	AbstractEffect.call(this, "se_shielded", vic_name, att_name, display, world);

	this.name = "Shielded";
	this.state = state;

	this.stats.RES = Math.round( Math.floor(Math.random()*10)+1+(this.att.stats.POW*0.5));
	this.stats.FOR = Math.round( Math.floor(Math.random()*10)+1+(this.att.stats.POW*0.5));

	this.decay_turn = Math.round(
		Math.floor(Math.random()*3)+1+
		(this.att.stats.POW*0.03)*Math.floor(Math.random()*10)
	);
};

ShieldedEffect.prototype = app.extend(AbstractEffect); 

var CursedEffect = app.world.CursedEffect = 
	function(vic_name, att_name, display, world, state){
	AbstractEffect.call(this, "se_cursed", vic_name, att_name, display, world);

	this.name = "Cursed";
	this.state = state;

	this.stats.SPD = -Math.round( 
		Math.floor(Math.random()*10)+1+(this.att.stats.SPD*0.5)
	);
	this.stats.POW = -Math.round( 
		Math.floor(Math.random()*10)+1+(this.att.stats.POW*0.5)
	);
	this.stats.ACC = -Math.round( 
		Math.floor(Math.random()*10)+1+(this.att.stats.ACC*0.5)
	);

	this.decay_turn = Math.round( 
		Math.floor(Math.random()*3)+1+
		(this.att.stats.POW*0.03)*Math.floor(Math.random()*10)
	);
};

CursedEffect.prototype = app.extend(AbstractEffect); 

var BlessedEffect = app.world.BlessedEffect = 
	function(vic_name, att_name, display, world, state){
	AbstractEffect.call(this, "se_blessed", vic_name, att_name, display, world);

	this.name = "Blessed";
	this.state = state;

	this.stats.SPD = Math.round( Math.floor(Math.random()*10)+1+(this.att.stats.SPD*0.5));
	this.stats.POW = Math.round( Math.floor(Math.random()*10)+1+(this.att.stats.POW*0.5));
	this.stats.ACC = Math.round( Math.floor(Math.random()*10)+1+(this.att.stats.ACC*0.5));

	this.decay_turn = Math.round(
		Math.floor(Math.random()*3)+1+
		(this.att.stats.POW*0.03)*Math.floor(Math.random()*10)
	);
};

BlessedEffect.prototype = app.extend(AbstractEffect); 

})(); 
var test_world = [
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
];

var tw_width = 15;
var tw_height = 15; 
/* jshint browser: true */
/* global app */

(function(){
"use strict";

app.world.TILES = {
	0:"grass",
	1:"wall1",
	2:"swall1",
	3:"trees1",
	4:"grass1",
	5:"dirt1",
	6:"sand1",
	7:"floor",
	8:"water",
	9:"swamp",
	10:"bamboo",
	11:"up1",
	27:"cgatered",
	28:"ogatered",
	29:"cgategreen",
	30:"ogategreen",
	31:"cgateblue",
	32:"ogateblue",
	33:"cgateorange",
	34:"ogateorange",
	35:"uswred",
	36:"dswred",
	37:"uswgreen",
	38:"dswgreen",
	39:"uswblue",
	40:"dswblue",
	41:"usworange",
	42:"dsworange",
	43:"path",
	44:"cross",
	45:"firewood",
	46:"pebbles",
	47:"flowers1",
	48:"boulders",
	49:"flowers2",
	50:"twigs",
	51:"shrubbary",
	52:"upstairs",
	64:"ice",
	65:"upstairs"
};

})(); 
/* jshint browser: true */
/* global app, console */

(function(){
"use strict";

var World = app.world.World = function(display, params){
	this.display = display;
	this.ai = new app.world.AI(this);
    this.params = params;
    this.itemCache = "none";

    console.log("New World", params);

    //need this for hp calculations
    this.engine = new app.world.CombatEngine(this, null, null); 

    this.name = params.name;

	this.grid_size = 0;
	this.tilew = 28;
	this.tileh = 32;
	this.gridw = 28;
	this.gridh = 32;
	this.pixw = this.gridw*9;
	this.pixh = this.gridh*9;

	this.left = 100;
	this.top = 0;
	this.width = 288;
	this.height = 252;
	this.tiledimx = 28;
	this.tiledimy = 32;

	this.redraw = false;
	this.isBeingDrawn = false;
    this.forceDoubleDraw = false;

	this.unpassable_tile_ids = [
		9,13,14,15,25,26,31,32,36,37,38,39,40,41,43,45,46,47,48,49,50,51,52,53,54,55,56,
		57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,79,80,81,82,83,84,91,92,
		93,98,100,101,102,103,104,105,106,107,108,109,110,111
	];
	this.sightblocking_tile_ids = [
		9,13,14,15,25,26,31,32,37,38,39,40,41,46,47,48,62,63,64,65,66,67,68,69,70,71,72,
		73,74,75,76,91,92,98,100,101,102,103,104,105,106,107,108,109,110,111
	];

	//camera and camera animation variables
	this.cam_is_moving = false;
    this.camX = 0;
    this.camY = 0;
    this.newCamX = 0;
    this.newCamY = 0;
    this.oldCamX = 0;
    this.oldCamY = 0;
    this.max_cam_move_frames = 14;
    this.cam_move_frame = 0;

    this.facing_dir = "n";

    this.diff_table = [];

    this.active_char = "none";
	this.loader = new app.world.WorldLoader( this );

    this.prev_node_x_click = 0;
    this.prev_node_y_click = 0;
    this.prev_node_list = [];
};

/**
	Loads in the current game state based on params
	state - the worldState object passed by reference to create special nodes
*/
World.prototype.init = function(state){
	this.player = state.player;
	this.soundCache = state.game.soundCache;
	this.itemCache = new app.world.ItemCache(this, state);

    this.name = this.params.name;
	this.mapw = this.params.width;
	this.maph = this.params.height;
	this.pc_list = this.player.get_pcs();

	this.sm = new app.world.SpellManager(this, state);

	//lists of actors
	this.characters = [];
	this.tiles = [];
	this.overlays = [];
	this.projectiles = [];
	this.splashes = [];
	this.particles = [];
	this.nodes = [];

	//Entity Lists
    this.uiElems = [];
	this.ui_pcs = [];
    this.dead_pcs = [];	
	this.tiles = [];
	this.characters = [];

	this.once_loaded_queue = [];

	this.call_after_animation = function(func, args){
	    state.disableInput = true;
	    if( this.particles.length === 0 && 
	    	this.projectiles.length === 0 && 
	    	this.splashes.length === 0 ){
	        func(args);
	        state.disableInput = false;
	    } else {
	        setTimeout(function(){
	            this.call_after_animation(func,args);
	        }.bind(this),100);
	    }
	}.bind(this);

	this.loader.add_tiles(state);
	this.loader.add_items(state);
	this.loader.add_characters(state);
	this.loader.add_nodes(state);

	var act = this.player.get_first();
    if( act != "none!" ){
	    this.set_camera( act.x-4, act.y-4, false );
		this.active_char = act.name;
	}
};

World.prototype.recalculate_dims = function(){
	this.left = app.ui.CleanUIElem.prototype.to_x_ratio.call( this, 110 );
	this.top = 0;
	this.width = app.ui.CleanUIElem.prototype.to_x_ratio.call( this, 252 );
	this.height =app.ui. CleanUIElem.prototype.to_x_ratio.call( this, 288 );
	this.bottom = this.top + this.height;
	this.right = this.left + this.width;
	this.gridw = app.ui.CleanUIElem.prototype.to_x_ratio.call( this, 28 );
	this.gridh = app.ui.CleanUIElem.prototype.to_y_ratio.call( this, 32 );
};

World.prototype.fix_actor_name = function(name){
	var nindex;
	var tmp_name = name;
	if( (nindex = tmp_name.search("_")) > -1 ){
		tmp_name = tmp_name.substring(0, nindex);
	}
	return tmp_name;
};

World.prototype.draw = function(){
    if( this.cam_is_moving ){
    	this.animate_camera();
    }

    this.draw_sightlines();

    //Dead Characters
    for( var i in this.characters ){
    	var act = this.characters[i];
    	var sq = this.get_tile(act.x, act.y);
    	if( !act.isAlive && (sq.isInSight) && !act.isSuperDead  ){
    		act.draw();
    	}
    }

    //Items on tiles
    for( var i in this.tiles ){  
    	if( this.tiles[i].isInSight ){
        	this.tiles[i].draw_contents();
        }
    }  

    //NPCS 
    for( var i in this.characters ){
    	var act = this.characters[i];
		var sq = this.get_tile(act.x, act.y);
    	if( (!act.isAlive || (!sq.isInSight && act.isNPC)) && !act.isSuperDead ){
    		continue;
    	}
    	if( act.isNPC ){
    		act.draw();
    	}
    } 

    //PCS
    var pcs = this.player.get_chars_visual();
    for( var i in pcs ){
    	pcs[i].draw();
    }

    //Overlays
    for( var i in this.overlays ){
        this.overlays[i].draw();
    }   

    //Particles
    var toremove = [];
    for( var i = 0; i < this.particles.length; i++ ){
    	this.particles[i].act();
        this.particles[i].draw();
        if( this.particles[i].FLAG_remove ){
            toremove.push( i );
        } 
        this.redraw = true;       
    }  
    for( var i in toremove ){
    	this.particles.splice( toremove[i], 1 );
    }

    //Projectiles
    var toremove = [];
    for( var i = 0; i < this.projectiles.length; i++ ){
        this.projectiles[i].draw();
        if( this.projectiles[i].FLAG_remove ){
            toremove.push( i );
        }
        this.redraw = true;
    }
    for( var i in toremove ){
    	this.projectiles.splice( toremove[i], 1 );
    }
};

World.prototype.determine_visibility = function(x0, y0, x1, y1, checkstr){
	if( x0 == x1 && y0 == y1){
		return true;
	}

	var dx = x1-x0;
	var dy = y1-y0;

	//If the target is too far away why even bother checking for it.
	//Not everybody has Perrin's eyesight
	if( dx*dx + dy*dy > 80 ){
		return false;
	}

	if( Math.abs( dx ) <= 1 && Math.abs( dy ) <= 1 ){
		return true;
	}

	var sx = 0;
	var sy = 0;

	if(dx !== 0 ){
		sx =  dx / Math.abs(dx);
	}
	if(dy !== 0 ){
		sy =  dy / Math.abs(dy);
	}	

	if(x0 === x1){
		var isTransparent = null;
		try{
			isTransparent = !this.get_tile(x0,y0+sy)[checkstr];
		}catch(e){
			console.log("ERROR, tried to get nonexisant square",x0,y0+sy );
		}	

		if( isTransparent && this.determine_visibility(x0, y0+sy, x1, y1, checkstr) ){
			return true;
		} else{
			return false;
		}
	}

	if(y0 == y1){
		var isTransparent = null;
		try{
			isTransparent = !this.get_tile(x0+sx,y0)[checkstr];
		}catch(e){
			console.log("ERROR, tried to get nonexisant square",x0+sx,y0 );
		}

		if( isTransparent && this.determine_visibility(x0+sx, y0, x1, y1, checkstr) ){
			return true;
		} else{
			return false;
		}
	}

	if( Math.abs(dx) == Math.abs(dy) ){
		var isTransparent = null;
		try{
			isTransparent  = !this.get_tile(x0+sx,y0+sy)[checkstr];
		}catch(e){
			console.log("ERROR, tried to get nonexisant square",x0+sx,y0+sy);
		}

		if( isTransparent && this.determine_visibility(x0+sx, y0+sy, x1, y1, checkstr) ){
			return true;
		} else{
			return false;
		}
	}

	var sq1 = null;
	try{
		var sq1 = !this.get_tile(x0+sx,y0+sy)[checkstr];
	}catch(e){
		console.log("ERROR, tried to get nonexisant square",x0,y0);
	}

	var sq2 = !this.get_tile(x0+sx,y0)[checkstr];
	var sq3 = !this.get_tile(x0,y0+sy)[checkstr];

	if( ( sq1 && this.determine_visibility(x0+sx, y0+sy, x1, y1, checkstr) ) ||
	    ( sq2 && this.determine_visibility(x0+sx, y0, x1, y1, checkstr) ) || 
	    ( sq3 && this.determine_visibility(x0, y0+sy, x1, y1, checkstr) ) ) {
		return true;
	} else {
		return false;
	}

    return false;
};

World.prototype.draw_sightlines = function(){
	//Iterate through each onscreen tile
	//determine_visibility from the players current position
	var ix = this.camX+4; var iy = this.camY+4;
	if( this.active_char != "none" ) {
		var act = this.get_character(this.active_char);
		ix = act.x;
		iy = act.y;
	} else {
		console.error("Active char undefined");
		return;
	}

    for( var i in this.tiles ){  
    	var sq = this.tiles[i];
    	if( sq.is_on_screen() ){
    		sq.draw();  
    		if( !this.determine_visibility(sq.x, sq.y, ix, iy, "blocksSight") ){
    			if( sq.isExplored ){
				    this.display.draw_sprite_scaled("tile_121", 
						                    this.grid_to_pixw(sq.x), 
						                    this.grid_to_pixh(sq.y),
						                    this.gridw,
						                    this.gridh);  
				    sq.isInSight = false;
				} else {
					this.display.draw_sprite_scaled("tile_98", 
						                    this.grid_to_pixw(sq.x), 
						                    this.grid_to_pixh(sq.y),
						                    this.gridw,
						                    this.gridh);  
					sq.isInSight = false;
				}
    		} else {
    			sq.isExplored = true;
    			sq.isInSight = true;
    			this.map_explored_table[sq.x][sq.y] = 1;
    		}
    	}    
    }
};

World.prototype.add_character = function(fella){
	this.characters.push(fella);
	if( fella.x != -1 && fella.y != -1 ){
		this.get_tile(fella.x, fella.y).add_content(fella.name);
	}
};

World.prototype.add_tile = function(sq){
	this.tiles.push(sq);
};

World.prototype.add_projectile = function(proj){
	proj.isVisible = false;
	this.projectiles.push(proj);
	return this.projectiles.length - 1;
};

World.prototype.add_particle_system = function(x, y, spr, name, params){
	this.particles.push( 
		new app.display.ParticleSystem(x, y, spr, name, this.display, this, params) 
	);
};

World.prototype.get_character_ind = function(name){
	for( var i in this.characters ){
		if( this.characters[i].name == name){
			return i;
		}
	}
	return -1;
};

World.prototype.get_character = function(name){
	var ind = this.get_character_ind(name);
	if( ind === -1 ){
		return "none!";
	} else {
		return this.characters[ind];
	}
};

World.prototype.get_character_by_position = function(x, y){
	for( var i in this.characters ){
		var act = this.characters[i];
		if( act.x == x && act.y == y && act.isAlive ){
			return act;
		}
	}
	return "none";
};

World.prototype.get_tile_ind = function(x, y){
	if( x < 0 || x > this.mapw ){
		console.log("Warning: Tried to get squre where x was out of bounds.",x,this.mapw);
		return -1;
	}
	if( y < 0 || y > this.maph ){
		console.log("Warning: Tried to get squre where y was out of bounds.",y,this.maph);
		return -1;
	}

	return y+x*this.maph;
};

World.prototype.get_tile = function(x, y){
	var ind = this.get_tile_ind(x,y);
	if( ind == -1){
		return "none";
	} else {

		return this.tiles[ind];
	}
};

World.prototype.get_node_by_name = function(name){
	for( var i in this.nodes ){
		if( this.nodes[i].name == name ){
			return this.nodes[i];
		}
	}
	return "none";
};

World.prototype.get_node_by_position = function(x, y){
	var ret = "none";
	var ret_arr = [];
	var offset = 0;
	for( var i in this.nodes ){
		if( this.nodes[i].x == x && this.nodes[i].y == y ){
			//ret = this.nodes[i];
			ret_arr.push(this.nodes[i]);
		}
	}

	if( x == this.prev_node_x_click && 
		y == this.prev_node_y_click && this.prev_node_stack.length != ret_arr.length ){
		this.prev_node_stack.push(1);
		offset = this.prev_node_stack.length - 1;
	} else {
		this.prev_node_stack = [1];
		this.prev_node_x_click = x;
		this.prev_node_y_click = y;
	}

	if( ret_arr.length > 0 ){
		ret = ret_arr[offset]; 
	}

	return ret;
};

World.prototype.get_closest_enemy_act_to_me = function(me_name){

	var me = this.get_character(me_name);
	if( me === "none" ){
		console.log("ERROR AI tried to get nearset actor '"+me_name+"' that did not exist.");
	}
	var me_x = this.grid_to_pixw( me.x );
	var me_y = this.grid_to_pixh( me.y );

	var max_dist = 1000000000001;
	var ind = 0;
	for( var i in this.characters ){
		var her = this.characters[i];

		if( her.name == me_name || !her.isAlive || her.allegiance == me.allegiance ){
			continue;
		}

		var her_x = this.grid_to_pixw( her.x );
		var her_y = this.grid_to_pixh( her.y );

		var dist_sq = (me_x - her_x)*(me_x - her_x) + (me_y - her_y)*(me_y - her_y);

		if( dist_sq < max_dist ){
			max_dist = dist_sq;
			ind = i;
		}
	}
	if( max_dist == 1000000000001){
		return "none";
	} else {
		return this.characters[ind];
	}
};

/**
	Get the closest ally actor to the given actor
*/
World.prototype.get_closest_ally_act_to_me = function(me_name){

	var me = this.get_character(me_name);
	if( me === "none" ){
		console.log("ERROR AI tried to get nearset actor '"+me_name+"' that did not exist.");
	}
	var me_x = this.grid_to_pixw( me.x );
	var me_y = this.grid_to_pixh( me.y );

	var max_dist = 1000000000001;
	var ind = 0;
	for( var i in this.characters ){
		var her = this.characters[i];

		if( her.name == me_name || !her.isAlive || her.allegiance != me.allegiance ){
			continue;
		}

		if( !this.determine_visibility(me.x, me.y, her.x, her.y, "blocksSight") ){
			continue;
		}
		
		var her_x = this.grid_to_pixw( her.x );
		var her_y = this.grid_to_pixh( her.y );

		var dist_sq = (me_x - her_x)*(me_x - her_x) + (me_y - her_y)*(me_y - her_y);

		if( dist_sq < max_dist ){
			max_dist = dist_sq;
			ind = i;
		}
	}
	if( max_dist == 1000000000001){
		return "none";
	} else {
		return this.characters[ind];
	}
};

/**
 * Starting at the point (cx, cy) if this point is not passable
 * continue in a clockwise direction from above and around it until
 * a suitable point is found, return an object with that point or
 * return none if no point in that circle is found.
 */
World.prototype.get_valid_pos = function(cx, cy){
	if( this.get_tile(cx, cy).isPassable && 
		this.get_character_by_position(cx, cy) === "none" ){
		return {x:cx, y:cy};
	}

	var dirs = [{x: 1, y:-1},
			 	{x: 1, y: 0},
			 	{x: 1, y: 1},
			 	{x: 0, y:-1},
			 	{x: 0, y: 1},
			 	{x:-1, y:-1},
			 	{x:-1, y: 0},
			 	{x:-1, y: 1}];

	var nx = 0;
	var ny = 0;
	for( var i in dirs ){
		nx = cx + dirs[i].x;
		ny = cy + dirs[i].y;

		if( this.get_tile(nx, ny).isPassable && 
			this.get_character_by_position(nx, ny) === "none" && 
			this.get_tile(nx, ny).isInSight){
			return {x:nx, y:ny};
		}
	}

	return "none";

};

World.prototype.for_all_duplicates = function( name, func ){
	for( var i in this.characters ){
		var name2 = this.fix_actor_name( this.characters[i].name );
		if( name2 == name ){
			func( this.characters[i] );
		}
	}
};

World.prototype.grid_to_pixw = function(num){
	return Math.round((num)*this.gridw) - (this.camX*this.gridw) + this.left;
};

World.prototype.grid_to_pixh = function(num){
	return Math.round((num)*this.gridh) - (this.camY*this.gridh);
};

World.prototype.pix_to_gridw = function(num){
	return Math.floor((num-this.left + (this.camX*this.gridw) )/this.gridw);
};

World.prototype.pix_to_gridh = function(num){
	return Math.floor((num + (this.camY*this.gridh) )/this.gridh);
};

World.prototype.animate_camera = function(){
	if( this.cam_move_frame >= this.max_cam_move_frames ){
		this.cam_is_moving = false;
		this.camX = this.newCamX;
		this.camY = this.newCamY;
		this.oldCamX = this.newCamX;
		this.oldCamY = this.newCamY;
	} else {
		var xdist = this.oldCamX - this.newCamX;
		var ydist = this.oldCamY - this.newCamY;
		var ratio = ((this.cam_move_frame + 1)/this.max_cam_move_frames);

		this.camX = this.oldCamX - ratio*xdist;
		this.camY = this.oldCamY - ratio*ydist;

	    this.cam_move_frame++;
	}
};

World.prototype.set_camera = function(x, y, animate){
	this.oldCamX = this.camX;
	this.oldCamY = this.camY;

	this.newCamX = x;
	this.newCamY = y;

    this.camX = x;
    this.camY = y;

	if( this.camX < 0 ){
		this.camX = 0;
	} else if( this.camX > this.params.width-9 ){
		this.camX = this.params.width-9;
	}

	if( this.camY < 0 ){
		this.camY = 0;
	} else if( this.camY > this.params.height-9 ){
		this.camY = this.params.height-9;
	}

	if( this.oldCamX == this.newCamX && this.oldCamY == this.newCamY ){
		return;
	}

	if( animate === false ){
		this.camX = x;
		this.camY = y;
	} else {
		this.cam_is_moving = true;
	    this.camX = this.oldCamX;
	    this.camY = this.oldCamY;
	    this.cam_move_frame = 0;
	}
};

World.prototype.get_act_in_vicinity = function(act_name){
	var sqs = this.get_adjacent_squares(act_name);
	var act = this.get_character(act_name);
	for( var i in sqs ){
		var vicname = sqs[i].has_character(act_name);
		if( vicname != "none" ){
			var vic = this.get_character(vicname);
			if( vic.allegiance != act.allegiance ){
				return vicname;
			}
		}
	}
	return "none";
};

World.prototype.get_adjacent_squares = function(act_name){
	var act = this.get_character(act_name);
	var sqs = [];

	sqs.push( this.get_tile(act.x-1, act.y-1));
	sqs.push( this.get_tile(act.x+0, act.y-1));
	sqs.push( this.get_tile(act.x+1, act.y-1));
	sqs.push( this.get_tile(act.x-1, act.y-0));
	sqs.push( this.get_tile(act.x+0, act.y-0));
	sqs.push( this.get_tile(act.x+1, act.y-0));
	sqs.push( this.get_tile(act.x-1, act.y+1));
	sqs.push( this.get_tile(act.x+0, act.y+1));
	sqs.push( this.get_tile(act.x+1, act.y+1));

	return sqs;
};

World.prototype.get_adjacent_squares_pos = function(x,y){
	var act = {x:x, y:y};
	var sqs = [];

	sqs.push( this.get_tile(act.x-1, act.y-1));
	sqs.push( this.get_tile(act.x+0, act.y-1));
	sqs.push( this.get_tile(act.x+1, act.y-1));
	sqs.push( this.get_tile(act.x-1, act.y-0));
	sqs.push( this.get_tile(act.x+0, act.y-0));
	sqs.push( this.get_tile(act.x+1, act.y-0));
	sqs.push( this.get_tile(act.x-1, act.y+1));
	sqs.push( this.get_tile(act.x+0, act.y+1));
	sqs.push( this.get_tile(act.x+1, act.y+1));

	return sqs;
};

World.prototype.get_onscreen_tiles = function(){
	var ret = [];
    for( var i in this.tiles ){   
        if( this.tiles[i].is_on_screen() ){
        	ret.push(this.tiles[i]);
        }   
    } 
    return ret;
};

World.prototype.is_near_tile_type = function(actname, tile_list){
	var sqs = this.get_adjacent_squares( actname);

	var checked = [];
	for( var i in sqs ){
		checked.push(sqs[i].id );
		if( app.inArr( sqs[i].id, tile_list )){
			return sqs[i];
		}	
	}

	return false;
};

World.prototype.get_act_within_spaces = function(n, me){
	var lbound_lat = -1;
	var rbound_lat = 1;
	var ubound_lon = 0;
	var lbound_lon = 0;
	var a1 = "";
	for( var j = 0; j < n; j ++ ){
		for( var i = lbound_lat; i <= rbound_lat; i++ ){
			if( i === 0 && j === 0 ){
				continue;
			}

			a1 = this.get_character_by_position(me.x-i, me.y-j);
			if( a1 !== "none" ){	
				if( a1.allegiance == me.allegiance){
					continue;
				}
				return a1;
			}
			a1 = this.get_character_by_position(i+me.x, me.y-j);
			if( a1 !== "none" ){
				if( a1.allegiance == me.allegiance){
					continue;
				}
				return a1;
			}
		}

		for( var i = ubound_lon; i <= lbound_lon; i++ ){
			if( i === 0 && j === 0 ){
				continue;
			}

			a1 = this.get_character_by_position(j+me.x, i+me.y);
			if( a1 !== "none" ){
				if( a1.allegiance == me.allegiance){
					continue;
				}
				return a1;
			}			
			a1 = this.get_character_by_position(me.x-j, i+me.y);
			if( a1 !== "none" ){
				if( a1.allegiance == me.allegiance){
					continue;
				}
				return a1;
			}			
		}

		lbound_lat -= 1;
		rbound_lat += 1;
		ubound_lon -= 1;
		lbound_lon += 1;
	}

	return "none";

};

World.prototype.get_nearby_items = function(actorname){
    var tiles = this.get_adjacent_squares( actorname );
    var ret = [];

    for( var i in tiles ){
        var sq = tiles[i];
        var cont = sq.get_contents();
        for( var j in cont ){
            var item = this.itemCache.get_item(
            	cont[j].substring( 0, cont[j].search("_") )
            );
            if( item !== "none" ){
                ret.push( {item:item, sq:sq, name:cont[j]} );            
            }
        }        
    }

    return ret;
};

World.prototype.add_text_particle = function(x, y, text, color){
    this.particles.push( 
    	new app.display.ParticleSplash( this.display, this, {
	    	text: text,
	    	x: this.grid_to_pixw( x ),
	    	y: this.grid_to_pixh( y + 1 ) - this.gridh/3,
	    	vy: function(){ return -0.7; },
	    	lifetime: 15,
	   		color: color || "white"
	    })
    );
};

})(); 
/* jshint browser: true */
/* global app, console */

(function(){
"use strict";

var WorldLoader = app.world.WorldLoader = function( world ){
	this.world = world;
};

WorldLoader.prototype.add_tiles = function(state){
    for( var i = 0; i < this.world.params.width; i++ ){
        for( var j = 0; j < this.world.params.height; j++){
            var t = new app.world.actor.Tile(
                i, j, "tile_"+this.world.params.terrain[i][j], 
                this.world.params.terrain[i][j]+"", this.world.display, this.world
            );
            this.world.add_tile(t);
        }
    }

    console.log("NAME", this.world.name, state.game.map_loader
        .get_map_by_name(this.world.name) );

    this.world.map_explored_table = state.game.map_loader
        .get_map_by_name(this.world.name).map_explored_table;

    for( var i in this.world.tiles ){  
        var sq = this.world.tiles[i];
        sq.isExplored = 
            this.world.map_explored_table[sq.x][sq.y];
    } 
};

WorldLoader.prototype.add_items = function(){
    var items = this.world.params.items;
    for( var i in items ){
        var itemprops = items[i];

        itemprops.x = itemprops.x / this.world.tilew;
        itemprops.y = itemprops.y / this.world.tileh;

        var tile = this.world.get_tile( itemprops.x, itemprops.y );
        tile.add_item( itemprops.name );
    }
};

WorldLoader.prototype._npc_name_is_duplicate = function(npc){
    var npcs = this.world.params.npcs;
    var ctr = 0;
    for( var i in npcs ){
        if( npcs[i].name === npc.name ){
            if( ctr > 0 ){
                return true;
            } else {
                ctr++;
            }
        }
    }
    return false;
};

WorldLoader.prototype.add_characters = function(state){
    var npcs = [];
    if( this.world.params.npcs !== "none" ){
        for( var i in this.world.params.npcs ){
        	var npc = this.world.params.npcs[i];

        	if( npc.properties.name ){
        		npc.name = npc.properties.name;
        	}

            if( this._npc_name_is_duplicate( npc ) ){
                npc.name = npc.name + "_" + app.random_id(6);
            }

        	//Tiled 0.11 puts the x and y coord in pixel coords instead of grid coords.
        	npc.x = npc.x / this.world.tilew;
        	npc.y = npc.y / this.world.tileh;

            if( !app.inArr( npc.name, this.world.params.dead_npcs ) ){         
                npcs.push( npc );
            } else {
                console.log(
                    "Didn't add "+this.world.params.npcs[i].name+" because he is dead");
            }
        } 
    } 

    for( var i in npcs ){
    	var ch_name_obj = this.world.params.npcs[i];
    	var tmp_name = this.world.fix_actor_name(ch_name_obj.name);
    	var npc_obj = state.game.map_loader.get_npc_by_name(tmp_name);
    	//console.log("Adding npc", npc_obj );

    	if( npc_obj === "none" ){
    		console.log( "Map NPCS, npc_list", this.world.params.npcs, 
    			state.game.map_loader.npclist );
    		console.error("ERROR: No npc of name '"+ch_name_obj.name+"' exists.",
    			"Did you include the right *.npc file?");
    	} else if( !app.inArr( ch_name_obj.name, this.world.params.dead_npcs ) ) {
			this.add_npc(npc_obj, ch_name_obj.name, ch_name_obj.x, ch_name_obj.y, false);
		} else {
			this.add_npc(npc_obj, ch_name_obj.name, ch_name_obj.x, ch_name_obj.y, true);
		}	
    }

    var pcs = this.world.player.get_pcs();
    for( var i in pcs ){
    	pcs[i].calc_hpmp();
    	this.world.add_character( pcs[i] );
    }
};

WorldLoader.prototype.add_npc = function(npc_obj, name, x, y, isDead){
	if( npc_obj.sprite == "none" ){
		npc_obj.sprite = "green_fella";
	}

	if( npc_obj.combat_ai == "none" ){
		//need to add ai variables
	}

	if( npc_obj.town_ai == "none" ){
		//need to add ai variables
	}

	var ch = new app.world.actor.Character(
        x, y, npc_obj.sprite, name, 
		this.world.display, this.world, this.world.ai, npc_obj.stats
    );

	if( isDead ){
		ch.isDead = true;
		ch.isAlive = false;
		ch.isSuperDead = true;
		ch.x = 1;
		ch.y = 1;
	}

	ch.calc_hpmp();

	ch.dialogue = npc_obj.dialogue;

	if( "clonable" in npc_obj ){
		ch.clonable = npc_obj.clonable;
    }

	ch.ai_town = npc_obj.ai_town;
	ch.ai_combat = npc_obj.ai_combat; 

	if("portrait" in npc_obj ){
		ch.portrait = npc_obj.portrait;
    }

	for( var i in ch.lspells ){
		npc_obj.stats.lspells.push(ch.lspells[i]);
	}

	for( var i in ch.dspells ){
		npc_obj.stats.dspells.push(ch.dspells[i]);
	}

	ch.allegiance = npc_obj.allegiance;
	this.world.add_character( ch );
};

//DOES NOT ACTUALLY CREATE NODES This function executes all the nodes the need to be
//executed when the world is loaded
WorldLoader.prototype.add_nodes = function(){
	// var local_nodes_exec = state.game.map_loader
	// 	.get_map_by_name(this.world.name).nodes_executed;
	// var ln_param = state.params.maps_nodesexecuted[this.world.name];
	// var tmp_arr = ln_param.concat(ln_param, local_nodes_exec);
 
	// for( var i in ln_param ){
	// 	if( !inArr(ln_param[i], local_nodes_exec) ){
	// 		local_nodes_exec.push(ln_param[i]);
	// 	}
	// }
 	//Since some nodes depend on executed and disabled flags to be set before running
 	//correctly I have to loop through all the executed nodes twice: once to set the flags
 	//and once to perform the actions.  
  //   for( var i in local_nodes_exec ){
  //   	var node = this.world.get_node_by_name( local_nodes_exec[i] );
		// node.isExecuted = true;
		// if( (node.pers == "false") ){
		// 	node.isDisabled = true;
		// } 
  //   }
  //   for( var i in tmp_arr ){
  //   	var node = this.world.get_node_by_name( local_nodes_exec[i] );
  //   	node.perform_action_selective(true);
  //   }
};

})(); 
/* jshint browser: true */
/* global app, console */

(function(){
"use strict";

var Actor = app.world.actor.Actor = function(x, y, spr, name, display, world){
	this.sprite = spr;	
	this.name = name;
	this.display = display;
	this.world = world;
	this.x = x;
	this.y = y;

    this.isDead = false;

    this.tsqx = 9;
    this.tsqy = 9;

	this.FLAG_remove = false;

	this.isVisible = true;
};

Actor.prototype.act = function(){}; 	

Actor.prototype.draw = function(){
	if( this.isVisible ){
	    this.display.draw_sprite_scaled(
            this.sprite, 
            this.world.grid_to_pixw(this.x), 
            this.world.grid_to_pixh(this.y),
            this.world.gridw,
            this.world.gridh
        );   	
	}
};

Actor.prototype.is_on_screen = function(){
    var x = this.world.grid_to_pixw(this.x);
    var y = this.world.grid_to_pixh(this.y);
    //sprites are drawn from the top left, so you have to account for objects whose
    //bounding boxes are on the screen from the top left insead of the center
	if( x >= this.world.left - this.world.gridw && 
		y >= this.world.top - this.world.gridh && 
		x < this.world.right + this.world.gridw &&
		y < this.world.bottom + this.world.gridh ){
		return true;
	} else {
		return false;
	}
};

Actor.prototype.set = function(x, y){

    var old_x = parseInt(this.x);
    var old_y = parseInt(this.y);

    var new_x = parseInt(x);
    var new_y = parseInt(y);

    var sq_old = this.world?this.world.get_tile(old_x, old_y):undefined;
    var sq_new = this.world?this.world.get_tile(new_x, new_y):"none";

    //sq_old.add_content(this.name);
    if( sq_new != "none" ){
        sq_new.add_content(this.name);
        this.x = new_x;
        this.y = new_y;       
    } else {
    	console.log("Warning! Tried to set an actor to an undefined square.", 
            x, y, this.name);
    }      

    if( sq_old !== undefined ){
    	sq_old.remove_content( this.name );
    } else {
    	console.log("Warning! Tried to remove an actor from an undefined square.", 
            x, y);
    }
};

Actor.prototype.set_x = function(val){
	this.x = val;
};

Actor.prototype.set_y = function(val){
	this.y = val;
};

Actor.prototype.kill = function(){
    this.isDead = true;
    this.isAlive = false;

    this.stats.curr_hp = 0;
};

Actor.prototype.call_after_animation = function(func, args){
    if( this.world.particles.length === 0 && 
        this.world.projectiles.length === 0 && 
        this.world.splashes.length === 0 ){
        func(args);
    } else {
        setTimeout(function(){
            this.call_after_animation(func,args);
        }.bind(this),100);
    }
};

app.world.actor.Stats = function(){
	this.max_hp = 17;
	this.curr_hp = 17;
	this.max_mp = 0;
	this.curr_mp = 0;
	this.attack = 10;

    this.POW = 1;
    this.ACC = 1;
    this.FOR = 1;
    this.CON = 1;
    this.RES = 1;
    this.SPD = 1;
    this.EVA = 1;
};

})(); 
/* jshint browser: true */
/* global app, console */

(function(){
"use strict";

var Character = 
app.world.actor.Character = function(x, y, sprite, name, display, world, ai, stats){
	var p = null;
	if( typeof x === "object" ){
		p = x;
		app.world.actor.Actor.call(this, p.x, p.y, p.sprite, p.name, p.display, p.world);
	} else {
		p = {
			x:x, y:y, sprite:sprite, name:name, display:display,
			world:world, ai:ai, stats:stats
		};
		app.world.actor.Actor.call(this, x, y, sprite, name, display, world);
	}

	this.sprite = p.sprite;
    this.ai = p.ai;
    this.set_predef_stats( p.stats );

	this.stats = new app.world.actor.Stats();

    for( var i in p.stats ){
        this.stats[i] = p.stats[i];
    }

    this.portrait = "port_farmer";

	this.calc_hpmp();	

	this.xp = p.xp || 0;
	this.xptonextlevel = p.xptonextlevel || 100;
	this.lastdamagedby = null;

	this.combatclass = p.combatclass || "legionaire";

	this.lspells = [];
	this.dspells = [];

	this.is_animated = this.display.is_sprite_animated(this.sprite);
	this.frame = 0;
	this.maxframe = 0;
	this.frameskip = 4;	//val + 2 frames per cycle
	this.aframes = 0;
	this.loopmode = "last";
	this.holdframe = false;

	//walk variables
	this.is_between_tiles = false;
	this.walk_offsetx = 0;
	this.walk_offsety = 0;
	this.max_walk_frames = 16;	//actually does + 1 walking frames
	this.walk_frame = 0;
	this.walk_offset_distance = 1/this.max_walk_frames;
	this.last_x = 0; this.new_x = 0;
	this.last_y = 0; this.new_y = 0;

	this.isSuperDead = false;
    this.dropTier = 0;
    this.isAgitated = false;
    this.clonable = false;
    this.dialogue = {};
    this.ai_down = "none";
    this.ai_combat = "none";
    this.isNPC = true;
	this.direction = "r"; //right or left
	this.mode = (this.is_animated)?"":"d"; //attack or default
	this.isAlive = true;
	this.behavior  = "aggro_melee";
	this.allegiance = "ally";
    this.inventory = [];
    this.MAXINVENTORYCOUNT = 25;
    this.equipment = {
        "lhand":"none",
        "rhand":"Bronze Knife",
        "legs":"none",
        "head":"none",
        "body":"none",
        "hands":"none",
        "feet":"none",
        "arms":"none",
        "ammo":"none",
    };
    this.status_effects = [];

	this.animDelay = 0;
};

Character.prototype = new app.extend(app.world.actor.Actor);

Character.prototype.get_sprite = function(dir, frame){
	if( dir ){
		if( frame > 3 || frame < 0 ){
			return false;
		}
		return this.sprite + "_" + dir + this.mode + frame;
	} else {
		return this.sprite + "_" + this.direction + this.mode + this.frame;
	}
};

Character.prototype.draw = function(){
	var nspr;
	if( this.is_animated ){
		nspr = this.get_sprite();
		//if( animdebug )console.log(nspr);
		if( this.aframes > this.frameskip ){
			this.aframes = 0;
			if( !this.holdframe ){
				this.frame++;
			}
			if( this.frame > this.maxframe ){
				switch( this.loopmode ){
					case "last" : 
						this.frame = this.maxframe; this.holdframe = true; break;
					case "loop" : 
						this.frame = 0; break;
					case "first": 
						this.frame = 0; this.holdframe = true; break;
					default : this.frame = 0;
				}
			}
		} else {
			this.aframes++;
		}
	} else {
		nspr = this.sprite + "_" + this.mode + this.direction;	
	}

	if( this.sprite.search("death") > -1 ){
		nspr = this.sprite;
	}

	if( this.isVisible && this.is_on_screen() ){
	    this.display.draw_sprite_scaled(
	    	nspr, 
            this.world.grid_to_pixw(this.x)+this.walk_offsetx, 
            this.world.grid_to_pixh(this.y)+this.walk_offsety,
            this.world.gridw,
            this.world.gridh
		);   
	    //Comment this out to hide the HP display
	    this.display.draw_text_params(
	    	this.stats.curr_hp, 
	        this.world.grid_to_pixw(this.x)+this.world.gridw/2, 
	        this.world.grid_to_pixh(this.y), {
		        font:"Verdanda",
		        color:"white",
		        size:"9",
		        weight:"italic"
		    }
	    );   
	}

	if( this.mode == "a" ){
		this.animDelay--;
		if( this.animDelay <= 0 ){
			this.set_default_sprite();
		}
	}

	if( this.walk_frame === this.max_walk_frames ) {
		this.is_between_tiles = false;
		this.walk_offsety = 0;
		this.walk_offsetx = 0;
		this.walk_frame = 0;
		this.loopmode = "first";
		this.holdframe = true;
		this.frame = 0;
	} else if( this.is_between_tiles ) {
		if( this.walk_frame === this.max_walk_frames-1 ){
			this.is_between_tiles = false; //smooths the walking somewhat
		}
		this.walk_frame++;
		this.set_animation_walk_offset();
	}
};

Character.prototype.is_visible = function(){
	return this.world.get_tile( this.x, this.y ).isInSight;
};

Character.prototype.has_dialogue = function(){
	return this.dialogue.d1 !== undefined;
};

Character.prototype.set_animation_walk_offset = function(){
	this.walk_offsetx = 25*(this.last_x - this.new_x)*
		(this.max_walk_frames-this.walk_frame)*this.walk_offset_distance;
	this.walk_offsety = 27*(this.last_y - this.new_y)*
		(this.max_walk_frames-this.walk_frame)*this.walk_offset_distance;
};

Character.prototype.reset_anim_state = function(){
	this.frame = 0;
	this.aframes = 0;
	this.holdframe = false;
};

Character.prototype.set_attack_sprite = function(){
	if( this.is_animated ){
		this.mode = "a";
		this.maxframe = 2;
		this.loopmode = "last";
		this.reset_anim_state();
		this.animDelay = 30; 
	} else {
	    this.mode = "a"; 
	    this.animDelay = 15;  
	}
};

Character.prototype.set_default_sprite = function(){
	if( this.is_animated ){
		this.mode = "";
		this.maxframe = 1;
		this.loopmode = "first";
		this.reset_anim_state();
	} else {
		this.mode = "d";
	    this.world.forceDoubleDraw = true; 
	}
};

Character.prototype.item_is_equipped = function( itemname ){
	for( var i in this.equipment ){
		if( this.equipment[i] === itemname ){
			return i;
		}
	}
	return false;
};

Character.prototype.get_inventory_weight = function(){
	var sum = 0;
	for( var i in this.inventory ){
		var item = this.world.itemCache.get_item( this.inventory[i] );
		sum += item.weight;
	}
	return sum;
};

Character.prototype.get_max_carryable_weight = function(){
	return 150;
};

Character.prototype.equip_item = function( itemname, bodypart ){
	this.equipment[ bodypart ] = itemname;
};

Character.prototype.unequip_item = function( itemname ){
	for( var i in this.equipment ){
		if( this.equipment[i] === itemname ){
			this.equipment[i] = "none";
			return;
		}
	}
};

Character.prototype.add_item_to_inventory = function( itemname ){
	this.inventory.push( itemname );
};

Character.prototype.remove_item_from_inventory = function( itemname ){
	for( var i in this.inventory ){
		if( this.inventory[i] === itemname ){
			this.inventory.splice( i, 1 );
			return;
		}
	}
};

Character.prototype.walk_to_tile = function( fromx, fromy, newx, newy ){
	//walk variables
	this.is_between_tiles = true;
	this.last_x = fromx;
	this.last_y = fromy;
	this.new_x = newx;
	this.new_y = newy;
	this.walk_frame = 0;
	this.frame = 1;
	this.loopmode = "loop";	
	this.set_animation_walk_offset();
};

Character.prototype.change_direction = function( dir ){
	if( this.is_animated ){
		this.direction = dir;
	} else {
		if( dir == "u" ){
			dir = "r";
		}
		else if( dir == "d" ){
			dir = "l";
		}
		this.direction = dir;
	}
};

Character.prototype.do_next_action = function(world_instance){
    this.ai.do_next_action(this, world_instance);
};

Character.prototype.calc_hpmp = function(){
	var dummy = {
		cur:100,
		max:100,
	};

	var hp_obj = this.world !== "none" ?
		this.world.engine.calculate_hp_from_stats( this )
			:
		dummy;
	var mp_obj = this.world !== "none" ?
		this.world.engine.calculate_mp_from_stats( this )
			:
		dummy;

	this.stats.max_hp = hp_obj.max;
	this.stats.curr_hp = hp_obj.cur;
	this.stats.max_mp = mp_obj.max;
	this.stats.curr_mp = mp_obj.cur;
};

Character.prototype.get_final_stat = function(statname){
	var ret = {};
	var stat = parseInt(this.stats[statname]);

	if( stat === undefined ){
		console.log("WARNING: Actor does not have a '"+statname+"' stat!");
		ret.base = 1;
		ret.stat = 1;
		return ret;
	}

	ret.base = stat;
	ret.stat = stat;

	for( var i in this.equipment ){
		var item = this.world.itemCache.get_item(this.equipment[i]);
		if( item !== "none" ){
			if( item.equipStats[statname] !== 0 ){
				ret.stat += parseInt( item.equipStats[statname] );
				ret[i] = parseInt( item.equipStats[statname] );
			}
		}
	}

	for( var i in this.status_effects ){
		var se = this.status_effects[i];
		if( se.stats[statname] !== 0 ){
			ret.stat += parseInt(se.stats[statname]);
			ret[se.name] = parseInt(se.stats[statname]);
		}
	}

	return ret;
};

Character.prototype.get_stats = function(){
	return this.stats;
};

Character.prototype.set_stat = function(stat, num){
	this.stats[stat] = num;
};

Character.prototype.set_predef_stats = function(set){
	this.stats = new app.world.actor.Stats();
	for( var i in set ){
		this.stats[i] = set[i];
	}
};

Character.prototype.add_item = function(item){
    this.inventory.push( item );
};

Character.prototype.get_item = function(item_name){
    for( var i in this.inventory ){
        var thing = this.inventory[i];
        if( name == item_name ){
            return thing;
        }
    }

    return "none";
};

Character.prototype.apply_pre_effects = function(){
	for( var i in this.status_effects ){
		this.status_effects[i].apply_pre_turn_effect();
	}
};

Character.prototype.apply_post_effects = function( callback ){
	var call_next_effect = function(inde){
		this.status_effects[inde].apply_post_turn_effect(0, 0);
		this.status_effects[inde].decrement_effect();
		if( this.status_effects[inde].FLAG_remove ){
			this.status_effects.splice(inde,1);
			inde = inde - 1;
		}

		if( inde == this.status_effects.length - 1 ){
			this.call_after_animation( callback, "" );
		} else {
			this.call_after_animation( function(){
				call_next_effect(inde+1);
			}, "");
		}
	}.bind(this);
	if( this.status_effects.length > 0 ){
		call_next_effect(0);
	} else {
		callback();
	}
};

Character.prototype.add_status_effect = function(eff_const, att_name, state){
	var effect = null;
	switch( eff_const ){
		case "FEARED": 	
			effect = new app.world.FearedEffect(
				this.name, att_name, this.display, this.world, state
			);
			break; 
		case "POISONED": 	
			effect = new app.world.PoisonedEffect(
				this.name, att_name, this.display, this.world, state
			);
			break; 
		case "BURNING": 	
			effect = new app.world.BurningEffect(
				this.name, att_name, this.display, this.world, state
			);
			break; 
		case "BOUND": 	
			effect = new app.world.BoundEffect(
				this.name, att_name, this.display, this.world, state
			);
			break; 
		case "FROZEN": 	
			effect = new app.world.FrozenEffect(
				this.name, att_name, this.display, this.world, state
			);
			break; 
		case "CURSED":
			effect = new app.world.CursedEffect(
				this.name, att_name, this.display, this.world, state
			);
			break; 
		case "BLESSED": 	
			effect = new app.world.BlessedEffect(
				this.name, att_name, this.display, this.world, state
			);
			break; 
		case "HASTED": 	
			effect = new app.world.HastedEffect(
				this.name, att_name, this.display, this.world, state
			);
			break; 
		case "SHIELDED": 	
			effect = new app.world.ShieldedEffect(
				this.name, att_name, this.display, this.world, state
			);
			break; 
	}

	effect.id = eff_const;

	var tmp = this.has_status_effect( effect.name );
	if( tmp === "none" ){
		this.status_effects.push( effect );
	} else {
		if( tmp.effect.power > effect.power ){
			tmp.effect.decay_turn += 3;
		} else {
			this.status_effects.splice( tmp.ind, 1 );
			this.status_effects.push( effect );
		}
	}
};

Character.prototype.has_status_effect = function( effect_name ){
	for( var i in this.status_effects ){
		if( this.status_effects[i].name ==  effect_name ){
			return {ind: i, effect:this.status_effects[i]};
		}	
	}

	return "none";
};

Character.prototype.get_level = function(stats){
	var t = stats || this.stats;
	return parseInt(t.POW) + 
		parseInt(t.ACC) + 
		parseInt(t.FOR) + 
		parseInt(t.CON) + 
		parseInt(t.RES) + 
		parseInt(t.EVA) + 
		parseInt(t.SPD);
};

})(); 
/* jshint browser: true */
/* global app  */

(function(){
"use strict";

var CombatIndicatorBox = app.world.actor.CombatIndicatorBox = 
    function(x, y, spr, name, display, world ){
	app.world.actor.Actor.call(this, x, y, spr, name, display, world);
};

CombatIndicatorBox.prototype = app.extend(app.world.actor.Actor); 

var Projectile = app.world.actor.Projectile = 
    function(me, victimXY, spr, name, display, world, type, onHit){
	app.world.actor.Actor.call(this, 0, 0, spr, name, display, world);

	this.lifetime = this.world.player.settings.playspeed*0.1;
	this.sl = this.lifetime;
	this.isAnimated = false;
	this.type = type;
	this.me = me;

	this.vicXY = victimXY;
	var act = this.world.get_character(me);
	this.me = me;
	this.meXY = [act.x, act.y];	

	this.onHit = onHit;
};

Projectile.prototype = new app.extend(app.world.actor.Actor);

Projectile.prototype.draw = function(){
    if(  this.lifetime > 0){
    	var app = "u";
        var x0 = this.world.grid_to_pixw( this.meXY[0] );
        var y0 = this.world.grid_to_pixh( this.meXY[1] ); 

        var x1 = this.world.grid_to_pixw( this.vicXY[0]);
        var y1 = this.world.grid_to_pixh( this.vicXY[1]);

        var xdist = x1 - x0;
        var ydist = y1 - y0;
        var mod = (this.sl-this.lifetime)/this.sl;

		var finalX = x0 + xdist*mod;
        var finalY = y0 + ydist*mod - (this.sl*2)*Math.abs(Math.sin(Math.PI*mod));

        var angle = Math.atan2(ydist, xdist);
        if( angle >= Math.PI/4 && angle < 3*Math.PI/4 ){
        	app = "d";
        } else if ( angle >= 3*Math.PI/4 || angle < -3*Math.PI/4 ){
        	app = "l";
        } else if ( angle >= -3*Math.PI/4 && angle < -Math.PI/4 ){
        	app = "u";
        } else{
        	app = "r";
        }

        this.x = finalX;
        this.y = finalY;
        this.lifetime--;

        this.world.set_camera( this.vicXY[0]-4, this.vicXY[1]-4);   

        this.display.draw_sprite(this.sprite + "_" + app, finalX, finalY);
    } else {
    	this.FLAG_remove = true;
    	this.onHit();
    }
};

})(); 
/* jshint browser: true */
/* global app, console */

(function(){
"use strict";

var Tile = app.world.actor.Tile = function(x, y, spr, name, display, world){
	app.world.actor.Actor.call(this, x, y, spr, name, display, world);

	this.isPassable = true;
	this.blocksMove = false;
	this.blocksSight = false;
	this.isExplored = false;
	this.isInSight = false;
	this.actor = "none";

	this.tsqx = 9;
	this.tsqy = 9;

	this.id = parseInt(this.sprite.substring(5, this.sprite.length));

	this.contents = [];

	this.determine_passability();
	this.determine_sightlines();
};

Tile.prototype = new app.extend(app.world.actor.Actor);

Tile.prototype.determine_passability = function(){
	this.ispassable = true;
	if( app.inArr(parseInt(this.name), this.world.unpassable_tile_ids) ){
		this.isPassable = false;
		this.blocksMove = true;
	} else {
		this.isPassable = true;
		this.blocksMove = false;
	}
};

Tile.prototype.is_closed_door = function(){
	var doors = [26,32,41];
	var id = parseInt(this.sprite.substring(5, this.sprite.length));

	for( var i in doors ){
		if( id == doors[i] ){
			return true;
		}
	}

	return false;
};

Tile.prototype.open_door = function(){
	this.id = this.id + 1;
	this.sprite = "tile_"+this.id;
	this.isPassable = true;
	this.blocksSight = false;
	this.world.soundCache.play_sound( "dooropen" );
};

Tile.prototype.close_door = function(){
	this.id = this.id - 1;
	this.sprite = "tile_"+this.id;
	this.isPassable = false;
	this.blocksSight = true;
	this.world.soundCache.play_sound( "doorclose" );
};

Tile.prototype.determine_sightlines = function(){
	if( app.inArr(parseInt(this.name), this.world.sightblocking_tile_ids) ){
		this.blocksSight = true;
	} else {
		this.blocksSight = false;
	}
};

Tile.prototype.draw = function(){
	if( this.is_on_screen() ){
		app.world.actor.Actor.prototype.draw.call(this);
	}
};

Tile.prototype.draw_contents = function(){
	for( var i in this.contents ){
		var item = this.world.itemCache.get_item(
			this.contents[i].substring( 0, this.contents[i].search("_") ));
		if( item !== "none" ){
			this.display.draw_sprite_scaled_centered( item.sprite, 
				this.world.grid_to_pixw( this.x )+this.world.gridw/2, 
				this.world.grid_to_pixh( this.y )+this.world.gridh/2,
				this.world.gridw * (14/28),
				this.world.gridh * (14/32)
			);
		}
	}
};

Tile.prototype.add_item = function(itemname){
	if( itemname.search("_") > -1 ){
		this.add_content( itemname );
	} else {
		itemname = itemname + "_" + app.random_id( 10 );
		this.add_content( itemname );
	}
};

Tile.prototype.add_content = function(thing){
	this.contents.push(thing);
};

Tile.prototype.remove_content = function(name){
	for( var i in this.contents ){
		if( typeof this.contents[i] === "string" ){
			if( name === this.contents[i]){
				this.contents.splice(i, 1);
				return;
			}
		} else {
			if( name === this.contents[i].name ){
				this.contents.splice(i, 1);
				return;					
			}
		}
	}

	console.log(
		"ERROR! Tried to remove contents from a tile that did not exist.", 
		this.x, this.y, name
	);
};

Tile.prototype.get_contents = function(){
	return this.contents;
};

Tile.prototype.empty_contents = function(){
	this.contents = [];
};

Tile.prototype.has_character = function( ){
	var name;
	for( var i in this.contents ){
		name = this.contents[i];
		if( this.world.get_character_ind( name ) > -1 ){
			return name;
		}
	}

	return "none";
};

Tile.prototype.has_enemy_character = function( actor_name ){
	var actor = this.world.get_character(actor_name);
	var person = this.has_character();
	var act = this.world.get_character(person);
	if( person != "none" && !act.isDead ){
		if( act.allegiance != actor.allegiance ){
			return act.name;
		} else {
			return "blocked!";
		}
	}

	return "none";	
};

Tile.prototype.has_ally_character = function( name ){
    var victim = "";
    for( var i in this.contents ){
        var aName = this.contents[i];
        var aInd = this.world.get_character_ind(aName);
        if( aInd > -1 ){
            var char_alleg = this.world.get_character(aName).allegiance;
            var me_alleg = this.world.get_character(name).allegiance;
            if( char_alleg == me_alleg){
                victim = aName;
            } else {                    
                victim = "blocked!";
            }           
        }
    }

    return victim;  
};

})(); 
/* jshint browser: true */
/* global app, console */

(function(){
"use strict";

var CombatMode = app.world.mode.CombatMode = function(state, world, ui){
	app.world.mode.GameMode.call( this, state, world, ui );
	this.aicallback = function(){
		this.world.ai.combat_action(this.cactor, this);
	}.bind(this);
};

CombatMode.inherits( app.world.mode.GameMode );

CombatMode.prototype.init_actors = function(){
	this.parent.init_actors.call( this );
};

CombatMode.prototype.attack = function(victim){
	this.log_attack( "attacks", victim );
	this.engine.action_attack(this.cactor.name, victim.name );
	if( this.cactor.isNPC ){
		this.actionlist.push( function(){
	    	//padding
	    });
	}
    this.cactor.ap -= 4;
};

CombatMode.prototype.move = function(dir){
    var act = this.cactor;

    var m = app.world.mode.GameMode.prototype.move.call( this, dir );
    var victimname = m.name;
    var old_x = m.old_x;
    var old_y = m.old_y;
    var new_x = m.new_x;
    var new_y = m.new_y;
    if( victimname === "none" ){
	    this.state.game.soundCache.play_sound("footstep");
	    act.set(new_x, new_y);
	    act.walk_to_tile(old_x, old_y, new_x, new_y);
	    this.world.set_camera( new_x-4, new_y-4 );
	    act.ap--;
	    if( !act.isNPC ){
	    	this.trip_node();
	    }
	    return true;  
	} else {
		if( victimname === "blocked!" ){
			console.log(" - BLOCKED");
			return false;
		}

		var victim = this.world.get_character(victimname);
		if( victim.allegiance === act.allegiance ){
			this.state.notif.add_log("WARNING","Somebody already occupies that space!");
			if( act.isNPC ){
				act.ap--; //just in case my ai code fails, which it will
			}
			return false;
		} else {
			this.attack( victim );
			return true;
		}
	}
};

CombatMode.prototype.shoot = function(victim){
	this.log_attack( "shoots", victim );
	this.engine.action_attack(this.cactor.name, victim.name);	
};

CombatMode.prototype.cast = function(spell_pkg){
    this.cactor.ap -= 4;
	var spell = this.world.sm.get_spell( spell_pkg.name );
	var her = spell_pkg.her;

	this.actionlist.push( function(){
		this.cactor.set_attack_sprite();
	    this.world.soundCache.play_sound("cast");
	    this.world.add_projectile( 
		    new app.world.actor.Projectile(this.cactor.name, [her.x,her.y], 
		    	spell.proj, spell.proj, 
		    	this.state.game.display, this.world, 1, 
		    	function(){}
		    )
	    ); 
	});

	this.actionlist.push( function(){
		this.engine.action_magic(
			this.cactor.name,
			spell_pkg.victims, 
			spell_pkg.name
		);
	});
};

CombatMode.prototype.use = function(){
	//FIXME
};

CombatMode.prototype.get_item = function(){
	//FIXME
};

CombatMode.prototype.wait = function(){
	this.cactor.ap = 0;
};

CombatMode.prototype.get_instance = function(){
	return this.parent.get_instance.call( this );
};

CombatMode.prototype.begin_round = function(){
    return this.parent.begin_round.call( this );
};

CombatMode.prototype.set_next_actor = function(){
    return this.parent.set_next_actor.call( this );
};

CombatMode.prototype.begin_actor_turn = function(think){
	return this.parent.begin_actor_turn.call( this, think );
};

CombatMode.prototype.end_actor_turn = function(){
    return this.parent.end_actor_turn.call( this );
};

CombatMode.prototype.check_dead = function(){
    return this.parent.check_dead.call( this );
};

CombatMode.prototype.end_round = function(){
    return this.parent.end_round.call( this );
};

CombatMode.prototype.keypress = function( ev ){
	return this.parent.keypress.call( this, ev );
};

CombatMode.prototype.click = function( ev, off ){
	return this.parent.click.call( this, ev, off );
};

CombatMode.prototype.mousemove = function( ev, off ){
	return this.parent.mousemove.call( this, ev, off );
};

})(); 
/**
    \class CombatMode
    \brief Holds the state of the game when it is in combat mode.

    Initialize a new combat state everytime the player initiates combat mode and destroy it
    every time the player leaves combat mode.  
*/
function CombatMode(pc_list, enemy_list, world, ui, game_state){

    this.world = world;
    this.ui = ui;
    this.game_state = game_state;

    this.combat_engine = new CombatEngine(world, game_state, this);

    //Combat Lists:
    //console.log( "PCLIST", 
    this.pcs = [];              //max 6 *or we could go more if I decide you can have more than 6 in a party
    for( var i in pc_list ){
        this.pcs.push( pc_list[i] );
    }
    this.npcs = [];          //max unlimited*
    for( var i in enemy_list ){
        this.npcs.push( enemy_list[i] );
    }    
    //this.allies = [];         //max unlimited*

    //combat oriented variables
    this.current_turn = 0;      //0=player turn, 1=enemy turn, 2=ally turn
    this.cActor = ""            //name of the current active actor
    this.cSpell = ""            //name of the current active spell
    this.curr_dspell = "";
    this.curr_lspell = "";
    this.cAP = 4;               //current action points
    this.cInd = 0;              //index of the current actor in the combat lists
    this.cDamage = 0;           //damage dealt during an attack
    this.cDeath = "";
    this.cDamageType = "physical";
    this.variance = 9           //how much the randomness of the attack varies

    this.dead_flag = false;

    this.playspeed = 50;       //the delay between actions in ms
    this.is_selecting_target = false;

    //TEMP
    this.hold_input = false;

    //this.start_combat();
}

//when you enter combat mode, you split off into your party and you can see everyone
//on the screen.  This function aligns the pcs in your party based on your facing 
//direction
CombatMode.prototype.align_pcs = function(){
    var act = this.world.get_character( this.pcs[0] );

    var xoffs;
    var yoffs;

    switch( this.world.facing_dir ){
        case "n": 
            xoffs = [0,-1,+1,-2,-0,+2];
            yoffs = [0,+1,+1,+2,+2,+2];
            break;
        case "s":
            xoffs = [0,+1,-1,+2,+0,-2];
            yoffs = [0,-1,-1,-2,-2,-2];
            break;
        case "e":
            xoffs = [0,-1,-1,-2,-2,-2];
            yoffs = [0,-1,+1,-2,-0,+2];
            break; 
        case "w":
            xoffs = [0,+1,+1,+2,+2,+2];
            yoffs = [0,+1,-1,+2,+0,-2];
            break;                       
    }

    for( var i in this.pcs ){
        var act2 = this.world.get_character( this.pcs[i] );
        var pos;
        if( i == 0 ){
            continue;
        } else if( i == 1 ) {
            pos = this.world.get_valid_pos( act.x+xoffs[i], act.y+yoffs[i] );
            if( pos === "none" ){
                pos = {x: act.x, y: act.y};
            }
        } else if( i == 2 ) {
            pos = this.world.get_valid_pos( act.x+xoffs[i], act.y+yoffs[i] );
            if( pos === "none" ){
                pos = {x: act.x, y: act.y};
            }
        }   else if( i == 3 ) {
            pos = this.world.get_valid_pos( act.x+xoffs[i], act.y+yoffs[i] );
            if( pos === "none" ){
                pos = {x: act.x, y: act.y};
            }
        }  else if( i == 4 ) {
            pos = this.world.get_valid_pos( act.x+xoffs[i], act.y+yoffs[i] );
            if( pos === "none" ){
                pos = {x: act.x, y: act.y};
            }
        }  else if( i == 5 ) {
            pos = this.world.get_valid_pos( act.x+xoffs[i], act.y+yoffs[i] );
            if( pos === "none" ){
                pos = {x: act.x, y: act.y};
            }
        } 

        act2.set(pos.x, pos.y);
    }
}

/**
    Set all variables to begin a combat sequence.  These include
    the current actor, the currently selected spells in the ui, 
    the bolded pc in the ui, and who's turn it is currently.
*/
CombatMode.prototype.start = function(){
    this.cActor = this.pcs[0];
    this.cInd = 0;
    this.cAP = 4;
    this.current_turn = 0;

    //console.log(this.pcs);

    this.reset_known_spells(this.cActor);
    this.reset_all_ap();
    //this.set_allegiance();

    this.current_turn = 0;
    this.hold_input = false;

    var act = this.world.get_character( this.cActor );
    this.world.cbox.set_x( act.x );
    this.world.cbox.set_y( act.y );

    this.align_pcs();

    //world.act_set("box", 3, 3);
}

CombatMode.prototype.is_everyone_dead = function(){
    var ret = false;
    for( var i in this.pcs ){
        var ret = ret || this.world.get_character(this.pcs[i]).isAlive;
    }

    return !ret;
}

CombatMode.prototype.get_nearby_items = function(){
    var tiles = this.world.get_adjacent_squares( this.cActor );
    var act = this.world.get_character( this.cActor );
    var ret = [];

    for( var i in tiles ){
        var sq = tiles[i];
        var cont = sq.get_contents();
        for( var j in cont ){
            var item = this.world.itemCache.get_item(cont[j].substring( 0, cont[j].search("_") ));
            if( !(item === "none" ) ){
                ret.push( {item:item, sq:sq, name:cont[j]} );            
            }
        }        
    }

    return ret;
}

CombatMode.prototype.call_after_animation = function(func, args){
    var captain = this;
    this.game_state.disableInput = true;
    if( this.world.particles.length == 0 && this.world.projectiles.length == 0 && this.world.splashes.length == 0 ){
        func(args);
        this.game_state.disableInput = false;
    } else {
        setTimeout(function(){
            captain.call_after_animation(func,args)
        },this.playspeed);
    }
}

/**
    Iterates through every combat entity and resets their
    action points to their maximum action points for this
    combat round
*/
CombatMode.prototype.reset_all_ap = function(){
    var act;
    for( var i in this.pcs ){
        act = this.world.get_character( this.pcs[i] );
        act.action_points = act.max_action_points;
    }

    for( var i in this.npcs ){
        act = this.world.get_character( this.npcs[i] );
        act.action_points = act.max_action_points;
    }    
}

/**
    Add a pc name to the list of pcs.  This actor must
    have been initialized by the world previously.
*/
CombatMode.prototype.add_pc = function(name){
    this.pcs.push(name);
    //this.ui_pcs.push(name);
    //console.log("PC ADDED", pcs)
}

/**
    Add an enemy name to the list of enemies.  This actor must
    have been initialized by the world previously.
*/
CombatMode.prototype.add_enemy = function(name){
    this.npcs.push(name);
}


/**
    Perform a turn with the given npc. Calls itself recursively
    until the npc has used all of its action points and then calls for
    a new active actor.
*/
CombatMode.prototype.npc_turn = function(npc_name){
    var captain = this;
    //Return if the game tries to do a turn using a pc and not an npc
    if( inArr(npc_name, this.pcs) ){
        console.log("WARNING Tried to automate a turn for player character "+npc_name);
        return;
    }

    if( this.npcs.length < 1 ){
        alert("Congratulations, you have completed the combat demo!");
        this.dead_flag = true;                 
        this.game_state.game.change_state("MenuState",{});                    
    }

    if( this.pcs.length < 1 ){
        alert("Uh oh, looks like all your characters are dead!");
        this.dead_flag = true;                 
        this.game_state.game.change_state("MenuState",{});                    
    }       

    this.world.active_char = npc_name;
    this.hold_input = true;

    var act = this.world.get_character(npc_name);
    if( act != "none!" || act.action_points > 0 ){
        console.log("GAME: Turn -> "+npc_name);

        this.world.ai.combat_action( npc_name, this );

        this.world.cbox.set_x( act.x );
        this.world.cbox.set_y( act.y );        

        if( act.action_points <= 0){
                       
            this.call_after_animation(function recurs(act2){
                act2.apply_post_effects(function(){
                    captain.next_actor();
                    var new_act = captain.world.get_character( captain.cActor );
                    new_act.apply_pre_effects();
                    captain.world.cbox.set_x( new_act.x );
                    captain.world.cbox.set_y( new_act.y );  
                });             
            },act);
        } else {
            setTimeout(function( ){
                captain.npc_turn( npc_name );
            }, 200);
        }
    } else {
        console.log("ERROR! World does not contain npc: "+npc_name);
    }   
}

/**
    Perform a turn based on the given pc
*/
CombatMode.prototype.player_turn = function(pc_name, type, data){ 
    var act = this.world.get_character(pc_name);

    this.world.active_char = pc_name;

    for( var i in this.pcs ){
        var act1 = this.world.get_character(this.pcs[i]);
        if( act1.is_between_tiles ) return;    
    }

    if( act.action_points <= 0){
        return;
    }

    switch(type){
        case "move": this.action_move(pc_name, data); break;
        case "magic": this.action_magic(pc_name, data); break;
        case "ranged": this.action_shoot(pc_name, data); break;
        case "wait": act.action_points=0;this.cAP=0; break;
    }

    this.world.cbox.set_x( act.x );
    this.world.cbox.set_y( act.y );

    if( act.action_points <= 0){
        var captain = this;

        this.call_after_animation(function recurs(act2){ 
            act2.apply_post_effects( function(){
                captain.next_actor();
                var new_act = captain.world.get_character( captain.cActor );
                new_act.apply_pre_effects();
                captain.world.cbox.set_x( new_act.x );
                captain.world.cbox.set_y( new_act.y );                              
                if( new_act.action_points <= 0 && captain.cInd < captain.pcs.length ){
                    if( inArr(new_act.name, captain.pcs) )
                        recurs(new_act);
                }  
            });              
        },act);
    }
    //combat_next_action()
}

CombatMode.prototype.action_shoot = function(actor_name, data){
	this.combat_engine.action_attack(actor_name, data.victim);	
} 

CombatMode.prototype.action_magic = function(actor_name, spell_pkg){
    var act = this.world.get_character(actor_name);
    act.action_points-=4;
	this.combat_engine.action_magic(actor_name, spell_pkg.victims, spell_pkg.name );
}

/**
    Move an actor 1 square in the direction specified.  Returns true if the 
    move was successful.  
*/
CombatMode.prototype.action_move = function(actor_name, dir, ai){
    var act = this.world.get_character(actor_name);

    act.set_default_sprite();  

    var old_x = act.x;
    var old_y = act.y;

    var new_x = old_x;
    var new_y = old_y;

    switch( dir ){
        case "n":  new_y = new_y-1;                  act.change_direction( "u" ); break;
        case "ne": new_y = new_y-1; new_x = old_x+1; act.change_direction( "r" ); break; 
        case "e":  new_x = new_x+1;                  act.change_direction( "r" ); break;
        case "se": new_y = new_y+1; new_x = old_x+1; act.change_direction( "r" ); break; 
        case "s":  new_y = new_y+1;                  act.change_direction( "d" ); break;
        case "sw": new_y = new_y+1; new_x = old_x-1; act.change_direction( "l" ); break;
        case "w":  new_x = new_x-1;                  act.change_direction( "l" ); break; 
        case "nw": new_y = new_y-1; new_x = old_x-1; act.change_direction( "l" ); break;
    }

    var sq_old = this.world.get_square(old_x, old_y);
    var sq_new = this.world.get_square(new_x, new_y);

    if( sq_new != undefined ){
        // console.log("Error undefined sq_new: ",sq_new);
    } else {
        console.log("SQ_NEW ("+new_x+ ", " + new_y+") is undefined!");
        return false;    
    }

     if( sq_new == "none" ){
        return false;
    }

    //victim name (string)
    var victim = sq_new.has_character(actor_name);

    if( !sq_new.isPassable ){
        victim = "blocked!";
    } 

    if( victim == "none" ){
        clog(actor_name+": move "+dir+".  "+ (new_x-4)+", "+ (new_y-4));
        //act_set(cActor, new_x, new_y);
        this.game_state.game.soundCache.play_sound("footstep");
        act.set(new_x, new_y);
        act.walk_to_tile(old_x, old_y, new_x, new_y);

        this.world.set_camera( new_x-4, new_y-4 );
        act.action_points--;
        this.cAP--;
        return true;   
    } else if( victim == "blocked!" || ( !ai && (inArr(victim, this.world.pc_list)) ) ){
        this.game_state.notif.add_log("WARNING","Somebody already occupies that space!");
        if( ai ){
            act.action_points--;
            this.cAP--;
        }
        return false;
    } else {

        var vic_obj = this.world.get_character(victim);
        if( vic_obj.allegiance == act.allegiance  ){   
            if( !ai ){
                var yes=confirm("This character is your ally, are you sure you want to attack?");
                if( !yes ){
                    this.game_state.notif.add_log("WARNING","Somebody already occupies that space!");
                    return false;
                }
                this.game_state.notif.add_log("WARNING","You have now angered everyone in this town and they will attack you on sight.");
                //alert("You have now angered everyone in this town and they will attack you on sight.");
                this.world.switch_npc_allegiance_to_enemy();
            } else {
                this.game_state.notif.add_log("WARNING","An NPC already occupies that space!");
                return false;
            }
        }

        var msgact1 = this.cActor;
        var tmp1;
        if( (tmp1 = msgact1.search("_")) != -1 ){
            msgact1 = msgact1.substring(0, tmp1);
        }
        var msgact2 = victim;
        var tmp2;
        if( (tmp2 = msgact2.search("_")) != -1 ){
            console.log("SUBSTRING", tmp2);
            msgact2 = msgact2.substring(0, tmp2);
        }        
        this.game_state.notif.add_log("COMBAT",msgact1+" attacks "+msgact2+"...");
        this.combat_engine.action_attack(actor_name, victim);
        act.action_points-=4;
        this.cAP-=4;

        act.set_attack_sprite();
        this.hold_input = true;
        this.world.hold(this.playspeed, function(){
            this.hold_input = false;
        });

        this.combat_engine.regulate_all_health();

        return true;
    }
}

/**
    Get the next active actor for a turn.  Called after completion 
    of a turn by a previous actor.
*/  
CombatMode.prototype.next_actor = function(){
    //console.log("turn"); 
    this.cInd++;
    var captain = this;
    if( this.current_turn == 0){

        while( this.cInd < this.pcs.length && this.world.get_character(this.pcs[this.cInd]).isDead )
            this.cInd++;

        if( this.cInd < this.pcs.length ){
            this.cActor = this.pcs[this.cInd];
            var act = this.world.get_character( this.cActor );
            this.world.set_camera( act.x-4, act.y-4 );

            //reset the spells for the current actor
            this.reset_known_spells(this.cActor); 

            this.cAP = 4;
        } else {
            //SWITCH TURNS
            this.current_turn = 1;
            this.cInd = 0;
            this.cAP = 4;
            if( this.npcs.length > 0 ){
                this.hold_input = true;
                this.game_state.notif.add_log("COMBAT","--ENEMY TURN--");
                this.cActor = this.npcs[this.cInd];
                if( !this.world.ai.is_player_in_sight(this.cActor, this.game_state) ){
                    this.cAP = 0;
                    captain.next_actor();
                    return;
                } else {       
                    this.world.hold(this.playspeed, function(){ 
                        captain.call_after_animation(function(){
                            captain.npc_turn(captain.npcs[captain.cInd]);
                        }, "");
                    });                              
                }                 
            } else { //if there are no enemies, go back to player turn
                console.log("Where are the enemies!?");
                this.current_turn = 0;
                this.hold_input = false;
                this.cActor = this.pcs[this.cInd]; 
                this.reset_known_spells(this.cActor); 
                this.reset_all_ap();                
            }
        }
    } else {
        if( this.cInd >= this.npcs.length ){
            //SWITCH TURNS
            this.game_state.notif.add_log("COMBAT","--PLAYER TURN--");
            this.current_turn = 0;
            this.cInd = 0;
            this.cAP = 4;
            this.cActor = this.pcs[this.cInd];
            this.reset_known_spells(this.cActor); 
            this.reset_all_ap();

            this.hold_input = false;          
        } else {

            this.cActor = this.npcs[this.cInd];
            this.cAP = 4;
            if( !this.world.ai.is_player_in_sight(this.cActor, this.game_state) ){
                this.cAP = 0;
                captain.next_actor();
                return;
            } else {                   
                this.world.hold(this.playspeed, function(){ 
                    captain.call_after_animation(function(){
                        captain.npc_turn(captain.npcs[captain.cInd]);
                    }, "");
                });  
            }   
        }   
    }

    var act = this.world.get_character( this.cActor );
    this.world.cbox.set_x( act.x );
    this.world.cbox.set_y( act.y );
    this.world.set_camera( act.x-4, act.y-4 );
    this.world.active_char = this.cActor;

    act.action_points = 4;

    this.game_state.resume(false);
}

/**
    Remove a character from the combat lists
*/
CombatMode.prototype.remv_character = function(fella, alleg){
    console.log("COMBAT REMOVE", fella);
    if( alleg == "player" || alleg == "ally"){
        for( var i = 0; i < this.pcs.length; i++){
            if( this.pcs[i] == fella){
                //this.pcs.splice(i, 1);
                this.world.dead_pcs.push( this.pcs.splice(i, 1) );
                if( this.pcs.length < 1 ){
                    alert("Uh oh, looks like all your characters are dead!");
                    this.dead_flag = true;                 
                    this.game_state.game.change_state("MenuState",{});                    
                }                
            }
        }
    } else if( alleg == "enemy" ){
        for( var i = 0; i < this.npcs.length; i++){
            if( this.npcs[i] == fella){
                this.npcs.splice(i, 1);
            }
        }
    } else {
        console.log("ERROR: Allegience of "+fella+" ("+alleg+") has no case.");
        // for( var i = 0; i < this.allies.length; i++){
        //     if( this.allies[i] == fella){
        //         this.allies.splice(i, 1);
        //     }
        // }
    }
}

/**
    Set the allegiance variable in all characters according to which combat
    list they are in.
*/
CombatMode.prototype.set_allegiance = function(){
    for( var i in this.pcs ){
        this.world.get_character( this.pcs[i] ).allegiance = "player";
    }

    for( var i in this.npcs ){
        this.world.get_character( this.npcs[i] ).allegiance = "enemy";
    }

    for( var i in this.allies ){
        this.world.get_character( this.allies[i] ).allegiance = "player";
    }        
}

/**
    Determine what the allegence of an character is in thsi combat state
    @param name String name of the character
*/
CombatMode.prototype.get_allegiance = function(name){ 
    if( inArr(name, this.pcs)){
        return "player";
    } else if( inArr(name, this.npcs)){
        return "enemy";
    } else {
        return "player";
    }
}

/**
    Set the ui and current spell to reflect those spells known
    by the given actor
*/
CombatMode.prototype.reset_known_spells = function(actor_name){
    var act = this.world.get_character(actor_name);
    //console.log("Getting char "+actor_name);
    this.cSpell = act.dspell;
}

CombatMode.prototype.handleKeyPress = function( ev ){
    var cpk = [];
    cpk[ev.keyCode] = true;

    // if(this.hold_input){
    //     return;
    // }


    if (cpk[27]) {
        //ESC
        if( selecting_magic_tile ){
            //[OVN_SELECT].isVisible = false;  
            //selecting_magic_tile = false;            
        }
    }
    if (cpk[38]) {
        // UP ARROW
        if( this.current_turn == 0 )
            this.player_turn(this.cActor, "move","n");
    }
    if (cpk[40]) {
        // DOWN ARROW
        if( this.current_turn == 0 )
            this.player_turn(this.cActor,"move","s");
    } 
    if (cpk[37]) {
        // LEFT ARROW
        if( this.current_turn == 0 )
            this.player_turn(this.cActor,"move","w");
    } 
    if (cpk[39]) {
        // RIGHT ARROW
        if( this.current_turn == 0 )
            this.player_turn(this.cActor,"move","e");
    }   
    if (cpk[81]) {
        //q
        //clearInterval(RUNNING_INTERVAL);

    } 
    //NUMPAD CONTROLS
    if( cpk[105] ){
        //NUMPAD 9 UPRIGHT
        if( this.current_turn == 0 )
            this.player_turn(this.cActor, "move","ne");
    }
    if( cpk[99] ){
        //NUMPAD 3 DOWNRIGHT
        if( this.current_turn == 0 )
            this.player_turn(this.cActor, "move","se");
    }    
    if( cpk[97] ){
        //NUMPAD 1 DOWNLEFT
        if( this.current_turn == 0 )
            this.player_turn(this.cActor, "move","sw");
    } 
    if( cpk[103] ){
        //NUMPAD 7 UPLEFT
        if( this.current_turn == 0 )
            this.player_turn(this.cActor, "move","nw");
    }  
    if (cpk[104]) {
        // NUMPAD 8 UP
        if( this.current_turn == 0 )
            this.player_turn(this.cActor, "move","n");
    }
    if (cpk[98]) {
        // NUMPAD 2 DOWN
        if( this.current_turn == 0 )
            this.player_turn(this.cActor,"move","s");
    } 
    if (cpk[100]) {
        // NUMPAD 4 LEFT
        if( this.current_turn == 0 )
            this.player_turn(this.cActor,"move","w");
    } 
    if (cpk[101]) {
        // NUMPAD 5 CENTER
        if( this.current_turn == 0 )
            this.player_turn(this.cActor,"wait","");
    }    
    if (cpk[102]) {
        //NUMPAD 6 RIGHT
        if( this.current_turn == 0 )
            this.player_turn(this.cActor,"move","e");
    }            
}  

CombatMode.prototype.handleMouseClick = function( ev, off ){
    var mouseX = ev.clientX;
    var mouseY = ev.clientY;

    var gx = this.world.pix_to_gridw(mouseX);
    var gy = this.world.pix_to_gridh(mouseY);   

    if( this.game_state.selVisible ){
        var ch = this.world.get_character_by_position(gx, gy);
        var sq = this.world.get_square(gx, gy);
        this.game_state.onSelect(sq, ch);
        this.game_state.exitSelectMode();
        return;
    }

    var act = this.world.get_character( this.cActor );

    if( gx == act.x && gy == act.y ){
        this.player_turn(this.cActor, "wait", "");
    }

}

CombatMode.prototype.handleMouseMove = function( ev, off ){

    var mouseX = ev.clientX - off.x - 17;
    var mouseY = ev.clientY - off.y - 19;

    //console.log( mouseX, mouseY );

    this.world.mbox.set_x( this.world.pix_to_gridw(mouseX) );
    this.world.mbox.set_y( this.world.pix_to_gridh(mouseY) );
} 
/* jshint browser: true */
/* global app, console */

(function(){
"use strict";

var GameMode = app.world.mode.GameMode = function(state, world, ui){
    this.world = world;
    this.ui = ui;
    this.state = state;
	this.engine = new app.world.CombatEngine(world, state, this);
	this.player = null;
    this.stop = false;

	this.cind = 0;			//index of the current actor in this class's list
	this.cactor = null;		//reference to the current actor
	this.actionlist = [];	//list of functions that are to be called by timeouts
	this.acceptingcommands = true;
    this.controlsenabled = true;
    this.controldelay = 240;
    this.logging = false;

    this.lastaction = "none";

    this.walkdelay = 240; //ms delay between keypress actions

    this.aicallback = function(){};
};

GameMode.prototype.get_instance = function(){
    if( this instanceof app.world.mode.CombatMode ){
        return "combat";
    } else if ( this instanceof app.world.mode.TownMode ){
        return "town";
    } else if( this instanceof app.world.mode.OutsideMode ){
        return "outside";
    } else {
        return "none";
    }
};

GameMode.prototype.log = function(){
    if( this.logging ){
        console.log.apply(console, arguments);
    }
};

GameMode.prototype.log_attack = function( action, victim ){
    function remove_underscore(name){
      	var tmp1 = name.search("_");
        var msg = name;
	    if( tmp1 !== -1 ){
	        msg = name.substring(0, tmp1);
	    }
        return name;
    }

    var myname = remove_underscore( this.cactor.name );
    var vicname = remove_underscore( victim.name );
    this.log("COMBAT", myname+" "+action+" "+vicname+".");
};

GameMode.prototype.init_actors = function(){
    this.player = this.state.player;
    this.player.change_mode( this.get_instance(), this.world );

	this.actors = [];
	var pcs = this.player.get_chars_visual();
	for( var i in pcs ){
        pcs[i].ap = 4;
		this.actors.push( pcs[i] );
	}

	for( var i in this.world.characters ){
		if( this.world.characters[i].isAlive && this.world.characters[i].isNPC ){
			this.world.characters[i].ap = 4;
			this.actors.push( this.world.characters[i] );
		}
	}

    if( this.get_instance() === "town" ){
        var nf = this.player.get_not_first();
        for( var i in nf ){
            nf[i].set(0, 0);
        }
    }
};

GameMode.prototype.start = function(){
    this.begin_round();
};

GameMode.prototype.begin_round = function(){
    if( this.logging ){
        console.log("BEGIN ROUND", this);
    }
    this.acceptingcommands = false;
	this.cind = -1;
	this.set_next_actor();
	this.begin_actor_turn();
};

GameMode.prototype.set_next_actor = function(){
	this.cind++;

	if( this.cind >= this.actors.length ){
        this.end_round();
        return false;
	}
	this.cactor = this.actors[ this.cind ];
	if( this.cactor === undefined || this.cactor === null ){
		console.error( "Combat Mode tried to set an undefined actor." );
        return false;
	} else {
        return true;
    }
};

GameMode.prototype.begin_actor_turn = function(think){
    this.log("BEGIN TURN", this.cactor.name);
    if( think ){
        if( this.cactor.is_visible() ){
            this.world.set_camera( this.cactor.x - 4, this.cactor.y - 4 );
        } else {
            think = false;
        }
    } else {
        if( !this.cactor.isNPC ){
            this.world.set_camera( this.cactor.x - 4, this.cactor.y - 4 );
        }
    }

	if( this.cactor.isNPC ){
		if( think ){
			setTimeout( this.aicallback, this.player.settings.playspeed );
		} else {
			this.aicallback();
		}
	} else {
        this.world.active_char = this.cactor.name;
		this.acceptingcommands = true;
		this.world.set_camera( this.cactor.x - 4, this.cactor.y - 4 );
        this.state.inter.update_location_variables();
        this.log("Wait for actions...");
	}
};

GameMode.prototype.end_actor_turn = function(){
    if( this.state.pausecombat ){
        setTimeout( function(){
            this.end_actor_turn();
        }.bind(this), 100);
        return;
    }

    var prevactor = this.cactor;

	this.check_dead();
	if( this.actionlist.length > 0 ){
		var action_func = this.actionlist.splice(0,1)[0];
		setTimeout( function(){
			action_func();
			this.end_actor_turn();
		}.bind(this), this.player.settings.playspeed);
	} else {
        this.log("END TURN",this.cactor.name, this.cactor.ap, this.get_instance());
		if( this.cactor.ap <= 0 ){
            var ret = this.set_next_actor();
			if( ret === false ){
                return;
            }
		}

        if( this.get_instance() === "combat" ){
            //if you are an npc your thinking time is at the beginning of the turn
            if( (this.cactor.isNPC && prevactor.isNPC) || this.lastaction === "wait" ){
                this.begin_actor_turn(true);
            } else {
                //gotta make sure the user can't double press keys accidentally
                setTimeout( function(){this.begin_actor_turn(true);}, this.walkdelay );
            }
        } else {
            this.begin_actor_turn();
        }
	}   
};

GameMode.prototype.check_dead = function(){
	var gonnors = [];
	for( var i in this.actors ){
		if( this.actors[i].stats.curr_hp < 0 ){
			this.actors[i].stats.curr_hp = 0;
            this.actors[i].isAlive = false;
			gonnors.push(i);
		}
	}	

    var check_game_over = function(ch){
        var act = this.player.get_first();
        if( act === "none" ){
            console.error( "EVERY PC IS DEAD" );
            this.stop = true;
            return;
        } 

        if( this instanceof app.world.mode.TownMode ){
            act.ap = 4;
            act.set( ch.x, ch.y );
            this.actors = [act].concat( this.actors );
        }
    }.bind(this);

    var _kill_character = function(ch){
        this.engine.kill_character( ch.name );
        if( !ch.isNPC ){
            check_game_over(ch);
        }        
    }.bind(this);

	for( var i in gonnors ){
		var ind = gonnors[i];
		var ch = this.actors.splice(ind-i, 1)[0]; 
        this.actionlist.push(_kill_character.bind(this, ch));
	}
};

GameMode.prototype.end_round = function(){
	if( this.actors.length === 0 ){ //dumb assert
		console.error("No actors found in combat list.");
		return; 
	}

	for( var i in this.actors ){
		this.actors[i].ap = 4;
	}

	//apply post round effects
	this.check_dead();
    if( this.stop ){
        return;
    }
	if( this.actionlist.length > 0 ){
		var action_func = this.actionlist.splice(0,1);
		setTimeout( function(){
			action_func();
			this.end_round();
		}.bind(this), this.player.settings.playspeed);
	} else {
        setTimeout( function(){
            this.begin_round();
        }.bind(this), this.walkdelay);
	}   
};

GameMode.prototype.trip_node = function(x, y){
    var node = this.world.get_node_by_position(x, y);
    if( node !== "none" ){
        if( !node.isDisabled ){
            node.perform_action();
        }
    }
};

//made so I can funnel all user input through this function and throttle when necessary
GameMode.prototype.do_action = function(action, ai){
    var ret = false;

	if( !ai && (!this.acceptingcommands || this.cactor.is_between_tiles) ){
		//console.log("Command throttled", action, this.acceptingcommands);
		return ret;
	}
	this.acceptingcommands = false;
	var args = Array.prototype.slice.call(arguments, 2);
    this.log.apply( this, [" - ACTION", action].concat(args) );

	if( action in this ){
        this.lastaction = action;
		ret = this[ action ].apply( this, args );
	} else {
		console.error("Tried to perform undefined action", action);
	}

	this.end_actor_turn();

    return ret;
};

GameMode.prototype.attack = function(){};

GameMode.prototype.move = function(dir){
    var act = this.cactor;

    act.set_default_sprite();  

    var old_x = act.x; var new_x = old_x;
    var old_y = act.y; var new_y = old_y;

    var newdir = "u"; var facing = "n";
    switch( dir ){
        case "n":  new_y = new_y-1;                  newdir = "u"; facing = "n"; break;
        case "ne": new_y = new_y-1; new_x = old_x+1; newdir = "r"; facing = "e"; break; 
        case "e":  new_x = new_x+1;                  newdir = "r"; facing = "e"; break;
        case "se": new_y = new_y+1; new_x = old_x+1; newdir = "r"; facing = "e"; break; 
        case "s":  new_y = new_y+1;                  newdir = "d"; facing = "s"; break;
        case "sw": new_y = new_y+1; new_x = old_x-1; newdir = "l"; facing = "w"; break;
        case "w":  new_x = new_x-1;                  newdir = "l"; facing = "w"; break; 
        case "nw": new_y = new_y-1; new_x = old_x-1; newdir = "l"; facing = "w"; break;
    }

    act.change_direction( newdir );
    var sq_new = this.world.get_tile(new_x, new_y);

    if( sq_new === undefined || sq_new === "none" ){
        console.error("Tried to move to an undefined square");
        return "none";    
    }

    var victimname = sq_new.has_character();
    if( !sq_new.isPassable ){
        victimname = "blocked!";
    } else {
        this.world.facing_dir = facing;
    }

    if( sq_new.is_closed_door()){
        sq_new.open_door();
        this.state.unpress_all_keys();
    }
    return {
    	name:victimname,
    	new_x:new_x,
    	new_y:new_y,
    	old_x:old_x,
    	old_y:old_y
    };
};

GameMode.prototype.shoot = function(){};
GameMode.prototype.cast = function(){};
GameMode.prototype.use = function(){};
GameMode.prototype.get_item = function(){};
GameMode.prototype.wait = function(){};

GameMode.prototype.talk = function( ch ){
    if( ch === "none" ){
        this.state.inter.disable_select();
        return;
    }

    if( ch.allegiance !== "ally" ){
        this.state.inter.notify( "This character is your enemy!" );
        this.state.inter.disable_select();
        return;
    }

    if( !ch.has_dialogue() ){
        this.state.inter.notify( "This character has nothing interesting to say." );
        this.state.inter.disable_select();
        return;
    }

    this.state.uistore.currentnpc = ch.name;
    this.state.inter.show_menu( "dialogue" );
};

GameMode.prototype.handle_control = function(dir){
    if( dir ){
        if( this.acceptingcommands && this.controlsenabled ){
            if( dir === "wait" ){
                this.do_action( "wait", false );
            } else {
                this.do_action( "move", false, dir );
            }
        }
    }
};

GameMode.prototype.keypress = function( ev ){
    var cpk = [];
    cpk[ev.keyCode] = true;

    if (cpk[27]) {
        //ESC
    }
    if (cpk[38]) {
        // UP ARROW
        this.do_action("move", false, "n");
    }
    if (cpk[40]) {
        // DOWN ARROW
        this.do_action("move", false, "s");
    } 
    if (cpk[37]) {
        // LEFT ARROW
        this.do_action("move", false, "w");
    } 
    if (cpk[39]) {
        // RIGHT ARROW
		this.do_action("move", false, "e");
    }   

    //NUMPAD CONTROLS
    if( cpk[105] ){
        //NUMPAD 9 UPRIGHT
        this.do_action("move", false, "ne");
    }
    if( cpk[99] ){
        //NUMPAD 3 DOWNRIGHT
        this.do_action("move", false, "se");
    }    
    if( cpk[97] ){
        //NUMPAD 1 DOWNLEFT
        this.do_action("move", false, "sw");
    } 
    if( cpk[103] ){
        //NUMPAD 7 UPLEFT
        this.do_action("move", false, "nw");
    }  
    if( cpk[104] ){
        // NUMPAD 8 UP
        this.do_action("move", false, "n");
    }
    if( cpk[98] ){
        // NUMPAD 2 DOWN
        this.do_action("move", false, "s");
    } 
    if( cpk[100] ){
        // NUMPAD 4 LEFT
        this.do_action("move", false, "w");
    } 
    if( cpk[101] ){
        // NUMPAD 5 CENTER
		this.do_action("wait");
    }    
    if( cpk[102] ){
        //NUMPAD 6 RIGHT
        this.do_action("move", false, "e");
    } 
};

GameMode.prototype.click = function(){};
GameMode.prototype.mousemove = function(){};

})(); 
/* jshint browser: true */
/* global app */

(function(){
"use strict";

var OutsideMode = app.world.mode.OutsideMode = function(state, world, ui){
	app.world.mode.GameMode.call( this, state, world, ui );
	this.player.change_mode("outside");
};

OutsideMode.prototype = new app.extend(app.world.mode.GameMode);

OutsideMode.prototype.begin_actor_turn = function(){
	app.world.mode.GameMode.prototype.begin_actor_turn( function(){
		this.wait();
		//this.world.ai.town_action(this.cactor, this)
	}.bind(this), false);
};

OutsideMode.prototype.check_bounds = function(){
	var act = this.cactor();
	if( this.world.params.mode === "outside" ){
	    var tmp = this.world.name.split(".");
	    var mapx = parseInt(tmp[0]);
	    var mapy = parseInt(tmp[1]);
	    var new_x = act.x;
	    var new_y = act.y;
	    if( new_x === 0 ){
	        this.game_state.change_map( (mapx-1)+"."+mapy, 48, act.y, "outside"); 
	    } else if( new_y === 0 ){
	        this.game_state.change_map( mapx+"."+(mapy-1), act.x, 48, "outside"); 
	    } else if( new_x === 49 ){
	        this.game_state.change_map( (mapx+1)+"."+mapy, 1, act.y, "outside"); 
	    } else if( new_y === 49 ){
	        this.game_state.change_map( mapx+"."+(mapy+1), act.x, 1, "outside"); 
	    }  
	} 
};

OutsideMode.prototype.move = function(dir){
    var act = this.cactor;

    var m = app.world.mode.GameMode.prototype.move.call( this, dir );
    var victimname = m.name;
    var old_x = m.old_x;
    var old_y = m.old_y;
    var new_x = m.new_x;
    var new_y = m.new_y;
    if( victimname === "none" ){
	    this.state.game.soundCache.play_sound("footstep");
	    act.set(new_x, new_y);
	    act.walk_to_tile(old_x, old_y, new_x, new_y);
	    if( !act.isNPC ){
	    	this.world.set_camera( new_x-4, new_y-4 );
	    	this.trip_node();
	    	this.check_bounds();
	    }

	    act.ap = 0;
	    return true;  
	} else {
		//blocked
		act.ap = 0;
		return false;
	}
};

OutsideMode.prototype.cast = function(spell_pkg){
    this.cactor.ap -= 4;
	this.combat_engine.action_magic(
		this.cactor.name,
		spell_pkg.victims, 
		spell_pkg.name
	);
};

OutsideMode.prototype.use = function(){
	//FIXME
};

OutsideMode.prototype.get_item = function(){
	//FIXME
};

OutsideMode.prototype.wait = function(){
	this.cactor.ap = 0;
};

})(); 
/**
    \class TownMode
    \brief Holds the state of the game when it is in combat mode.

    Initialize a new combat state everytime the player initiates combat mode and destroy it
    every time the player leaves combat mode.  
*/
function TownMode(pc_list, npc_list, world, ui, game_state){

    this.world = world;
    this.ui = ui;
    this.game_state = game_state;

    //Combat Lists:
    //console.log( "PCLIST", 
    this.pcs = [];              //max 6 *or we could go more if I decide you can have more than 6 in a party
    for( var i in pc_list ){
        this.pcs.push( pc_list[i] );
    }
    this.npcs = [];             //max unlimited*
    for( var i in npc_list ){
        this.npcs.push( npc_list[i] );
    }    
    //this.allies = [];         //max unlimited*

    //combat oriented variables
    this.current_turn = 0;      //0=player turn, 1=enemy turn, 2=ally turn
    this.cActor = this.pcs[0]   //name of the current active actor
    this.cSpell = ""            //name of the current active spell
    this.curr_dspell = "";
    this.curr_lspell = "";
    this.cAP = 4;               //current action points
    this.cInd = 0;              //index of the current actor in the combat lists
    this.cDamage = 0;           //damage dealt during an attack

    this.playspeed = 200;       //the delay between actions in ms
    this.is_selecting_target = false;

    //TEMP
    this.hold_input = false;

    //this.start_combat();
}

TownMode.prototype.start = function(){
    this.world.mbox.set_x( 100);
    this.world.mbox.set_y( 100);
    this.world.cbox.set_x( 100 );
    this.world.cbox.set_y( 100 );    
    this.align_pcs();
}

TownMode.prototype.align_pcs = function(){
    var head = this.world.get_character(this.cActor);
    for( var i in this.pcs ){
        var act = this.world.get_character(this.pcs[i]);
        act.set(head.x, head.y);
    }

    this.world.set_camera( head.x-4, head.y-4 );
}

/**
    Perform a turn based on the given pc
*/
TownMode.prototype.player_turn = function(pc_name, type, data){ 
    var act = this.world.get_character(pc_name);

    switch(type){
        case "move": this.action_move(pc_name, data); break;
        case "magic": this.action_magic(pc_name, data); break;
        case "wait": act.action_points=0; break;
    }

    // this.world.cbox.set_x( act.x );
    // this.world.cbox.set_y( act.y );

}

TownMode.prototype.check_vs_nodes = function(new_x, new_y){

}

/**
    Move the actor in one square
*/
TownMode.prototype.action_move = function(actor_name, dir, ai){
    //var ind = get_actor_ind(cActor);
    var act = this.world.get_character(actor_name);

    var old_x = act.x;
    var old_y = act.y;

    var new_x = old_x;
    var new_y = old_y;

    switch( dir ){
        case "n":  new_y = new_y-1;                  act.change_direction( "r" ); break;
        case "ne": new_y = new_y-1; new_x = old_x+1; act.change_direction( "r" ); break; 
        case "e":  new_x = new_x+1;                  act.change_direction( "r" ); break;
        case "se": new_y = new_y+1; new_x = old_x+1; act.change_direction( "r" ); break; 
        case "s":  new_y = new_y+1;                  act.change_direction( "l" ); break;
        case "sw": new_y = new_y+1; new_x = old_x-1; act.change_direction( "l" ); break;
        case "w":  new_x = new_x-1;                  act.change_direction( "l" ); break; 
        case "nw": new_y = new_y-1; new_x = old_x-1; act.change_direction( "l" ); break;
    }

    var sq_old = this.world.get_square(old_x, old_y);
    var sq_new = this.world.get_square(new_x, new_y);

    if( sq_new != undefined ){
        // console.log("Error undefined sq_new: ",sq_new);
    } else {
        console.log("SQ_NEW ("+new_x+ ", " + new_y+") is undefined!"); 
    }

    var victim = sq_new.has_enemy_character(actor_name);

    if( !sq_new.isPassable ){
        victim = "blocked!";
    } 

    if( victim == "none" ){
        //clog(actor_name+": move "+dir+".  "+ (new_x-4)+", "+ (new_y-4));
        //act_set(cActor, new_x, new_y);
        act.set(new_x, new_y);
        this.world.set_camera( new_x-4, new_y-4 );
    } else if( victim == "blocked!"){
        clog("Blocked!");
    } else {
        clog("Somebody already occupies that space!");
    }

    this.align_pcs();

    //Determine if the player is out of the visible bounds of the map after moving
    if( new_x < 5 ){
        var node = this.world.get_node_by_name("Exit_West");
        if( !( node === "none" ) )
            node.perform_action();
    } else if( new_x > this.world.mapw-5 ) {
        var node = this.world.get_node_by_name("Exit_East");
        if( !( node === "none" ) )
            node.perform_action();
    } else if( new_y < 5 ) {
        var node = this.world.get_node_by_name("Exit_North");
        if( !( node === "none" ) )
            node.perform_action();
    } else if( new_y > this.world.maph-5 ) {
        var node = this.world.get_node_by_name("Exit_South");
        if( !( node === "none" ) )
            node.perform_action();
    } 

    node = this.world.get_node_by_position(new_x, new_y)
    if( !(node === "none") ){
        node.perform_action();
    }    

}

TownMode.prototype.handleKeyPress = function( ev ){

    var cpk = [];
    cpk[ev.keyCode] = true;

    // if(this.hold_input){
    //     return;
    // }

    if (cpk[27]) {
        //ESC
        if( selecting_magic_tile ){
            //[OVN_SELECT].isVisible = false;  
            //selecting_magic_tile = false;            
        }
    }
    if (cpk[38]) {
        // UP ARROW
        if( this.current_turn == 0 )
            this.player_turn(this.cActor, "move","n");
        ev.preventDefault();
    }
    if (cpk[40]) {
        // DOWN ARROW
        if( this.current_turn == 0 )
            this.player_turn(this.cActor,"move","s");
        ev.preventDefault();
    } 
    if (cpk[37]) {
        // LEFT ARROW
        if( this.current_turn == 0 )
            this.player_turn(this.cActor,"move","w");
        ev.preventDefault();
    } 
    if (cpk[39]) {
        // RIGHT ARROW
        if( this.current_turn == 0 )
            this.player_turn(this.cActor,"move","e");
        ev.preventDefault();
    }
    if (cpk[76]) {
        //l
        var act = this.world.get_character( this.cActor );
        this.cSpell = act.lspell;
        this.world.mbox.area = this.world.sm.get_spell( this.cSpell ).a;
        this.world.mbox.caster_loc = [act.x, act.y];
        this.world.mbox.isVisible = true; 
        this.is_selecting_target = true;
    }
    if (cpk[68]) {
        //d
        var act = this.world.get_character( this.cActor );
        this.cSpell = act.dspell;

        console.log("GAME "+this.cActor+" casts "+this.cSpell );
        this.world.mbox.area = this.world.sm.get_spell( this.cSpell ).a;
        this.world.mbox.caster_loc = [act.x, act.y];
        this.world.mbox.isVisible = true; 
        this.is_selecting_target = true;
    }    
    if (cpk[81]) {
        //q
        //clearInterval(RUNNING_INTERVAL);

    } 
    //NUMPAD CONTROLS
    if( cpk[105] ){
        //NUMPAD 9 UPRIGHT
        if( this.current_turn == 0 )
            this.player_turn(this.cActor, "move","ne");
    }
    if( cpk[99] ){
        //NUMPAD 3 DOWNRIGHT
        if( this.current_turn == 0 )
            this.player_turn(this.cActor, "move","se");
    }    
    if( cpk[97] ){
        //NUMPAD 1 DOWNLEFT
        if( this.current_turn == 0 )
            this.player_turn(this.cActor, "move","sw");
    } 
    if( cpk[103] ){
        //NUMPAD 7 UPLEFT
        if( this.current_turn == 0 )
            this.player_turn(this.cActor, "move","nw");
    }  
    if (cpk[104]) {
        // NUMPAD 8 UP
        if( this.current_turn == 0 )
            this.player_turn(this.cActor, "move","n");
        ev.preventDefault();
    }
    if (cpk[98]) {
        // NUMPAD 2 DOWN
        if( this.current_turn == 0 )
            this.player_turn(this.cActor,"move","s");
        ev.preventDefault();
    } 
    if (cpk[100]) {
        // NUMPAD 4 LEFT
        if( this.current_turn == 0 )
            this.player_turn(this.cActor,"move","w");
        ev.preventDefault();
    } 
    if (cpk[102]) {
        //NUMPAD 6 RIGHT
        if( this.current_turn == 0 )
            this.player_turn(this.cActor,"move","e");
        ev.preventDefault();
    }            
}  

TownMode.prototype.handleMouseClick = function( ev, off ){

    //console.log( "Cast - "+ this.cSpell );

    var mouseX = ev.clientX - off.x - 17;
    var mouseY = ev.clientY - off.y - 15;

    var gx = this.world.pix_to_gridw(mouseX);
    var gy = this.world.pix_to_gridh(mouseY);   

    if( this.is_selecting_target ){

        this.world.mbox.isVisible = false;

        var spell = this.world.sm.get_spell( this.cSpell );
        var act = this.world.get_character( this.cActor );

        var victims = [];
        var cast_type = spell.ct;

        switch( cast_type ){
            case CAST_TARGET: victims = this.determine_victims(gx, gy, spell); break;
            case CAST_ALLY: victims = this.determine_victims(gx, gy, spell); break;
            case CAST_ANYONE: victims = this.determine_victims(gx, gy, spell); break;
            case CAST_FIELD: break;
            case CAST_GROUP: break;
        }

        console.log("GAME: Victims of this spell ", victims );


        if( victims.length > 0 ) {
            var captain = this;
            act.action_points-=4;
            this.cAP-=4;
            act.set_attack_sprite();
            PROJ_ICY = this.world.add_projectile( new Projectile(this.cActor, [gx,gy], "icyproj","icyproj", myDisplay, this.world, OV_PROJ, function(){
                captain.player_turn(captain.cActor, "magic", victims );
            }));   
        } else {
            clog("The spell has no effect");
        }          

        this.is_selecting_target = false;
    }

    var act = this.world.get_character( this.cActor );

    if( gx == act.x && gy == act.y ){
        console.log("WAIT");
        this.player_turn(this.cActor, "wait", "");
    }

}

TownMode.prototype.handleMouseMove = function( ev, off ){

    var mouseX = ev.clientX - off.x - 17;
    var mouseY = ev.clientY - off.y - 19;

    //console.log( mouseX, mouseY );

    this.world.mbox.set_x( this.world.pix_to_gridw(mouseX) );
    this.world.mbox.set_y( this.world.pix_to_gridh(mouseY) );
} 
/* jshint browser: true */
/* global app */

(function(){
"use strict";

var TownMode = app.world.mode.TownMode = function(state, world, ui){
	app.world.mode.GameMode.call( this, state, world, ui );

	this.aicallback = function(){
		this.world.ai.town_action(this.cactor, this);
	}.bind(this);
};

TownMode.inherits( app.world.mode.GameMode );

TownMode.prototype.init_actors = function(){
	this.parent.init_actors.call( this );
};

TownMode.prototype.attack = function(victim){
	this.log_attack( "attacks", victim );
    this.engine.action_attack(this.cactor.name, victim.name );
    this.cactor.ap -= 4;
};

TownMode.prototype.move = function(dir){
    var act = this.cactor;

    var m = app.world.mode.GameMode.prototype.move.call( this, dir );
    var victimname = m.name;
    var old_x = m.old_x;
    var old_y = m.old_y;
    var new_x = m.new_x;
    var new_y = m.new_y;
    if( victimname === "none" ){
	    this.state.game.soundCache.play_sound("footstep");
	    act.set(new_x, new_y);
	    act.walk_to_tile(old_x, old_y, new_x, new_y);
	    if( !act.isNPC ){
	    	this.world.set_camera( new_x-4, new_y-4 );
	    	this.trip_node();
	    }

	    act.ap = 0;
	    return true;  
	} else {
		if( act.isNPC ) {
			act.ap = 0;
		} else {
			this.log(" - BLOCKED");
		}
		return false;
	}
};

TownMode.prototype.shoot = function(victim){
	this.log_attack( "shoots", victim );
	this.engine.action_attack(this.cactor.name, victim.name);	
};

TownMode.prototype.cast = function(spell_pkg){
    this.cactor.ap -= 4;
	var spell = this.world.sm.get_spell( spell_pkg.name );
	var her = spell_pkg.her;
	this.actionlist.push( function(){
		this.world.set_camera( this.cactor.x - 4, this.cactor.y - 4 );
	}.bind(this));

	this.actionlist.push( function(){
		this.cactor.set_attack_sprite();
	    this.world.soundCache.play_sound("cast");
	    this.world.add_projectile( 
		    new app.world.actor.Projectile(this.cactor.name, [her.x,her.y], 
		    	spell.proj, spell.proj, 
		    	this.state.game.display, this.world, 1, 
		    	function(){}
		    )
	    ); 
	});

	this.actionlist.push( function(){
		this.engine.action_magic(
			this.cactor.name,
			spell_pkg.victims, 
			spell_pkg.name
		);
	});
};

TownMode.prototype.use = function(){
	//FIXME
};

TownMode.prototype.get_item = function(){
	//FIXME
};

TownMode.prototype.wait = function(){
	this.cactor.ap = 0;
};

TownMode.prototype.get_instance = function(){
	return this.parent.get_instance.call( this );
};

TownMode.prototype.begin_round = function(){
    return this.parent.begin_round.call( this );
};

TownMode.prototype.set_next_actor = function(){
    return this.parent.set_next_actor.call( this );
};

TownMode.prototype.begin_actor_turn = function(think){
	return this.parent.begin_actor_turn.call( this, think );
};

TownMode.prototype.end_actor_turn = function(){
    return this.parent.end_actor_turn.call( this );
};

TownMode.prototype.check_dead = function(){
    return this.parent.check_dead.call( this );
};

TownMode.prototype.end_round = function(){
    return this.parent.end_round.call( this );
};

TownMode.prototype.keypress = function( ev ){
	return this.parent.keypress.call( this, ev );
};

TownMode.prototype.click = function( ev, off ){
	return this.parent.click.call( this, ev, off );
};

TownMode.prototype.mousemove = function( ev, off ){
	return this.parent.mousemove.call( this, ev, off );
};

})(); 
/**
    \class TownMode
    \brief Holds the state of the game when it is in combat mode.

    Initialize a new combat state everytime the player initiates combat mode and destroy it
    every time the player leaves combat mode.  
*/
function TownMode(pc_list, npc_list, world, ui, game_state){

    this.world = world;
    this.ui = ui;
    this.game_state = game_state;

    this.combat_engine = new CombatEngine(world, game_state, this);

    //Combat Lists:
    //console.log( "PCLIST", 
    this.pcs = [];              //max 6 *or we could go more if I decide you can have more than 6 in a party
    for( var i in pc_list ){
        this.pcs.push( pc_list[i] );
    }
    this.npcs = [];             //max unlimited*
    for( var i in npc_list ){
        this.npcs.push( npc_list[i] );
    }    
    //this.allies = [];         //max unlimited*

    //combat oriented variables
    this.current_turn = 0;      //0=player turn, 1=enemy turn, 2=ally turn
    this.cActor = this.pcs[0]   //name of the current active actor
    this.cSpell = ""            //name of the current active spell
    this.curr_dspell = "";
    this.curr_lspell = "";
    this.cAP = 4;               //current action points
    this.cInd = 0;              //index of the current actor in the combat lists
    this.cDamage = 0;           //damage dealt during an attack

    this.dead_flag = false;

    this.world.active_char = this.pcs[0];

    this.playspeed = 200;       //the delay between actions in ms
    this.is_selecting_target = false;
    this.enemyinsight = false;

    //TEMP
    this.hold_input = false;

    //this.start_combat();
}

TownMode.prototype.start = function(){
    this.world.mbox.set_x( 100 );
    this.world.mbox.set_y( 100 );
    this.world.cbox.set_x( 100 );
    this.world.cbox.set_y( 100 );    
    this.align_pcs();
}

TownMode.prototype.is_everyone_dead = function(){
    var ret = false;
    for( var i in this.pcs ){
        var ret = ret || this.world.get_character(this.pcs[i]).isAlive;
    }

    return !ret;
}

TownMode.prototype.get_nearby_items = function(){
    var tiles = this.world.get_onscreen_tiles();

    var act = this.world.get_character( this.pcs[0] );
    var ret = [];

    for( var i in tiles ){
        var sq = tiles[i];
        var cont = sq.get_contents();
        for( var j in cont ){
            var item = this.world.itemCache.get_item(cont[j].substring( 0, cont[j].search("_") ));
            if( !(item === "none" ) ){
                if( this.world.determine_visibility(act.x, act.y, sq.x, sq.y, "blocksMove") && sq.isInSight ){
                    ret.push( {item:item, sq:sq, name:cont[j]} );
                }               
            }
        }        
    }

    return ret;
}

TownMode.prototype.call_after_animation = function(func, args){
    var captain = this;
    if( this.world.particles.length == 0 && this.world.projectiles.length == 0 && this.world.splashes.length == 0 ){
        func(args);
    } else {
        setTimeout(function(){
            captain.call_after_animation(func,args);
            captain.world.active_char = captain.pcs[0];
        },100);
    }
}

TownMode.prototype.align_pcs = function(){
    var head = this.world.get_character(this.cActor);
    for( var i in this.pcs ){
        var act = this.world.get_character(this.pcs[i]);
        act.set(head.x, head.y);
    }

    this.world.set_camera( head.x-4, head.y-4 );
}

TownMode.prototype.remv_character = function(fella, alleg){
    var captain = this;
    if( alleg == "player" || alleg == "ally" ){
        for( var i = 0; i < this.pcs.length; i++){
            if( this.pcs[i] == fella){
                this.world.dead_pcs.push( this.pcs.splice(i, 1) );
                console.log(fella +" is DEAD, splicing him", this.pcs);
                if( this.pcs.length < 1 ){
                    this.call_after_animation(function(unused){
                        alert("Uh oh, looks like all your characters are dead!");
                        captain.dead_flag = true;                 
                        captain.game_state.game.change_state("MenuState",{});    
                    }, "unused");
                
                }
                this.cActor = this.pcs[0];
            }
        }
    } else if( alleg == "enemy" ){
        for( var i = 0; i < this.npcs.length; i++){
            if( this.npcs[i] == fella){
                this.npcs.splice(i, 1);
            }
        }
    } else {
        console.log("ERROR: Allegience of "+fella+" ("+alleg+") has no case.");
    }
}

/**
    Perform a turn based on the given pc
*/
TownMode.prototype.player_turn = function(pc_name, type, data){ 
    var act = this.world.get_character(pc_name);

    switch(type){
        case "move": this.action_move(pc_name, data, false); break;
        case "magic": this.action_magic(pc_name, data); break;
        case "wait": act.action_points=0; this.next_actor(0); break;
    }

    //In town mode, after you do an action all the status effects are applied
    var captain = this;
    this.call_after_animation(function(){
        captain.game_state.disableInput = true;
        for( var i in captain.pcs ){
            var act = captain.world.get_character( captain.pcs[i] );
            act.apply_post_effects( function(){
                var act = captain.world.get_character( captain.world.active_char );
                captain.world.set_camera( act.x-4, act.y-4 );
                captain.combat_engine.regulate_all_health();
                captain.game_state.disableInput = false;
            }); 
        }
    }, this.playspeed);

}

TownMode.prototype.npc_turn = function(npc, ind){
    var captain = this;
    this.game_state.disableInput = true;
    var act = this.world.get_character(npc);
    //console.log("NPC TURN", npc, act.name);
    if( this.world.ai.town_action(npc, this) ){
        this.call_after_animation(function(){
            act.apply_post_effects(function(){
                captain.next_actor(ind+1);
            });            
        }, this.playspeed );

        if( this.enemyinsight === false ){
            this.game_state.warn.add_log("red","An enemy has spotted you!");
        }
        this.enemyinsight = true;
    } else {
        this.next_actor(ind+1);
        this.enemyinsight = false;
    }
}

TownMode.prototype.next_actor = function(ind){
    if( this.npcs.length < 1 ){
        //alert("Congratulations, you have completed the combat demo!");
        //this.dead_flag = true;                 
        //this.game_state.game.change_state("MenuState",{});                    
    }

    if( ind >= this.npcs.length ){ this.game_state.disableInput = false; return };
    this.npc_turn( this.npcs[ind], ind );
}

TownMode.prototype.action_magic = function(actor_name, spell_pkg){
	this.combat_engine.action_magic(actor_name, spell_pkg.victims, spell_pkg.name );

	var captain = this;
    this.call_after_animation(function(unused){
        captain.next_actor(0);
    }, "");
}

/**
    Move the actor in one square
*/
TownMode.prototype.action_move = function(actor_name, dir, ai){
    //var ind = get_actor_ind(cActor);
    var act = this.world.get_character(actor_name);
    if( act.is_between_tiles ) return;
    else act.set_default_sprite();

    var old_x = act.x;
    var old_y = act.y;

    var new_x = old_x;
    var new_y = old_y;

    switch( dir ){
        case "n":  new_y = new_y-1;                  act.change_direction( "u" ); break;
        case "ne": new_y = new_y-1; new_x = old_x+1; act.change_direction( "r" ); break; 
        case "e":  new_x = new_x+1;                  act.change_direction( "r" ); break;
        case "se": new_y = new_y+1; new_x = old_x+1; act.change_direction( "r" ); break; 
        case "s":  new_y = new_y+1;                  act.change_direction( "d" ); break;
        case "sw": new_y = new_y+1; new_x = old_x-1; act.change_direction( "l" ); break;
        case "w":  new_x = new_x-1;                  act.change_direction( "l" ); break; 
        case "nw": new_y = new_y-1; new_x = old_x-1; act.change_direction( "l" ); break;
    }

    var sq_old = this.world.get_square(old_x, old_y);
    var sq_new = this.world.get_square(new_x, new_y);

    //console.log(old_x, old_y, " d ", new_x, new_y);

    if( sq_new != undefined){

        // console.log("Error undefined sq_new: ",sq_new);
    } else {
        console.log("SQ_NEW ("+new_x+ ", " + new_y+") is undefined!"); 

        if( ai ){
            return false;
        }
    }

    if( sq_new == "none" ){
        return false;
    }

    var victim = sq_new.has_enemy_character(actor_name);

    if( !sq_new.isPassable ){
        victim = "blocked!";
    } 

    if( !ai && sq_new.is_closed_door()){
        sq_new.open_door();
        this.game_state.unpress_all_keys();
        return;
    }

    if( victim == "none" ){
        //clog(actor_name+": move "+dir+".  "+ (new_x-4)+", "+ (new_y-4));
        //act_set(cActor, new_x, new_y);
        this.game_state.game.soundCache.play_sound("footstep");
        act.set(new_x, new_y);
        act.walk_to_tile(old_x, old_y, new_x, new_y);
        if( !ai ){
            this.world.set_camera( new_x-4, new_y-4 );
        } else {
            return true;
        }
    } else if( victim == "blocked!"){
        if( !ai ){
            //clog("Blocked!");
        } else {
            return true;
        }
    } else {
        if( !ai ){
            clog("Somebody already occupies that space!");
        } else {
            if( victim.allegiance != act.allegiance ){
                this.combat_engine.action_attack(actor_name, victim);
                act.set_attack_sprite();     
            }       
            return true;
        }
    }

    if( !ai ){
        //Only the player can trip programmed nodes
        this.align_pcs();
        node = this.world.get_node_by_position(new_x, new_y);
        if( !(node === "none") ){
            if( !node.isDisabled )
                node.perform_action();
        }
        if( !( node instanceof SpChangeMap) ){
            this.next_actor(0);     
        } 

        //should probably move this to outside_mode.js
        if( this.world.params.mode == "outside" ){
            var tmp = this.world.name.split(".");
            var mapx = parseInt(tmp[0]);
            var mapy = parseInt(tmp[1]);
            if( new_x == 0 ){
                this.game_state.change_map( (mapx-1)+"."+mapy, 48, act.y, "outside"); 
            } else if( new_y == 0 ){
                this.game_state.change_map( mapx+"."+(mapy-1), act.x, 48, "outside"); 
            } else if( new_x == 49 ){
                this.game_state.change_map( (mapx+1)+"."+mapy, 1, act.y, "outside"); 
            } else if( new_y == 49 ){
                this.game_state.change_map( mapx+"."+(mapy+1), act.x, 1, "outside"); 
            }  
        } 
    } 

}

TownMode.prototype.handleKeyPress = function( ev ){

    var cpk = [];
    cpk[ev.keyCode] = true;

    var captain = this;

    // if(this.hold_input){
    //     return;
    // }


    if( this.game_state.disableMove ){
        return;
    }

    if (cpk[38]) {
        // UP ARROW
        if( this.current_turn == 0 )
            this.player_turn(this.cActor, "move","n");
        //ev.preventDefault();

        this.world.facing_dir = "n"; 
    }
    if (cpk[40]) {
        // DOWN ARROW
        if( this.current_turn == 0 )
            this.player_turn(this.cActor,"move","s");
        //ev.preventDefault();

        this.world.facing_dir = "s"; 
    } 
    if (cpk[37]) {
        // LEFT ARROW
        if( this.current_turn == 0 )
            this.player_turn(this.cActor,"move","w");
        //ev.preventDefault();

        this.world.facing_dir = "w"; 
    } 
    if (cpk[39]) {
        // RIGHT ARROW
        if( this.current_turn == 0 )
            this.player_turn(this.cActor,"move","e");
        //ev.preventDefault();

        this.world.facing_dir = "e"; 
    }
  
    if (cpk[81]) {
        //q
        //clearInterval(RUNNING_INTERVAL);

    } 
    //NUMPAD CONTROLS
    if( cpk[105] ){
        //NUMPAD 9 UPRIGHT
        if( this.current_turn == 0 )
            this.player_turn(this.cActor, "move","ne");

        this.world.facing_dir = "n"; 
    }
    if( cpk[99] ){
        //NUMPAD 3 DOWNRIGHT
        if( this.current_turn == 0 )
            this.player_turn(this.cActor, "move","se");

        this.world.facing_dir = "s"; 
    }    
    if( cpk[97] ){
        //NUMPAD 1 DOWNLEFT
        if( this.current_turn == 0 )
            this.player_turn(this.cActor, "move","sw");

        this.world.facing_dir = "s"; 
    } 
    if( cpk[103] ){
        //NUMPAD 7 UPLEFT
        if( this.current_turn == 0 )
            this.player_turn(this.cActor, "move","nw");

        this.world.facing_dir = "n"; 
    }  
    if (cpk[104]) {
        // NUMPAD 8 UP
        if( this.current_turn == 0 )
            this.player_turn(this.cActor, "move","n");
        //ev.preventDefault();

        this.world.facing_dir = "n"; 
    }
    if (cpk[98]) {
        // NUMPAD 2 DOWN
        if( this.current_turn == 0 )
            this.player_turn(this.cActor,"move","s");
        //ev.preventDefault();

        this.world.facing_dir = "s"; 
    } 
    if (cpk[100]) {
        // NUMPAD 4 LEFT
        if( this.current_turn == 0 )
            this.player_turn(this.cActor,"move","w");
        //ev.preventDefault();

        this.world.facing_dir = "w"; 
    } 
    if (cpk[102]) {
        //NUMPAD 6 RIGHT
        if( this.current_turn == 0 )
            this.player_turn(this.cActor,"move","e"); 
        //ev.preventDefault();

        this.world.facing_dir = "e"; 
    }     
    if (cpk[101]) {
        // NUMPAD 5 CENTER
        if( this.current_turn == 0 )
            this.player_turn(this.cActor,"wait","");
        //ev.preventDefault();
    }        

    // this.game_state.disableMove = true;
    // setTimeout( function(){ captain.game_state.disableMove = false }, 50); 
}  

TownMode.prototype.handleMouseClick = function( ev, off ){

    //console.log( "Cast - "+ this.cSpell );

    var mouseX = ev.clientX;
    var mouseY = ev.clientY;

    var gx = this.world.pix_to_gridw(mouseX);
    var gy = this.world.pix_to_gridh(mouseY);   

    if( this.game_state.selVisible ){
        var ch = this.world.get_character_by_position(gx, gy);
        var sq = this.world.get_square(gx, gy);
        this.game_state.onSelect(sq, ch); 
        this.game_state.exitSelectMode();
        this.next_actor(0);
        return;
    }

    var act = this.world.get_character( this.cActor );

    if( gx == act.x && gy == act.y ){
        this.player_turn(this.cActor, "wait", "");
    }

}

TownMode.prototype.handleMouseMove = function( ev, off ){

    var mouseX = ev.clientX - off.x;
    var mouseY = ev.clientY - off.y;

    //console.log( mouseX, mouseY );

    this.world.mbox.set_x( this.world.pix_to_gridw(mouseX) );
    this.world.mbox.set_y( this.world.pix_to_gridh(mouseY) );
} 
